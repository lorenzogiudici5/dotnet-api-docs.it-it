<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ParallelEnumerable.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58ee8be94dc82750747e7897db0745ef1ae61fefb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ee8be94dc82750747e7897db0745ef1ae61fefb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Provides a set of methods for querying objects that implement ParallelQuery{TSource}.</source>
          <target state="translated">Fornisce un set di metodi per l'esecuzione di query su oggetti che implementano ParallelQuery{TSource}.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>This is the parallel equivalent of <ph id="ph1">&lt;see cref="T:System.Linq.Enumerable" /&gt;</ph>.</source>
          <target state="translated">È l'equivalente parallelo di <ph id="ph1">&lt;see cref="T:System.Linq.Enumerable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">Applica in parallelo una funzione accumulatore a una sequenza.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">Una sequenza su cui aggregare.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">Funzione accumulatore da richiamare per ogni elemento.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">Applica in parallelo una funzione accumulatore a una sequenza.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>The final accumulator value.</source>
          <target state="translated">Valore finale dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="func" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="func" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The type of the accumulator value.</source>
          <target state="translated">Tipo del valore dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">Una sequenza su cui aggregare.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The initial accumulator value.</source>
          <target state="translated">Valore iniziale dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">Funzione accumulatore da richiamare per ogni elemento.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">Applica in parallelo una funzione accumulatore a una sequenza.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The specified seed value is used as the initial accumulator value.</source>
          <target state="translated">Il valore di inizializzazione specificato viene usato come valore iniziale dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The final accumulator value.</source>
          <target state="translated">Valore finale dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="func" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="func" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the accumulator value.</source>
          <target state="translated">Tipo del valore dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the resulting value.</source>
          <target state="translated">Il tipo del valore risultante.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">Una sequenza su cui aggregare.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The initial accumulator value.</source>
          <target state="translated">Valore iniziale dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">Funzione accumulatore da richiamare per ogni elemento.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>A function to transform the final accumulator value into the result value.</source>
          <target state="translated">Una funzione per trasformare il valore finale dell'accumulatore nel valore risultante.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">Applica in parallelo una funzione accumulatore a una sequenza.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</source>
          <target state="translated">Il valore di inizializzazione specificato viene usato come valore iniziale dell'accumulatore e la funzione specificata viene usata per selezionare il valore risultante.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The transformed final accumulator value.</source>
          <target state="translated">Il valore finale trasformato dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="func" /&gt;</ph> or <ph id="ph3">&lt;paramref name="resultSelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="func" /&gt;</ph> o <ph id="ph3">&lt;paramref name="resultSelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the accumulator value.</source>
          <target state="translated">Tipo del valore dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the resulting value.</source>
          <target state="translated">Il tipo del valore risultante.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">Una sequenza su cui aggregare.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A function that returns the initial accumulator value.</source>
          <target state="translated">Funzione che restituisce il valore iniziale dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on each element in a partition.</source>
          <target state="translated">Funzione accumulatore da richiamare su ogni elemento in una partizione.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on the yielded accumulator result from each partition.</source>
          <target state="translated">Funzione accumulatore da richiamare sul risultato dell'accumulatore prodotto da ogni partizione.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A function to transform the final accumulator value into the result value.</source>
          <target state="translated">Una funzione per trasformare il valore finale dell'accumulatore nel valore risultante.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">Applica in parallelo una funzione accumulatore a una sequenza.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>This overload is not available in the sequential implementation.</source>
          <target state="translated">Questo overload non è disponibile nell'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The transformed final accumulator value.</source>
          <target state="translated">Il valore finale trasformato dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>This overload is specific to parallelized queries.</source>
          <target state="translated">Questo overload è specifico di query parallelo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A parallelized query may partition the data source sequence into several sub-sequences (partitions).</source>
          <target state="translated">Una query parallelizzata può partizionare la sequenza di origine dati in diverse sottosequenze (partizioni).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The <ph id="ph1">`updateAccumulatorFunc`</ph> is invoked on each element within partitions.</source>
          <target state="translated">Il <ph id="ph1">`updateAccumulatorFunc`</ph> viene richiamato su ogni elemento all'interno di partizioni.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>Each partition then yields a single accumulated result.</source>
          <target state="translated">Ogni partizione produce quindi un singolo risultato accumulato.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The <ph id="ph1">`combineAccumulatorsFunc`</ph> is then invoked on the results of each partition to yield a single element.</source>
          <target state="translated">Il <ph id="ph1">`combineAccumulatorsFunc`</ph> viene quindi richiamato sui risultati di ogni partizione per produrre un singolo elemento.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>This element is then transformed by the <ph id="ph1">`resultSelector`</ph> function.</source>
          <target state="translated">Questo elemento viene quindi trasformato dal <ph id="ph1">`resultSelector`</ph> (funzione).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="seedFactory" /&gt;</ph> or <ph id="ph3">&lt;paramref name="updateAccumulatorFunc" /&gt;</ph> or <ph id="ph4">&lt;paramref name="combineAccumulatorsFunc" /&gt;</ph> or <ph id="ph5">&lt;paramref name="resultSelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="seedFactory" /&gt;</ph> o <ph id="ph3">&lt;paramref name="updateAccumulatorFunc" /&gt;</ph> o <ph id="ph4">&lt;paramref name="combineAccumulatorsFunc" /&gt;</ph> o <ph id="ph5">&lt;paramref name="resultSelector" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the accumulator value.</source>
          <target state="translated">Tipo del valore dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the resulting value.</source>
          <target state="translated">Il tipo del valore risultante.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">Una sequenza su cui aggregare.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The initial accumulator value.</source>
          <target state="translated">Valore iniziale dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on each element in a partition.</source>
          <target state="translated">Funzione accumulatore da richiamare su ogni elemento in una partizione.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on the yielded accumulator result from each partition.</source>
          <target state="translated">Funzione accumulatore da richiamare sul risultato dell'accumulatore prodotto da ogni partizione.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A function to transform the final accumulator value into the result value.</source>
          <target state="translated">Una funzione per trasformare il valore finale dell'accumulatore nel valore risultante.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">Applica in parallelo una funzione accumulatore a una sequenza.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>This overload is not available in the sequential implementation.</source>
          <target state="translated">Questo overload non è disponibile nell'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The transformed final accumulator value.</source>
          <target state="translated">Il valore finale trasformato dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>This overload is specific to processing a parallelized query.</source>
          <target state="translated">Questo overload è specifico per l'elaborazione di una query parallelizzata.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A parallelized query may partition the data source sequence into several sub-sequences (partitions).</source>
          <target state="translated">Una query parallelizzata può partizionare la sequenza di origine dati in diverse sottosequenze (partizioni).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The <ph id="ph1">`updateAccumulatorFunc`</ph> is invoked on each element within partitions.</source>
          <target state="translated">Il <ph id="ph1">`updateAccumulatorFunc`</ph> viene richiamato su ogni elemento all'interno di partizioni.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>Each partition then yields a single accumulated result.</source>
          <target state="translated">Ogni partizione produce quindi un singolo risultato accumulato.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The <ph id="ph1">`combineAccumulatorsFunc`</ph> is then invoked on the results of each partition to yield a single element.</source>
          <target state="translated">Il <ph id="ph1">`combineAccumulatorsFunc`</ph> viene quindi richiamato sui risultati di ogni partizione per produrre un singolo elemento.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>This element is then transformed by the <ph id="ph1">`resultSelector`</ph> function.</source>
          <target state="translated">Questo elemento viene quindi trasformato dal <ph id="ph1">`resultSelector`</ph> (funzione).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="updateAccumulatorFunc" /&gt;</ph> or <ph id="ph3">&lt;paramref name="combineAccumulatorsFunc" /&gt;</ph> or <ph id="ph4">&lt;paramref name="resultSelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="updateAccumulatorFunc" /&gt;</ph> o <ph id="ph3">&lt;paramref name="combineAccumulatorsFunc" /&gt;</ph> o <ph id="ph4">&lt;paramref name="resultSelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence whose elements to apply the predicate to.</source>
          <target state="translated">Sequenza ai cui elementi applicare il predicato.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Funzione per testare ogni elemento rispetto a una condizione.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Determines in parallel whether all elements of a sequence satisfy a condition.</source>
          <target state="translated">Determina in parallelo se tutti gli elementi di una sequenza soddisfano una condizione.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>true if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, false..</source>
          <target state="translated">True se ogni elemento della sequenza di origine supera il test per il predicato specificato o se la sequenza è vuota; in caso contrario, false.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Determines whether a parallel sequence contains any elements.</source>
          <target state="translated">Determina se una sequenza parallela contiene elementi.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to check for emptiness.</source>
          <target state="translated">Sequenza di cui verificare il contenuto.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>Determines whether a parallel sequence contains any elements.</source>
          <target state="translated">Determina se una sequenza parallela contiene elementi.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>true if the source sequence contains any elements; otherwise, false.</source>
          <target state="translated">È true se la sequenza di origine contiene elementi; in caso contrario, false.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>This overload of the Any method causes a fully-buffered merge to be performed before the result is returned.</source>
          <target state="translated">Questo overload del metodo Any determina un'unione nell'indice completamente memorizzato nel buffer da eseguire prima che venga restituito il risultato.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>The merge behavior can impact performance or cause an out of memory exception in large enumerables.</source>
          <target state="translated">Il comportamento di unione può influire sulle prestazioni o provocare un'eccezione di memoria nei tipi enumerabili.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>To avoid the merge behavior, use the overload of Any that takes a Func parameter, or else use an alternative method such as FirstOrDefault.</source>
          <target state="translated">Per evitare il comportamento di tipo merge, utilizzare l'overload di uno che accetta un parametro di Func oppure utilizzare un metodo alternativo, ad esempio FirstOrDefault.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence to whose elements the predicate will be applied.</source>
          <target state="translated">Sequenza ai cui elementi sarà applicato il predicato.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Funzione per testare ogni elemento rispetto a una condizione.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Determines in parallel whether any element of a sequence satisfies a condition.</source>
          <target state="translated">Determina in parallelo se un elemento di una sequenza soddisfa una condizione.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>true if any elements in the source sequence pass the test in the specified predicate; otherwise, false.</source>
          <target state="translated">È true se un qualsiasi elemento nella sequenza di origine supera il test nel predicato specificato; in caso contrario, false.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to cast as <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated">Sequenza di cui eseguire il cast come oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> into an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to force sequential evaluation of the query.</source>
          <target state="translated">Converte un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> in <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> per forzare la valutazione sequenziale della query.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
          <source>The input sequence typed as <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated">Sequenza di input digitata come oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>The input sequence.</source>
          <target state="translated">Sequenza di input.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>Enables treatment of a data source as if it were ordered, overriding the default of unordered.</source>
          <target state="translated">Consente di trattare un'origine dati come se fosse ordinata, eseguendo l'override dell'impostazione predefinita non ordinata.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>AsOrdered may only be invoked on non-generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.</source>
          <target state="translated">AsOrdered può essere richiamato solo in sequenze non generiche restituite da AsParallel, ParallelEnumerable.Range e ParallelEnumerable.Repeat.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>The source sequence which will maintain the original ordering in the subsequent query operators.</source>
          <target state="translated">Sequenza di origine che manterrà l'ordine originale nei successivi operatori di query.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>A natural tension exists between performance and preserving order in parallel processing.</source>
          <target state="translated">Esiste una tensione naturale tra prestazioni e il mantenimento dell'ordine di elaborazione parallela.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>By default, a parallelized query behaves as if the ordering of the results is arbitrary unless AsOrdered is applied or there is an explicit OrderBy operator in the query.</source>
          <target state="translated">Per impostazione predefinita, una query parallelizzata si comporta come se l'ordinamento dei risultati è arbitrario a meno che non venga applicato AsOrdered o se è un operatore OrderBy esplicito nella query.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>For more information, see <bpt id="p1">[</bpt>Order Preservation in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Conservazione dell'ordine in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>thrown if <ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements</source>
          <target state="translated">generata se <ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>if AsOrdered is called midway through a query.</source>
          <target state="translated">se AsOrdered viene chiamato a metà percorso tramite una query.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>It is allowed to be called immediately after <ph id="ph1">&lt;see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" /&gt;</ph>.</source>
          <target state="translated">Può essere chiamato immediatamente dopo <ph id="ph1">&lt;see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /&gt;</ph> o <ph id="ph3">&lt;see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>The input sequence.</source>
          <target state="translated">Sequenza di input.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>Enables treatment of a data source as if it were ordered, overriding the default of unordered.</source>
          <target state="translated">Consente di trattare un'origine dati come se fosse ordinata, eseguendo l'override dell'impostazione predefinita non ordinata.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>AsOrdered may only be invoked on generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.</source>
          <target state="translated">AsOrdered può essere richiamato solo in sequenze generiche restituite da AsParallel, ParallelEnumerable.Range e ParallelEnumerable.Repeat.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>The source sequence which will maintain the original ordering in the subsequent query operators.</source>
          <target state="translated">Sequenza di origine che manterrà l'ordine originale nei successivi operatori di query.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>A natural tension exists between performance and preserving order in parallel processing.</source>
          <target state="translated">Esiste una tensione naturale tra prestazioni e il mantenimento dell'ordine di elaborazione parallela.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>By default, a parallelized query behaves as if the ordering of the results is arbitrary unless AsOrdered is applied or there is an explicit OrderBy operator in the query.</source>
          <target state="translated">Per impostazione predefinita, una query parallelizzata si comporta come se l'ordinamento dei risultati è arbitrario a meno che non venga applicato AsOrdered o se è un operatore OrderBy esplicito nella query.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Order Preservation in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Conservazione dell'ordine in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>Thrown if <ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements</source>
          <target state="translated">Generata se <ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>if <ph id="ph1">&lt;paramref name="source" /&gt;</ph> is not one of AsParallel, ParallelEnumerable.Range, or ParallelEnumerable.Repeat.</source>
          <target state="translated">se <ph id="ph1">&lt;paramref name="source" /&gt;</ph> non è AsParallel, ParallelEnumerable.Range o ParallelEnumerable.Repeat.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Enables parallelization of a query.</source>
          <target state="translated">Consente la parallelizzazione di una query.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.ParallelEnumerable">
          <source>This method binds the query to PLINQ.</source>
          <target state="translated">Questo metodo associa la query PLINQ.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.ParallelEnumerable">
          <source>For more information, see <bpt id="p1">[</bpt>Parallel LINQ (PLINQ)<ept id="p1">](~/docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Parallel LINQ (PLINQ)<ept id="p1">](~/docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to convert to a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> da convertire in <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
          <source>Enables parallelization of a query.</source>
          <target state="translated">Consente la parallelizzazione di una query.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
          <source>The source as a ParallelQuery to bind to ParallelEnumerable extension methods.</source>
          <target state="translated">Origine come ParallelQuery da associare ai metodi di estensione ParallelEnumerable.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
          <source>The <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.Cast%2A&gt;</ph> operator can be used to convert a ParallelQuery to a ParallelQuery(T).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.Cast%2A&gt;</ph> operatore può essere utilizzato per convertire un oggetto ParallelQuery in un ParallelQuery (t).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source>A partitioner over the input sequence.</source>
          <target state="translated">Partitioner sulla sequenza di input.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source>Enables parallelization of a query, as sourced by a custom partitioner that is responsible for splitting the input sequence into partitions.</source>
          <target state="translated">Consente la parallelizzazione di una query, come viene originata da un partitioner che è responsabile della suddivisione della sequenza di input in partizioni.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> as a ParallelQuery to bind to ParallelEnumerable extension methods.</source>
          <target state="translated">Elemento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> come ParallelQuery da associare ai metodi di estensione ParallelEnumerable.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source>The source partitioner's GetOrderedPartitions method is used when ordering is enabled, whereas the partitioner's GetPartitions is used if ordering is not enabled (the default).</source>
          <target state="translated">GetOrderedPartitions del partitioner di origine metodo viene utilizzato per l'ordinamento è abilitato, mentre l'oggetto GetPartitions del partitioner viene utilizzato se l'ordinamento non è abilitato (impostazione predefinita).</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source>The source partitioner's GetDynamicPartitions and GetDynamicOrderedPartitions are not used.</source>
          <target state="translated">Non vengono utilizzati gli oggetti GetDynamicPartitions e GetDynamicOrderedPartitions del partitioner di origine.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source>For more information and examples, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni ed esempi, vedere <bpt id="p1">[</bpt>partitioner personalizzati per PLINQ e TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to convert to a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> da convertire in <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Enables parallelization of a query.</source>
          <target state="translated">Consente la parallelizzazione di una query.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The source as a <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> to bind to ParallelEnumerable extension methods.</source>
          <target state="translated">Origine come <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> da associare ai metodi di estensione ParallelEnumerable.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> to convert to an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> da convertire in <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> into an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to force sequential evaluation of the query.</source>
          <target state="translated">Converte un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> in <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> per forzare la valutazione sequenziale della query.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
          <source>The source as an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to bind to sequential extension methods.</source>
          <target state="translated">Origine come <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> da associare ai metodi di estensione sequenziale.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Order Preservation in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept> and <bpt id="p2">[</bpt>How to: Control Ordering in a PLINQ Query<ept id="p2">](~/docs/standard/parallel-programming/how-to-control-ordering-in-a-plinq-query.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>conservazione dell'ordine in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept> e <bpt id="p2">[</bpt>procedura: controllo di ordinamento in una Query PLINQ<ept id="p2">](~/docs/standard/parallel-programming/how-to-control-ordering-in-a-plinq-query.md)</ept>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>The input sequence.</source>
          <target state="translated">Sequenza di input.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>Allows an intermediate query to be treated as if no ordering is implied among the elements.</source>
          <target state="translated">Consente di trattare una query intermedia come se non vi fosse alcun ordinamento implicito tra gli elementi.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>The source sequence with arbitrary order.</source>
          <target state="translated">Sequenza di origine con ordine arbitrario.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>AsUnordered may provide performance benefits when ordering is not required in a portion of a query.</source>
          <target state="translated">AsUnordered può fornire prestazioni durante l'ordinamento non è richiesto in una parte di una query.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>By default, PLINQ treats an input sequence as unordered unless OrderBy or AsOrdered is specified.</source>
          <target state="translated">Per impostazione predefinita, PLINQ considera una sequenza di input come non ordinata, a meno che non è specificato OrderBy o AsOrdered.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>However, if ordering was turned on and is no longer needed, then AsUnordered can be used to turn it off in mid-query, and this may result in performance benefits.The AsUnordered operator itself does not shuffle the source sequence; it simply removes the ordering requirement for subsequent operators.</source>
          <target state="translated">Tuttavia, se è stato attivato e in ordine non è più necessario, AsUnordered può quindi essere utilizzata per disattivare durante la query e questo può comportare prestazioni. L'operatore AsUnordered non mescola la sequenza di origine; rimuove semplicemente il requisito di ordinamento per gli operatori successivi.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>If the source is ordered, subsequent operators might keep that ordering if it is more efficient to do so.</source>
          <target state="translated">Se l'origine è ordinato, gli operatori successivi potrebbero mantenere tale ordine se risulta più efficiente eseguire questa operazione.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>AsUnordered can be called anywhere in the query; it does not need to be called immediately after AsParallel.</source>
          <target state="translated">AsUnordered può essere chiamato in un punto qualsiasi della query. non è necessario essere chiamato immediatamente dopo AsParallel.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Understanding Speedup in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/understanding-speedup-in-plinq.md)</ept> and <bpt id="p2">[</bpt>Order Preservation in PLINQ<ept id="p2">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>comprensione aumento di velocità in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/understanding-speedup-in-plinq.md)</ept> e <bpt id="p2">[</bpt>conservazione dell'ordine in PLINQ<ept id="p2">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
          <source>The sum or count of the elements in the sequence is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma o il conteggio degli elementi della sequenza è superiore a <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
          <source>The sum or count of the elements in the sequence is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma o il conteggio degli elementi della sequenza è superiore a <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>The source sequence.</source>
          <target state="translated">Sequenza di origine.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>Returns the average of the sequence of values.</source>
          <target state="translated">Restituisce la media della sequenza di valori.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>A sequence of values that are used to calculate an average.The average of the sequence of values.<ph id="ph1">&lt;paramref name="source" /&gt;</ph></source>
          <target state="translated">Sequenza di valori usati per calcolare una media. La media della sequenza di valori.<ph id="ph1">&lt;paramref name="source" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>is a null reference (Nothing in Visual Basic).</source>
          <target state="translated">è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>The sum or count of the elements in the sequence is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma o il conteggio degli elementi della sequenza è superiore a <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>The sum or count of the elements in the sequence is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma o il conteggio degli elementi della sequenza è superiore a <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>(Thrown as inner exception in an <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>).</source>
          <target state="translated">Generata come eccezione interna in <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> function returns a value greater than MaxValue for the element type.</source>
          <target state="translated">La funzione <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> restituisce un valore maggiore di MaxValue per il tipo di elemento.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>(Thrown as inner exception in an <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>).</source>
          <target state="translated">Generata come eccezione interna in <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> function returns a value greater than MaxValue for the element type.</source>
          <target state="translated">La funzione <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> restituisce un valore maggiore di MaxValue per il tipo di elemento.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The sum or count of the elements in the sequence is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma o il conteggio degli elementi della sequenza è superiore a <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>(Thrown as inner exception in an <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>).</source>
          <target state="translated">Generata come eccezione interna in <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> function returns a value greater than MaxValue for the element type.</source>
          <target state="translated">La funzione <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> restituisce un valore maggiore di MaxValue per il tipo di elemento.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The sum or count of the elements in the sequence is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma o il conteggio degli elementi della sequenza è superiore a <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>(Thrown as inner exception in an <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>).</source>
          <target state="translated">Generata come eccezione interna in <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> function returns a value greater than MaxValue for the element type.</source>
          <target state="translated">La funzione <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> restituisce un valore maggiore di MaxValue per il tipo di elemento.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>(Thrown as inner exception in an <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>).</source>
          <target state="translated">Generata come eccezione interna in <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> function returns a value greater than MaxValue for the element type.</source>
          <target state="translated">La funzione <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> restituisce un valore maggiore di MaxValue per il tipo di elemento.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>(Thrown as inner exception in an <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>).</source>
          <target state="translated">Generata come eccezione interna in <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> function returns a value greater than MaxValue for the element type.</source>
          <target state="translated">La funzione <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> restituisce un valore maggiore di MaxValue per il tipo di elemento.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The sum or count of the elements in the sequence is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma o il conteggio degli elementi della sequenza è superiore a <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>(Thrown as inner exception in an <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>).</source>
          <target state="translated">Generata come eccezione interna in <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> function returns a value greater than MaxValue for the element type.</source>
          <target state="translated">La funzione <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> restituisce un valore maggiore di MaxValue per il tipo di elemento.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The sum or count of the elements in the sequence is larger than <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma o il conteggio degli elementi della sequenza è superiore a <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>(Thrown as inner exception in an <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>).</source>
          <target state="translated">Generata come eccezione interna in <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> function returns a value greater than MaxValue for the element type.</source>
          <target state="translated">La funzione <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> restituisce un valore maggiore di MaxValue per il tipo di elemento.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>(Thrown as inner exception in an <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>).</source>
          <target state="translated">Generata come eccezione interna in <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> function returns a value greater than MaxValue for the element type.</source>
          <target state="translated">La funzione <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> restituisce un valore maggiore di MaxValue per il tipo di elemento.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Una sequenza di valori usata per calcolare una media.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The average of the sequence of values.</source>
          <target state="translated">Media della sequenza dei valori.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>(Thrown as inner exception in an <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>).</source>
          <target state="translated">Generata come eccezione interna in <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> function returns a value greater than MaxValue for the element type.</source>
          <target state="translated">La funzione <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> restituisce un valore maggiore di MaxValue per il tipo di elemento.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
          <source>The type to convert the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> to.</source>
          <target state="translated">Il tipo per convertire gli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept> per.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
          <source>The sequence that contains the elements to be converted.</source>
          <target state="translated">Sequenza che contiene gli elementi da convertire.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
          <source>Converts the elements of a ParallelQuery to the specified type.</source>
          <target state="translated">Converte gli elementi di un oggetto ParallelQuery nel tipo specificato.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
          <source>A sequence that contains each element of the source sequence converted to the specified type.</source>
          <target state="translated">Sequenza che contiene ogni elemento della sequenza di origine convertito nel tipo specificato.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
          <source>The type of the source sequence could not be converted to <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph>.</source>
          <target state="translated">Il tipo di sequenza di origine potrebbe non essere convertito a <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Concatenates two parallel sequences.</source>
          <target state="translated">Concatena due sequenze parallele.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This Concat overload should never be called.</source>
          <target state="translated">Questo overload di Concat non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene chiamato.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This overload exists to disallow usage of Concat with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di Concat con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Otherwise, the Concat operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore di concatenazione sembra essere associazione all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The exception that occurs when this method is called.</source>
          <target state="translated">Eccezione che si verifica quando viene chiamato questo metodo.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">Tipo degli elementi delle sequenze di input.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The first sequence to concatenate.</source>
          <target state="translated">Prima sequenza da concatenare.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The sequence to concatenate to the first sequence.</source>
          <target state="translated">Sequenza da concatenare alla prima sequenza.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Concatenates two parallel sequences.</source>
          <target state="translated">Concatena due sequenze parallele.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence that contains the concatenated elements of the two input sequences.</source>
          <target state="translated">Sequenza che contiene gli elementi concatenati delle due sequenze di input.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="first" /&gt;</ph> or <ph id="ph2">&lt;paramref name="second" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="first" /&gt;</ph> o <ph id="ph2">&lt;paramref name="second" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Determines in parallel whether a sequence contains a specified element.</source>
          <target state="translated">Consente di stabilire in parallelo se una sequenza contiene un elemento specifico.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>A sequence in which to locate a value.</source>
          <target state="translated">Sequenza in cui individuare un valore.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The value to locate in the sequence.</source>
          <target state="translated">Valore da individuare nella sequenza .</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>Determines in parallel whether a sequence contains a specified element by using the default equality comparer.</source>
          <target state="translated">Determina in parallelo se una sequenza contiene un elemento specificato usando l'operatore di confronto di uguaglianza predefinito.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>true if the source sequence contains an element that has the specified value; otherwise, false.</source>
          <target state="translated">È true se la sequenza di origine contiene un elemento con il valore specificato; in caso contrario, false.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence in which to locate a value.</source>
          <target state="translated">Sequenza in cui individuare un valore.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The value to locate in the sequence.</source>
          <target state="translated">Valore da individuare nella sequenza .</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>An equality comparer to compare values.</source>
          <target state="translated">Operatore di confronto uguaglianze per confrontare valori.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines in parallel whether a sequence contains a specified element by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Determina in parallelo se una sequenza contiene un elemento specificato usando un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>true if the source sequence contains an element that has the specified value; otherwise, false.</source>
          <target state="translated">È true se la sequenza di origine contiene un elemento con il valore specificato; in caso contrario, false.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Returns the number of elements in a parallel sequence.</source>
          <target state="translated">Restituisce il numero di elementi in una sequenza parallela.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">Sequenza che contiene gli elementi da contare.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the number of elements in a parallel sequence.</source>
          <target state="translated">Restituisce il numero di elementi in una sequenza parallela.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source>The number of elements in the input sequence.</source>
          <target state="translated">Numero di elementi nella sequenza di input.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source>The number of elements in source is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Il numero di elementi nel database di origine è maggiore di <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source>(In this case the InnerException is <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph>) -or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">(In questo caso l'InnerException è <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph>) oppure si sono verificate una o più eccezioni durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">Sequenza che contiene gli elementi da contare.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Funzione per testare ogni elemento rispetto a una condizione.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns a number that represents how many elements in the specified parallel sequence satisfy a condition.</source>
          <target state="translated">Restituisce un valore che rappresenta il numero di elementi nella sequenza parallela specificata che soddisfano una condizione.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A number that represents how many elements in the sequence satisfy the condition in the predicate function.</source>
          <target state="translated">Numero che rappresenta quanti elementi nella sequenza specificata soddisfano la condizione nella funzione predicato.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The number of elements in source is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Il numero di elementi nel database di origine è maggiore di <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>(In this case the InnerException is <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph>) -or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">(In questo caso l'InnerException è <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph>) oppure si sono verificate una o più eccezioni durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.</source>
          <target state="translated">Restituisce gli elementi della sequenza parallela specificata o il valore specificato in una raccolta singleton se la sequenza è vuota.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return a default value for if it is empty.</source>
          <target state="translated">Sequenza per cui restituire un valore predefinito se è vuota.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the elements of the specified parallel sequence or the type parameter's default value in a singleton collection if the sequence is empty.</source>
          <target state="translated">Restituisce gli elementi della sequenza parallela specificata o il valore predefinito del parametro di tipo in una raccolta singleton se la sequenza è vuota.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence that contains default(TSource) if <ph id="ph1">&lt;paramref name="source" /&gt;</ph> is empty; otherwise, <ph id="ph2">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated">Sequenza che contiene default(TSource) se <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è vuoto; in caso contrario, <ph id="ph2">&lt;paramref name="source" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The sequence to return the specified value for if it is empty.</source>
          <target state="translated">Sequenza per cui restituire il valore specificato se è vuota.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The value to return if the sequence is empty.</source>
          <target state="translated">Valore da restituire se la sequenza è vuota.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.</source>
          <target state="translated">Restituisce gli elementi della sequenza parallela specificata o il valore specificato in una raccolta singleton se la sequenza è vuota.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>A sequence that contains defaultValue if <ph id="ph1">&lt;paramref name="source" /&gt;</ph> is empty; otherwise, <ph id="ph2">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated">Sequenza che contiene defaultValue se <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è vuoto; in caso contrario, <ph id="ph2">&lt;paramref name="source" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.</source>
          <target state="translated">Restituisce elementi distinti da una sequenza parallela usando l'operatore di confronto di uguaglianza predefinito per confrontare i valori.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to remove duplicate elements from.</source>
          <target state="translated">Sequenza da cui rimuovere elementi duplicati.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
          <source>Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.</source>
          <target state="translated">Restituisce elementi distinti da una sequenza parallela usando l'operatore di confronto di uguaglianza predefinito per confrontare i valori.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence that contains distinct elements from the source sequence.</source>
          <target state="translated">Sequenza che contiene elementi distinti dalla sequenza di origine.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The sequence to remove duplicate elements from.</source>
          <target state="translated">Sequenza da cui rimuovere elementi duplicati.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> per confrontare i valori.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Returns distinct elements from a parallel sequence by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Restituisce elementi distinti da una sequenza parallela usando un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> specificato per confrontare valori.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence that contains distinct elements from the source sequence.</source>
          <target state="translated">Sequenza che contiene elementi distinti dalla sequenza di origine.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>A sequence to return an element from.</source>
          <target state="translated">Sequenza dalla quale viene restituito un elemento.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">Indice in base zero dell'elemento da recuperare.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Returns the element at a specified index in a parallel sequence.</source>
          <target state="translated">Restituisce l'elemento in corrispondenza dell'indice specificato in una sequenza parallela.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The element at the specified position in the source sequence.</source>
          <target state="translated">L'elemento alla posizione specificata nella sequenza di origine.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than or equal to the number of elements in <ph id="ph2">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di 0 oppure maggiore o uguale al numero di elementi di <ph id="ph2">&lt;paramref name="source" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>A sequence to return an element from.</source>
          <target state="translated">Sequenza dalla quale viene restituito un elemento.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">Indice in base zero dell'elemento da recuperare.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Returns the element at a specified index in a parallel sequence or a default value if the index is out of range.</source>
          <target state="translated">Restituisce l'elemento in corrispondenza di un indice specificato in una sequenza parallela o un valore predefinito se l'indice non è incluso nell'intervallo.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>default(TSource) if the index is outside the bounds of the source sequence; otherwise, the element at the specified position in the source sequence.</source>
          <target state="translated">default(TSource) se l'indice è esterno ai limiti della sequenza di origine; in caso contrario, l'elemento in corrispondenza della posizione specificata nella sequenza di origine.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Empty``1">
          <source>The type to assign to the type parameter of the returned generic sequence.</source>
          <target state="translated">Tipo da assegnare al parametro di tipo della sequenza generica restituita.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Empty``1">
          <source>Returns an empty ParallelQuery{TResult} that has the specified type argument.</source>
          <target state="translated">Restituisce un oggetto ParallelQuery{TResult} vuoto con l'argomento tipo specificato.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Empty``1">
          <source>An empty sequence whose type argument is <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph>.</source>
          <target state="translated">Sequenza vuota il cui argomento di tipo è <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Produces the set difference of two parallel sequences.</source>
          <target state="translated">Produce la differenza insiemistica di due sequenze parallele.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This Except overload should never be called.</source>
          <target state="translated">Questo overload di Except non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene chiamato.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This overload exists to disallow usage of Except with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di Except con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Otherwise, the Except operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore Except sembra essere associazione all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The exception that occurs when this method is called.</source>
          <target state="translated">Eccezione che si verifica quando viene chiamato questo metodo.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">Tipo degli elementi delle sequenze di input.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">Verrà restituita una sequenza i cui elementi non si trovano anche in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</source>
          <target state="translated">Sequenza i cui elementi, se presenti anche nella prima sequenza, saranno rimossi dalla sequenza restituita.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Produces the set difference of two parallel sequences by using the default equality comparer to compare values.</source>
          <target state="translated">Produce la differenza di set di due sequenze parallele usando l'operatore di confronto di uguaglianza predefinito per confrontare i valori.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence that contains the set difference of the elements of two sequences.</source>
          <target state="translated">Sequenza che contiene la differenza insiemistica degli elementi delle due sequenze.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="first" /&gt;</ph> or <ph id="ph2">&lt;paramref name="second" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="first" /&gt;</ph> o <ph id="ph2">&lt;paramref name="second" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This Except overload should never be called.</source>
          <target state="translated">Questo overload di Except non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene chiamato.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This overload exists to disallow usage of Except with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di Except con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Otherwise, the Except operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore Except sembra essere associazione all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The exception that occurs when this method is called.</source>
          <target state="translated">Eccezione che si verifica quando viene chiamato questo metodo.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">Tipo degli elementi delle sequenze di input.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">Verrà restituita una sequenza i cui elementi non si trovano anche in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</source>
          <target state="translated">Sequenza i cui elementi, se presenti anche nella prima sequenza, saranno rimossi dalla sequenza restituita.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> per confrontare i valori.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set difference of two parallel sequences by using the specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Produce la differenza di set di due sequenze parallele usando l'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> specificato per confrontare i valori.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence that contains the set difference of the elements of two sequences.</source>
          <target state="translated">Sequenza che contiene la differenza insiemistica degli elementi delle due sequenze.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source><ph id="ph1">&lt;paramref name="first" /&gt;</ph> or <ph id="ph2">&lt;paramref name="second" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="first" /&gt;</ph> o <ph id="ph2">&lt;paramref name="second" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Returns the first element of a parallel sequence.</source>
          <target state="translated">Restituisce il primo elemento di una sequenza parallela.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the first element of.</source>
          <target state="translated">Sequenza di cui restituire il primo elemento.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the first element of a parallel sequence.</source>
          <target state="translated">Restituisce il primo elemento di una sequenza parallela.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>The first element in the specified sequence.</source>
          <target state="translated">Il primo elemento nella sequenza specificata.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>If the query is not ordered, then the first element is non-deterministic.</source>
          <target state="translated">Se la query non è ordinata, il primo elemento è non deterministico.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Order Preservation in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Conservazione dell'ordine in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return an element from.</source>
          <target state="translated">Sequenza dalla quale viene restituito un elemento.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Funzione per testare ogni elemento rispetto a una condizione.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element in a parallel sequence that satisfies a specified condition.</source>
          <target state="translated">Restituisce il primo elemento in una sequenza parallela che soddisfa una condizione specificata.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The first element in the sequence that passes the test in the specified predicate function.</source>
          <target state="translated">Il primo elemento nella sequenza che supera il test nella funzione predicato specificata.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>If the query is not ordered, then the first element is non-deterministic.</source>
          <target state="translated">Se la query non è ordinata, il primo elemento è non deterministico.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>For more information, see <bpt id="p1">[</bpt>Order Preservation in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Conservazione dell'ordine in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>No element in <ph id="ph1">&lt;paramref name="source" /&gt;</ph> satisfies the condition in <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph>.</source>
          <target state="translated">Nessun elemento in <ph id="ph1">&lt;paramref name="source" /&gt;</ph> soddisfa la condizione in <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Restituisce il primo elemento di una sequenza parallela o un valore predefinito se la sequenza non contiene elementi.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the first element of.</source>
          <target state="translated">Sequenza di cui restituire il primo elemento.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Restituisce il primo elemento di una sequenza parallela o un valore predefinito se la sequenza non contiene elementi.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>default(TSource) if <ph id="ph1">&lt;paramref name="source" /&gt;</ph> is empty; otherwise, the first element in <ph id="ph2">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated">default(TSource) se <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è vuoto; in caso contrario, il primo elemento di <ph id="ph2">&lt;paramref name="source" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>If the query is not ordered, then the first element is non-deterministic.</source>
          <target state="translated">Se la query non è ordinata, il primo elemento è non deterministico.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Order Preservation in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Conservazione dell'ordine in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return an element from.</source>
          <target state="translated">Sequenza dalla quale viene restituito un elemento.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Funzione per testare ogni elemento rispetto a una condizione.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element of the parallel sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">Restituisce il primo elemento della sequenza parallela che soddisfa una condizione o un valore predefinito se un tale elemento non viene trovato.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>default(TSource) if <ph id="ph1">&lt;paramref name="source" /&gt;</ph> is empty or if no element passes the test specified by predicate; otherwise, the first element in <ph id="ph2">&lt;paramref name="source" /&gt;</ph> that passes the test specified by predicate.</source>
          <target state="translated">default(TSource) se <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è vuoto o se nessun elemento supera il test specificato dal predicato; in caso contrario, il primo elemento di <ph id="ph2">&lt;paramref name="source" /&gt;</ph> che supera il test specificato dal predicato.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>If the query is not ordered, then the first element is non-deterministic.</source>
          <target state="translated">Se la query non è ordinata, il primo elemento è non deterministico.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>For more information, see <bpt id="p1">[</bpt>Order Preservation in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Conservazione dell'ordine in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> whose elements will be processed by <bpt id="p1">&lt;c&gt;</bpt>action<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Elemento <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> i cui elementi verranno elaborati da <bpt id="p1">&lt;c&gt;</bpt>action<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>An Action to invoke on each element.</source>
          <target state="translated">Elemento Action da richiamare su ogni elemento.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>Invokes in parallel the specified action for each element in the <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated">Richiama in parallelo l'azione specificata per ogni elemento in <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>This is an efficient way to process the output from a parallelized query because it does not require a merge step at the end.</source>
          <target state="translated">Questo è un modo efficiente per elaborare l'output di una query parallelizzata perché non è necessario un passaggio di tipo merge alla fine.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Merge Options in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/merge-options-in-plinq.md)</ept> or <bpt id="p2">[</bpt>Order Preservation in PLINQ<ept id="p2">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>opzioni di Merge in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/merge-options-in-plinq.md)</ept> o <bpt id="p2">[</bpt>conservazione dell'ordine in PLINQ<ept id="p2">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>Because this method produces a side-effect, it can be used to observe the actual order of execution in a parallel query.</source>
          <target state="translated">Poiché questo metodo produce un effetto collaterale, può essere utilizzato per osservare l'ordine effettivo di esecuzione in una query parallela.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Groups in parallel the elements of a sequence according to a key selector function.</source>
          <target state="translated">Raggruppa in parallelo gli elementi di una sequenza secondo una funzione selettore di chiave.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>An OrderedParallelQuery{TSource}that contains elements to sort.</source>
          <target state="translated">Oggetto OrderedParallelQuery{TSource} che contiene elementi da ordinare.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funzione per estrarre una chiave da un elemento.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function.</source>
          <target state="translated">Raggruppa in parallelo gli elementi di una sequenza secondo una funzione selettore di chiave specificata.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of groups that are sorted descending according to <ph id="ph1">&lt;paramref name="TKey" /&gt;</ph>.</source>
          <target state="translated">Sequenza di gruppi in ordine decrescente sulla base di <ph id="ph1">&lt;paramref name="TKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&amp;gt;</ph>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.OrderedParallelQuery`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Linq.OrderedParallelQuery`1" /&gt;</ph> che contiene gli elementi da ordinare.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funzione per estrarre una chiave da un elemento.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> per confrontare le chiavi.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and compares the keys by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>.</source>
          <target state="translated">Raggruppa in parallelo gli elementi di una sequenza secondo una funzione selettore di chiave specificata e confronta le chiavi usando un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence of groups that are sorted descending according to <ph id="ph1">&lt;paramref name="TKey" /&gt;</ph>.</source>
          <target state="translated">Sequenza di gruppi in ordine decrescente sulla base di <ph id="ph1">&lt;paramref name="TKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements in the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Tipo degli elementi contenuti nell'oggetto <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.OrderedParallelQuery`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Linq.OrderedParallelQuery`1" /&gt;</ph> che contiene gli elementi da ordinare.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funzione per estrarre una chiave da un elemento.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Funzione per eseguire il mapping di ogni elemento di origine a un elemento in un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</source>
          <target state="translated">Raggruppa in parallelo gli elementi di una sequenza in base a una funzione selettore di chiave specificata e proietta gli elementi di ogni gruppo usando una funzione specificata.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A sequence of groups that are sorted descending according to <ph id="ph1">&lt;paramref name="TKey" /&gt;</ph>.</source>
          <target state="translated">Sequenza di gruppi in ordine decrescente sulla base di <ph id="ph1">&lt;paramref name="TKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in the IGrouping</source>
          <target state="translated">Tipo degli elementi contenuti in IGrouping.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An OrderedParallelQuery{TSource}that contains elements to sort.</source>
          <target state="translated">Oggetto OrderedParallelQuery{TSource} che contiene elementi da ordinare.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funzione per estrarre una chiave da un elemento.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an IGrouping.</source>
          <target state="translated">Funzione per eseguire il mapping di ogni elemento di origine a un elemento di IGrouping.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An IComparer{TSource} to compare keys.</source>
          <target state="translated">Oggetto IComparer{TSource} per confrontare le chiavi.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups in parallel the elements of a sequence according to a key selector function.</source>
          <target state="translated">Raggruppa in parallelo gli elementi di una sequenza secondo una funzione selettore di chiave.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The keys are compared by using a comparer and each group's elements are projected by using a specified function.</source>
          <target state="translated">Le chiavi vengono confrontate usando un operatore di confronto e gli elementi di ogni gruppo vengono proiettati usando una funzione specificata.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence of groups that are sorted descending according to <ph id="ph1">&lt;paramref name="TKey" /&gt;</ph>.</source>
          <target state="translated">Sequenza di gruppi in ordine decrescente sulla base di <ph id="ph1">&lt;paramref name="TKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di valore restituito da <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A sequence whose elements to group.</source>
          <target state="translated">Sequenza di cui raggruppare gli elementi.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Funzione per estrarre la chiave per ogni elemento.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Funzione per creare un valore di risultato da ogni gruppo.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Raggruppa in parallelo gli elementi di una sequenza in base a una funzione selettore di chiave specificata e crea un valore risultante da ciascun gruppo e relativa chiave.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A sequence of elements of type <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> where each element represents a projection over a group and its key.</source>
          <target state="translated">Sequenza di elementi di tipo <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> dove ogni elemento rappresenta una proiezione su un gruppo e sulla relativa chiave.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di valore restituito da <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence whose elements to group.</source>
          <target state="translated">Sequenza di cui raggruppare gli elementi.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Funzione per estrarre la chiave per ogni elemento.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Funzione per creare un valore di risultato da ogni gruppo.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> per confrontare le chiavi.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Raggruppa in parallelo gli elementi di una sequenza in base a una funzione selettore di chiave specificata e crea un valore risultante da ciascun gruppo e relativa chiave.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The keys are compared by using a specified comparer.</source>
          <target state="translated">Le chiavi vengono confrontati usando un operatore di confronto specificato.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence of groups.</source>
          <target state="translated">Sequenza di gruppi.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the elements in each IGrouping{TKey, TElement}.</source>
          <target state="translated">Tipo degli elementi in ogni IGrouping{TKey, TElement}.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di valore restituito da <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A sequence whose elements to group.</source>
          <target state="translated">Sequenza di cui raggruppare gli elementi.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Funzione per estrarre la chiave per ogni elemento.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to map each source element to an element in an IGrouping<ph id="ph1">&amp;lt;</ph>TKey, TElement<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Funzione per eseguire il mapping di ogni elemento di origine a un elemento di IGrouping<ph id="ph1">&amp;lt;</ph>TKey, TElement<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Funzione per creare un valore di risultato da ogni gruppo.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Raggruppa in parallelo gli elementi di una sequenza in base a una funzione selettore di chiave specificata e crea un valore risultante da ciascun gruppo e relativa chiave.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The elements of each group are projected by using a specified function.</source>
          <target state="translated">Gli elementi di ogni gruppo vengono proiettati usando una funzione specificata.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A sequence of elements of type <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> where each element represents a projection over a group and its key.</source>
          <target state="translated">Sequenza di elementi di tipo <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> dove ogni elemento rappresenta una proiezione su un gruppo e sulla relativa chiave.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in each IGrouping{TKey, TElement}.</source>
          <target state="translated">Tipo degli elementi in ogni IGrouping{TKey, TElement}.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di valore restituito da <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence whose elements to group.</source>
          <target state="translated">Sequenza di cui raggruppare gli elementi.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Funzione per estrarre la chiave per ogni elemento.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an IGrouping{Key, TElement}.</source>
          <target state="translated">Funzione per eseguire il mapping di ogni elemento di origine a un elemento di IGrouping{Key, TElement}.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Funzione per creare un valore di risultato da ogni gruppo.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> per confrontare le chiavi.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Raggruppa gli elementi di una sequenza in base a una funzione del selettore principale specificata e crea un valore risultante da ciascun gruppo e relativa chiave.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.</source>
          <target state="translated">I valori delle chiavi vengono confrontati usando un operatore di confronto specificato e gli elementi di ogni gruppo vengono proiettati usando una funzione specificata.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence of elements of type <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> where each element represents a projection over a group and its key.</source>
          <target state="translated">Sequenza di elementi di tipo <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> dove ogni elemento rappresenta una proiezione su un gruppo e sulla relativa chiave.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Correlates in parallel the elements of two sequences based on equality of keys and groups the results.</source>
          <target state="translated">Correla in parallelo gli elementi di due sequenze in base all'uguaglianza delle chiavi e raggruppa i risultati.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This GroupJoin overload should never be called.</source>
          <target state="translated">Questo overload di GroupJoin non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene chiamato.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This overload exists to disallow usage of GroupJoin with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di GroupJoin con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>Otherwise, the GroupJoin operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore GroupJoin sembra essere associazione all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">Tipo degli elementi della seconda sequenza.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">Tipo degli elementi della prima sequenza.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">Tipo delle chiavi restituite dalle funzioni del selettore principale.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the result elements.</source>
          <target state="translated">Tipo degli elementi di risultato.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The first sequence to join.</source>
          <target state="translated">Prima sequenza da unire.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">Sequenza da unire alla prima sequenza.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Funzione per estrarre la chiave di aggiunta da ogni elemento della prima sequenza.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Funzione per estrarre la chiave di aggiunta da ogni elemento della seconda sequenza.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">Funzione per creare un elemento di risultato da un elemento dalla prima sequenza e una raccolta di elementi corrispondenti dalla seconda sequenza.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>Correlates in parallel the elements of two sequences based on equality of keys and groups the results.</source>
          <target state="translated">Correla in parallelo gli elementi di due sequenze in base all'uguaglianza delle chiavi e raggruppa i risultati.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">Per confrontare le chiavi viene usato l'operatore di confronto uguaglianze predefinito.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A sequence that has elements of type <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> that are obtained by performing a grouped join on two sequences.</source>
          <target state="translated">Sequenza che contiene elementi di tipo <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> ottenuti eseguendo un join raggruppato di due sequenze.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This GroupJoin overload should never be called.</source>
          <target state="translated">Questo overload di GroupJoin non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene chiamato.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This overload exists to disallow usage of GroupJoin with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di GroupJoin con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Otherwise, the GroupJoin operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore GroupJoin sembra essere associazione all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The exception that occurs when this method is called.</source>
          <target state="translated">Eccezione che si verifica quando viene chiamato questo metodo.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">Tipo degli elementi della seconda sequenza.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">Tipo degli elementi della prima sequenza.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">Tipo delle chiavi restituite dalle funzioni del selettore principale.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">Tipo degli elementi di risultato.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">Prima sequenza da unire.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">Sequenza da unire alla prima sequenza.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Funzione per estrarre la chiave di aggiunta da ogni elemento della prima sequenza.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Funzione per estrarre la chiave di aggiunta da ogni elemento della seconda sequenza.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">Funzione per creare un elemento di risultato da un elemento dalla prima sequenza e una raccolta di elementi corrispondenti dalla seconda sequenza.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to hash and compare keys.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> per la codifica hash e il confronto delle chiavi.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates in parallel the elements of two sequences based on key equality and groups the results.</source>
          <target state="translated">Correla in parallelo gli elementi di due sequenze in base all'uguaglianza delle chiavi e raggruppa i risultati.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">Per confrontare le chiavi, viene usato un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A sequence that has elements of type <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> that are obtained by performing a grouped join on two sequences.</source>
          <target state="translated">Sequenza che contiene elementi di tipo <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> ottenuti eseguendo un join raggruppato di due sequenze.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Produces the set intersection of two parallel sequences.</source>
          <target state="translated">Produce l'intersezione insiemistica delle due sequenze parallele.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This Intersect overload should never be called.</source>
          <target state="translated">Questo overload di Intersect non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene chiamato.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This overload exists to disallow usage of Intersect with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di intersezione con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Otherwise, the Intersect operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore Intersect sembra essere associazione all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The exception that occurs when this method is called.</source>
          <target state="translated">Eccezione che si verifica quando viene chiamato questo metodo.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">Tipo degli elementi delle sequenze di input.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">Sequenza di cui vengono restituiti gli elementi distinti presenti anche in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose distinct elements that also appear in the first sequence will be returned.</source>
          <target state="translated">Sequenza di cui vengono restituiti gli elementi distinti presenti anche nella prima sequenza.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Produces the set intersection of two parallel sequences by using the default equality comparer to compare values.</source>
          <target state="translated">Produce l'intersezione di set di due sequenze parallele usando l'operatore di confronto di uguaglianza predefinito per confrontare i valori.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence that contains the elements that form the set intersection of two sequences.</source>
          <target state="translated">Sequenza che contiene gli elementi che formano l'intersezione insiemistica delle due sequenze.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This Intersect overload should never be called.</source>
          <target state="translated">Questo overload di Intersect non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene chiamato.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This overload exists to disallow usage of Intersect with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di intersezione con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Otherwise, the Intersect operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore Intersect sembra essere associazione all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The exception that occurs when this method is called.</source>
          <target state="translated">Eccezione che si verifica quando viene chiamato questo metodo.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">Tipo degli elementi delle sequenze di input.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">Sequenza di cui vengono restituiti gli elementi distinti presenti anche in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements that also appear in the first sequence will be returned.</source>
          <target state="translated">Sequenza di cui vengono restituiti gli elementi distinti presenti anche nella prima sequenza.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> per confrontare i valori.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set intersection of two parallel sequences by using the specified IEqualityComparer{T} to compare values.</source>
          <target state="translated">Produce l'intersezione di set di due sequenze parallele usando l'oggetto IEqualityComparer{T} specificato per confrontare i valori.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence that contains the elements that form the set intersection of two sequences.</source>
          <target state="translated">Sequenza che contiene gli elementi che formano l'intersezione insiemistica delle due sequenze.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Correlates in parallel the elements of two sequences based on matching keys.</source>
          <target state="translated">Correla in parallelo gli elementi di due sequenze in base alle chiavi corrispondenti.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This Join overload should never be called.</source>
          <target state="translated">Questo overload di Join non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when invoked.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene richiamato.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This overload exists to disallow usage Join with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di Join con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>Otherwise, the Join operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore di Join sembra essere associazione all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">Tipo degli elementi della seconda sequenza.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">Tipo degli elementi della prima sequenza.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">Tipo delle chiavi restituite dalle funzioni del selettore principale.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the result elements.</source>
          <target state="translated">Tipo degli elementi di risultato.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The first sequence to join.</source>
          <target state="translated">Prima sequenza da unire.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">Sequenza da unire alla prima sequenza.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Funzione per estrarre la chiave di aggiunta da ogni elemento della prima sequenza.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Funzione per estrarre la chiave di aggiunta da ogni elemento della seconda sequenza.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">Funzione per creare un elemento di risultato da due elementi corrispondenti.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>Correlates in parallel the elements of two sequences based on matching keys.</source>
          <target state="translated">Correla in parallelo gli elementi di due sequenze in base alle chiavi corrispondenti.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">Per confrontare le chiavi viene usato l'operatore di confronto uguaglianze predefinito.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A sequence that has elements of type <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> that are obtained by performing an inner join on two sequences.</source>
          <target state="translated">Sequenza che contiene elementi di tipo <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> ottenuti eseguendo un inner join di due sequenze.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This Join overload should never be called.</source>
          <target state="translated">Questo overload di Join non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when invoked.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene richiamato.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This overload exists to disallow usage of Join with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di Join con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Otherwise, the Join operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore di Join sembra essere associazione all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The exception that occurs when this method is called.</source>
          <target state="translated">Eccezione che si verifica quando viene chiamato questo metodo.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">Tipo degli elementi della seconda sequenza.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">Tipo degli elementi della prima sequenza.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">Tipo delle chiavi restituite dalle funzioni del selettore principale.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">Tipo degli elementi di risultato.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">Prima sequenza da unire.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">Sequenza da unire alla prima sequenza.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Funzione per estrarre la chiave di aggiunta da ogni elemento della prima sequenza.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Funzione per estrarre la chiave di aggiunta da ogni elemento della seconda sequenza.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">Funzione per creare un elemento di risultato da due elementi corrispondenti.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to hash and compare keys.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> per la codifica hash e il confronto delle chiavi.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates in parallel the elements of two sequences based on matching keys.</source>
          <target state="translated">Correla in parallelo gli elementi di due sequenze in base alle chiavi corrispondenti.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">Per confrontare le chiavi, viene usato un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A sequence that has elements of type <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> that are obtained by performing an inner join on two sequences.</source>
          <target state="translated">Sequenza che contiene elementi di tipo <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> ottenuti eseguendo un inner join di due sequenze.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="action" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="action" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Returns the last element of a parallel sequence.</source>
          <target state="translated">Restituisce l'ultimo elemento di una sequenza parallela.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the last element from.</source>
          <target state="translated">Sequenza dalla quale viene restituito l'ultimo elemento.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the last element of a parallel sequence.</source>
          <target state="translated">Restituisce l'ultimo elemento di una sequenza parallela.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>The value at the last position in the source sequence.</source>
          <target state="translated">Il valore dell'ultima posizione nella sequenza di origine.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>If the query is not ordered, then the last element is non-deterministic.</source>
          <target state="translated">Se la query non è ordinata, l'ultimo elemento è non deterministico.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Order Preservation in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Conservazione dell'ordine in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return an element from.</source>
          <target state="translated">Sequenza dalla quale viene restituito un elemento.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Funzione per testare ogni elemento rispetto a una condizione.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a parallel sequence that satisfies a specified condition.</source>
          <target state="translated">Restituisce l'ultimo elemento di una sequenza parallela che soddisfa una condizione specificata.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The last element in the sequence that passes the test in the specified predicate function.</source>
          <target state="translated">Ultimo elemento nella sequenza che supera il test nella funzione predicato specificata.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>If the query is not ordered, then the last element is non-deterministic.</source>
          <target state="translated">Se la query non è ordinata, l'ultimo elemento è non deterministico.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>For more information, see <bpt id="p1">[</bpt>Order Preservation in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Conservazione dell'ordine in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>No element in <ph id="ph1">&lt;paramref name="source" /&gt;</ph> satisfies the condition in <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph>.</source>
          <target state="translated">Nessun elemento in <ph id="ph1">&lt;paramref name="source" /&gt;</ph> soddisfa la condizione in <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Restituisce l'ultimo elemento di una sequenza parallela o un valore predefinito se la sequenza non contiene elementi.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return an element from.</source>
          <target state="translated">Sequenza dalla quale viene restituito un elemento.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Restituisce l'ultimo elemento di una sequenza parallela o un valore predefinito se la sequenza non contiene elementi.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>default() if the source sequence is empty; otherwise, the last element in the sequence.</source>
          <target state="translated">default() se la sequenza di origine è vuota; in caso contrario, l'ultimo elemento nella sequenza.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>If the query is not ordered, then the last element is non-deterministic.</source>
          <target state="translated">Se la query non è ordinata, l'ultimo elemento è non deterministico.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Order Preservation in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Conservazione dell'ordine in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return an element from.</source>
          <target state="translated">Sequenza dalla quale viene restituito un elemento.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Funzione per testare ogni elemento rispetto a una condizione.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a parallel sequence that satisfies a condition, or a default value if no such element is found.</source>
          <target state="translated">Restituisce l'ultimo elemento di una sequenza parallela che soddisfa una condizione o un valore predefinito se un elemento di tale tipo non viene trovato.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>default() if the sequence is empty or if no elements pass the test in the predicate function; otherwise, the last element that passes the test in the predicate function.</source>
          <target state="translated">default() se la sequenza è vuota o se nessun elemento supera il test nella funzione predicato; in caso contrario, l'ultimo elemento che supera il test nella funzione predicato.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>If the query is not ordered, then the last element is non-deterministic.</source>
          <target state="translated">Se la query non è ordinata, l'ultimo elemento è non deterministico.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>For more information, see <bpt id="p1">[</bpt>Order Preservation in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Conservazione dell'ordine in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Returns an Int64 that represents the total number of elements in a parallel sequence.</source>
          <target state="translated">Restituisce un oggetto Int64 che rappresenta il numero totale di elementi in una sequenza parallela.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">Sequenza che contiene gli elementi da contare.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>Returns an Int64 that represents the total number of elements in a parallel sequence.</source>
          <target state="translated">Restituisce un oggetto Int64 che rappresenta il numero totale di elementi in una sequenza parallela.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>The number of elements in the input sequence.</source>
          <target state="translated">Numero di elementi nella sequenza di input.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>The number of elements in source is larger than <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Il numero di elementi nel database di origine è maggiore di <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>The computed result is greater than <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Il risultato calcolato è maggiore di <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">Sequenza che contiene gli elementi da contare.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Funzione per testare ogni elemento rispetto a una condizione.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns an Int64 that represents how many elements in a parallel sequence satisfy a condition.</source>
          <target state="translated">Restituisce un oggetto Int64 che rappresenta quanti elementi in una sequenza parallela soddisfano una condizione.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A number that represents how many elements in the sequence satisfy the condition in the predicate function.</source>
          <target state="translated">Numero che rappresenta quanti elementi nella sequenza specificata soddisfano la condizione nella funzione predicato.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The number of elements in source is larger than <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Il numero di elementi nel database di origine è maggiore di <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The computed result is greater than <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Il risultato calcolato è maggiore di <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore massimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore massimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore massimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore massimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore massimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore massimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore massimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore massimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore massimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore massimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore massimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements in the source sequence.</source>
          <target state="translated">Tipo degli elementi nella sequenza di origine.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore massimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo del valore restituito da <bpt id="p1">&lt;c&gt;</bpt>selettore<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore massimo.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The maximum value in the sequence.</source>
          <target state="translated">Valore massimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore minimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore minimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore minimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore minimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore minimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore minimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore minimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore minimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore minimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore minimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore minimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Restituisce il valore minimo in una sequenza parallela di valori.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo del valore restituito da <bpt id="p1">&lt;c&gt;</bpt>selettore<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Sequenza di valori di cui determinare il valore minimo.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The minimum value in the sequence.</source>
          <target state="translated">Valore minimo della sequenza.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains no elements and <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> is a non-nullable value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non contiene elementi e <ph id="ph2">&lt;paramref name="TSource" /&gt;</ph> è un tipo di valore non nullable.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
          <source>The type to filter the elements of the sequence on.</source>
          <target state="translated">Il tipo in base al quale filtrare gli elementi della sequenza.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
          <source>The sequence whose elements to filter.</source>
          <target state="translated">Sequenza di cui filtrare gli elementi.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
          <source>Filters the elements of a ParallelQuery based on a specified type.</source>
          <target state="translated">Filtra gli elementi di un oggetto ParallelQuery in base a un tipo specificato.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
          <source>A sequence that contains elements from the input sequence of type .</source>
          <target state="translated">Sequenza che contiene elementi della sequenza di input del tipo .</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Sorts in parallel the elements of a sequence in ascending order.</source>
          <target state="translated">Ordina in parallelo gli elementi di una sequenza in ordine ascendente.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Sequenza di valori da ordinare.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funzione per estrarre una chiave da un elemento.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Sorts in parallel the elements of a sequence in ascending order according to a key.</source>
          <target state="translated">Dispone in parallelo gli elementi di una sequenza in ordine crescente in base a una chiave.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</source>
          <target state="translated">Oggetto OrderedParallelQuery{TSource} i cui elementi sono ordinati in base a una chiave.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>In contrast to the sequential implementation, this is not a stable sort.</source>
          <target state="translated">A differenza dell'implementazione sequenziale, questo non è un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>To achieve a stable sort, change a query of the form: var ordered = source.Select((e,i) =&gt; new { E=e, I=i }).OrderBy((v) =&gt; v.e).ThenBy(v =&gt; v.i).Select((v) =&gt; v.e);</source>
          <target state="translated">Per ottenere un ordinamento stabile, modificare una query nel formato: ordinati var = origine. Select((e,i) = &gt; new {E = e, I = i:&lt;0}). OrderBy((v) = &gt; v.e). ThenBy (v = &gt; v). Select((v) = &gt; v.e);</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Sequenza di valori da ordinare.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funzione per estrarre una chiave da un elemento.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An IComparer{TKey} to compare keys.</source>
          <target state="translated">Oggetto IComparer{TKey} per confrontare chiavi.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts in parallel the elements of a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">Dispone in parallelo gli elementi di una sequenza in ordine crescente usando un operatore di confronto specificato.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</source>
          <target state="translated">Oggetto OrderedParallelQuery{TSource} i cui elementi sono ordinati in base a una chiave.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>In contrast to the sequential implementation, this is not a stable sort.</source>
          <target state="translated">A differenza dell'implementazione sequenziale, questo non è un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>See the remarks for <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> for an approach to implementing a stable sort.</source>
          <target state="translated">Vedere la sezione Osservazioni per <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> per un approccio all'implementazione di un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Sorts the elements of a sequence in descending order.</source>
          <target state="translated">Ordina in senso decrescente gli elementi di una sequenza.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Sequenza di valori da ordinare.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funzione per estrarre una chiave da un elemento.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Sorts in parallel the elements of a sequence in descending order according to a key.</source>
          <target state="translated">Dispone in parallelo gli elementi di una sequenza in ordine decrescente in base a una chiave.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.</source>
          <target state="translated">Oggetto OrderedParallelQuery{TSource} i cui elementi sono disposti in ordine decrescente in base a una chiave.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>In contrast to the sequential implementation, this is not a stable sort.</source>
          <target state="translated">A differenza dell'implementazione sequenziale, questo non è un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>See the remarks for <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> for an approach to implementing a stable sort.</source>
          <target state="translated">Vedere la sezione Osservazioni per <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> per un approccio all'implementazione di un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Sequenza di valori da ordinare.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funzione per estrarre una chiave da un elemento.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An IComparer{TKey} to compare keys.</source>
          <target state="translated">Oggetto IComparer{TKey} per confrontare chiavi.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the elements of a sequence in descending order by using a specified comparer.</source>
          <target state="translated">Ordina in senso decrescente gli elementi di una sequenza usando un operatore di confronto specificato.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.</source>
          <target state="translated">Oggetto OrderedParallelQuery{TSource} i cui elementi sono disposti in ordine decrescente in base a una chiave.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>In contrast to the sequential implementation, this is not a stable sort.</source>
          <target state="translated">A differenza dell'implementazione sequenziale, questo non è un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>See the remarks for <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> for an approach to implementing a stable sort.</source>
          <target state="translated">Vedere la sezione Osservazioni per <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> per un approccio all'implementazione di un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="KeySelector" /&gt;</ph> is a null reference (Nothing in Visual Basic)..</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="KeySelector" /&gt;</ph> è un riferimento null (Nothing in Visual Basic)..</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
          <source>The value of the first integer in the sequence.</source>
          <target state="translated">Il primo valore intero della sequenza.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
          <source>The number of sequential integers to generate.</source>
          <target state="translated">Il numero di valori interi sequenziali da generare</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
          <source>Generates a parallel sequence of integral numbers within a specified range.</source>
          <target state="translated">Genera una sequenza parallela di numeri integrali all'interno di un intervallo specificato.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
          <source>An IEnumerable<ph id="ph1">&amp;lt;</ph>Int32<ph id="ph2">&amp;gt;</ph> in C# or IEnumerable(Of Int32) in Visual Basic that contains a range of sequential integral numbers.</source>
          <target state="translated">Elemento IEnumerable<ph id="ph1">&amp;lt;</ph>Int32<ph id="ph2">&amp;gt;</ph> in C# o IEnumerable(Of Int32) in Visual Basic che contiene un intervallo di numeri integrali sequenziali.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0 -or- <ph id="ph2">&lt;paramref name="start" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;paramref name="count" /&gt;</ph> - 1 is larger than <ph id="ph5">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> è minore di 0 oppure <ph id="ph2">&lt;paramref name="start" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;paramref name="count" /&gt;</ph> - 1 è maggiore di <ph id="ph5">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
          <source>The type of the value to be repeated in the result sequence.</source>
          <target state="translated">Il tipo del valore da ripetere nella sequenza di risultato.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
          <source>The value to be repeated.</source>
          <target state="translated">Valore da ripetere.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
          <source>The number of times to repeat the value in the generated sequence.</source>
          <target state="translated">Numero che esprime quante volte il valore è ripetuto nella sequenza generata.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
          <source>Generates a parallel sequence that contains one repeated value.</source>
          <target state="translated">Genera una sequenza parallela che contiene un valore ripetuto.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
          <source>A sequence that contains a repeated value.</source>
          <target state="translated">Sequenza che contiene un valore ripetuto.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> è minore di 0.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence of values to reverse.</source>
          <target state="translated">Sequenza di valori da invertire.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
          <source>Inverts the order of the elements in a parallel sequence.</source>
          <target state="translated">Inverte l'ordine degli elementi in una sequenza parallela.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence whose elements correspond to those of the input sequence in reverse order.</source>
          <target state="translated">Sequenza i cui elementi corrispondono a quelli della sequenza di input, in ordine inverso.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Projects in parallel each element of a sequence into a new form.</source>
          <target state="translated">Proietta in parallelo ogni elemento di una sequenza in un nuovo form.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>The type of elements resturned by selector.</source>
          <target state="translated">Tipo degli elementi restituiti dal selettore.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>A sequence of values to invoke a transform function on.</source>
          <target state="translated">Sequenza di valori su cui richiamare una funzione di trasformazione.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>Projects in parallel each element of a sequence into a new form by incorporating the element's index.</source>
          <target state="translated">Proietta in parallelo ogni elemento di una sequenza in un nuovo form incorporando l'indice dell'elemento.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>A sequence whose elements are the result of invoking the transform function on each element of <ph id="ph1">&lt;paramref name="source" /&gt;</ph>, based on the index supplied to <ph id="ph2">&lt;paramref name="selector" /&gt;</ph>.</source>
          <target state="translated">Sequenza i cui elementi sono il risultato del richiamo alla funzione di trasformazione su ogni elemento di <ph id="ph1">&lt;paramref name="source" /&gt;</ph>, in base all'indice fornito a <ph id="ph2">&lt;paramref name="selector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>More than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> elements are enumerated by the query.</source>
          <target state="translated">Il numero di elementi enumerati dalla query è superiore a <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>This condition might occur in streaming scenarios.</source>
          <target state="translated">Questa condizione può verificarsi in scenari di flusso.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements resturned by selector.</source>
          <target state="translated">Tipo degli elementi restituiti dal selettore.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to invoke a transform function on.</source>
          <target state="translated">Sequenza di valori su cui richiamare una funzione di trasformazione.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Projects in parallel each element of a sequence into a new form.</source>
          <target state="translated">Proietta in parallelo ogni elemento di una sequenza in un nuovo form.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence whose elements are the result of invoking the transform function on each element of <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated">Sequenza i cui elementi sono il risultato della chiamata alla funzione di trasformazione su ogni elemento di <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Projects in parallel each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> and flattens the resulting sequences into one sequence.</source>
          <target state="translated">Proietta in parallelo ogni elemento di una sequenza a un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> e semplifica le sequenze risultanti in un'unica sequenza.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of the sequence returned by selector.</source>
          <target state="translated">Tipo degli elementi della sequenza restituita dal selettore.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">Sequenza di valori da proiettare.</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>Projects in parallel each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> and flattens the resulting sequences into one sequence.</source>
          <target state="translated">Proietta in parallelo ogni elemento di una sequenza a un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> e semplifica le sequenze risultanti in un'unica sequenza.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.</source>
          <target state="translated">Sequenza i cui elementi sono il risultato della chiamata alla funzione di trasformazione uno-a-molti su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of the sequence returned by selector.</source>
          <target state="translated">Tipo degli elementi della sequenza restituita dal selettore.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">Sequenza di valori da proiettare.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>Projects in parallel each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, and flattens the resulting sequences into one sequence.</source>
          <target state="translated">Proietta in parallelo ogni elemento di una sequenza a un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> e semplifica le sequenze risultanti in un'unica sequenza.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The index of each source element is used in the projected form of that element.</source>
          <target state="translated">L'indice di ogni elemento di origine viene usato nella maschera proiettata di tale elemento.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.</source>
          <target state="translated">Sequenza i cui elementi sono il risultato della chiamata alla funzione di trasformazione uno-a-molti su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>More than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> elements are enumerated by the query.</source>
          <target state="translated">Il numero di elementi enumerati dalla query è superiore a <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the intermediate elements collected by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi intermedi raccolti da <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of elements in the result sequence.</source>
          <target state="translated">Tipo degli elementi nella sequenza risultante.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A sequence of values to project.</source>
          <target state="translated">Sequenza di valori da proiettare.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento di origine; il secondo parametro della funzione rappresenta l'indice dell'elemento di origine.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">Funzione per creare un elemento di risultato da un elemento dalla prima sequenza e una raccolta di elementi corrispondenti dalla seconda sequenza.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</source>
          <target state="translated">Proietta ogni elemento di una sequenza a un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, semplifica le sequenze risultanti in un'unica sequenza e richiama una funzione del selettore di risultato su ogni elemento al suo interno.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A sequence whose elements are the result of invoking the one-to-many transform function <ph id="ph1">&lt;paramref name="collectionSelector" /&gt;</ph> on each element of <ph id="ph2">&lt;paramref name="source" /&gt;</ph> based on the index supplied to <ph id="ph3">&lt;paramref name="collectionSelector" /&gt;</ph>, and then mapping each of those sequence elements and their corresponding source element to a result element.</source>
          <target state="translated">Sequenza i cui elementi sono il risultato ottenuto richiamando la funzione di trasformazione uno-a-molti <ph id="ph1">&lt;paramref name="collectionSelector" /&gt;</ph> su ogni elemento di <ph id="ph2">&lt;paramref name="source" /&gt;</ph> basato sull'indice fornito a <ph id="ph3">&lt;paramref name="collectionSelector" /&gt;</ph> ed eseguendo quindi il mapping di ogni elemento della sequenza e del corrispondente elemento di origine a un elemento di risultato.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>More than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> elements are enumerated by the query.</source>
          <target state="translated">Il numero di elementi enumerati dalla query è superiore a <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the intermediate elements collected by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi intermedi raccolti da <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of elements to return.</source>
          <target state="translated">Tipo degli elementi da restituire.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A sequence of values to project.</source>
          <target state="translated">Sequenza di valori da proiettare.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento di origine; il secondo parametro della funzione rappresenta l'indice dell'elemento di origine.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">Funzione per creare un elemento di risultato da un elemento dalla prima sequenza e una raccolta di elementi corrispondenti dalla seconda sequenza.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</source>
          <target state="translated">Proietta ogni elemento di una sequenza a un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, semplifica le sequenze risultanti in un'unica sequenza e richiama una funzione del selettore di risultato su ogni elemento al suo interno.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The index of each source element is used in the intermediate projected form of that element.</source>
          <target state="translated">L'indice di ogni elemento di origine viene usato nella maschera intermedia proiettata di tale elemento.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A sequence whose elements are the result of invoking the one-to-many transform function <ph id="ph1">&lt;paramref name="collectionSelector" /&gt;</ph> on each element of <ph id="ph2">&lt;paramref name="source" /&gt;</ph> based on the index supplied to <ph id="ph3">&lt;paramref name="collectionSelector" /&gt;</ph>, and then mapping each of those sequence elements and their corresponding source element to a result element.</source>
          <target state="translated">Sequenza i cui elementi sono il risultato ottenuto richiamando la funzione di trasformazione uno-a-molti <ph id="ph1">&lt;paramref name="collectionSelector" /&gt;</ph> su ogni elemento di <ph id="ph2">&lt;paramref name="source" /&gt;</ph> basato sull'indice fornito a <ph id="ph3">&lt;paramref name="collectionSelector" /&gt;</ph> ed eseguendo quindi il mapping di ogni elemento della sequenza e del corrispondente elemento di origine a un elemento di risultato.</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>More than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> elements are enumerated by the query.</source>
          <target state="translated">Il numero di elementi enumerati dalla query è superiore a <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Determines whether two parallel sequences are equal by comparing the elements by using an equality comparer for their type.</source>
          <target state="translated">Determina se due sequenze parallele sono uguali confrontando gli elementi tramite l'uso di un operatore di confronto uguaglianze predefinito per il loro tipo.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This SequenceEqual overload should never be called.</source>
          <target state="translated">Questo overload di SequenceEqual non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene chiamato.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This overload exists to disallow usage of SequenceEqual with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di SequenceEqual con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Otherwise, the SequenceEqual operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore SequenceEqual sembra essere associazione all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Thrown every time this method is called.</source>
          <target state="translated">Generato ogni volta che viene chiamato questo metodo.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">Tipo degli elementi delle sequenze di input.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence to compare to second.</source>
          <target state="translated">Sequenza da confrontare alla seconda.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence to compare to the first input sequence.</source>
          <target state="translated">Sequenza da confrontare alla prima sequenza di input.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Determines whether two parallel sequences are equal by comparing the elements by using the default equality comparer for their type.</source>
          <target state="translated">Determina se due sequenze parallele sono uguali confrontando gli elementi mediante l'operatore di confronto di uguaglianza predefinito per il relativo tipo.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>true if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, false.</source>
          <target state="translated">È true se le due sequenze di origine hanno la stessa lunghezza e gli elementi corrispondenti risultano uguali in base all'operatore di confronto di uguaglianza predefinito per il relativo tipo; in caso contrario, false.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="first" /&gt;</ph> or <ph id="ph2">&lt;paramref name="second" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="first" /&gt;</ph> o <ph id="ph2">&lt;paramref name="second" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This SequenceEqual overload should never be called.</source>
          <target state="translated">Questo overload di SequenceEqual non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene chiamato.</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This overload exists to disallow usage of SequenceEqual with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di SequenceEqual con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Otherwise, the SequenceEqual operator would appear to be binding to the parallel implementation, but would in reality bind to sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore SequenceEqual sembra essere associazione all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Thrown every time this method is called.</source>
          <target state="translated">Generato ogni volta che viene chiamato questo metodo.</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">Tipo degli elementi delle sequenze di input.</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence to compare to <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Sequenza da confrontare con <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence to compare to the first input sequence.</source>
          <target state="translated">Sequenza da confrontare alla prima sequenza di input.</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to use to compare elements.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> da usare per confrontare gli elementi.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines whether two parallel sequences are equal by comparing their elements by using a specified IEqualityComparer{T}.</source>
          <target state="translated">Determina se due sequenze parallele sono uguali confrontandone gli elementi mediante un oggetto IEqualityComparer{T} specificato.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>true if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, false.</source>
          <target state="translated">È true se le due sequenze di origine hanno la stessa lunghezza e gli elementi corrispondenti risultano uguali in base all'operatore di confronto di uguaglianza predefinito per il relativo tipo; in caso contrario, false.</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source><ph id="ph1">&lt;paramref name="first" /&gt;</ph> or <ph id="ph2">&lt;paramref name="second" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="first" /&gt;</ph> o <ph id="ph2">&lt;paramref name="second" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.</source>
          <target state="translated">Restituisce l'unico elemento di una sequenza parallela e genera un'eccezione se nella sequenza non è presente esattamente un solo elemento.</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the single element of.</source>
          <target state="translated">Sequenza di cui restituire il singolo elemento.</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.</source>
          <target state="translated">Restituisce l'unico elemento di una sequenza parallela e genera un'eccezione se nella sequenza non è presente esattamente un solo elemento.</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>The single element of the input sequence.</source>
          <target state="translated">Singolo elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>The input sequence contains more than one element.</source>
          <target state="translated">La sequenza di input contiene più elementi.</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>-or- The input sequence is empty.</source>
          <target state="translated">oppure la sequenza di input è vuota.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return the single element of.</source>
          <target state="translated">Sequenza di cui restituire il singolo elemento.</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">Funzione per testare un elemento per una condizione.</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a parallel sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</source>
          <target state="translated">Restituisce l'unico elemento di una sequenza parallela che soddisfa una condizione specificata e genera un'eccezione se esistono più elementi di tale tipo.</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The single element of the input sequence that satisfies a condition.</source>
          <target state="translated">Singolo elemento della sequenza di input che soddisfa una condizione.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>No element satisfies the condition in <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph>.</source>
          <target state="translated">Nessun elemento soddisfa la condizione in <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>-or- More than one element satisfies the condition in <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph>.</source>
          <target state="translated">-oppure- Nessun elemento soddisfa la condizione in <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</source>
          <target state="translated">Restituisce l'unico elemento di una sequenza parallela o un valore predefinito se la sequenza è vuota. Questo metodo genera un'eccezione se nella sequenza esiste più di un elemento.</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the single element of.</source>
          <target state="translated">Sequenza di cui restituire il singolo elemento.</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</source>
          <target state="translated">Restituisce l'unico elemento di una sequenza parallela o un valore predefinito se la sequenza è vuota. Questo metodo genera un'eccezione se nella sequenza esiste più di un elemento.</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The single element of the input sequence, or default() if the sequence contains no elements.</source>
          <target state="translated">Il singolo elemento della sequenza di input o default() se la sequenza non contiene elementi.</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> has more than one element.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> presenta più di un elemento.</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return the single element of.</source>
          <target state="translated">Sequenza di cui restituire il singolo elemento.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">Funzione per testare un elemento per una condizione.</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a parallel sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</source>
          <target state="translated">Restituisce l'unico elemento di una sequenza parallela che soddisfa una condizione specificata o un valore predefinito se tale elemento esiste. Questo metodo genera un'eccezione se più di un elemento soddisfa la condizione.</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The single element of the input sequence that satisfies the condition, or default() if no such element is found.</source>
          <target state="translated">Il singolo elemento della sequenza di input che soddisfa la condizione o default() se tale elemento non viene trovato.</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is empty or multiple elements are returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è vuoto oppure restituisce più elementi.</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The sequence to return elements from.</source>
          <target state="translated">Sequenza dalla quale vengono restituiti gli elementi.</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The number of elements to skip before returning the remaining elements.</source>
          <target state="translated">Il numero di elementi da ignorare prima di restituire gli elementi rimanenti.</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Bypasses a specified number of elements in a parallel sequence and then returns the remaining elements.</source>
          <target state="translated">Ignora un numero specificato di elementi in una sequenza parallela e restituisce gli elementi rimanenti.</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>A sequence that contains the elements that occur after the specified index in the input sequence.</source>
          <target state="translated">Sequenza che contiene gli elementi presenti dopo l'indice specificato nella sequenza di input.</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>If count &gt; source.Count(), no elements are returned.</source>
          <target state="translated">Se count &gt; origine. Count (), nessun elemento viene restituito.</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Count is greater than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph></source>
          <target state="translated">Il numero è maggiore di <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">Ignora gli elementi in una sequenza parallela finché la condizione specificata non restituisce true, quindi restituisce gli elementi rimanenti.</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">Sequenza dalla quale vengono restituiti gli elementi.</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Funzione per testare ogni elemento rispetto a una condizione.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">Ignora gli elementi in una sequenza parallela finché la condizione specificata non restituisce true, quindi restituisce gli elementi rimanenti.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.</source>
          <target state="translated">Sequenza che contiene gli elementi dalla sequenza di input a partire dal primo elemento nella serie lineare che non supera il test specificato dal predicato.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">Sequenza dalla quale vengono restituiti gli elementi.</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Funzione per verificare ogni elemento di origine per una condizione; il secondo parametro della funzione rappresenta l'indice dell'elemento di origine.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">Ignora gli elementi in una sequenza parallela finché la condizione specificata non restituisce true, quindi restituisce gli elementi rimanenti.</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">L'indice dell'elemento viene usato nella logica della funzione predicativa.</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.</source>
          <target state="translated">Sequenza che contiene gli elementi dalla sequenza di input a partire dal primo elemento nella serie lineare che non supera il test specificato dal predicato.</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>More than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> elements are enumerated by the query.</source>
          <target state="translated">Il numero di elementi enumerati dalla query è superiore a <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la somma di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la somma di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la somma di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la somma di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la somma di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la somma di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la somma di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la somma di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la somma di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la somma di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>-or-  One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">oppure una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcola in parallelo la somma di una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The type of elements in the source sequence.</source>
          <target state="translated">Tipo degli elementi nella sequenza di origine.</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>-or-  One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">oppure una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Sequenza di valori di cui calcolare la somma.</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The sum of the projected values in the sequence.</source>
          <target state="translated">Somma dei valori previsti nella sequenza.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The sum is larger than <ph id="ph1">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somma è maggiore di <ph id="ph1">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The sequence to return elements from.</source>
          <target state="translated">Sequenza dalla quale vengono restituiti gli elementi.</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The number of elements to return.</source>
          <target state="translated">Numero di elementi da restituire.</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Returns a specified number of contiguous elements from the start of a parallel sequence.</source>
          <target state="translated">Restituisce un numero specificato di elementi contigui dall'inizio di una sequenza parallela.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>A sequence that contains the specified number of elements from the start of the input sequence.</source>
          <target state="translated">Sequenza che contiene il numero specificato di elementi, dall'inizio della sequenza di input.</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Returns elements from a parallel sequence as long as a specified condition is true.</source>
          <target state="translated">Restituisce elementi di una sequenza parallela finché una condizione specificata restituisce true.</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">Sequenza dalla quale vengono restituiti gli elementi.</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Funzione per testare ogni elemento rispetto a una condizione.</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns elements from a parallel sequence as long as a specified condition is true.</source>
          <target state="translated">Restituisce elementi di una sequenza parallela finché una condizione specificata restituisce true.</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.</source>
          <target state="translated">Sequenza che contiene gli elementi della sequenza di input che precedono l'elemento in corrispondenza del quale il test non viene più superato.</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">Sequenza dalla quale vengono restituiti gli elementi.</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Funzione per verificare ogni elemento di origine per una condizione; il secondo parametro della funzione rappresenta l'indice dell'elemento di origine.</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Returns elements from a parallel sequence as long as a specified condition is true.</source>
          <target state="translated">Restituisce elementi di una sequenza parallela finché una condizione specificata restituisce true.</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">L'indice dell'elemento viene usato nella logica della funzione predicativa.</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A sequence that contains elements from the input sequence that occur before the element at which the test no longer passes.</source>
          <target state="translated">Sequenza che contiene gli elementi della sequenza di input che precedono l'elemento in corrispondenza del quale il test non viene più superato.</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>More than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> elements are enumerated by this query.</source>
          <target state="translated">Più di <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> elementi vengono enumerati da questa query.</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in ascending order.</source>
          <target state="translated">Esegue un successivo ordinamento in parallelo degli elementi di una sequenza in ordine ascendente.</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>An OrderedParallelQuery{TSource} that contains elements to sort.</source>
          <target state="translated">Oggetto OrderedParallelQuery{TSource} che contiene elementi da ordinare.</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funzione per estrarre una chiave da un elemento.</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in ascending order according to a key.</source>
          <target state="translated">Esegue in parallelo un ordinamento successivo crescente in base a una chiave degli elementi di una sequenza.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</source>
          <target state="translated">Oggetto OrderedParallelQuery{TSource} i cui elementi sono ordinati in base a una chiave.</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>In contrast to the sequential implementation, this is not a stable sort.</source>
          <target state="translated">A differenza dell'implementazione sequenziale, questo non è un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>See the remarks for <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> for an approach to implementing a stable sort.</source>
          <target state="translated">Vedere la sezione Osservazioni per <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> per un approccio all'implementazione di un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An OrderedParallelQuery{TSource} that contains elements to sort.</source>
          <target state="translated">Oggetto OrderedParallelQuery{TSource} che contiene elementi da ordinare.</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funzione per estrarre una chiave da un elemento.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An IComparer{TKey} to compare keys.</source>
          <target state="translated">Oggetto IComparer{TKey} per confrontare chiavi.</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">Esegue in parallelo un ordinamento successivo in senso crescente degli elementi di una sequenza usando un operatore di confronto specificato.</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</source>
          <target state="translated">Oggetto OrderedParallelQuery{TSource} i cui elementi sono ordinati in base a una chiave.</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>In contrast to the sequential implementation, this is not a stable sort.</source>
          <target state="translated">A differenza dell'implementazione sequenziale, questo non è un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>See the remarks for <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> for an approach to implementing a stable sort.</source>
          <target state="translated">Vedere la sezione Osservazioni per <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> per un approccio all'implementazione di un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in descending order.</source>
          <target state="translated">Esegue un successivo ordinamento in parallelo degli elementi di una sequenza in ordine discendente.</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>An OrderedParallelQuery{TSource} that contains elements to sort.</source>
          <target state="translated">Oggetto OrderedParallelQuery{TSource} che contiene elementi da ordinare.</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funzione per estrarre una chiave da un elemento.</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in descending order, according to a key.</source>
          <target state="translated">Esegue in parallelo un ordinamento successivo decrescente in base a una chiave degli elementi di una sequenza.</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence whose elements are sorted descending according to a key.</source>
          <target state="translated">Sequenza i cui elementi vengono ordinati in senso decrescente in base a una chiave.</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>In contrast to the sequential implementation, this is not a stable sort.</source>
          <target state="translated">A differenza dell'implementazione sequenziale, questo non è un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>See the remarks for <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> for an approach to implementing a stable sort.</source>
          <target state="translated">Vedere la sezione Osservazioni per <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> per un approccio all'implementazione di un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An OrderedParallelQuery{TSource} that contains elements to sort.</source>
          <target state="translated">Oggetto OrderedParallelQuery{TSource} che contiene elementi da ordinare.</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funzione per estrarre una chiave da un elemento.</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An IComparer{TKey} to compare keys.</source>
          <target state="translated">Oggetto IComparer{TKey} per confrontare chiavi.</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</source>
          <target state="translated">Esegue in parallelo un ordinamento successivo in senso decrescente degli elementi di una sequenza usando un operatore di confronto specificato.</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A sequence whose elements are sorted descending according to a key.</source>
          <target state="translated">Sequenza i cui elementi vengono ordinati in senso decrescente in base a una chiave.</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>In contrast to the sequential implementation, this is not a stable sort.</source>
          <target state="translated">A differenza dell'implementazione sequenziale, questo non è un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>See the remarks for <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> for an approach to implementing a stable sort.</source>
          <target state="translated">Vedere la sezione Osservazioni per <ph id="ph1">&lt;xref:System.Linq.ParallelEnumerable.OrderBy%2A&gt;</ph> per un approccio all'implementazione di un ordinamento stabile.</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence to create an array from.</source>
          <target state="translated">Sequenza da cui creare una matrice.</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
          <source>Creates an array from a <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</source>
          <target state="translated">Crea una matrice da un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
          <source>An array that contains the elements from the input sequence.</source>
          <target state="translated">Oggetto che contiene gli elementi dalla sequenza di input .</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</source>
          <target state="translated">Crea un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated">Sequenza da cui creare un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Funzione per estrarre una chiave da ogni elemento.</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function.</source>
          <target state="translated">Crea un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> secondo una funzione del selettore principale specificata.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> that contains keys and values.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> che contiene chiavi e valori.</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> produces a key that is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> produce una chiave che è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>-or- <ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> produces duplicate keys for two elements.</source>
          <target state="translated">oppure <ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> genera chiavi duplicate per due elementi.</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated">Sequenza da cui creare un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Funzione per estrarre una chiave da ogni elemento.</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> per confrontare le chiavi.</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function and key comparer.</source>
          <target state="translated">Crea un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> secondo una funzione del selettore principale specificata e un operatore di confronto principale.</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> that contains keys and values.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> che contiene chiavi e valori.</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> produces a key that is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> produce una chiave che è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>-or- <ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> produces duplicate keys for two elements.</source>
          <target state="translated">oppure <ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> genera chiavi duplicate per due elementi.</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo del valore restituito da <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated">Sequenza da cui creare un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Funzione per estrarre una chiave da ogni elemento.</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to specified key selector and element selector functions.</source>
          <target state="translated">Crea un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> secondo le funzioni specificate del selettore principale e del selettore di elementi.</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> that contains values of type <ph id="ph2">&lt;paramref name="TElement" /&gt;</ph> selected from the input sequence</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> che contiene valori di tipo <ph id="ph2">&lt;paramref name="TElement" /&gt;</ph> selezionati dalla sequenza di input.</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> or <ph id="ph3">&lt;paramref name="elementSelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> o <ph id="ph3">&lt;paramref name="elementSelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source><ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> produces a key that is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> produce una chiave che è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>-or- <ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> produces duplicate keys for two elements.</source>
          <target state="translated">oppure <ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> genera chiavi duplicate per due elementi.</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo del valore restituito da <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated">Sequenza da cui creare un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Funzione per estrarre una chiave da ogni elemento.</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> per confrontare le chiavi.</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function, a comparer, and an element selector function.</source>
          <target state="translated">Crea un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> secondo una funzione specificata del selettore principale, un operatore di confronto principale e una funzione del selettore di elementi.</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> that contains values of type <ph id="ph2">&lt;paramref name="TElement" /&gt;</ph> selected from the input sequence</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> che contiene valori di tipo <ph id="ph2">&lt;paramref name="TElement" /&gt;</ph> selezionati dalla sequenza di input.</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> or <ph id="ph3">&lt;paramref name="elementSelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> o <ph id="ph3">&lt;paramref name="elementSelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> produces a key that is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> produce una chiave che è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>-or- <ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> produces duplicate keys for two elements.</source>
          <target state="translated">oppure <ph id="ph1">&lt;paramref name="keySelector" /&gt;</ph> genera chiavi duplicate per due elementi.</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>-or- One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">-oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> from.</source>
          <target state="translated">Sequenza da cui creare un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</source>
          <target state="translated">Crea un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> that contains elements from the input sequence.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> che contiene gli elementi dalla sequenza di input.</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</source>
          <target state="translated">Crea un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The sequence to create a <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from.</source>
          <target state="translated">Sequenza da cui creare un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Funzione per estrarre una chiave da ogni elemento.</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function.</source>
          <target state="translated">Crea un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> secondo una funzione del selettore principale specificata.</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> that contains keys and values.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> che contiene chiavi e valori.</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The sequence to create a <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from.</source>
          <target state="translated">Sequenza da cui creare un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Funzione per estrarre una chiave da ogni elemento.</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> per confrontare le chiavi.</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function and key comparer.</source>
          <target state="translated">Crea un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> secondo una funzione del selettore principale specificata e un operatore di confronto principale.</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> that contains keys and values.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> che contiene chiavi e valori.</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> or is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo del valore restituito da <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The sequence to create a <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from.</source>
          <target state="translated">Sequenza da cui creare un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Funzione per estrarre una chiave da ogni elemento.</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to specified key selector and element selector functions.</source>
          <target state="translated">Crea un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> secondo le funzioni specificate del selettore principale e del selettore di elementi.</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> that contains values of type <ph id="ph2">&lt;paramref name="TElement" /&gt;</ph> selected from the input sequence.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> che contiene valori di tipo <ph id="ph2">&lt;paramref name="TElement" /&gt;</ph> selezionati dalla sequenza di input.</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> or <ph id="ph3">&lt;paramref name="elementSelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> o <ph id="ph3">&lt;paramref name="elementSelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di chiave restituita dal <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo del valore restituito da <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The sequence to create a <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from.</source>
          <target state="translated">Sequenza da cui creare un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Funzione per estrarre una chiave da ogni elemento.</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> per confrontare le chiavi.</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function, a comparer and an element selector function.</source>
          <target state="translated">Crea un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> da un oggetto <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> secondo una funzione specificata del selettore principale, un operatore di confronto principale e una funzione del selettore di elementi.</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A Lookup<ph id="ph1">&amp;lt;</ph>(Of <ph id="ph2">&amp;lt;</ph>(TKey, TElement<ph id="ph3">&amp;gt;</ph>)<ph id="ph4">&amp;gt;</ph>) that contains values of type TElement selected from the input sequence.</source>
          <target state="translated">Elemento Lookup<ph id="ph1">&amp;lt;</ph>(Of <ph id="ph2">&amp;lt;</ph>(TKey, TElement<ph id="ph3">&amp;gt;</ph>)<ph id="ph4">&amp;gt;</ph>) che contiene valori di tipo TElement selezionati dalla sequenza di input.</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> or <ph id="ph3">&lt;paramref name="elementSelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="keySelector" /&gt;</ph> o <ph id="ph3">&lt;paramref name="elementSelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Produces the set union of two parallel sequences.</source>
          <target state="translated">Produce l'unione insiemistica delle due sequenze parallele.</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This Union overload should never be called.</source>
          <target state="translated">Questo overload di Union non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene chiamato.</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This overload exists to disallow usage of Union with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di unione con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Otherwise, the Union operator would appear to be binding to the parallel implementation, but would in reality bind to sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore Union sembra essere associazione all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The exception that occurs when this method is called.</source>
          <target state="translated">Eccezione che si verifica quando viene chiamato questo metodo.</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">Tipo degli elementi delle sequenze di input.</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose distinct elements form the first set for the union.</source>
          <target state="translated">Sequenza i cui elementi distinti formano il primo set dell'unione.</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose distinct elements form the second set for the union.</source>
          <target state="translated">Sequenza i cui elementi distinti formano il secondo set dell'unione.</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Produces the set union of two parallel sequences by using the default equality comparer.</source>
          <target state="translated">Produce l'unione di set delle due sequenze parallele usando l'operatore di confronto di uguaglianza predefinito.</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence that contains the elements from both input sequences, excluding duplicates.</source>
          <target state="translated">Sequenza che contiene gli elementi di entrambe le sequenze di input, tranne i duplicati.</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source><ph id="ph1">&lt;paramref name="first" /&gt;</ph> or <ph id="ph2">&lt;paramref name="second" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="first" /&gt;</ph> o <ph id="ph2">&lt;paramref name="second" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This Union overload should never be called.</source>
          <target state="translated">Questo overload di Union non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene chiamato.</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This overload exists to disallow usage of Union with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di unione con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Otherwise, the Union operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore Union sembra essere associazione all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The exception that occurs when this method is called.</source>
          <target state="translated">Eccezione che si verifica quando viene chiamato questo metodo.</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">Tipo degli elementi delle sequenze di input.</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements form the first set for the union.</source>
          <target state="translated">Sequenza i cui elementi distinti formano il primo set dell'unione.</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements form the second set for the union.</source>
          <target state="translated">Sequenza i cui elementi distinti formano il secondo set dell'unione.</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> per confrontare i valori.</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set union of two parallel sequences by using a specified IEqualityComparer{T}.</source>
          <target state="translated">Produce l'unione di set di due sequenze parallele usando un oggetto IEqualityComparer{T} specificato.</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence that contains the elements from both input sequences, excluding duplicates.</source>
          <target state="translated">Sequenza che contiene gli elementi di entrambe le sequenze di input, tranne i duplicati.</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source><ph id="ph1">&lt;paramref name="first" /&gt;</ph> or <ph id="ph2">&lt;paramref name="second" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="first" /&gt;</ph> o <ph id="ph2">&lt;paramref name="second" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Filters in parallel a sequence of values based on a predicate.</source>
          <target state="translated">Filtra in parallelo una sequenza di valori in base a un predicato.</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of source.</source>
          <target state="translated">Tipo degli elementi di origine.</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence to filter.</source>
          <target state="translated">Sequenza da filtrare.</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Funzione per testare ogni elemento rispetto a una condizione.</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Filters in parallel a sequence of values based on a predicate.</source>
          <target state="translated">Filtra in parallelo una sequenza di valori in base a un predicato.</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence that contains elements from the input sequence that satisfy the condition.</source>
          <target state="translated">Sequenza che contiene elementi della sequenza di input che soddisfano la condizione.</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of the elements of source.</source>
          <target state="translated">Tipo degli elementi di origine.</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A sequence to filter.</source>
          <target state="translated">Sequenza da filtrare.</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Funzione per testare ogni elemento rispetto a una condizione.</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Filters in parallel a sequence of values based on a predicate.</source>
          <target state="translated">Filtra in parallelo una sequenza di valori in base a un predicato.</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Each element's index is used in the logic of the predicate function.</source>
          <target state="translated">L'indice di ogni elemento viene usato nella logica della funzione predicato.</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A sequence that contains elements from the input sequence that satisfy the condition.</source>
          <target state="translated">Sequenza che contiene elementi della sequenza di input che soddisfano la condizione.</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> o <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>More than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> elements are enumerated by the query.</source>
          <target state="translated">Il numero di elementi enumerati dalla query è superiore a <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>A ParallelQuery on which to set the option.</source>
          <target state="translated">Oggetto ParallelQuery su cui impostare l'opzione.</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>A cancellation token.</source>
          <target state="translated">Token di annullamento.</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to associate with the query.</source>
          <target state="translated">Imposta l'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> da associare alla query.</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>ParallelQuery representing the same query as source, but with the registered cancellation token.</source>
          <target state="translated">Oggetto ParallelQuery che rappresenta la stessa query come origine, ma con il token di annullamento registrato.</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph> is used multiple times in the query.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph> viene utilizzato più volte nella query.</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>A ParallelQuery on which to set the limit on the degrees of parallelism.</source>
          <target state="translated">Oggetto ParallelQuery su cui impostare il limite in gradi di parallelismo.</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The degree of parallelism for the query.</source>
          <target state="translated">Grado di parallelismo per la query.</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The default value is Math.Min(<ph id="ph1">&lt;see cref="P:System.Environment.ProcessorCount" /&gt;</ph>, <ph id="ph2">&lt;see langword="MAX_SUPPORTED_DOP" /&gt;</ph>) where <ph id="ph3">&lt;see langword="MAX_SUPPORTED_DOP" /&gt;</ph> is 512.</source>
          <target state="translated">Il valore predefinito è Math.Min(<ph id="ph1">&lt;see cref="P:System.Environment.ProcessorCount" /&gt;</ph>, <ph id="ph2">&lt;see langword="MAX_SUPPORTED_DOP" /&gt;</ph>) dove <ph id="ph3">&lt;see langword="MAX_SUPPORTED_DOP" /&gt;</ph> è 512.</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Sets the degree of parallelism to use in a query.</source>
          <target state="translated">Imposta il grado di parallelismo da usare in una query.</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Degree of parallelism is the maximum number of concurrently executing tasks that will be used to process the query.</source>
          <target state="translated">Il grado di parallelismo è il numero massimo di attività eseguite contemporaneamente che saranno usate per elaborare la query.</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>ParallelQuery representing the same query as source, with the limit on the degrees of parallelism set.</source>
          <target state="translated">Oggetto ParallelQuery che rappresenta la stessa query come origine, con il limite di gradi di parallelismo impostato.</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="degreeOfParallelism" /&gt;</ph> is less than 1 or greater than 511.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="degreeOfParallelism" /&gt;</ph> è minore di 1 o maggiore di 511.</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>WithDegreeOfParallelism is used multiple times in the query.</source>
          <target state="translated">WithDegreeOfParallelism viene utilizzato più volte nella query.</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>A ParallelQuery on which to set the option.</source>
          <target state="translated">Oggetto ParallelQuery su cui impostare l'opzione.</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>The mode in which to execute the query.</source>
          <target state="translated">Modalità in cui eseguire la query.</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>Sets the execution mode of the query.</source>
          <target state="translated">Imposta la modalità di esecuzione della query.</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>ParallelQuery representing the same query as source, but with the registered execution mode.</source>
          <target state="translated">Oggetto ParallelQuery che rappresenta la stessa query come origine, ma con la modalità di esecuzione registrata.</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>The execution mode specifies whether PLINQ will attempt to fall back to sequential execution if it detects certain query shapes.</source>
          <target state="translated">La modalità di esecuzione specifica se PLINQ tenterà di eseguire il fallback all'esecuzione sequenziale se rileva alcune forme di query.</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>For more information and examples, see <bpt id="p1">[</bpt>How to: Specify the Execution Mode in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-the-execution-mode-in-plinq.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni ed esempi, vedere <bpt id="p1">[</bpt>procedura: specificare la modalità di esecuzione in PLINQ<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-the-execution-mode-in-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source><ph id="ph1">&lt;paramref name="executionMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Linq.ParallelExecutionMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="executionMode" /&gt;</ph> non è un valore valido di <ph id="ph2">&lt;see cref="T:System.Linq.ParallelExecutionMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>WithExecutionMode is used multiple times in the query.</source>
          <target state="translated">WithExecutionMode viene utilizzato più volte nella query.</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo di elementi di <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source>A ParallelQuery on which to set the option.</source>
          <target state="translated">Oggetto ParallelQuery su cui impostare l'opzione.</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source>The merge options to set for this query.</source>
          <target state="translated">Opzioni di merge da impostare per la query.</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source>Sets the merge options for this query, which specify how the query will buffer output.</source>
          <target state="translated">Imposta le opzioni di merge per la query, che specificano la modalità di memorizzazione dell'output nel buffer da parte della query.</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source>ParallelQuery representing the same query as source, but with the registered merge options.</source>
          <target state="translated">Oggetto ParallelQuery che rappresenta la stessa query come origine, ma con le opzioni di merge registrate.</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> è un riferimento null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source><ph id="ph1">&lt;paramref name="mergeOptions" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Linq.ParallelMergeOptions" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mergeOptions" /&gt;</ph> non è un valore valido di <ph id="ph2">&lt;see cref="T:System.Linq.ParallelMergeOptions" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source><ph id="ph1">&lt;paramref name="WithMergeOptions" /&gt;</ph> is used multiple times in the query.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="WithMergeOptions" /&gt;</ph> viene utilizzato più volte nella query.</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" uid="T:System.Linq.ParallelEnumerable">
          <source>Merges in parallel two sequences by using the specified predicate function.</source>
          <target state="translated">Unisce in parallelo due sequenze tramite la funzione predicato specificata.</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Questo parametro di tipo non viene usato.</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Questo parametro non viene usato.</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This Zip overload should never be called.</source>
          <target state="translated">Questo overload di Zip non dovrebbe mai essere chiamato.</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when invoked.</source>
          <target state="translated">Questo metodo è contrassegnato come obsoleto e genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando viene richiamato.</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This overload always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questo overload genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This overload exists to disallow usage of Zip with a left data source of type <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> and a right data source of type <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo overload esiste per impedire l'utilizzo di Zip con un'origine dati a sinistra di tipo <ph id="ph1">&lt;xref:System.Linq.ParallelQuery%601&gt;</ph> e un'origine dati di tipo <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>Otherwise, the Zip operator would appear to be bind to the parallel implementation, but would in reality bind to the sequential implementation.</source>
          <target state="translated">In caso contrario, l'operatore Zip può sembrare binding all'implementazione parallela, ma in realtà sarebbe associato all'implementazione sequenziale.</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>The exception that occurs when this method is called.</source>
          <target state="translated">Eccezione che si verifica quando viene chiamato questo metodo.</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">Tipo degli elementi della prima sequenza.</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">Tipo degli elementi della seconda sequenza.</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The type of the return elements.</source>
          <target state="translated">Tipo degli elementi restituiti.</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The first sequence to zip.</source>
          <target state="translated">Prima sequenza da comprimere.</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The second sequence to zip.</source>
          <target state="translated">Seconda sequenza da comprimere.</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">Funzione per creare un elemento di risultato da due elementi corrispondenti.</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>Merges in parallel two sequences by using the specified predicate function.</source>
          <target state="translated">Unisce in parallelo due sequenze tramite la funzione predicato specificata.</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>A sequence that has elements of type <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> that are obtained by performing <ph id="ph2">&lt;paramref name="resultSelector" /&gt;</ph> pairwise on two sequences.</source>
          <target state="translated">Sequenza che contiene elementi di tipo <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> ottenuti eseguendo un pairwise <ph id="ph2">&lt;paramref name="resultSelector" /&gt;</ph> su due sequenze.</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>If the sequence lengths are unequal, this truncates to the length of the shorter sequence.</source>
          <target state="translated">Se le sequenze hanno lunghezze diverse, la sequenza più lunga viene troncata in base alla lunghezza della sequenza più corta.</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source><ph id="ph1">&lt;paramref name="first" /&gt;</ph> or <ph id="ph2">&lt;paramref name="second" /&gt;</ph> or <ph id="ph3">&lt;paramref name="resultSelector" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="first" /&gt;</ph> o <ph id="ph2">&lt;paramref name="second" /&gt;</ph> o <ph id="ph3">&lt;paramref name="resultSelector" /&gt;</ph> è un riferimento Null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The query was canceled with the token passed in through <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</source>
          <target state="translated">La query è stata annullata con il token passato tramite <ph id="ph1">&lt;paramref name="WithCancellation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>One or more exceptions occurred during the evaluation of the query.</source>
          <target state="translated">Una o più eccezioni si sono verificate durante la valutazione della query.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>