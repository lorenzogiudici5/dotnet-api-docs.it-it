<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IOrderedEnumerable`1.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5dd8baa8864f07893c5a3fbb483f57a59202291a9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd8baa8864f07893c5a3fbb483f57a59202291a9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IOrderedEnumerable`1">
          <source>The type of the elements of the sequence.</source>
          <target state="translated">Tipo degli elementi della sequenza.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Linq.IOrderedEnumerable`1">
          <source>Represents a sorted sequence.</source>
          <target state="translated">Rappresenta una sequenza ordinata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IOrderedEnumerable`1">
          <source>This type is enumerable because it inherits from <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Questo tipo è enumerabile perché eredita da <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IOrderedEnumerable`1">
          <source>The extension methods <ph id="ph1">&lt;xref:System.Linq.Enumerable.ThenBy%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Linq.Enumerable.ThenByDescending%2A&gt;</ph> operate on objects of type <ph id="ph3">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph>.</source>
          <target state="translated">I metodi di estensione <ph id="ph1">&lt;xref:System.Linq.Enumerable.ThenBy%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Linq.Enumerable.ThenByDescending%2A&gt;</ph> operano su oggetti di tipo <ph id="ph3">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IOrderedEnumerable`1">
          <source>An object of type <ph id="ph1">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph> can be obtained by calling one of the primary sort methods, <ph id="ph2">&lt;xref:System.Linq.Enumerable.OrderBy%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Linq.Enumerable.OrderByDescending%2A&gt;</ph>, which return an <ph id="ph4">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph>.</source>
          <target state="translated">Un oggetto di tipo <ph id="ph1">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph> può essere ottenuto chiamando uno dei metodi di ordinamento primari, <ph id="ph2">&lt;xref:System.Linq.Enumerable.OrderBy%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Linq.Enumerable.OrderByDescending%2A&gt;</ph>, che restituiscono un <ph id="ph4">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IOrderedEnumerable`1">
          <source><ph id="ph1">&lt;xref:System.Linq.Enumerable.ThenBy%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Linq.Enumerable.ThenByDescending%2A&gt;</ph>, the subordinate sort methods, in turn also return an object of type <ph id="ph3">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Enumerable.ThenBy%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Linq.Enumerable.ThenByDescending%2A&gt;</ph>, i metodi di ordinamento subordinati, a sua volta inoltre restituire un oggetto di tipo <ph id="ph3">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IOrderedEnumerable`1">
          <source>This design allows for any number of consecutive calls to <ph id="ph1">&lt;xref:System.Linq.Enumerable.ThenBy%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Linq.Enumerable.ThenByDescending%2A&gt;</ph>, where each call performs a subordinate ordering on the sorted data returned from the previous call.</source>
          <target state="translated">Questa struttura consente un numero qualsiasi di chiamate consecutive di <ph id="ph1">&lt;xref:System.Linq.Enumerable.ThenBy%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Linq.Enumerable.ThenByDescending%2A&gt;</ph>, dove ogni chiamata esegue un ordinamento subordinato sui dati ordinati restituiti dalla chiamata precedente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IOrderedEnumerable`1">
          <source>The following example demonstrates how to perform a primary and secondary ordering on an array of strings.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come eseguire un ordinamento primario e secondario in una matrice di stringhe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IOrderedEnumerable`1">
          <source>It also demonstrates that the resulting <ph id="ph1">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph> is enumerable.</source>
          <target state="translated">Viene inoltre illustrato che il valore risultante <ph id="ph1">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph> è enumerabile.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
          <source>The type of the key produced by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo della chiave del prodotto da <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> used to extract the key for each element.</source>
          <target state="translated">La funzione <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> usata per estrarre la chiave per ogni elemento.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> used to compare keys for placement in the returned sequence.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> utilizzato per confrontare chiavi per collocarle nella sequenza restituita.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to sort the elements in descending order; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to sort the elements in ascending order.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per ordinare gli elementi in senso decrescente; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per ordinare gli elementi in ordine crescente.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
          <source>Performs a subsequent ordering on the elements of an <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> according to a key.</source>
          <target state="translated">Esegue un successivo ordinamento degli elementi di un oggetto <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> in base a una chiave.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> whose elements are sorted according to a key.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> i cui elementi vengono ordinati secondo una chiave.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
          <source>The functionality provided by this method is like that provided by <ph id="ph1">&lt;xref:System.Linq.Enumerable.ThenBy%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Linq.Enumerable.ThenByDescending%2A&gt;</ph>, depending on whether <ph id="ph3">`descending`</ph> is <ph id="ph4">`true`</ph> or <ph id="ph5">`false`</ph>.</source>
          <target state="translated">La funzionalità fornita da questo metodo è come quella fornita da <ph id="ph1">&lt;xref:System.Linq.Enumerable.ThenBy%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Linq.Enumerable.ThenByDescending%2A&gt;</ph>, a seconda se <ph id="ph3">`descending`</ph> è <ph id="ph4">`true`</ph> o <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
          <source>They both perform a subordinate ordering of an already sorted sequence of type <ph id="ph1">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph>.</source>
          <target state="translated">Entrambi eseguono un ordinamento subordinato di una sequenza già ordinata di tipo <ph id="ph1">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable*&gt;</ph> to perform a secondary ordering on an <ph id="ph2">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable*&gt;</ph> per eseguire un ordinamento secondario in un <ph id="ph2">&lt;xref:System.Linq.IOrderedEnumerable%601&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>