<Type Name="JumpList" FullName="System.Windows.Shell.JumpList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="69d54a1176e1460755ee21fa2e00e9710f64df0d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36464407" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class JumpList : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed JumpList extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JumpList&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpList sealed : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type JumpList = class&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("JumpItems")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a list of items and tasks displayed as a menu on a Windows 7 taskbar button.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il [!INCLUDE[win7](~/includes/win7-md.md)] barra delle applicazioni vengono fornite funzionalità migliorate per l'avvio programmi direttamente dal pulsante della barra delle applicazioni tramite Jump List. Jump List vengono usati anche nel [!INCLUDE[win7](~/includes/win7-md.md)] menu Start. Accedere a un elenco di spostamento facendo clic su un pulsante sulla barra delle applicazioni o facendo clic sulla freccia accanto a un programma nel menu Start. Per ulteriori informazioni sulle Jump List, vedere la [sulla barra delle applicazioni](http://go.microsoft.com/fwlink/?LinkId=178478) sezione delle linee guida l'interazione dell'esperienza utente Windows.  
  
 Il <xref:System.Windows.Shell.JumpList> classe fornisce un wrapper gestito per la funzionalità Jump List il [!INCLUDE[win7](~/includes/win7-md.md)] sulla barra delle applicazioni e gestisce i dati passati al [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell. Funzionalità esposte dal <xref:System.Windows.Shell.JumpList> classe non è disponibile nelle versioni di [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] precedenti a [!INCLUDE[win7](~/includes/win7-md.md)]. Le applicazioni che usano il <xref:System.Windows.Shell.JumpList> classe verrà eseguito in altre versioni di [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)], ma il Jump List non sarà disponibile. Per ulteriori informazioni sulla shell di Windows e API di elenco passare native, vedere [sulla barra delle applicazioni estensioni](http://go.microsoft.com/fwlink/?LinkId=178479).  
  
 La figura seguente mostra il Jump elenco per Windows Media Player, con gli elementi nel **attività** e **frequente** categorie.  
  
 ![Jump List di Windows Media Player](~/add/media/wpfshell-jumplist.png "Jump List di Windows Media Player")  
Jump List di Windows Media Player  
  
## <a name="configuring-a-jump-list"></a>Configurazione di un elenco di salto  
 Jump List può contenere due tipi di elementi, un <xref:System.Windows.Shell.JumpTask> e un <xref:System.Windows.Shell.JumpPath>. Un <xref:System.Windows.Shell.JumpTask> è un collegamento a un programma e un <xref:System.Windows.Shell.JumpPath> è un collegamento a un file. È possibile separare visivamente gli elementi in un elenco di spostamento tramite la creazione di un <xref:System.Windows.Shell.JumpTask> che non dispone di un <xref:System.Windows.Shell.JumpTask.Title%2A> e <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> specificato. Questo vuoto <xref:System.Windows.Shell.JumpTask> sarà visualizzato come una riga orizzontale nella Jump List.  
  
> [!NOTE]
>  Se il tipo del file specificato in un <xref:System.Windows.Shell.JumpPath> non è registrato con l'applicazione, il file non verrà visualizzato nell'elenco di spostamento. Ad esempio, se si aggiunge un <xref:System.Windows.Shell.JumpPath> che punta a un file con estensione txt, l'applicazione deve essere registrata per gestire file con estensione txt. Per altre informazioni, vedere [Introduzione alle associazioni di File](http://go.microsoft.com/fwlink/?LinkId=178480).  
  
 Gli elementi Jump vengono collocati in categorie nel <xref:System.Windows.Shell.JumpList>. Per impostazione predefinita, un <xref:System.Windows.Shell.JumpItem> viene visualizzato nel **attività** categoria. In alternativa, è possibile specificare un <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> per il <xref:System.Windows.Shell.JumpItem>.  
  
 È possibile specificare se lo standard **recenti** e **frequente** le categorie vengono visualizzate nel <xref:System.Windows.Shell.JumpList> impostando il <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> e <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> proprietà. Il contenuto di queste categorie è gestito dal [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell. Poiché queste categorie potrebbero contenere molti degli stessi dati, è in genere visualizzare uno o l'altro nel <xref:System.Windows.Shell.JumpList>, ma non entrambi. [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] gestisce automaticamente gli elementi recenti se sono aperti tramite una finestra di dialogo file comune o utilizzati per aprire un'applicazione tramite l'associazione del tipo di file. Quando un elemento si accede tramite la Jump List, è possibile notificare il [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell dei comandi per aggiungere l'elemento per il **recenti** categoria chiamando il <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> (metodo).  
  
## <a name="applying-a-jump-list-to-the-windows-shell"></a>Applicazione di un elenco di salto a Shell di Windows  
 Non è possibile accedere direttamente Jump List della shell o leggerne il contenuto nel <xref:System.Windows.Shell.JumpList> classe. Al contrario, il <xref:System.Windows.Shell.JumpList> classe fornisce una rappresentazione di un elenco di salto che è possibile utilizzare e quindi applicare il [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell. In genere si crea un <xref:System.Windows.Shell.JumpList> e impostarla quando l'applicazione viene innanzitutto eseguita una volta. Tuttavia, è possibile modificare o sostituire il <xref:System.Windows.Shell.JumpList> in fase di esecuzione.  
  
 Dopo aver impostato il <xref:System.Windows.Shell.JumpList> delle proprietà, è necessario applicare il <xref:System.Windows.Shell.JumpList> alla shell di Windows prima che il contenuto viene visualizzato sulla barra delle applicazioni Jump List. Questa operazione viene eseguita automaticamente quando il <xref:System.Windows.Shell.JumpList> prima di tutto è collegato a un'applicazione, in XAML o in una chiamata al <xref:System.Windows.Shell.JumpList.SetJumpList%2A> metodo. Se si modifica il contenuto del <xref:System.Windows.Shell.JumpList> in fase di esecuzione, è necessario chiamare il <xref:System.Windows.Shell.JumpList.Apply%2A> metodo per applicare il contenuto corrente di shell di Windows.  
  
## <a name="setting-a-jump-list-in-xaml"></a>L'impostazione di un elenco di salto in XAML  
 Un <xref:System.Windows.Shell.JumpList> non è collegato automaticamente a un <xref:System.Windows.Application> oggetto. Si collega un <xref:System.Windows.Shell.JumpList> a un <xref:System.Windows.Application> oggetto in XAML tramite la sintassi della proprietà associata. Il <xref:System.Windows.Shell.JumpList> implementa la <xref:System.ComponentModel.ISupportInitialize> interfaccia per supportare la dichiarazione XAML di un <xref:System.Windows.Shell.JumpList>. Se il <xref:System.Windows.Shell.JumpList> viene dichiarato in XAML e associato all'oggetto corrente <xref:System.Windows.Application>, viene applicata automaticamente al [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell quando il <xref:System.Windows.Shell.JumpList> viene inizializzato.  
  
## <a name="setting-and-modifying-a-jump-list-in-code"></a>Impostazione e la modifica di un elenco di salto nel codice  
 Si collega un <xref:System.Windows.Shell.JumpList> a un <xref:System.Windows.Application> oggetto nel codice chiamando il metodo statico <xref:System.Windows.Shell.JumpList.SetJumpList%2A> metodo. Questo vale anche il <xref:System.Windows.Shell.JumpList> per il [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell.  
  
 Per modificare un <xref:System.Windows.Shell.JumpList> in fase di esecuzione, si chiama il <xref:System.Windows.Shell.JumpList.GetJumpList%2A> metodo per ottenere i <xref:System.Windows.Shell.JumpList> che è attualmente collegato a un <xref:System.Windows.Application>. Dopo avere modificato le proprietà del <xref:System.Windows.Shell.JumpList>, è necessario chiamare il <xref:System.Windows.Shell.JumpList.Apply%2A> metodo per applicare le modifiche alla shell di Windows.  
  
> [!NOTE]
>  In genere, si crea uno <xref:System.Windows.Shell.JumpList> che è associato al <xref:System.Windows.Application> e applicare il [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell. Tuttavia, è possibile creare più <xref:System.Windows.Shell.JumpList> oggetti. Una sola <xref:System.Windows.Shell.JumpList> in un momento può essere applicato al [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell e una sola scheda <xref:System.Windows.Shell.JumpList> alla volta può essere associato un <xref:System.Windows.Application>. .NET Framework non richiede che questi siano identici <xref:System.Windows.Shell.JumpList>.  
  
> [!NOTE]
>  Questa classe contiene una richiesta di collegamento a livello di classe che si applica a tutti i membri. Oggetto <xref:System.Security.SecurityException> viene generata quando il chiamante immediato non dispone dell'autorizzazione di attendibilità totale. Per ulteriori informazioni sui requisiti di sicurezza, vedere [linking](~/docs/framework/misc/link-demands.md) e [richieste di ereditarietà](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'applicazione con un elenco di spostamento. L'applicazione ha tre pulsanti che consentono di aggiungere un'attività all'elenco corrente di passare, cancellare il contenuto della Jump List e applicare un nuovo elenco di passare all'applicazione.  
  
 Nell'esempio seguente viene illustrato come dichiarare un <xref:System.Windows.Shell.JumpList> nel markup. Il <xref:System.Windows.Shell.JumpList> contiene due <xref:System.Windows.Shell.JumpTask> collegamenti e uno <xref:System.Windows.Shell.JumpPath>. L'applicazione di <xref:System.Windows.Shell.JumpPath> alla shell avrà esito negativo se l'applicazione non è registrato per gestire l'estensione del nome file con estensione txt.  
  
 [!code-xaml[Shell_JumpListSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#000)]  
  
 L'esempio seguente mostra la pagina code-behind per `App.xaml`. Questo codice gestisce il <xref:System.Windows.Shell.JumpList.JumpItemsRejected> e <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> eventi.  
  
 [!code-csharp[Shell_JumpListSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#100)]  
  
 Nell'esempio seguente viene illustrato il markup usato per creare l'interfaccia utente dell'applicazione.  
  
 [!code-xaml[Shell_JumpListSample#300](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml#300)]  
  
 L'esempio seguente mostra la pagina code-behind per `MainWindow.xaml`. Questo codice viene illustrato come modificare, cancellare e creare un <xref:System.Windows.Shell.JumpList> nel codice procedurale. Per il nuovo Jump List, il metodo statico <xref:System.Windows.Shell.JumpList.SetJumpList%2A> metodo viene chiamato per associare il <xref:System.Windows.Shell.JumpList> con l'applicazione corrente e applicare il <xref:System.Windows.Shell.JumpList> alla shell di Windows.  
  
 [!code-csharp[Shell_JumpListSample#200](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#200)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">per l'accesso completo modificare la shell di Windows. Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpList" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpList" /> class.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede attendibilità totale per il chiamante immediato. L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList (System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of JumpItem), showFrequent As Boolean, showRecent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList(System::Collections::Generic::IEnumerable&lt;System::Windows::Shell::JumpItem ^&gt; ^ items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Shell.JumpList : seq&lt;System.Windows.Shell.JumpItem&gt; * bool * bool -&gt; System.Windows.Shell.JumpList" Usage="new System.Windows.Shell.JumpList (items, showFrequent, showRecent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt;" />
        <Parameter Name="showFrequent" Type="System.Boolean" />
        <Parameter Name="showRecent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="items">The collection of <see cref="T:System.Windows.Shell.JumpItem" /> objects that are displayed in the Jump List.</param>
        <param name="showFrequent">A value that indicates whether frequently used items are displayed in the Jump List.</param>
        <param name="showRecent">A value that indicates whether recently used items are displayed in the Jump List.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpList" /> class with the specified parameters.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il **recenti** e **frequente** categorie spesso contengono molti degli stessi elementi di salto. Di conseguenza, le applicazioni in genere visualizzano sia il **recenti** o il **frequente** categoria Jump List, ma non entrambi.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede attendibilità totale per il chiamante immediato. L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.JumpItems" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddToRecentCategory">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adds the specified item to the **Recent** category of the Jump List.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (string itemPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(string itemPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddToRecentCategory (itemPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::String ^ itemPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : string -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory itemPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemPath">The path to add to the Jump List.</param>
        <summary>Adds the specified item path to the **Recent** category of the Jump List.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il contenuto del **recenti** categoria vengono gestiti dalla shell di Windows. Per visualizzare gli elementi usati di recente nella Jump List, impostare il <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> proprietà `true`.  
  
 È possibile chiamare il <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29> metodo per richiedere che la shell di Windows aggiungere il percorso di un elemento per il **recenti** elenco degli elementi. Se l'applicazione non è registrata per gestire il tipo di file dell'elemento, non verrà visualizzata nel **recenti** elenco e le chiamate ai <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29> avranno automaticamente esito negativo.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede attendibilità totale per il chiamante immediato. L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpPath jumpPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpPath jumpPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpPath ^ jumpPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpPath -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpPath" Type="System.Windows.Shell.JumpPath" />
      </Parameters>
      <Docs>
        <param name="jumpPath">The <see cref="T:System.Windows.Shell.JumpPath" /> to add to the Jump List.</param>
        <summary>Adds the specified jump path to the **Recent** category of the Jump List.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il contenuto del **recenti** categoria vengono gestiti dalla shell di Windows. Per visualizzare gli elementi usati di recente nella Jump List, impostare il <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> proprietà `true`.  
  
 È possibile chiamare il <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29> metodo per richiedere che la shell di Windows aggiungere il percorso di collegamento specificato per il **recenti** elenco degli elementi. Se l'applicazione non è registrata per gestire il tipo di file dell'elemento, non verrà visualizzata nel **recenti** elenco e le chiamate ai <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29> avranno automaticamente esito negativo.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede attendibilità totale per il chiamante immediato. L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpTask jumpTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpTask jumpTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpTask ^ jumpTask);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpTask -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpTask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpTask" Type="System.Windows.Shell.JumpTask" />
      </Parameters>
      <Docs>
        <param name="jumpTask">The <see cref="T:System.Windows.Shell.JumpTask" /> to add to the Jump List.</param>
        <summary>Adds the specified jump task to the **Recent** category of the Jump List.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il contenuto del **recenti** categoria vengono gestiti dalla shell di Windows. Per visualizzare gli elementi usati di recente nella Jump List, impostare il <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> proprietà `true`.  
  
 È possibile chiamare il <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpTask%29> metodo per richiedere che la shell di Windows aggiungere l'attività jump specificata per il **recenti** elenco degli elementi.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede attendibilità totale per il chiamante immediato. L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberSignature Language="F#" Value="member this.Apply : unit -&gt; unit" Usage="jumpList.Apply " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sends the <see cref="T:System.Windows.Shell.JumpList" /> to the Windows shell in its current state.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Shell.JumpList.Apply%2A> metodo invia il contenuto del <xref:System.Windows.Shell.JumpList> alla shell di Windows nello stato corrente. Dopo questa chiamata è stata completata, il <xref:System.Windows.Shell.JumpList.JumpItems%2A> proprietà viene modificata per contenere solo gli elementi che la shell di Windows è stato aggiunto alla relativa barra delle applicazioni Jump List. È possibile accedere gli elenchi di elementi rimossi tramite i gestori eventi per il <xref:System.Windows.Shell.JumpList.JumpItemsRejected> e <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> eventi.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere l'oggetto corrente <xref:System.Windows.Shell.JumpList> e cancellare il contenuto del <xref:System.Windows.Shell.JumpList.JumpItems%2A> insieme. Il <xref:System.Windows.Shell.JumpList.Apply%2A> viene quindi chiamato il metodo per applicare il <xref:System.Windows.Shell.JumpList> diventa la shell di Windows. In questo esempio fa parte di un esempio più esaustivo disponibile nel <xref:System.Windows.Shell.JumpList> Cenni preliminari sulla classe.  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Shell.JumpList" /> is not completely initialized.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede attendibilità totale per il chiamante immediato. L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="jumpList.BeginInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signals the start of the <see cref="T:System.Windows.Shell.JumpList" /> initialization.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Shell.JumpList> implementa la <xref:System.ComponentModel.ISupportInitialize> interfaccia per supportare la dichiarazione XAML di un <xref:System.Windows.Shell.JumpList>. Il <xref:System.Windows.Shell.JumpList.BeginInit%2A> metodo viene chiamato solo quando il <xref:System.Windows.Shell.JumpList> è dichiarato in XAML e associato a un <xref:System.Windows.Application> utilizzando la sintassi della proprietà associata. Non si chiama questo metodo dal codice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">This call to <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> is nested in a previous call to <see cref="M:System.Windows.Shell.JumpList.BeginInit" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="jumpList.EndInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signals the end of the <see cref="T:System.Windows.Shell.JumpList" /> initialization.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Shell.JumpList> implementa la <xref:System.ComponentModel.ISupportInitialize> interfaccia per supportare la dichiarazione XAML di un <xref:System.Windows.Shell.JumpList>. Il <xref:System.Windows.Shell.JumpList.EndInit%2A> metodo viene chiamato solo quando il <xref:System.Windows.Shell.JumpList> è dichiarato in XAML e associato a un <xref:System.Windows.Application> utilizzando la sintassi della proprietà associata. Non si chiama questo metodo dal codice.  
  
 Il <xref:System.Windows.Shell.JumpList.EndInit%2A> metodo ha lo stesso effetto di <xref:System.Windows.Shell.JumpList.Apply%2A> metodo. <xref:System.Windows.Shell.JumpList.EndInit%2A> Invia il contenuto del <xref:System.Windows.Shell.JumpList> alla shell di Windows nello stato corrente. Dopo questa chiamata è stata completata, il <xref:System.Windows.Shell.JumpList.JumpItems%2A> proprietà viene modificata per contenere solo gli elementi che la shell di Windows è stato aggiunto al Jump List. È possibile accedere gli elenchi di elementi rimossi tramite i gestori eventi per il <xref:System.Windows.Shell.JumpList.JumpItemsRejected> e <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> eventi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">This call to <see cref="M:System.Windows.Shell.JumpList.EndInit" /> is not paired with a call to <see cref="M:System.Windows.Shell.JumpList.BeginInit" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJumpList">
      <MemberSignature Language="C#" Value="public static System.Windows.Shell.JumpList GetJumpList (System.Windows.Application application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Shell.JumpList GetJumpList(class System.Windows.Application application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Shell::JumpList ^ GetJumpList(System::Windows::Application ^ application);" />
      <MemberSignature Language="F#" Value="static member GetJumpList : System.Windows.Application -&gt; System.Windows.Shell.JumpList" Usage="System.Windows.Shell.JumpList.GetJumpList application" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.JumpList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
      </Parameters>
      <Docs>
        <param name="application">The application associated with the <see cref="T:System.Windows.Shell.JumpList" />.</param>
        <summary>Returns the <see cref="T:System.Windows.Shell.JumpList" /> object associated with an application.</summary>
        <returns>The <see cref="T:System.Windows.Shell.JumpList" /> object associated with the specified application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile chiamare il <xref:System.Windows.Shell.JumpList.GetJumpList%2A> metodo per ottenere il <xref:System.Windows.Shell.JumpList> attualmente associato un <xref:System.Windows.Application>. .NET Framework non richiede che questo sia il <xref:System.Windows.Shell.JumpList> attualmente applicato alla shell di Windows.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere il <xref:System.Windows.Shell.JumpList> associate all'applicazione corrente. A <xref:System.Windows.Shell.JumpTask> viene aggiunto per il <xref:System.Windows.Shell.JumpList.JumpItems%2A> insieme e aggiunto al **recenti** categoria. Il <xref:System.Windows.Shell.JumpList.Apply%2A> viene chiamato per applicare l'aggiornamento <xref:System.Windows.Shell.JumpList> alla shell di Windows. In questo esempio fa parte di un esempio più esaustivo disponibile nel <xref:System.Windows.Shell.JumpList> Cenni preliminari sulla classe.  
  
 [!code-csharp[Shell_JumpListSample#240](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#240)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt; JumpItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Windows.Shell.JumpItem&gt; JumpItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.JumpItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JumpItems As List(Of JumpItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ JumpItems { System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JumpItems : System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;" Usage="System.Windows.Shell.JumpList.JumpItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of <see cref="T:System.Windows.Shell.JumpItem" /> objects that are displayed in the Jump List.</summary>
        <value>La raccolta di <see cref="T:System.Windows.Shell.JumpItem" /> oggetti visualizzati nell'elenco di spostamento. Il valore predefinito è una raccolta vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jump List può contenere due tipi di elementi, un <xref:System.Windows.Shell.JumpTask> e un <xref:System.Windows.Shell.JumpPath>. Un <xref:System.Windows.Shell.JumpTask> è un collegamento a un programma e un <xref:System.Windows.Shell.JumpPath> è un collegamento a un file.  
  
 Quando un <xref:System.Windows.Shell.JumpList> viene creato il <xref:System.Windows.Shell.JumpList.JumpItems%2A> raccolta è vuota. È possibile aggiungere qualsiasi <xref:System.Windows.Shell.JumpTask> o <xref:System.Windows.Shell.JumpPath> oggetti alla raccolta. La raccolta conterrà solo gli elementi che sono stati aggiunti dal programma. Dopo il <xref:System.Windows.Shell.JumpList> è stato passato alla shell di Windows tramite una chiamata riuscita a uno il <xref:System.Windows.Shell.JumpList.EndInit%2A> o <xref:System.Windows.Shell.JumpList.Apply%2A> metodi, il <xref:System.Windows.Shell.JumpList.JumpItems%2A> raccolta conterrà solo gli elementi che sono stati aggiunti alla barra delle applicazioni Jump List. Vengono rimossi elementi che non sono stati aggiunti correttamente dal <xref:System.Windows.Shell.JumpList.JumpItems%2A> insieme. È possibile accedere gli elenchi di elementi rimossi tramite i gestori eventi per il <xref:System.Windows.Shell.JumpList.JumpItemsRejected> e <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> eventi.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere l'oggetto corrente <xref:System.Windows.Shell.JumpList> e cancellare il contenuto del <xref:System.Windows.Shell.JumpList.JumpItems%2A> insieme. Il <xref:System.Windows.Shell.JumpList.Apply%2A> viene quindi chiamato il metodo per applicare il <xref:System.Windows.Shell.JumpList> diventa la shell di Windows. In questo esempio fa parte di un esempio più esaustivo disponibile nel <xref:System.Windows.Shell.JumpList> Cenni preliminari sulla classe.  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRejected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRejected As EventHandler(Of JumpItemsRejectedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRejectedEventArgs ^&gt; ^ JumpItemsRejected;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRejected : EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " Usage="member this.JumpItemsRejected : System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when jump items are not successfully added to the Jump List by the Windows shell.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo il contenuto del <xref:System.Windows.Shell.JumpList> vengono applicate alla shell di Windows, il <xref:System.Windows.Shell.JumpList.JumpItems%2A> proprietà viene modificata per contenere solo gli elementi che la shell di Windows è stato aggiunto al Jump List. È possibile accedere gli elenchi di elementi rimossi tramite i gestori eventi per il <xref:System.Windows.Shell.JumpList.JumpItemsRejected> e <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> eventi.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come gestire il <xref:System.Windows.Shell.JumpList.JumpItemsRejected> evento per visualizzare gli elementi rifiutati in una finestra di messaggio. In questo esempio fa parte di un esempio più esaustivo disponibile nel <xref:System.Windows.Shell.JumpList> Cenni preliminari sulla classe.  
  
 [!code-csharp[Shell_JumpListSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRemovedByUser">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRemovedByUser As EventHandler(Of JumpItemsRemovedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRemovedEventArgs ^&gt; ^ JumpItemsRemovedByUser;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRemovedByUser : EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " Usage="member this.JumpItemsRemovedByUser : System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when jump items previously in the Jump List are removed from the list by the user.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo il contenuto del <xref:System.Windows.Shell.JumpList> vengono applicate alla shell di Windows, il <xref:System.Windows.Shell.JumpList.JumpItems%2A> proprietà viene modificata per contenere solo gli elementi che la shell di Windows è stato aggiunto al Jump List. È possibile accedere gli elenchi di elementi rimossi tramite i gestori eventi per il <xref:System.Windows.Shell.JumpList.JumpItemsRejected> e <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> eventi.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come gestire il <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> evento per visualizzare gli elementi rifiutati in una finestra di messaggio. In questo esempio fa parte di un esempio più esaustivo disponibile nel <xref:System.Windows.Shell.JumpList> Cenni preliminari sulla classe.  
  
 [!code-csharp[Shell_JumpListSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetJumpList">
      <MemberSignature Language="C#" Value="public static void SetJumpList (System.Windows.Application application, System.Windows.Shell.JumpList value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetJumpList(class System.Windows.Application application, class System.Windows.Shell.JumpList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetJumpList(System::Windows::Application ^ application, System::Windows::Shell::JumpList ^ value);" />
      <MemberSignature Language="F#" Value="static member SetJumpList : System.Windows.Application * System.Windows.Shell.JumpList -&gt; unit" Usage="System.Windows.Shell.JumpList.SetJumpList (application, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
        <Parameter Name="value" Type="System.Windows.Shell.JumpList" />
      </Parameters>
      <Docs>
        <param name="application">The application associated with the <see cref="T:System.Windows.Shell.JumpList" />.</param>
        <param name="value">The <see cref="T:System.Windows.Shell.JumpList" /> to associate with the application.</param>
        <summary>Sets the <see cref="T:System.Windows.Shell.JumpList" /> object associated with an application.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare più <xref:System.Windows.Shell.JumpList> oggetti. Tuttavia, una sola <xref:System.Windows.Shell.JumpList> in un momento può essere associato un <xref:System.Windows.Application>. Chiamare il <xref:System.Windows.Shell.JumpList.SetJumpList%2A> metodo per impostare il <xref:System.Windows.Shell.JumpList> attualmente associato un <xref:System.Windows.Application>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un <xref:System.Windows.Shell.JumpList> nel codice. Il metodo statico <xref:System.Windows.Shell.JumpList.SetJumpList%2A> metodo viene chiamato per associare il <xref:System.Windows.Shell.JumpList> con l'applicazione corrente. Il <xref:System.Windows.Shell.JumpList> viene applicata automaticamente a shell di Windows quando la proprietà è impostata. In questo esempio fa parte di un esempio più esaustivo disponibile nel <xref:System.Windows.Shell.JumpList> Cenni preliminari sulla classe.  
  
 [!code-csharp[Shell_JumpListSample#210](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#210)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFrequentCategory">
      <MemberSignature Language="C#" Value="public bool ShowFrequentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFrequentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowFrequentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowFrequentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFrequentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether frequently used items are displayed in the Jump List.</summary>
        <value>
          <see langword="true" /> Se gli elementi usati di frequente vengono visualizzati nell'elenco del salto. in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il contenuto del **frequente** categoria vengono gestiti dalla shell di Windows. Per visualizzare gli elementi usati di frequente nella Jump List, impostare il <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> proprietà `true`.  
  
 Il **recenti** e **frequente** categorie spesso contengono molti degli stessi elementi di salto. Di conseguenza, le applicazioni in genere visualizzano sia il **recenti** o il **frequente** categoria Jump List, ma non entrambi.  
  
   
  
## Examples  
 L'esempio seguente illustra una <xref:System.Windows.Shell.JumpList> configurato per mostrare la **frequente** categoria. In questo esempio fa parte di un esempio più esaustivo disponibile nel <xref:System.Windows.Shell.JumpList> Cenni preliminari sulla classe.  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowRecentCategory">
      <MemberSignature Language="C#" Value="public bool ShowRecentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRecentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRecentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRecentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRecentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether recently used items are displayed in the Jump List.</summary>
        <value>
          <see langword="true" /> Se gli elementi usati di recente vengono visualizzati nell'elenco del salto. in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il contenuto del **recenti** categoria vengono gestiti dalla shell di Windows. Per visualizzare gli elementi usati di frequente nella Jump List, impostare il <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> proprietà `true`.  
  
 Il **recenti** e **frequente** categorie spesso contengono molti degli stessi elementi di salto. Di conseguenza, le applicazioni in genere visualizzano sia il **recenti** o il **frequente** categoria Jump List, ma non entrambi.  
  
 È possibile chiamare il <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> metodo per richiedere che la shell di Windows aggiungere elementi per il **recenti** elenco degli elementi. Se l'applicazione non è registrata per gestire il tipo di nome file dell'elemento, non verrà visualizzata nel **recenti** elenco e le chiamate ai <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> avranno automaticamente esito negativo.  
  
   
  
## Examples  
 L'esempio seguente illustra una <xref:System.Windows.Shell.JumpList> configurato per mostrare la **recenti** categoria. In questo esempio fa parte di un esempio più esaustivo disponibile nel <xref:System.Windows.Shell.JumpList> Cenni preliminari sulla classe.  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>