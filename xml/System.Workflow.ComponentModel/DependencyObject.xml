<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DependencyObject.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d14e5264d143902c5d0c22cf05d6a5107560d265.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d14e5264d143902c5d0c22cf05d6a5107560d265</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.ComponentModel.DependencyObject">
          <source>The base class for all objects that have dependency properties.</source>
          <target state="translated">La classe di base per tutti gli oggetti che hanno proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Workflow.ComponentModel.DependencyObject">
          <source>This class must be inherited.</source>
          <target state="translated">La classe deve essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.#ctor">
          <source>When implemented in a derived class, initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> class.</source>
          <target state="translated">Quando viene implementato in una classe derivata, inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the value of this property.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> che rappresenta il valore della proprietà.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>In this case, a <ph id="ph1">&lt;see cref="T:System.Delegate" /&gt;</ph> type.</source>
          <target state="translated">In questo caso, un tipo <ph id="ph1">&lt;see cref="T:System.Delegate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Adds a handler for an event of a <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Aggiunge un gestore per un evento di una classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>When you create a delegate, you identify the method that handles the event.</source>
          <target state="translated">Quando si crea un delegato , si identifica il metodo che gestisce l'evento.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">Per associare l'evento al gestore eventi in uso, aggiungere all'evento un'istanza del delegato.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Unless you remove the delegate, the event handler is called whenever the event occurs.</source>
          <target state="translated">Il gestore eventi viene chiamato ogni volta che si verifica l'evento, a meno che il delegato non venga rimosso.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Multiple delegates can be added to handle an event.</source>
          <target state="translated">Per gestire un evento, è possibile aggiungere più delegati.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>For more information about event-handler delegates, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui delegati del gestore eventi, vedere <bpt id="p1">[</bpt>NIB: eventi e delegati<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Handlers are added and removed using the following code.</source>
          <target state="translated">I gestori sono aggiunti e rimossi utilizzando il codice seguente.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>This code example is part of the Send Email SDK sample and is from the SendMailActivity.cs file.</source>
          <target state="translated">Questo esempio di codice è parte dell'esempio SDK Send di posta elettronica e si trova nel file SendMailActivity.cs.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Send Email Activity Sample<ept id="p1">](http://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>esempio attività di posta elettronica Send<ept id="p1">](http://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Either of the arguments is a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">Uno degli argomenti è un riferimento null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="dependencyEvent" /&gt;</ph> represents a non-event <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyEvent" /&gt;</ph> non rappresenta un evento di <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.DependencyObject.DesignMode">
          <source>Gets the value that indicates whether this instance is in design or run-time mode.</source>
          <target state="translated">Ottiene il valore che indica se l’istanza è in modalità di progettazione o esecuzione.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.DependencyObject.DesignMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance is in design mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se questa istanza è in modalità progettazione; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Workflow.ComponentModel.DependencyObject">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> class.</source>
          <target state="translated">Rilascia le risorse usate dalla classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.Dispose">
          <source>Releases all the resources used by the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Libera tutte le risorse utilizzate dall'oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources and optionally releases the managed resources used by <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Libera le risorse non gestite utilizzate dall’oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> ed eventualmente le risorse gestite.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.Finalize">
          <source>Provided as an override to <ph id="ph1">&lt;see cref="M:System.Object.Finalize" /&gt;</ph> to clean up any unmanaged resources deterministically.</source>
          <target state="translated">Fornito come override a <ph id="ph1">&lt;see cref="M:System.Object.Finalize" /&gt;</ph> per eseguire la pulizia di risorse non gestite in modo deterministico.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.Finalize">
          <source>Typically, this is required only when unmanaged resources such as raw HWNDS, Win32 files handlers, and others are released.</source>
          <target state="translated">In genere, è necessario solo al momento del rilascio di risorse non gestite, ad esempio HWNDS di tipo raw, gestori di file Win32 e altre.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)">
          <source>Provides access to the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph> associated with the specific <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Fornisce l’accesso alla classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph> associata alla classe <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> specifica.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph> associated with the specific <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph> associata alla classe<ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> specifica.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target of the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph>.</source>
          <target state="translated">Il tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> di destinazione di <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that is the subject of an <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph>.</source>
          <target state="translated">Recupera l'oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> che corrisponde al soggetto di una classe <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that is the subject of an <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> che corrisponde al soggetto di una classe <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Object&gt;</ph> that is the subject of an <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.ActivityBind&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Object&gt;</ph> che corrisponde al soggetto di una classe <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.ActivityBind&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
          <source>When overridden in a derived class, this method can be used to customize the way in which a specified binding is resolved.</source>
          <target state="translated">Quando ne viene eseguito l’override in una classe derivata, questo metodo può essere utilizzato per personalizzare la modalità in cui è risolta un'associazione specifica.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
          <source><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)">
          <source>The type of the returned delegates.</source>
          <target state="translated">Tipo dei delegati restituiti.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)">
          <source>Gets an array that contains the delegates for the specified <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Ottiene una matrice che contiene i delegati per la classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)">
          <source>An array that contains the delegates for the specified <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Matrice che contiene i delegati per la classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)">
          <source><ph id="ph1">&lt;paramref name="dependencyEvent" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyEvent" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)">
          <source><ph id="ph1">&lt;paramref name="dependencyEvent" /&gt;</ph> does not correspond to an event.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyEvent" /&gt;</ph> non corrisponde a un evento.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)">
          <source>Provides access to the value of the designated <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Fornisce l’accesso al valore della classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> designata.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)">
          <source>The object that represents the value of the designated <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Oggetto che rappresenta il valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> designato.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)">
          <source>This member is typically used in property gets to furnish the value of the named dependency value.</source>
          <target state="translated">In genere, questo membro viene utilizzato al momento di ottenere le proprietà da aggiungere al valore di dipendenza designato.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)">
          <source>The following code shows how to use <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A&gt;</ph> to return the value represented by a named dependency property in the context of get and set.</source>
          <target state="translated">Nel codice riportato di seguito viene illustrato come utilizzare la classe <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A&gt;</ph> per restituire il valore rappresentato da una proprietà di dipendenza designata nel contesto get and set.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)">
          <source>This code example is part of the Send Email SDK sample and is from the SendMailActivity.cs file.</source>
          <target state="translated">Questo esempio di codice è parte dell'esempio SDK Send di posta elettronica e si trova nel file SendMailActivity.cs.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)">
          <source>For more information, see <bpt id="p1">[</bpt>Send Email Activity Sample<ept id="p1">](http://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>esempio attività di posta elettronica Send<ept id="p1">](http://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669)</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> to get the value of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> di cui ottenere il valore.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)">
          <source>Provides access to the bound object of a <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> and bypasses the <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /&gt;</ph> override.</source>
          <target state="translated">Fornisce l’accesso all’oggetto associato di una classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>, ignorando l’override di <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)">
          <source>The bound object of a <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">L’oggetto associato di una classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)">
          <source>This bypasses the <ph id="ph1">&lt;see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /&gt;</ph> override.</source>
          <target state="translated">Ignora l'override di <ph id="ph1">&lt;see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)">
          <source>This method is useful inside the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A&gt;</ph> override implementation.</source>
          <target state="translated">Questo metodo è utile nell’ambito dell'implementazione dell'override <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A&gt;</ph> override code invokes the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyObject.GetValueBase%2A&gt;</ph>, and then adds additional code.</source>
          <target state="translated">In genere, il codice di override di <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A&gt;</ph> invoca <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyObject.GetValueBase%2A&gt;</ph> e quindi aggiunge un’altra parte di codice.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)">
          <source>For implementing the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A&gt;</ph> override, <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.PropertyMetadata&gt;</ph> can be used in <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A&gt;</ph><ph id="ph4">/</ph><ph id="ph5">&lt;xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A&gt;</ph> calls.</source>
          <target state="translated">Per l'implementazione di <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A&gt;</ph> esegue l'override, <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.PropertyMetadata&gt;</ph> può essere usato in <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A&gt;</ph> <ph id="ph4">/</ph> <ph id="ph5">&lt;xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A&gt;</ph> chiamate.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)">
          <source><ph id="ph1">&lt;paramref name="dependencyProperty" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyProperty" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties">
          <source>Performs initialization on dependency properties when overridden in a derived class.</source>
          <target state="translated">Esegue l’inizializzazione sulle proprietà di dipendenza quando ne viene eseguito l’override in una classe derivata.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties">
          <source>Called by the workflow runtime engine during the initialization of the activity at run time.</source>
          <target state="translated">Chiamato dal motore di runtime del flusso di lavoro durante l’inizializzazione dell’attività in fase di esecuzione.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> to test.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> da verificare.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)">
          <source>Indicates whether the value of a <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> is set as a binding.</source>
          <target state="translated">Indica se il valore di <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> è impostato come un'associazione.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)">
          <source>See <ph id="ph1">&lt;see cref="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" /&gt;</ph>.</source>
          <target state="translated">Vedere <ph id="ph1">&lt;see cref="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if set as a binding; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se impostato come binding; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)">
          <source><ph id="ph1">&lt;paramref name="dependencyProperty" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyProperty" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> to compare with for equality.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> da confrontare per uguaglianza.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)">
          <source>Determines whether the <ph id="ph1">&lt;see langword="metaproperties" /&gt;</ph> of this <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> equals the <ph id="ph3">&lt;see langword="metaproperties" /&gt;</ph> of the parameterized <ph id="ph4">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Determina se le <ph id="ph1">&lt;see langword="metaproperties" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> sono uguali alle <ph id="ph3">&lt;see langword="metaproperties" /&gt;</ph> della classe <ph id="ph4">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> parametrizzata.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see langword="metaproperties" /&gt;</ph> are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se le <ph id="ph2">&lt;see langword="metaproperties" /&gt;</ph> sono uguali; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)">
          <source>This uses the <ph id="ph1">`==`</ph> operator as defined for the type of private member <ph id="ph2">`metaproperties`</ph>, which is <ph id="ph3">&lt;xref:System.Collections.IDictionary&gt;</ph>.</source>
          <target state="translated">Utilizza l'operatore <ph id="ph1">`==`</ph> come definito per il tipo di membro privato <ph id="ph2">`metaproperties`</ph>, ovvero <ph id="ph3">&lt;xref:System.Collections.IDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject">
          <source>Gets the parent <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> in the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> graph.</source>
          <target state="translated">Ottiene l’oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> padre nel grafico di <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject">
          <source>The parent <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> in the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> graph.</source>
          <target state="translated">L’oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> padre nel grafico di <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the value of this property.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> che rappresenta il valore della proprietà.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>In this case, a <ph id="ph1">&lt;see cref="T:System.Delegate" /&gt;</ph> type.</source>
          <target state="translated">In questo caso, un tipo <ph id="ph1">&lt;see cref="T:System.Delegate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Removes an <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> from an associated <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Rimuove un elemento <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> dalla classe <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> associata.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Provided as a convenient direct method for removing an event delegate.</source>
          <target state="translated">Fornito come metodo diretto per la rimozione di un delegato dell'evento.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>When you create a delegate, you identify the method that will handle the event.</source>
          <target state="translated">Quando si crea un delegato , si identifica il metodo che gestirà l'evento.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">Per associare l'evento al gestore eventi in uso, aggiungere all'evento un'istanza del delegato.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Unless you remove the delegate, the event handler is called whenever the event occurs.</source>
          <target state="translated">Il gestore eventi viene chiamato ogni volta che si verifica l'evento, a meno che il delegato non venga rimosso.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>For more information about event-handler delegates, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui delegati del gestore eventi, vedere <bpt id="p1">[</bpt>NIB: eventi e delegati<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Handlers are added and removed using the following code.</source>
          <target state="translated">I gestori sono aggiunti e rimossi utilizzando il codice seguente.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Send Email Activity Sample<ept id="p1">](http://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>esempio attività di posta elettronica Send<ept id="p1">](http://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669)</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Either of the arguments is a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">Uno degli argomenti è un riferimento null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="dependencyEvent" /&gt;</ph> is not an event.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyEvent" /&gt;</ph> non è un evento.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is a <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph> and this instance is not in <ph id="ph3">&lt;see cref="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> è una <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph> e questa istanza non è in <ph id="ph3">&lt;see cref="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> to be removed.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> da rimuovere.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)">
          <source>Removes a <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> from the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Rimuove una classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> dalla classe <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if operation was successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l’operazione è stata completata; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)">
          <source>The argument is a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">L’argomento è un riferimento nullo (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph> to set to.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph> da impostare.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph> for the specified <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Imposta <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph> per la classe <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> sets the value directly to the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyProperty&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> imposta il valore direttamente su <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyProperty&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>Similarly, <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A&gt;</ph> adds a handler directly to properties of type event.</source>
          <target state="translated">Analogamente, <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A&gt;</ph> aggiunge un gestore direttamente alle proprietà di tipo evento.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>These methods are exclusive when they are called for the same property.</source>
          <target state="translated">Questi metodi sono esclusivi quando sono chiamati per la stessa proprietà.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>If <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A&gt;</ph> is called, then the values previously set using <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> (<ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A&gt;</ph> in events) are disregarded.</source>
          <target state="translated">Se viene chiamato <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A&gt;</ph>, i valori precedentemente impostati utilizzando <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> (<ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A&gt;</ph> negli eventi) sono trascurati.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>The same is true the other way around: <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> (<ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A&gt;</ph>) resets the binding assigned with <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A&gt;</ph>.</source>
          <target state="translated">Lo stesso vale nel caso opposto: <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> (<ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A&gt;</ph>) reimposta l’associazione assegnata con <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>The following code shows how to create activities and add them as children to a composite activity and includes setting the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A&gt;</ph> permission for this type.</source>
          <target state="translated">Nel codice riportato di seguito viene illustrato come creare attività e aggiungerle come attività figlio a un'attività composta e come impostare l'autorizzazione <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A&gt;</ph> per questo tipo.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>In addition, the use of the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A&gt;</ph> method is illustrated.</source>
          <target state="translated">Viene inoltre mostrato come utilizzare il metodo <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file.</source>
          <target state="translated">Questo esempio di codice è parte dell'esempio SDK Throw e si trova nel file ThrowWorkFlow.cs.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>For more information, see <bpt id="p1">[</bpt>Using Throw<ept id="p1">](http://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>utilizzando generata<ept id="p1">](http://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc)</ept>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>Either of the arguments is a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">Uno degli argomenti è un riferimento null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> is not bindable.</source>
          <target state="translated">Non è possibile eseguire l’associazione della classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /&gt;</ph> associata a <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
          <source>This instance is not in <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" /&gt;</ph>.</source>
          <target state="translated">Questa istanza non è in <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to set the target of the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph>.</source>
          <target state="translated">L’oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> per impostare la destinazione di <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)">
          <source>Sets the value of the target <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph>.</source>
          <target state="translated">Imposta il valore della classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.ActivityBind" /&gt;</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)">
          <source><ph id="ph1">&lt;paramref name="bind" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bind" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the value.</source>
          <target state="translated">Valore <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> che rappresenta il valore X.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Sets the value of a <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>, which is read-only.</source>
          <target state="translated">Imposta il valore di <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> in sola lettura.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="dependencyProperty" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="dependencyProperty" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> to be set.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> da impostare.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to set the value to.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> su cui impostare il valore.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> to the object.</source>
          <target state="translated">Imposta il valore di <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> sull’oggetto.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A&gt;</ph> sets a binding for the dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A&gt;</ph> imposta un’associazione per la proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> sets a value directly to the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyProperty&gt;</ph> (similarly, <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A&gt;</ph> adds a handler directly to properties of type event).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> imposta un valore direttamente su <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyProperty&gt;</ph> (analogamente, <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A&gt;</ph> aggiunge un gestore direttamente alle proprietà di tipo evento).</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>These methods are exclusive when they are called for the same property.</source>
          <target state="translated">Questi metodi sono esclusivi quando sono chiamati per la stessa proprietà.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A&gt;</ph> is called, then the values previously set using <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> (<ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A&gt;</ph> in events) are disregarded.</source>
          <target state="translated">Se viene chiamato <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A&gt;</ph>, i valori precedentemente impostati utilizzando <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> (<ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A&gt;</ph> negli eventi) sono trascurati.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The same is true the other way around: <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> (<ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A&gt;</ph>) resets the binding assigned with <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A&gt;</ph>.</source>
          <target state="translated">Lo stesso vale nel caso opposto: <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> (<ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A&gt;</ph>) reimposta l’associazione assegnata con <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The following code shows how a dependency property is set within a dependency object using <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph>.</source>
          <target state="translated">Il codice seguente mostra come viene impostata una proprietà di dipendenza all'interno di un oggetto di dipendenza utilizzando <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> to be set to the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> da impostare sull’oggetto <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that becomes the value of the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> che diventa  il valore della classe <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>, bypassing the <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Imposta il valore della classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyProperty" /&gt;</ph> all’oggetto <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> specificato, ignorando <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>This method is useful inside the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> override implementation.</source>
          <target state="translated">Questo metodo è utile nell’ambito dell'implementazione dell'override <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> override code would do some custom logic before calling the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValueBase%2A&gt;</ph> method.</source>
          <target state="translated">In genere, il codice di override di <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> implementa una logica personalizzata prima di eseguire la chiamata al metodo <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValueBase%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source>For setting a <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph> override, <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.PropertyMetadata&gt;</ph> can be used in <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyProperty&gt;</ph>, <ph id="ph4">&lt;xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A&gt;</ph> calls.</source>
          <target state="translated">Per l'impostazione di un override di <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A&gt;</ph>, è possibile utilizzare <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.PropertyMetadata&gt;</ph> nelle chiamate di <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.DependencyProperty&gt;</ph>, <ph id="ph4">&lt;xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A&gt;</ph> o <ph id="ph5">&lt;xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
          <source><ph id="ph1">&lt;paramref name="dependencyProperty" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyProperty" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.DependencyObject.Site">
          <source>Gets or sets a reference to the <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.DependencyObject.Site" /&gt;</ph> component of the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Ottiene o imposta un riferimento al componente <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.DependencyObject.Site" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.DependencyObject.Site">
          <source>The <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.DependencyObject.Site" /&gt;</ph> component of the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Componente <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.DependencyObject.Site" /&gt;</ph> di <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.DependencyObject.UserData">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> that associates custom data with this class instance.</source>
          <target state="translated">Ottiene un’interfaccia <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> che associa dati personalizzati a questa istanza della classe.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.DependencyObject.UserData">
          <source>A dictionary that acts as an extensibility hook for developers to manipulate <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> declarations for a design tool and associate custom data with individual activity declarations.</source>
          <target state="translated">Un dizionario che si comporta come un hook di estensibilità per consentire agli sviluppatori di modificare dichiarazioni di <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.DependencyObject" /&gt;</ph> per uno strumento di progettazione e associare dati personalizzati a singole dichiarazioni di attività.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.DependencyObject.UserData">
          <source>This property is a <ph id="ph1">`metaproperty`</ph>, which means it is immutable at run time.</source>
          <target state="translated">Questa proprietà è un <ph id="ph1">`metaproperty`</ph>, vale a dire che non è modificabile in fase di esecuzione.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.DependencyObject.UserData">
          <source><ph id="ph1">`Metaproperties`</ph> do not change after a property instance is created at run time, so the property must be set to a literal value at design time.</source>
          <target state="translated"><ph id="ph1">`Metaproperties`</ph> non modificare dopo aver creata un'istanza della proprietà in fase di esecuzione, pertanto la proprietà deve essere impostata su un valore letterale in fase di progettazione.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.DependencyObject.UserData">
          <source>This property is not used in the default <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph> declaration implementations provided by Windows Workflow Foundation.</source>
          <target state="translated">Questa proprietà non è utilizzata nelle implementazioni predefinite delle dichiarazioni di <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph> fornite da Windows Workflow Foundation.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.DependencyObject.UserData">
          <source>This collection is not serialized; data that the collection contains is not persisted from design time to run time.</source>
          <target state="translated">Questa raccolta non è serializzata; i dati contenuti nella raccolta non sono mantenuti nel passaggio da fase di progettazione a fase di esecuzione.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>