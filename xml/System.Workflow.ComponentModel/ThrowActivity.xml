<Type Name="ThrowActivity" FullName="System.Workflow.ComponentModel.ThrowActivity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c41ca22563c87fbb7e0ebb713a14ff3c6ca2ebe4" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51861616" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ThrowActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.Design.ITypeFilterProvider, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThrowActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.ComponentModel.Design.ITypeFilterProvider, class System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.ThrowActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThrowActivity&#xA;Inherits Activity&#xA;Implements IDynamicPropertyTypeProvider, ITypeFilterProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThrowActivity sealed : System::Workflow::ComponentModel::Activity, System::Workflow::ComponentModel::Design::ITypeFilterProvider, System::Workflow::ComponentModel::IDynamicPropertyTypeProvider" />
  <TypeSignature Language="F#" Value="type ThrowActivity = class&#xA;    inherit Activity&#xA;    interface ITypeFilterProvider&#xA;    interface IDynamicPropertyTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.Design.ITypeFilterProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IDynamicPropertyTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ThrowDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.ThrowActivity), "Resources.Throw.png")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Modella la generazione di un'eccezione. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Lo scopo della classe <xref:System.Workflow.ComponentModel.ThrowActivity> è di consentire l’utilizzo di modelli dichiarativi per la generazione di un'eccezione. <xref:System.Workflow.ComponentModel.ThrowActivity> è equivalente in funzionalità a un'attività <xref:System.Workflow.Activities.CodeActivity> il cui gestore code-beside genera l'eccezione indicata.  
  
   
  
## Examples  
 Nel codice seguente è mostrato l'utilizzo di un’attività di generazione di eccezioni in un flusso di lavoro per implementare la gestione delle eccezioni. Questo esempio di codice è parte dell'esempio SDK Throw e si trova nel file ThrowWorkflow.cs. Per altre informazioni, vedere [utilizzo di Throw](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  
  
 [!code-csharp[WF_Samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]
 [!code-vb[WF_Samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Workflow.ComponentModel.ThrowActivity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThrowActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThrowActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Workflow.ComponentModel.ThrowActivity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nel codice seguente è mostrato l'utilizzo di un’attività di generazione di eccezioni in un flusso di lavoro per implementare la gestione delle eccezioni. In questo esempio è inclusa la chiamata al costruttore. Questo esempio di codice è parte dell'esempio SDK Throw e si trova nel file ThrowWorkflow.cs. Per altre informazioni, vedere [utilizzo di Throw](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  
  
 [!code-csharp[WF_Samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]
 [!code-vb[WF_Samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThrowActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThrowActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.ThrowActivity : string -&gt; System.Workflow.ComponentModel.ThrowActivity" Usage="new System.Workflow.ComponentModel.ThrowActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'attività definito dall'utente.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Workflow.ComponentModel.ThrowActivity" /> e ne inizializza il nome.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identifier" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected internal override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="throwActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fault">
      <MemberSignature Language="C#" Value="public Exception Fault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Fault" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ThrowActivity.Fault" />
      <MemberSignature Language="VB.NET" Value="Public Property Fault As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Fault { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Fault : Exception with get, set" Usage="System.Workflow.ComponentModel.ThrowActivity.Fault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.ThrowActivity/FaultConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto di eccezione che deve essere generato da <see cref="T:System.Workflow.ComponentModel.ThrowActivity" />.</summary>
        <value>L’elemento <see cref="T:System.Exception" /> associato a questa istanza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'accesso indiretto a ogni proprietà e a ogni evento public di questo tipo è eseguito in base alla risoluzione di una proprietà di dipendenza corrispondente. Questa proprietà di dipendenza rappresenta la `XProperty` o `XEvent` dello specifico campo statico pubblico, dove X è la proprietà corrispondente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty FaultProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty FaultProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.ThrowActivity.FaultProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FaultProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ FaultProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FaultProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.ThrowActivity.FaultProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che rappresenta la proprietà <see cref="P:System.Workflow.ComponentModel.ThrowActivity.Fault" /> dell’istanza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultType">
      <MemberSignature Language="C#" Value="public Type FaultType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FaultType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ThrowActivity.FaultType" />
      <MemberSignature Language="VB.NET" Value="Public Property FaultType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ FaultType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FaultType : Type with get, set" Usage="System.Workflow.ComponentModel.ThrowActivity.FaultType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.ThrowActivity/FaultTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di eccezione che deve essere generato da <see cref="T:System.Workflow.ComponentModel.ThrowActivity" />.</summary>
        <value>Il tipo che rappresenta l'errore associato a questa istanza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nel codice seguente è mostrato l'utilizzo di un’attività di generazione di eccezioni all’interno di un flusso di lavoro per implementare la gestione delle eccezioni. In questo esempio viene illustrato come impostare <xref:System.Workflow.ComponentModel.ThrowActivity.FaultType%2A> su `null`. Questo esempio di codice è parte dell'esempio SDK Throw e si trova nel file ThrowWorkflow.cs. Per altre informazioni, vedere [utilizzo di Throw](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  
  
 [!code-csharp[WF_Samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]
 [!code-vb[WF_Samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty FaultTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty FaultTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FaultTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ FaultTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FaultTypeProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> che rappresenta la proprietà <see cref="P:System.Workflow.ComponentModel.ThrowActivity.FaultType" /> dell’istanza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'accesso indiretto a ogni proprietà e a ogni evento public di questo tipo è eseguito in base alla risoluzione di una proprietà di dipendenza corrispondente. Questa proprietà di dipendenza rappresenta la `XProperty` o `XEvent` dello specifico campo statico pubblico, dove X è la proprietà corrispondente.  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.Initialize : IServiceProvider -&gt; unit" Usage="throwActivity.Initialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType">
      <MemberSignature Language="C#" Value="bool ITypeFilterProvider.CanFilterType (Type type, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(class System.Type type, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(Type ^ type, bool throwOnError) = System::Workflow::ComponentModel::Design::ITypeFilterProvider::CanFilterType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> di cui verificare il filtro.</param>
        <param name="throwOnError">
          <see langword="true" /> per generare un'eccezione quando viene elaborato <see cref="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)" />; in caso contrario, <see langword="false" />.</param>
        <summary>Restituisce un valore che indica se è possibile filtrare <see cref="T:System.Type" />.</summary>
        <returns>
          <see langword="true" /> se il tipo specificato può essere filtrato; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription">
      <MemberSignature Language="C#" Value="string System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property FilterDescription As String Implements ITypeFilterProvider.FilterDescription" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Workflow::ComponentModel::Design::ITypeFilterProvider::FilterDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la descrizione per il filtro da visualizzare nella finestra di dialogo del browser di classi.</summary>
        <value>Stringa <see cref="T:System.String" /> che contiene la descrizione del filtro.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes Implements IDynamicPropertyTypeProvider.GetAccessType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Workflow::ComponentModel::Compiler::AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetAccessType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Un oggetto che implementa <see cref="T:System.IServiceProvider" /> per fornire accesso ai servizi utilizzati nella fase di progettazione, se necessari.</param>
        <param name="propertyName">Nome della proprietà.</param>
        <summary>Restituisce il tipo di accesso per la proprietà specificata.</summary>
        <returns>Valore di enumerazione <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> che indica il livello di accesso della proprietà.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo oggetto viene utilizzato in fase di compilazione per controllare se le proprietà sono associate correttamente fra loro. Senza questa interfaccia queste informazioni vengono derivate direttamente dai metodi di richiamo e impostazione delle proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType">
      <MemberSignature Language="C#" Value="Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type Implements IDynamicPropertyTypeProvider.GetPropertyType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetPropertyType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Un oggetto che implementa <see cref="T:System.IServiceProvider" /> per fornire accesso ai servizi utilizzati nella fase di progettazione, se necessari.</param>
        <param name="propertyName">Nome della proprietà.</param>
        <summary>Restituisce l'oggetto <see cref="T:System.Type" /> della proprietà specificata.</summary>
        <returns>Oggetto <see cref="T:System.Type" /> della proprietà il cui nome è passato come parametro <paramref name="propertyName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo oggetto viene utilizzato in fase di compilazione per controllare se le proprietà sono associate correttamente fra loro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>