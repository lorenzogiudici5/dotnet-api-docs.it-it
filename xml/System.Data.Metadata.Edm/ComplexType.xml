<Type Name="ComplexType" FullName="System.Data.Metadata.Edm.ComplexType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e4000eae4840fda611221c22fe96f6b879e2f047" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30386555" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComplexType : System.Data.Metadata.Edm.StructuralType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComplexType extends System.Data.Metadata.Edm.StructuralType" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.ComplexType" />
  <TypeSignature Language="VB.NET" Value="Public Class ComplexType&#xA;Inherits StructuralType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComplexType : System::Data::Metadata::Edm::StructuralType" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Metadata.Edm.StructuralType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un tipo complesso in un modello concettuale.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.Metadata.Edm.ComplexType> in un modello concettuale rappresenta un tipo che include un set di proprietà come tipo di entità ma non include una proprietà chiave. Per ulteriori informazioni sui tipi complessi in un modello concettuale, vedere [tipo complesso](http://msdn.microsoft.com/library/271d59a2-990e-4d24-b427-27a1c3e99b42) e [procedura: definire un modello con i tipi complessi (Entity Framework)](http://msdn.microsoft.com/library/b13b24d5-05d1-4746-b0d2-5472796240c6).  
  
   
  
## Examples  
 Esempio di codice seguente ottiene un'area di lavoro metadati dalla connessione e utilizza tale area di lavoro metadati per recuperare informazioni sulle proprietà dei tipi complessi nel modello specificato. Si noti che l'area di lavoro metadati è un componente del servizio di runtime che fornisce supporto per il recupero dei metadati.  
  
 Nell'esempio di codice viene utilizzato un oggetto <xref:System.Data.Metadata.Edm.DataSpace.CSpace> per specificare il modello. <xref:System.Data.Metadata.Edm.DataSpace.CSpace> rappresenta il nome predefinito per il modello concettuale. L'esempio di codice viene utilizzato il modello CustomerComplexAddr incluso viene fornito in [procedura: definire un modello con i tipi complessi (Entity Framework)](http://msdn.microsoft.com/library/b13b24d5-05d1-4746-b0d2-5472796240c6) argomento. Per un esempio del file di configurazione dell'applicazione, vedere [implementazione complesso Type (EDM)](http://msdn.microsoft.com/library/82f7fc69-808c-40ff-a23f-ee3fb8dbd9e2) argomento.  
  
```csharp  
using System;  
using System.Data;  
using System.Collections.ObjectModel;  
using System.Data.EntityClient;  
using System.Data.Metadata.Edm;  
  
class GetComplexTypeMembersExample  
{  
  static void Main()  
  {  
    try  
    {  
      // Establish a connection to the underlying data provider by   
      // using the connection string specified in the config file.  
      using (EntityConnection connection =  
        new EntityConnection("Name=CustomerWComplexAddrEntities"))  
      {  
         // Open the connection.  
         connection.Open();  
  
         // Access the metadata workspace.  
         MetadataWorkspace workspace =   
            connection.GetMetadataWorkspace();  
  
         // Get properties of complex types.  
         GetProperties(workspace, DataSpace.CSpace);  
      }  
    }  
    catch (MetadataException exceptionMetadata)  
    {  
       Console.WriteLine("MetadataException: {0}",  
              exceptionMetadata.Message);  
    }  
    catch (System.Data.MappingException exceptionMapping)  
    {  
       Console.WriteLine("MappingException: {0}",  
               exceptionMapping.Message);  
    }  
  }  
  
  public static void GetProperties(MetadataWorkspace workspace,   
      DataSpace model)  
  {  
    // Get a collection of complex types.  
    ReadOnlyCollection<ComplexType> complexTypes =  
       workspace.GetItems<ComplexType>(model);  
  
    // Iterate through the collection to get each complex type.  
    foreach (ComplexType complexType in complexTypes)  
    {  
       Console.WriteLine(  
         "\n\n***ComplexType Name: {0}, Namespace: {1}",  
         complexType.Name,  
         complexType.NamespaceName);  
  
       Console.WriteLine(  
          "\nGet the properties of this " +  
          "ComplexType object ==>");  
          // Iterate through the collection to get each property of the   
          // current ComplexType object.  
          foreach (EdmProperty property in complexType.Properties)  
          {  
            Console.Write("   Property Name: {0} ", property.Name);  
  
            Console.WriteLine(  
               "   Property declaring Type: {0}, edmtype: {1}," +  
               " default: {2}, nullable: {3} ",  
               property.DeclaringType, property.TypeUsage.EdmType,  
               property.Default, property.Nullable);  
          }  
      }  
  }  
}  
```  
  
```vb  
Imports System  
Imports System.Collections.ObjectModel  
Imports System.Data  
Imports System.Data.EntityClient  
Imports System.Data.Metadata.Edm  
  
Class GetComplexTypeMembersExample  
  Public Shared Sub Main()  
    Try  
      ' Establish a connection to the underlying data provider by   
      ' using the connection string specified in the config file.  
      Using connection As EntityConnection = _  
         New EntityConnection("Name=CustomerWComplexAddrEntities")  
  
         ' Open the conection.  
         connection.Open()  
  
         ' Access the metadata workspace.  
         Dim workspace As MetadataWorkspace = _  
            connection.GetMetadataWorkspace  
  
         ' Get properties of complex types.  
         GetProperties(workspace, DataSpace.CSpace)  
      End Using  
    Catch exceptionMetadata As MetadataException  
       Console.WriteLine("MetadataException: {0}", _  
           exceptionMetadata.Message)  
    Catch exceptionMapping As MappingException  
       Console.WriteLine("MappingException: {0}", _  
           exceptionMapping.Message)  
     End Try  
  End Sub  
  
  Public Shared Sub GetProperties( _  
    ByVal workspace As MetadataWorkspace, ByVal model As DataSpace)  
  
    ' Get a collection of complex types.  
    Dim complexTypes As ReadOnlyCollection(Of ComplexType) = _  
       workspace.GetItems(Of ComplexType)(model)  
  
    ' Iterate through the collection to get each complex type.  
    Dim complexType As ComplexType  
    For Each complexType In complexTypes  
       Console.WriteLine( _  
          ControlChars.Lf & ControlChars.Lf & _  
          "***ComplexType Name: {0}, Namespace: {1}", _  
          complexType.Name, complexType.NamespaceName)  
  
       Console.WriteLine(ControlChars.Lf & _  
          "Get the properties of this ComplexType object ==>")  
  
          ' Iterate through the collection to get each property of the   
          ' current ComplexType object.  
          Dim property1 As EdmProperty  
          For Each property1 In complexType.Properties  
            Console.Write("   Property Name: {0} ", property1.Name)  
            Console.WriteLine( _  
              "   Property declaring Type: {0}, edmtype: {1}, " + _  
              "default: {2}, nullable: {3} ", _  
              New Object() {property1.DeclaringType, _  
              property1.TypeUsage.EdmType, _  
              property1.Default, property1.Nullable})  
          Next  
        Next  
    End Sub  
End Class  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BuiltInTypeKind">
      <MemberSignature Language="C#" Value="public override System.Data.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.ComplexType.BuiltInTypeKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BuiltInTypeKind As BuiltInTypeKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Metadata::Edm::BuiltInTypeKind BuiltInTypeKind { System::Data::Metadata::Edm::BuiltInTypeKind get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.BuiltInTypeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Metadata.Edm.ComplexType" />.</summary>
        <value>Oggetto <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo del tipo incorporato per <see cref="T:System.Data.Metadata.Edm.ComplexType" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.EdmProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Metadata.Edm.EdmProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.ComplexType.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ReadOnlyMetadataCollection(Of EdmProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::EdmProperty ^&gt; ^ Properties { System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::EdmProperty ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.EdmProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'elenco di proprietà per <see cref="T:System.Data.Metadata.Edm.ComplexType" />.</summary>
        <value>Raccolta di tipo <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene l'elenco di proprietà per <see cref="T:System.Data.Metadata.Edm.ComplexType" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>