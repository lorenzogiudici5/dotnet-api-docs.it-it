<Type Name="ReadOnlyMetadataCollection&lt;T&gt;" FullName="System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="441f671890758e562b3253ded4e6d5fd79be7343" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39794749" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ReadOnlyMetadataCollection&lt;T&gt; : System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; where T : MetadataItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReadOnlyMetadataCollection`1&lt;(class System.Data.Metadata.Edm.MetadataItem) T&gt; extends System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ReadOnlyMetadataCollection(Of T)&#xA;Inherits ReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : MetadataItempublic ref class ReadOnlyMetadataCollection : System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ReadOnlyMetadataCollection&lt;'T (requires 'T :&gt; MetadataItem)&gt; = class&#xA;    inherit ReadOnlyCollection&lt;'T (requires 'T :&gt; MetadataItem)&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>System.Data.Metadata.Edm.MetadataItem</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="a1fd0-101">Tipo di elementi contenuti nella raccolta.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a1fd0-101">The type of elements in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="a1fd0-102">Rappresenta una raccolta di membri nella gerarchia dei metadati ADO.NET specificando una raccolta di sola lettura con funzionalità di ricerca avanzate.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a1fd0-102">Represents a collection of members in the ADO.NET metadata hierarchy by providing a read-only collection with advanced lookup capabilities.</span>
      </span>
      <span data-ttu-id="a1fd0-103">Questa classe è derivata dalla classe <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a1fd0-103">This class is derived from the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> class.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (string identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (identity As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::String ^ identity);" />
      <MemberSignature Language="F#" Value="override this.Contains : string -&gt; bool" Usage="readOnlyMetadataCollection.Contains identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="a1fd0-104">Identità dell'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-104">The identity of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fd0-105">Determina se la raccolta contiene un elemento con l'identità specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-105">Determines whether the collection contains an item with the specified identity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1fd0-106">
            <see langword="true" /> se l'insieme contiene l'elemento di cui eseguire la ricerca; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-106">
              <see langword="true" /> if the collection contains the item to be searched for; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a1fd0-107">Il valore predefinito è false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-107">The default is false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ReadOnlyMetadataCollection(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.MetadataItem)&gt;.Enumerator" Usage="readOnlyMetadataCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a1fd0-108">Restituisce un enumeratore che può scorrere la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-108">Returns an enumerator that can iterate through this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1fd0-109">Oggetto <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator" /> che può essere utilizzato per scorrere <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-109">A <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator" /> that can be used to iterate through this <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual T GetValue (string identity, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetValue(string identity, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (identity As String, ignoreCase As Boolean) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T GetValue(System::String ^ identity, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : string * bool -&gt; 'T&#xA;override this.GetValue : string * bool -&gt; 'T" Usage="readOnlyMetadataCollection.GetValue (identity, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="a1fd0-110">Identità dell'elemento di cui eseguire la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-110">The identity of the item to be searched for.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="a1fd0-111">
            <see langword="true" /> per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-111">
              <see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fd0-112">Recupera un elemento dalla raccolta utilizzando l'identità specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-112">Retrieves an item from this collection by using the specified identity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1fd0-113">Elemento dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-113">An item from this collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T value);" />
      <MemberSignature Language="F#" Value="override this.IndexOf : 'T -&gt; int" Usage="readOnlyMetadataCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1fd0-114">Valore da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-114">A value to seek.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fd0-115">Restituisce l'indice del valore specificato nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-115">Returns the index of the specified value in this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1fd0-116">Indice del valore specificato nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-116">The index of the specified value in this collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.MetadataItem)&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a1fd0-117">Ottiene un valore che indica se la raccolta è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-117">Gets a value indicating whether this collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a1fd0-118">
            <see langword="true" /> se questo insieme è di sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-118">
              <see langword="true" /> if this collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual T this[string identity] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(identity As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property T default[System::String ^] { T get(System::String ^ identity); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : 'T" Usage="System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.MetadataItem)&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="a1fd0-119">Identità dell'elemento di cui eseguire la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-119">The identity of the item to be searched for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fd0-120">Ottiene un elemento dalla raccolta utilizzando l'identità specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-120">Gets an item from this collection by using the specified identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a1fd0-121">Elemento dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-121">An item from this collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public virtual bool TryGetValue (string identity, bool ignoreCase, out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(string identity, bool ignoreCase, [out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGetValue (identity As String, ignoreCase As Boolean, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::String ^ identity, bool ignoreCase, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : string * bool *  -&gt; bool&#xA;override this.TryGetValue : string * bool *  -&gt; bool" Usage="readOnlyMetadataCollection.TryGetValue (identity, ignoreCase, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="a1fd0-122">Identità dell'elemento di cui eseguire la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-122">The identity of the item to be searched for.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="a1fd0-123">
            <see langword="true" /> per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-123">
              <see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="a1fd0-124">Quando il metodo termina, questo parametro di output contiene un elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-124">When this method returns, this output parameter contains an item from the collection.</span>
          </span>
          <span data-ttu-id="a1fd0-125">Se non è presente alcun elemento corrispondente, questo parametro di output contiene null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-125">If there is no matched item, this output parameter contains null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1fd0-126">Recupera un elemento dalla raccolta utilizzando l'identità specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-126">Retrieves an item from this collection by using the specified identity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1fd0-127">
            <see langword="true" /> se è presente un elemento che corrisponde ai criteri di ricerca; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1fd0-127">
              <see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>