<Type Name="EventRegistrationTokenTable&lt;T&gt;" FullName="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5cb06fe01693f3bffa96595f065ba288c1152f42" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30479135" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventRegistrationTokenTable&lt;T&gt; where T : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventRegistrationTokenTable`1&lt;class T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventRegistrationTokenTable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : classpublic ref class EventRegistrationTokenTable sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="ad588-101">Tipo delegato per i gestori eventi di un determinato evento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ad588-101">The type of the event handler delegate for a particular event.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="ad588-102">Archivia i mapping tra i delegati e i token di evento, per supportare l'implementazione di un evento Windows Runtime nel codice gestito.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ad588-102">Stores mappings between delegates and event tokens, to support the implementation of a Windows Runtime event in managed code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad588-103">Utilizzare questo tipo quando è necessario gestire manualmente l'aggiunta e rimozione di eventi.</span><span class="sxs-lookup"><span data-stu-id="ad588-103">Use this type when you need to manage the addition and removal of events manually.</span></span>  
  
 <span data-ttu-id="ad588-104">Un'istanza di questa tabella archivia i delegati che rappresentano i gestori di eventi che sono stati aggiunti a un evento.</span><span class="sxs-lookup"><span data-stu-id="ad588-104">An instance of this table stores the delegates that represent the event handlers that have been added to an event.</span></span> <span data-ttu-id="ad588-105">Per generare l'evento, richiamare il delegato restituito dal <xref:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable%601.InvocationList%2A> proprietà, se non è `null`.</span><span class="sxs-lookup"><span data-stu-id="ad588-105">To raise the event, invoke the delegate that is returned by the <xref:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable%601.InvocationList%2A> property, if it is not `null`.</span></span> <span data-ttu-id="ad588-106">Un'istanza di questa tabella è obbligatoria per ogni evento.</span><span class="sxs-lookup"><span data-stu-id="ad588-106">An instance of this table is required for each event.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventRegistrationTokenTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventRegistrationTokenTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ad588-107">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-107">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ad588-108">
            <paramref name="T" /> non è un tipo delegato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-108">
              <paramref name="T" /> is not a delegate type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken AddEventHandler (T handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken AddEventHandler(!T handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.AddEventHandler(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddEventHandler (handler As T) As EventRegistrationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::InteropServices::WindowsRuntime::EventRegistrationToken AddEventHandler(T handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="T" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="ad588-109">Gestore dell'evento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-109">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad588-110">Aggiunge il gestore eventi specificato alla tabella e all'elenco delle chiamate e restituisce un token che può essere utilizzato per rimuovere il gestore eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-110">Adds the specified event handler to the table and to the invocation list, and returns a token that can be used to remove the event handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad588-111">Token che può essere utilizzato per rimuovere il gestore eventi della tabella e dall'elenco di chiamate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-111">A token that can be used to remove the event handler from the table and the invocation list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateEventRegistrationTokenTable">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;T&gt; GetOrCreateEventRegistrationTokenTable (ref System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;T&gt; refEventTable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1&lt;!T&gt; GetOrCreateEventRegistrationTokenTable(class System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1&lt;!T&gt;&amp; refEventTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.GetOrCreateEventRegistrationTokenTable(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOrCreateEventRegistrationTokenTable (ByRef refEventTable As EventRegistrationTokenTable(Of T)) As EventRegistrationTokenTable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::WindowsRuntime::EventRegistrationTokenTable&lt;T&gt; ^ GetOrCreateEventRegistrationTokenTable(System::Runtime::InteropServices::WindowsRuntime::EventRegistrationTokenTable&lt;T&gt; ^ % refEventTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refEventTable" Type="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;T&gt;&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="refEventTable">
          <span data-ttu-id="ad588-112">Tabella dei token di registrazione eventi, passata per riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-112">An event registration token table, passed by reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad588-113">Restituisce la tabella dei token di registrazione dell'evento specificata, se non è <see langword="null" />. In caso contrario, restituisce una nuova tabella dei token di registrazione dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-113">Returns the specified event registration token table, if it is not <see langword="null" />; otherwise, returns a new event registration token table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad588-114">La tabella dei token di registrazione dell'evento specificata da <paramref name="refEventTable" />, se non è <see langword="null" />; in caso contrario, una nuova tabella dei token di registrazione dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-114">The event registration token table that is specified by <paramref name="refEventTable" />, if it is not <see langword="null" />; otherwise, a new event registration token table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad588-115">Utilizzare il <xref:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable%601.GetOrCreateEventRegistrationTokenTable%2A> metodo per inizializzare una tabella di token di registrazione eventi negli scenari in cui uno dei diversi thread può creare la tabella.</span><span class="sxs-lookup"><span data-stu-id="ad588-115">Use the <xref:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable%601.GetOrCreateEventRegistrationTokenTable%2A> method to initialize an event registration token table in scenarios where any of several threads can create the table.</span></span> <span data-ttu-id="ad588-116">Se questo metodo viene chiamato su più thread contemporaneamente, viene restituita nella stessa tabella token registrazione di eventi in tutti i thread.</span><span class="sxs-lookup"><span data-stu-id="ad588-116">If this method is called on multiple threads at the same time, the same event registration token table is returned on all threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvocationList">
      <MemberSignature Language="C#" Value="public T InvocationList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T InvocationList" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.InvocationList" />
      <MemberSignature Language="VB.NET" Value="Public Property InvocationList As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T InvocationList { T get(); void set(T value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ad588-117">Ottiene o imposta un delegato di tipo <paramref name="T" /> il cui elenco chiamate include tutti i delegati del gestore eventi che sono stati aggiunti e che non sono ancora stati rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-117">Gets or sets a delegate of type <paramref name="T" /> whose invocation list includes all the event handler delegates that have been added, and that have not yet been removed.</span>
          </span>
          <span data-ttu-id="ad588-118">Richiamando il delegato vengono richiamati tutti i gestori eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-118">Invoking this delegate invokes all the event handlers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ad588-119">Delegato del tipo <paramref name="T" /> che rappresenta tutti i delegati del gestore eventi attualmente registrati per un evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-119">A delegate of type <paramref name="T" /> that represents all the event handler delegates that are currently registered for an event.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveEventHandler">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ad588-120">Rimuove un gestore eventi dalla tabella e dall'elenco di chiamate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-120">Removes an event handler from the table and the invocation list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public void RemoveEventHandler (System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEventHandler(valuetype System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.RemoveEventHandler(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventHandler (token As EventRegistrationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEventHandler(System::Runtime::InteropServices::WindowsRuntime::EventRegistrationToken token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="ad588-121">Token che è stato restituito quando il gestore eventi è stato aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-121">The token that was returned when the event handler was added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad588-122">Rimuove il gestore eventi associato al token specificato dalla tabella e dall'elenco di chiamate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-122">Removes the event handler that is associated with the specified token from the table and the invocation list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad588-123">Se il token non è registrato, la tabella e l'elenco chiamate non vengono modificati.</span><span class="sxs-lookup"><span data-stu-id="ad588-123">If the token is not registered, the table and the invocation list are not modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public void RemoveEventHandler (T handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEventHandler(!T handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.RemoveEventHandler(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventHandler (handler As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEventHandler(T handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="T" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="ad588-124">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-124">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad588-125">Rimuove il delegato del gestore eventi specificato dalla tabella e dall'elenco di chiamate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad588-125">Removes the specified event handler delegate from the table and the invocation list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad588-126">Se il gestore non è registrato, la tabella e l'elenco chiamate non vengono modificati.</span><span class="sxs-lookup"><span data-stu-id="ad588-126">If the handler is not registered, the table and the invocation list are not modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>