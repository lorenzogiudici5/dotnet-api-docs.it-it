<Type Name="IStackWalk" FullName="System.Security.IStackWalk">
  <TypeSignature Language="C#" Value="public interface IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.IStackWalk" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStackWalk" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="883e0-101">Gestisce il percorso dello stack che determina se tutti i chiamanti nello stack di chiamate hanno le autorizzazioni necessarie per accedere a una risorsa protetta.</span><span class="sxs-lookup"><span data-stu-id="883e0-101">Manages the stack walk that determines whether all callers in the call stack have the required permissions to access a protected resource.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="883e0-102">Codice parzialmente attendibile rappresenta sempre un rischio di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="883e0-102">Partially trusted code always presents a security risk.</span></span> <span data-ttu-id="883e0-103">In alcuni casi, possono essere modificato per eseguire azioni per conto di codice dannoso che non dispone dell'autorizzazione per accedere a una risorsa.</span><span class="sxs-lookup"><span data-stu-id="883e0-103">It can sometimes be manipulated to perform actions on behalf of malicious code that does not have permission to access a resource.</span></span> <span data-ttu-id="883e0-104">In questo modo, il codice dannoso può ottenere un accesso di sicurezza superiore a quello che dovrebbe essere consentito.</span><span class="sxs-lookup"><span data-stu-id="883e0-104">In this way, malicious code can achieve higher security access than it should be allowed.</span></span>  
  
 <span data-ttu-id="883e0-105">Common language runtime consente di proteggere il codice gestito da tali attacchi mediante l'esecuzione di un'analisi dello stack su tutte le chiamate.</span><span class="sxs-lookup"><span data-stu-id="883e0-105">The common language runtime helps protect managed code from these attacks by running a stack walk on all calls.</span></span> <span data-ttu-id="883e0-106">Il percorso dello stack è necessario che tutto il codice dello stack di chiamate dispone dell'autorizzazione per accedere a una risorsa protetta.</span><span class="sxs-lookup"><span data-stu-id="883e0-106">The stack walk requires that all code in the call stack has permission to access a protected resource.</span></span> <span data-ttu-id="883e0-107">Poiché il codice che tenta l'attacco sarà sempre un punto nello stack di chiamate, in grado di superare le proprie autorizzazioni di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="883e0-107">Because the code attempting the attack will always be somewhere in the call stack, it will be unable to exceed its own security permissions.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Assert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="883e0-108">Dichiara che il codice chiamante può accedere alla ricorsa identificata dall'oggetto autorizzazioni corrente, anche se ai chiamanti più in alto nello stack non è stata concessa l'autorizzazione ad accedere alla risorsa.</span><span class="sxs-lookup"><span data-stu-id="883e0-108">Asserts that the calling code can access the resource identified by the current permission object, even if callers higher in the stack have not been granted permission to access the resource.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="883e0-109">La chiamata <xref:System.Security.IStackWalk.Assert%2A> interrompe il controllo delle autorizzazioni su chiamanti nello stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="883e0-109">Calling <xref:System.Security.IStackWalk.Assert%2A> stops the permission check on callers higher in the call stack.</span></span> <span data-ttu-id="883e0-110">Pertanto, anche se ai chiamanti non dispone delle autorizzazioni necessarie, sarà comunque possibile accedere alle risorse.</span><span class="sxs-lookup"><span data-stu-id="883e0-110">Therefore, even if these callers do not have the requisite permissions, they can still access resources.</span></span> <span data-ttu-id="883e0-111">Un'asserzione è efficace solo se il codice che chiama <xref:System.Security.IStackWalk.Assert%2A> passa il controllo della sicurezza per l'autorizzazione che genera un'asserzione.</span><span class="sxs-lookup"><span data-stu-id="883e0-111">An assertion is effective only if the code that calls <xref:System.Security.IStackWalk.Assert%2A> passes the security check for the permission that it is asserting.</span></span>  
  
 <span data-ttu-id="883e0-112">Una chiamata a <xref:System.Security.IStackWalk.Assert%2A> è efficace fino a quando il codice chiamante restituisce al chiamante o fino a quando una chiamata successiva a <xref:System.Security.IStackWalk.Assert%2A> inefficace l'asserzione precedente.</span><span class="sxs-lookup"><span data-stu-id="883e0-112">A call to <xref:System.Security.IStackWalk.Assert%2A> is effective until the calling code returns to its caller or until a subsequent call to <xref:System.Security.IStackWalk.Assert%2A> renders the previous assertion ineffective.</span></span> <span data-ttu-id="883e0-113">Inoltre, <xref:System.Security.CodeAccessPermission.RevertAssert%2A> o <xref:System.Security.CodeAccessPermission.RevertAll%2A> rimuove un in sospeso <xref:System.Security.IStackWalk.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="883e0-113">Also, <xref:System.Security.CodeAccessPermission.RevertAssert%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> removes a pending <xref:System.Security.IStackWalk.Assert%2A>.</span></span>  
  
 <span data-ttu-id="883e0-114"><xref:System.Security.IStackWalk.Assert%2A> viene ignorato per un'autorizzazione non concessa perché una richiesta di tale autorizzazione non riuscirà.</span><span class="sxs-lookup"><span data-stu-id="883e0-114"><xref:System.Security.IStackWalk.Assert%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="883e0-115">Tuttavia, se il codice inferiore nello stack di chiamate chiama <xref:System.Security.IStackWalk.Demand%2A> per l'autorizzazione, un <xref:System.Security.SecurityException> viene generata quando il percorso stack raggiunge il codice che ha tentato di chiamare <xref:System.Security.IStackWalk.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="883e0-115">However, if code lower on the call stack calls <xref:System.Security.IStackWalk.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.IStackWalk.Assert%2A>.</span></span> <span data-ttu-id="883e0-116">Ciò accade perché il codice che ha chiamato <xref:System.Security.IStackWalk.Assert%2A> non dispone dell'autorizzazione, anche se si è tentato di <xref:System.Security.IStackWalk.Assert%2A> è.</span><span class="sxs-lookup"><span data-stu-id="883e0-116">This happens because the code that called <xref:System.Security.IStackWalk.Assert%2A> has not been granted the permission, even though it tried to <xref:System.Security.IStackWalk.Assert%2A> it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="883e0-117">Poiché la chiamata <xref:System.Security.IStackWalk.Assert%2A> rimuove il requisito che tutto il codice nella catena di chiamate deve essere concessa l'autorizzazione per accedere alla risorsa specificata, può provocare problemi di sicurezza se usata in modo non corretto o inappropriato.</span><span class="sxs-lookup"><span data-stu-id="883e0-117">Because calling <xref:System.Security.IStackWalk.Assert%2A> removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</span></span> <span data-ttu-id="883e0-118">Pertanto, devono essere utilizzata con estrema cautela.</span><span class="sxs-lookup"><span data-stu-id="883e0-118">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="883e0-119">Il codice chiamante non ha <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span><span class="sxs-lookup"><span data-stu-id="883e0-119">The calling code does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="883e0-120">Determina in fase di esecuzione se tutti i chiamanti nello stack di chiamate hanno l'autorizzazione specificata dall'oggetto autorizzazioni corrente.</span><span class="sxs-lookup"><span data-stu-id="883e0-120">Determines at run time whether all callers in the call stack have been granted the permission specified by the current permission object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="883e0-121">Questo metodo viene in genere utilizzato da librerie protette per garantire che i chiamanti dispongano dell'autorizzazione per accedere a una risorsa.</span><span class="sxs-lookup"><span data-stu-id="883e0-121">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="883e0-122">Ad esempio, una classe di file in una libreria di classi protette chiama <xref:System.Security.IStackWalk.Demand%2A> per gli oggetti necessari <xref:System.Security.Permissions.FileIOPermission> prima di eseguire un'operazione di file richiesta dal chiamante.</span><span class="sxs-lookup"><span data-stu-id="883e0-122">For example, a file class in a secure class library calls <xref:System.Security.IStackWalk.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="883e0-123">Le autorizzazioni del codice che chiama questo metodo non vengono esaminate; il controllo inizia da parte del chiamante immediato del codice e continua fino allo stack.</span><span class="sxs-lookup"><span data-stu-id="883e0-123">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="883e0-124"><xref:System.Security.IStackWalk.Demand%2A> ha esito positivo solo se nessun <xref:System.Security.SecurityException> viene generato.</span><span class="sxs-lookup"><span data-stu-id="883e0-124"><xref:System.Security.IStackWalk.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="883e0-125">Un chiamante in una posizione superiore nello stack di chiamate non ha l'autorizzazione specificata dall'oggetto autorizzazioni corrente.</span><span class="sxs-lookup"><span data-stu-id="883e0-125">A caller higher in the call stack does not have the permission specified by the current permission object.</span></span>  
  
 <span data-ttu-id="883e0-126">oppure</span><span class="sxs-lookup"><span data-stu-id="883e0-126">-or-</span></span>  
  
 <span data-ttu-id="883e0-127">Un chiamante nello stack di chiamate ha chiamato il metodo <see cref="M:System.Security.IStackWalk.Deny" /> nell'oggetto autorizzazioni corrente.</span><span class="sxs-lookup"><span data-stu-id="883e0-127">A caller in the call stack has called <see cref="M:System.Security.IStackWalk.Deny" /> on the current permission object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deny();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="883e0-128">Causa l'esito negativo di ogni oggetto <see cref="M:System.Security.IStackWalk.Demand" /> per l'oggetto corrente che passa attraverso il codice chiamante.</span><span class="sxs-lookup"><span data-stu-id="883e0-128">Causes every <see cref="M:System.Security.IStackWalk.Demand" /> for the current object that passes through the calling code to fail.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="883e0-129">Questo metodo impedisce ai chiamanti più in alto nello stack di chiamate di accedere alla risorsa protetta tramite il codice che chiama questo metodo, anche se i chiamanti dispongono dell'autorizzazione per accedervi.</span><span class="sxs-lookup"><span data-stu-id="883e0-129">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="883e0-130">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="883e0-130">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="883e0-131"><xref:System.Security.IStackWalk.Deny%2A> può limitare la responsabilità del programmatore o impedire vulnerabilità della sicurezza accidentale, in quanto impedisce che il metodo che chiama <xref:System.Security.IStackWalk.Deny%2A> venga utilizzato per accedere alla risorsa protetta dall'autorizzazione negata.</span><span class="sxs-lookup"><span data-stu-id="883e0-131"><xref:System.Security.IStackWalk.Deny%2A> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <xref:System.Security.IStackWalk.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="883e0-132">Se chiama un metodo <xref:System.Security.IStackWalk.Deny%2A> su un'autorizzazione e se un <xref:System.Security.IStackWalk.Demand%2A> per tale autorizzazione viene richiamato da un chiamante inferiore nello stack di chiamate, la verifica della sicurezza avrà esito negativo quando raggiunge il <xref:System.Security.IStackWalk.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="883e0-132">If a method calls <xref:System.Security.IStackWalk.Deny%2A> on a permission, and if a <xref:System.Security.IStackWalk.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check will fail when it reaches the <xref:System.Security.IStackWalk.Deny%2A>.</span></span>  
  
 <span data-ttu-id="883e0-133"><xref:System.Security.IStackWalk.Deny%2A> viene ignorato per un'autorizzazione non concessa perché una richiesta di tale autorizzazione non riuscirà.</span><span class="sxs-lookup"><span data-stu-id="883e0-133"><xref:System.Security.IStackWalk.Deny%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="883e0-134">È possibile eseguire l'override di questo metodo.</span><span class="sxs-lookup"><span data-stu-id="883e0-134">You cannot override this method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PermitOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="883e0-135">Determina l'annullamento di tutti i metodi <see cref="M:System.Security.IStackWalk.Demand" /> che attraversano il codice chiamante per tutti gli oggetti ad eccezione dell'oggetto corrente, anche se il codice nella parte superiore dello stack di chiamate dispone dell'autorizzazione necessaria per accedere ad altre risorse.</span><span class="sxs-lookup"><span data-stu-id="883e0-135">Causes every <see cref="M:System.Security.IStackWalk.Demand" /> for all objects except the current one that passes through the calling code to fail, even if code higher in the call stack has been granted permission to access other resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="883e0-136"><xref:System.Security.IStackWalk.PermitOnly%2A> è simile a <xref:System.Security.IStackWalk.Deny%2A>, perché entrambi provocano l'analisi dello stack se avranno esito positivo.</span><span class="sxs-lookup"><span data-stu-id="883e0-136"><xref:System.Security.IStackWalk.PermitOnly%2A> is similar to <xref:System.Security.IStackWalk.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="883e0-137">La differenza è che <xref:System.Security.IStackWalk.Deny%2A> specifica le autorizzazioni che provocano il percorso, di stack ma <xref:System.Security.IStackWalk.PermitOnly%2A> specifica solo le autorizzazioni che non provocano il percorso di stack.</span><span class="sxs-lookup"><span data-stu-id="883e0-137">The difference is that <xref:System.Security.IStackWalk.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.IStackWalk.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span> <span data-ttu-id="883e0-138">Chiamare questo metodo per verificare che il codice può essere utilizzato per accedere solo le risorse specificate.</span><span class="sxs-lookup"><span data-stu-id="883e0-138">Call this method to ensure that your code can be used to access only the specified resources.</span></span>  
  
 <span data-ttu-id="883e0-139"><xref:System.Security.IStackWalk.PermitOnly%2A> viene ignorato per un'autorizzazione non concessa perché una richiesta di tale autorizzazione non riuscirà.</span><span class="sxs-lookup"><span data-stu-id="883e0-139"><xref:System.Security.IStackWalk.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="883e0-140">Tuttavia, se il codice inferiore nello stack di in un secondo momento chiama <xref:System.Security.IStackWalk.Demand%2A> per l'autorizzazione, un <xref:System.Security.SecurityException> viene generata quando il percorso stack raggiunge il codice che ha tentato di chiamare <xref:System.Security.IStackWalk.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="883e0-140">However, if code lower on the call stack later calls <xref:System.Security.IStackWalk.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.IStackWalk.PermitOnly%2A>.</span></span> <span data-ttu-id="883e0-141">In questo modo il codice che ha chiamato <xref:System.Security.IStackWalk.PermitOnly%2A> non dispone dell'autorizzazione, anche se chiamato <xref:System.Security.IStackWalk.PermitOnly%2A> per tale autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="883e0-141">This is because the code that called <xref:System.Security.IStackWalk.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.IStackWalk.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="883e0-142">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="883e0-142">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>