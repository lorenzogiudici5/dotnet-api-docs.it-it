<Type Name="CodeAccessPermission" FullName="System.Security.CodeAccessPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b497a3cd20cb1d0ae8172ce6caf259ae001ddee0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CodeAccessPermission : System.Security.IPermission, System.Security.IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit CodeAccessPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.CodeAccessPermission" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeAccessPermission&#xA;Implements IPermission, IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeAccessPermission abstract : System::Security::IPermission, System::Security::IStackWalk" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IStackWalk</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d7fd9-101">Definisce la struttura sottostante di tutte le autorizzazioni di accesso al codice.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d7fd9-101">Defines the underlying structure of all code access permissions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-102">Le autorizzazioni di accesso di codice utilizzano un percorso stack per assicurarsi che tutti i chiamanti del codice sono stata concessa un'autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-102">Code access permissions use a stack walk to ensure that all callers of the code have been granted a permission.</span></span> <span data-ttu-id="d7fd9-103">Se un oggetto di autorizzazione è `null`, viene gestita come un oggetto di autorizzazione con lo stato <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-103">If a permission object is `null`, it is handled the same as a permission object with the state <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d7fd9-104">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-104">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="d7fd9-105">Gli eredi di <xref:System.Security.CodeAccessPermission> classe deve essere concessa l'attendibilità totale per il corretto funzionamento delle autorizzazioni estendendo l'infrastruttura di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-105">Inheritors of the <xref:System.Security.CodeAccessPermission> class must be granted full trust to function correctly as permissions extending the security infrastructure.</span></span> <span data-ttu-id="d7fd9-106">Per determinare che gli eredi siano completamente attendibili, <xref:System.Security.CodeAccessPermission> problemi un <xref:System.Security.Permissions.SecurityAction.InheritanceDemand> per <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence>  =  `true` e <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy>  =  `true`.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-106">To determine that the inheritors are fully trusted, <xref:System.Security.CodeAccessPermission> issues an <xref:System.Security.Permissions.SecurityAction.InheritanceDemand> for <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence> = `true` and <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy> = `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7fd9-107">L'esempio di codice seguente mostra un'autorizzazione che deriva dalla <xref:System.Security.CodeAccessPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-107">The following code example shows a permission derived from the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#1)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#1)]
 [!code-vb[System.Security.Permissions.NameIdPermission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="d7fd9-108">per consentire agli eredi di fornire l'evidenza e visualizzare e modificare i criteri.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d7fd9-108">for the ability of inheritors to provide evidence and view and modify policy.</span>
      </span>
      <span data-ttu-id="d7fd9-109">Enumerazioni associate: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />, <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d7fd9-109">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />, <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="d7fd9-110">Quando si eredita da <see cref="T:System.Security.CodeAccessPermission" />, è necessario implementare anche il <see cref="T:System.Security.Permissions.IUnrestrictedPermission" /> interfaccia.</span>
        <span class="sxs-lookup">
          <span data-stu-id="d7fd9-110">When you inherit from <see cref="T:System.Security.CodeAccessPermission" />, you must also implement the <see cref="T:System.Security.Permissions.IUnrestrictedPermission" /> interface.</span>
        </span>
        <span data-ttu-id="d7fd9-111">Nell'esempio <see cref="T:System.Security.CodeAccessPermission" /> necessario eseguire l'override di membri: <see cref="M:System.Security.CodeAccessPermission.Copy" />, <see cref="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.ToXml" />, <see cref="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />, e <see cref="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="d7fd9-111">The following <see cref="T:System.Security.CodeAccessPermission" /> members must be overridden: <see cref="M:System.Security.CodeAccessPermission.Copy" />, <see cref="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.ToXml" />, <see cref="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />, and <see cref="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />.</span>
        </span>
        <span data-ttu-id="d7fd9-112">È inoltre necessario definire un costruttore che accetta un <see cref="T:System.Security.Permissions.PermissionState" /> solo come parametro.</span>
        <span class="sxs-lookup">
          <span data-stu-id="d7fd9-112">You must also define a constructor that takes a <see cref="T:System.Security.Permissions.PermissionState" /> as its only parameter.</span>
        </span>
        <span data-ttu-id="d7fd9-113">È necessario applicare il <see cref="T:System.SerializableAttribute" /> attributo a una classe che eredita da <see cref="T:System.Security.CodeAccessPermission" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="d7fd9-113">You must apply the <see cref="T:System.SerializableAttribute" /> attribute to a class that inherits from <see cref="T:System.Security.CodeAccessPermission" />.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeAccessPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeAccessPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7fd9-114">Inizializza una nuova istanza della classe <see cref="T:System.Security.CodeAccessPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-114">Initializes a new instance of the <see cref="T:System.Security.CodeAccessPermission" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-115">Questo costruttore viene chiamato per inizializzare lo stato del tipo ogni volta che viene creata un'istanza della classe derivata.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-115">This constructor is called to initialize state in the type whenever an instance of the derived class is created.</span></span> <span data-ttu-id="d7fd9-116">Sebbene in modo esplicito, è possibile chiamare questo costruttore nella dichiarazione del costruttore della classe derivata, questo non è in genere necessario; la maggior parte dei compilatori genererà automaticamente la chiamata.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-116">Although you can explicitly call this constructor in the constructor declaration of the derived class constructor, this is not usually necessary; most compilers will automatically generate the call for you.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Assert();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7fd9-117">Dichiara che il codice chiamante può accedere alla risorsa protetta da una richiesta di autorizzazione tramite il codice che chiama il metodo, anche se ai chiamanti più in alto nello stack non è stata concessa l'autorizzazione per accedere alla risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-117">Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</span>
          </span>
          <span data-ttu-id="d7fd9-118">Se si utilizza <see cref="M:System.Security.CodeAccessPermission.Assert" /> è possibile creare problemi di sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-118">Using <see cref="M:System.Security.CodeAccessPermission.Assert" /> can create security issues.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-119">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-119">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="d7fd9-120">La chiamata <xref:System.Security.CodeAccessPermission.Assert%2A> impedisce a un percorso stack originari inferiore nello stack di chiamate di procedere, lo stack di chiamate oltre il codice che chiama questo metodo.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-120">Calling <xref:System.Security.CodeAccessPermission.Assert%2A> prevents a stack walk originating lower in the call stack from proceeding up the call stack beyond the code that calls this method.</span></span> <span data-ttu-id="d7fd9-121">Pertanto, anche se i chiamanti nello stack di chiamate non dispone di autorizzazioni necessarie per accedere a una risorsa, è possibile comunque accedere a tale tramite il codice che chiama questo metodo su dell'autorizzazione necessaria.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-121">Therefore, even if callers higher on the call stack do not have the requisite permissions to access a resource, they can still access it through the code that calls this method on the necessary permission.</span></span> <span data-ttu-id="d7fd9-122">Un'asserzione è efficace solo se il codice che chiama <xref:System.Security.CodeAccessPermission.Assert%2A> passa il controllo della sicurezza per l'autorizzazione che genera un'asserzione.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-122">An assertion is effective only if the code that calls <xref:System.Security.CodeAccessPermission.Assert%2A> passes the security check for the permission that it is asserting.</span></span>  
  
 <span data-ttu-id="d7fd9-123">La chiamata a <xref:System.Security.CodeAccessPermission.Assert%2A> è efficace fino a quando il codice chiamante restituisce al chiamante.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-123">The call to <xref:System.Security.CodeAccessPermission.Assert%2A> is effective until the calling code returns to its caller.</span></span> <span data-ttu-id="d7fd9-124">Un solo <xref:System.Security.CodeAccessPermission.Assert%2A> può essere attivo su un frame.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-124">Only one <xref:System.Security.CodeAccessPermission.Assert%2A> can be active on a frame.</span></span> <span data-ttu-id="d7fd9-125">Un tentativo di chiamare <xref:System.Security.CodeAccessPermission.Assert%2A> quando un oggetto attivo <xref:System.Security.CodeAccessPermission.Assert%2A> sui risultati del frame è presente un <xref:System.Security.SecurityException>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-125">An attempt to call <xref:System.Security.CodeAccessPermission.Assert%2A> when an active <xref:System.Security.CodeAccessPermission.Assert%2A> exists on the frame results in a <xref:System.Security.SecurityException>.</span></span> <span data-ttu-id="d7fd9-126">Chiamare <xref:System.Security.CodeAccessPermission.RevertAssert%2A> o <xref:System.Security.CodeAccessPermission.RevertAll%2A> per rimuovere un attivo <xref:System.Security.CodeAccessPermission.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-126">Call <xref:System.Security.CodeAccessPermission.RevertAssert%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> to remove an active <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span>  
  
 <span data-ttu-id="d7fd9-127"><xref:System.Security.CodeAccessPermission.Assert%2A> viene ignorato per un'autorizzazione non concessa perché una richiesta di tale autorizzazione non riuscirà.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-127"><xref:System.Security.CodeAccessPermission.Assert%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="d7fd9-128">Tuttavia, se il codice inferiore nello stack di chiamate chiama <xref:System.Security.CodeAccessPermission.Demand%2A> per l'autorizzazione, un <xref:System.Security.SecurityException> viene generata quando il percorso stack raggiunge il codice che ha tentato di chiamare <xref:System.Security.CodeAccessPermission.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-128">However, if code lower on the call stack calls <xref:System.Security.CodeAccessPermission.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span> <span data-ttu-id="d7fd9-129">Ciò accade perché il codice che ha chiamato <xref:System.Security.CodeAccessPermission.Assert%2A> non dispone dell'autorizzazione, anche se si è tentato di <xref:System.Security.CodeAccessPermission.Assert%2A> è.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-129">This happens because the code that called <xref:System.Security.CodeAccessPermission.Assert%2A> has not been granted the permission, even though it tried to <xref:System.Security.CodeAccessPermission.Assert%2A> it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7fd9-130">Poiché la chiamata <xref:System.Security.CodeAccessPermission.Assert%2A> rimuove il requisito che tutto il codice nella catena di chiamate deve essere concessa l'autorizzazione per accedere alla risorsa specificata, può provocare problemi di sicurezza se usata in modo non corretto o inappropriato.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-130">Because calling <xref:System.Security.CodeAccessPermission.Assert%2A> removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security issues if used incorrectly or inappropriately.</span></span> <span data-ttu-id="d7fd9-131">Pertanto, devono essere utilizzata con estrema cautela.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-131">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d7fd9-132">Il codice chiamante non ha <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-132">The calling code does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span>
          </span>
          <span data-ttu-id="d7fd9-133">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-133">-or-</span>
          </span>
          <span data-ttu-id="d7fd9-134">Esiste già un oggetto <see cref="M:System.Security.CodeAccessPermission.Assert" /> attivo per il fotogramma corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-134">There is already an active <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d7fd9-135">Per poter chiamare <see cref="M:System.Security.CodeAccessPermission.Assert" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-135">for the ability to call <see cref="M:System.Security.CodeAccessPermission.Assert" />.</span>
          </span>
          <span data-ttu-id="d7fd9-136">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-136">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d7fd9-137">È possibile eseguire l'override di questo metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d7fd9-137">You cannot override this method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public abstract System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Copy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7fd9-138">Quando viene implementato da una classe derivata, crea e restituisce una copia identica dell'oggetto autorizzazioni corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-138">When implemented by a derived class, creates and returns an identical copy of the current permission object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7fd9-139">Copia dell'oggetto autorizzazioni corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-139">A copy of the current permission object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-140">Una copia di un oggetto di autorizzazione rappresenta lo stesso accesso alle risorse dell'oggetto di autorizzazione originale.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-140">A copy of a permission object represents the same access to resources as the original permission object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7fd9-141">Esempio di codice seguente viene illustrato un override del <xref:System.Security.CodeAccessPermission.Copy%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-141">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.Copy%2A> method.</span></span> <span data-ttu-id="d7fd9-142">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.CodeAccessPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-142">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#2)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#2)]
 [!code-vb[System.Security.Permissions.NameIdPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d7fd9-143">È necessario eseguire l'override di questo metodo in una classe derivata.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d7fd9-143">You must override this method in a derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7fd9-144">Forza un oggetto <see cref="T:System.Security.SecurityException" /> in fase di esecuzione se tutti i chiamanti in posizioni superiori nello stack di chiamate non hanno l'autorizzazione specificata dall'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-144">Forces a <see cref="T:System.Security.SecurityException" /> at run time if all callers higher in the call stack have not been granted the permission specified by the current instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-145">Questo metodo viene in genere utilizzato da librerie protette per garantire che i chiamanti dispongano dell'autorizzazione per accedere a una risorsa.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-145">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="d7fd9-146">Ad esempio, una classe di file in una libreria di classi protette chiama <xref:System.Security.CodeAccessPermission.Demand%2A> per gli oggetti necessari <xref:System.Security.Permissions.FileIOPermission> prima di eseguire un'operazione di file richiesta dal chiamante.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-146">For example, a file class in a secure class library calls <xref:System.Security.CodeAccessPermission.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="d7fd9-147">Le autorizzazioni del codice che chiama questo metodo non vengono esaminate; il controllo inizia da parte del chiamante immediato del codice e continua fino allo stack.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-147">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="d7fd9-148">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-148">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="d7fd9-149"><xref:System.Security.CodeAccessPermission.Demand%2A> ha esito positivo solo se nessun <xref:System.Security.SecurityException> viene generato.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-149"><xref:System.Security.CodeAccessPermission.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d7fd9-150">Un chiamante in una posizione superiore nello stack di chiamate non ha l'autorizzazione specificata dall'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-150">A caller higher in the call stack does not have the permission specified by the current instance.</span>
          </span>
          <span data-ttu-id="d7fd9-151">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-151">-or-</span>
          </span>
          <span data-ttu-id="d7fd9-152">Un chiamante in una posizione superiore nello stack di chiamate ha chiamato <see cref="M:System.Security.CodeAccessPermission.Deny" /> sull'oggetto autorizzazioni corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-152">A caller higher in the call stack has called <see cref="M:System.Security.CodeAccessPermission.Deny" /> on the current permission object.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d7fd9-153">È possibile eseguire l'override di questo metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d7fd9-153">You cannot override this method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Deny();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7fd9-154">Impedisce ai chiamanti in posizione più elevata nello stack di chiamate di usare il codice che chiama questo metodo per accedere alla risorsa specificata dall'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-154">Prevents callers higher in the call stack from using the code that calls this method to access the resource specified by the current instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d7fd9-155">Il <xref:System.Security.CodeAccessPermission.Deny%2A> metodo deve essere utilizzato solo per proteggere le risorse dall'accesso accidentale da codice completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-155">The <xref:System.Security.CodeAccessPermission.Deny%2A> method should be used only to protect resources from accidental access by fully trusted code.</span></span> <span data-ttu-id="d7fd9-156">Non da utilizzare per proteggere le risorse da un uso improprio intenzionale da codice non attendibile.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-156">It should not be used to protect resources from intentional misuse by untrusted code.</span></span> <span data-ttu-id="d7fd9-157">Ad esempio, se (metodo) `A` problemi un <xref:System.Security.CodeAccessPermission.Deny%2A> per un'autorizzazione e chiami il metodo `B`, metodo `B` chiaramente può eseguire l'override il <xref:System.Security.CodeAccessPermission.Deny%2A> eseguendo un <xref:System.Security.CodeAccessPermission.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-157">For example, if method `A` issues a <xref:System.Security.CodeAccessPermission.Deny%2A> for a permission and then calls method `B`, method `B` can overtly override the <xref:System.Security.CodeAccessPermission.Deny%2A> by issuing an <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span> <span data-ttu-id="d7fd9-158">Il metodo chiamato è sempre superiore dello stack.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-158">The called method is always higher in the stack.</span></span> <span data-ttu-id="d7fd9-159">Pertanto, se (metodo) `B` tenta di accedere a una risorsa protetta, il sistema di sicurezza inizia a verificare le autorizzazioni, in quanto metodo `B` è il chiamante immediato, e quindi percorre lo stack per verificare che sia presente alcun <xref:System.Security.CodeAccessPermission.Deny%2A> o <xref:System.Security.CodeAccessPermission.PermitOnly%2A> inferiore nello stack.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-159">Therefore, if method `B` tries to access a protected resource, the security system begins checking for permissions with it because method `B` is the immediate caller, and then walks down the stack to confirm that there is no <xref:System.Security.CodeAccessPermission.Deny%2A> or <xref:System.Security.CodeAccessPermission.PermitOnly%2A> lower in the stack.</span></span> <span data-ttu-id="d7fd9-160">Metodo `B`, che sta tentando di accedere alla risorsa, può arrestare l'analisi dello stack immediatamente utilizzando il <xref:System.Security.CodeAccessPermission.Assert%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-160">Method `B`, which is trying to access the resource, can stop the stack walk immediately by using the <xref:System.Security.CodeAccessPermission.Assert%2A> method.</span></span> <span data-ttu-id="d7fd9-161">In tal caso, il <xref:System.Security.CodeAccessPermission.Deny%2A> inseriti nello stack dal metodo `A` (il metodo chiamante) non viene mai individuato.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-161">In that case, the <xref:System.Security.CodeAccessPermission.Deny%2A> placed on the stack by method `A` (the calling method) is never discovered.</span></span>  
  
 <span data-ttu-id="d7fd9-162">Questo metodo impedisce ai chiamanti più in alto nello stack di chiamate di accedere alla risorsa protetta tramite il codice che chiama questo metodo, anche se i chiamanti dispongono dell'autorizzazione per accedervi.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-162">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="d7fd9-163">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-163">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="d7fd9-164"><xref:System.Security.CodeAccessPermission.Deny%2A> può limitare la responsabilità del programmatore o impedire problemi di sicurezza accidentale, in quanto impedisce che il metodo che chiama <xref:System.Security.CodeAccessPermission.Deny%2A> venga utilizzato per accedere alla risorsa protetta dall'autorizzazione negata.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-164"><xref:System.Security.CodeAccessPermission.Deny%2A> can limit the liability of the programmer or help prevent accidental security issues because it helps prevent the method that calls <xref:System.Security.CodeAccessPermission.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="d7fd9-165">Se chiama un metodo <xref:System.Security.CodeAccessPermission.Deny%2A> su un'autorizzazione e se un <xref:System.Security.CodeAccessPermission.Demand%2A> per tale autorizzazione viene richiamato da un chiamante inferiore nello stack di chiamate, la verifica della sicurezza avrà esito negativo quando raggiunge il <xref:System.Security.CodeAccessPermission.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-165">If a method calls <xref:System.Security.CodeAccessPermission.Deny%2A> on a permission, and if a <xref:System.Security.CodeAccessPermission.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check will fail when it reaches the <xref:System.Security.CodeAccessPermission.Deny%2A>.</span></span>  
  
 <span data-ttu-id="d7fd9-166">La chiamata a <xref:System.Security.CodeAccessPermission.Deny%2A> è efficace fino a quando il codice chiamante restituisce al chiamante.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-166">The call to <xref:System.Security.CodeAccessPermission.Deny%2A> is effective until the calling code returns to its caller.</span></span> <span data-ttu-id="d7fd9-167">Un solo <xref:System.Security.CodeAccessPermission.Deny%2A> può essere attivo su un frame.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-167">Only one <xref:System.Security.CodeAccessPermission.Deny%2A> can be active on a frame.</span></span> <span data-ttu-id="d7fd9-168">Un tentativo di chiamare <xref:System.Security.CodeAccessPermission.Deny%2A> quando un oggetto attivo <xref:System.Security.CodeAccessPermission.Deny%2A> sui risultati del frame è presente un <xref:System.Security.SecurityException>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-168">An attempt to call <xref:System.Security.CodeAccessPermission.Deny%2A> when an active <xref:System.Security.CodeAccessPermission.Deny%2A> exists on the frame results in a <xref:System.Security.SecurityException>.</span></span> <span data-ttu-id="d7fd9-169">Chiamare <xref:System.Security.CodeAccessPermission.RevertDeny%2A> o <xref:System.Security.CodeAccessPermission.RevertAll%2A> per rimuovere un attivo <xref:System.Security.CodeAccessPermission.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-169">Call <xref:System.Security.CodeAccessPermission.RevertDeny%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> to remove an active <xref:System.Security.CodeAccessPermission.Deny%2A>.</span></span> <span data-ttu-id="d7fd9-170"><xref:System.Security.CodeAccessPermission.Deny%2A> viene ignorato per un'autorizzazione non concessa perché una richiesta di tale autorizzazione non riuscirà.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-170"><xref:System.Security.CodeAccessPermission.Deny%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d7fd9-171">Esiste già un oggetto <see cref="M:System.Security.CodeAccessPermission.Deny" /> attivo per il fotogramma corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-171">There is already an active <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d7fd9-172">È possibile eseguire l'override di questo metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d7fd9-172">You cannot override this method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="d7fd9-173">Oggetto <see cref="T:System.Security.CodeAccessPermission" /> da confrontare con l'oggetto <see cref="T:System.Security.CodeAccessPermission" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-173">The <see cref="T:System.Security.CodeAccessPermission" /> object to compare with the current <see cref="T:System.Security.CodeAccessPermission" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7fd9-174">Determina se l'oggetto <see cref="T:System.Security.CodeAccessPermission" /> specificato è uguale all'oggetto <see cref="T:System.Security.CodeAccessPermission" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-174">Determines whether the specified <see cref="T:System.Security.CodeAccessPermission" /> object is equal to the current <see cref="T:System.Security.CodeAccessPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7fd9-175">
            <see langword="true" /> se l'oggetto specificato <see cref="T:System.Security.CodeAccessPermission" /> è uguale all'oggetto <see cref="T:System.Security.CodeAccessPermission" /> corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-175">
              <see langword="true" /> if the specified <see cref="T:System.Security.CodeAccessPermission" /> object is equal to the current <see cref="T:System.Security.CodeAccessPermission" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-176">Per ulteriori informazioni, vedere <xref:System.Object.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-176">For more information, see <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public abstract void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub FromXml (elem As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void FromXml(System::Security::SecurityElement ^ elem);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem">
          <span data-ttu-id="d7fd9-177">Codifica XML da usare per ricostruire l'oggetto di sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-177">The XML encoding to use to reconstruct the security object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7fd9-178">Quando ne viene eseguito l'override in una classe derivata, ricostruisce un oggetto di sicurezza con uno stato specificato da una codifica XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-178">When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-179">Codice personalizzato che estende gli oggetti di sicurezza deve implementare il <xref:System.Security.CodeAccessPermission.ToXml%2A> e <xref:System.Security.CodeAccessPermission.FromXml%2A> metodi per rendere gli oggetti codificabili.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-179">Custom code that extends security objects needs to implement the <xref:System.Security.CodeAccessPermission.ToXml%2A> and <xref:System.Security.CodeAccessPermission.FromXml%2A> methods to make the objects security-encodable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7fd9-180">Esempio di codice seguente viene illustrato un override del <xref:System.Security.CodeAccessPermission.FromXml%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-180">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.FromXml%2A> method.</span></span> <span data-ttu-id="d7fd9-181">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.CodeAccessPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-181">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#10)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#10)]
 [!code-vb[System.Security.Permissions.NameIdPermission#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d7fd9-182">Il valore del parametro <paramref name="elem" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-182">The <paramref name="elem" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d7fd9-183">Il parametro <paramref name="elem" /> non contiene la codifica XML per un'istanza dello stesso tipo di quella corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-183">The <paramref name="elem" /> parameter does not contain the XML encoding for an instance of the same type as the current instance.</span>
          </span>
          <span data-ttu-id="d7fd9-184">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-184">-or-</span>
          </span>
          <span data-ttu-id="d7fd9-185">Il numero di versione del parametro <paramref name="elem" /> non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-185">The version number of the <paramref name="elem" /> parameter is not supported.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d7fd9-186">È necessario eseguire l'override di questo metodo in una classe derivata.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d7fd9-186">You must override this method in a derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7fd9-187">Ottiene un codice hash per l'oggetto <see cref="T:System.Security.CodeAccessPermission" /> adatto per l'uso in algoritmi di hash e in strutture di dati, come una tabella hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-187">Gets a hash code for the <see cref="T:System.Security.CodeAccessPermission" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7fd9-188">Codice hash per l'oggetto <see cref="T:System.Security.CodeAccessPermission" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-188">A hash code for the current <see cref="T:System.Security.CodeAccessPermission" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-189">Il codice hash per due istanze della stessa autorizzazione potrebbe essere diverso, pertanto è consigliabile non utilizzare un codice hash per confrontare due <xref:System.Security.CodeAccessPermission> oggetti.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-189">The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two <xref:System.Security.CodeAccessPermission> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public abstract System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Intersect(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d7fd9-190">Autorizzazione da intersecare con quella corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-190">A permission to intersect with the current permission.</span>
          </span>
          <span data-ttu-id="d7fd9-191">Deve essere dello stesso tipo dell'autorizzazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-191">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7fd9-192">Se implementato da una classe derivata, crea e restituisce un'autorizzazione che rappresenta l'intersezione tra l'autorizzazione corrente e quella specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-192">When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7fd9-193">Nuova autorizzazione che rappresenta l'intersezione dell'autorizzazione corrente e di quella specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-193">A new permission that represents the intersection of the current permission and the specified permission.</span>
          </span>
          <span data-ttu-id="d7fd9-194">La nuova autorizzazione è <see langword="null" /> se l'intersezione è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-194">This new permission is <see langword="null" /> if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-195">L'intersezione delle due autorizzazioni è un'autorizzazione che descrive il set di operazioni che hanno in comune.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-195">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="d7fd9-196">Solo una richiesta che supera entrambe le autorizzazioni originali passerà l'intersezione.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-196">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7fd9-197">Esempio di codice seguente viene illustrato un override del <xref:System.Security.CodeAccessPermission.Intersect%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-197">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.Intersect%2A> method.</span></span> <span data-ttu-id="d7fd9-198">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.CodeAccessPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-198">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#5)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#5)]
 [!code-vb[System.Security.Permissions.NameIdPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d7fd9-199">Il parametro <paramref name="target" /> non è <see langword="null" /> e non è un'istanza della stessa classe dell'autorizzazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-199">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d7fd9-200">È necessario eseguire l'override di questo metodo in una classe derivata.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d7fd9-200">You must override this method in a derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public abstract bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d7fd9-201">Autorizzazione da testare per la relazione del subset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-201">A permission that is to be tested for the subset relationship.</span>
          </span>
          <span data-ttu-id="d7fd9-202">Questa autorizzazione deve essere dello stesso tipo di quella corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-202">This permission must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7fd9-203">Quando implementato da una classe derivata, determina se l'autorizzazione corrente è un subset di quella specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-203">When implemented by a derived class, determines whether the current permission is a subset of the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7fd9-204">
            <see langword="true" /> se l'autorizzazione corrente è un sottoinsieme dell'autorizzazione specificata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-204">
              <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-205">Se l'autorizzazione corrente specifica un set di operazioni che è interamente contenuto l'autorizzazione specificata, l'autorizzazione corrente è un subset dell'autorizzazione specificata.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-205">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="d7fd9-206">Ad esempio, un'autorizzazione che rappresenta l'accesso a C:\example.txt è un subset di un'autorizzazione che rappresenta l'accesso in c:\\.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-206">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="d7fd9-207">Se questo metodo restituisce `true`, l'autorizzazione corrente non rappresenta un accesso alla risorsa protetta rispetto a quello dell'autorizzazione specificata.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-207">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="d7fd9-208">Le istruzioni seguenti devono essere `true` per tutte le sostituzioni del <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-208">The following statements are required to be `true` for all overrides of the <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="d7fd9-209">*X*, *Y*, e *Z* rappresentano oggetti di autorizzazione di accesso al codice personalizzato che non sono riferimenti null, *U* rappresenta un'autorizzazione di accesso di codice senza restrizioni, e *N* rappresenta un'autorizzazione vuota con un <xref:System.Security.Permissions.PermissionState> di <xref:System.Security.Permissions.PermissionState.None>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-209">*X*, *Y*, and *Z* represent custom code access permission objects that are not null references, *U* represents an unrestricted code access permission, and *N* represents an empty permission with a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.None>.</span></span>  
  
-   <span data-ttu-id="d7fd9-210">*X*. IsSubsetOf (*X*) restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-210">*X*.IsSubsetOf(*X*) returns `true`.</span></span>  
  
-   <span data-ttu-id="d7fd9-211">*X*. IsSubsetOf (*Y*) restituisce lo stesso valore di *Y*. IsSubsetOf (*X*) solo se *X* e *Y* rappresentano lo stesso set di autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-211">*X*.IsSubsetOf(*Y*) returns the same value as *Y*.IsSubsetOf(*X*) if and only if *X* and *Y* represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="d7fd9-212">Se *X*. IsSubsetOf (*Y*) e *Y*. IsSubsetOf (*Z*) restituiscono entrambi `true`, *X*. IsSubsetOf (*Z*) restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-212">If *X*.IsSubsetOf(*Y*) and *Y*.IsSubsetOf(*Z*) both return `true`, *X*.IsSubsetOf(*Z*) returns `true`.</span></span>  
  
-   <span data-ttu-id="d7fd9-213">*X*. IsSubsetOf (*U*) restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-213">*X*.IsSubsetOf(*U*) returns `true`.</span></span>  
  
-   <span data-ttu-id="d7fd9-214">*X*. IsSubsetOf (*N*) restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-214">*X*.IsSubsetOf(*N*) returns `false`.</span></span>  
  
-   <span data-ttu-id="d7fd9-215">*N*. IsSubsetOf (*X*) restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-215">*N*.IsSubsetOf(*X*) returns `true`.</span></span>  
  
 <span data-ttu-id="d7fd9-216">Se *X* e *Y* rappresentano oggetti di autorizzazione di accesso al codice personalizzato che non sono riferimenti null, *X*. IsSubsetOf (*Y*) restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-216">If *X* and *Y* represent custom code access permission objects that are null references, *X*.IsSubsetOf(*Y*) returns `true`.</span></span> <span data-ttu-id="d7fd9-217">Se *Z* è null, anche l'impostazione composta operazione *X*. Union (*Y*). IsSubsetOf (*Z*) restituisce inoltre `true` perché l'unione di due autorizzazioni null è un'autorizzazione null.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-217">If *Z* is also null, the compound set operation *X*.Union(*Y*).IsSubsetOf(*Z*) also returns `true` because the union of two null permissions is a null permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7fd9-218">Esempio di codice seguente viene illustrato un override del <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-218">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="d7fd9-219">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.CodeAccessPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-219">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#4)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#4)]
 [!code-vb[System.Security.Permissions.NameIdPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d7fd9-220">Il parametro <paramref name="target" /> non è <see langword="null" /> ed è di un tipo diverso rispetto all'autorizzazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-220">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d7fd9-221">È necessario eseguire l'override di questo metodo in una classe derivata.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d7fd9-221">You must override this method in a derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PermitOnly();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7fd9-222">Impedisce ai chiamanti in posizione più elevata nello stack di chiamate di usare il codice che chiama questo metodo per accedere a tutte le risorse eccetto quella specificata dall'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-222">Prevents callers higher in the call stack from using the code that calls this method to access all resources except for the resource specified by the current instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d7fd9-223">Il <xref:System.Security.CodeAccessPermission.PermitOnly%2A> metodo deve essere utilizzato solo per proteggere le risorse dall'accesso accidentale da codice completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-223">The <xref:System.Security.CodeAccessPermission.PermitOnly%2A> method should be used only to protect resources from accidental access by fully trusted code.</span></span> <span data-ttu-id="d7fd9-224">Non da utilizzare per proteggere le risorse da un uso improprio intenzionale da codice non attendibile.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-224">It should not be used to protect resources from intentional misuse by untrusted code.</span></span> <span data-ttu-id="d7fd9-225">Ad esempio, se (metodo) `A` problemi un <xref:System.Security.CodeAccessPermission.PermitOnly%2A> per un'autorizzazione e chiami il metodo `B`, metodo `B` chiaramente può eseguire l'override il <xref:System.Security.CodeAccessPermission.PermitOnly%2A> eseguendo un <xref:System.Security.CodeAccessPermission.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-225">For example, if method `A` issues a <xref:System.Security.CodeAccessPermission.PermitOnly%2A> for a permission and then calls method `B`, method `B` can overtly override the <xref:System.Security.CodeAccessPermission.PermitOnly%2A> by issuing an <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span> <span data-ttu-id="d7fd9-226">Il metodo chiamato è sempre superiore dello stack.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-226">The called method is always higher in the stack.</span></span> <span data-ttu-id="d7fd9-227">Pertanto, se (metodo) `B` tenta di accedere a una risorsa protetta, il sistema di sicurezza inizia a verificare le autorizzazioni, in quanto metodo `B` è il chiamante immediato, e quindi percorre lo stack per verificare che sia presente alcun <xref:System.Security.CodeAccessPermission.Deny%2A> o <xref:System.Security.CodeAccessPermission.PermitOnly%2A> inferiore nello stack.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-227">Therefore, if method `B` tries to access a protected resource, the security system begins checking for permissions with it because method `B` is the immediate caller, and then walks down the stack to confirm that there is no <xref:System.Security.CodeAccessPermission.Deny%2A> or <xref:System.Security.CodeAccessPermission.PermitOnly%2A> lower in the stack.</span></span> <span data-ttu-id="d7fd9-228">Metodo `B`, che sta tentando di accedere alla risorsa, può arrestare l'analisi dello stack immediatamente utilizzando il <xref:System.Security.CodeAccessPermission.Assert%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-228">Method `B`, which is trying to access the resource, can stop the stack walk immediately by using the <xref:System.Security.CodeAccessPermission.Assert%2A> method.</span></span> <span data-ttu-id="d7fd9-229">In tal caso, il <xref:System.Security.CodeAccessPermission.PermitOnly%2A> inseriti nello stack dal metodo `A` (il metodo chiamante) non viene mai individuato.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-229">In that case, the <xref:System.Security.CodeAccessPermission.PermitOnly%2A> placed on the stack by method `A` (the calling method) is never discovered.</span></span>  
  
 <span data-ttu-id="d7fd9-230"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> è simile a <xref:System.Security.CodeAccessPermission.Deny%2A>, perché entrambi provocano l'analisi dello stack se avranno esito positivo.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-230"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> is similar to <xref:System.Security.CodeAccessPermission.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="d7fd9-231">La differenza è che <xref:System.Security.CodeAccessPermission.Deny%2A> specifica le autorizzazioni che provocano il percorso, di stack ma <xref:System.Security.CodeAccessPermission.PermitOnly%2A> specifica solo le autorizzazioni che non provocano il percorso di stack.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-231">The difference is that <xref:System.Security.CodeAccessPermission.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.CodeAccessPermission.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span>  
  
 <span data-ttu-id="d7fd9-232">Chiamare questo metodo per verificare che il codice può essere utilizzato per accedere solo le risorse specificate.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-232">Call this method to ensure that your code can be used to access only the specified resources.</span></span> <span data-ttu-id="d7fd9-233">La chiamata a <xref:System.Security.CodeAccessPermission.PermitOnly%2A> è efficace fino a quando il codice chiamante restituisce al chiamante.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-233">The call to <xref:System.Security.CodeAccessPermission.PermitOnly%2A> is effective until the calling code returns to its caller.</span></span> <span data-ttu-id="d7fd9-234">Un solo <xref:System.Security.CodeAccessPermission.PermitOnly%2A> può essere attivo su un frame.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-234">Only one <xref:System.Security.CodeAccessPermission.PermitOnly%2A> can be active on a frame.</span></span> <span data-ttu-id="d7fd9-235">Un tentativo di chiamare <xref:System.Security.CodeAccessPermission.PermitOnly%2A> quando un oggetto attivo <xref:System.Security.CodeAccessPermission.PermitOnly%2A> sui risultati del frame è presente un <xref:System.Security.SecurityException>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-235">An attempt to call <xref:System.Security.CodeAccessPermission.PermitOnly%2A> when an active <xref:System.Security.CodeAccessPermission.PermitOnly%2A> exists on the frame results in a <xref:System.Security.SecurityException>.</span></span> <span data-ttu-id="d7fd9-236">Chiamare <xref:System.Security.CodeAccessPermission.RevertPermitOnly%2A> o <xref:System.Security.CodeAccessPermission.RevertAll%2A> per rimuovere un attivo <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-236">Call <xref:System.Security.CodeAccessPermission.RevertPermitOnly%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> to remove an active <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span></span>  
  
 <span data-ttu-id="d7fd9-237"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> viene ignorato per un'autorizzazione non concessa perché una richiesta di tale autorizzazione non riuscirà.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-237"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="d7fd9-238">Tuttavia, se il codice inferiore nello stack di in un secondo momento chiama <xref:System.Security.CodeAccessPermission.Demand%2A> per l'autorizzazione, un <xref:System.Security.SecurityException> viene generata quando il percorso stack raggiunge il codice che ha tentato di chiamare <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-238">However, if code lower on the call stack later calls <xref:System.Security.CodeAccessPermission.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span></span> <span data-ttu-id="d7fd9-239">In questo modo il codice che ha chiamato <xref:System.Security.CodeAccessPermission.PermitOnly%2A> non dispone dell'autorizzazione, anche se chiamato <xref:System.Security.CodeAccessPermission.PermitOnly%2A> per tale autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-239">This is because the code that called <xref:System.Security.CodeAccessPermission.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.CodeAccessPermission.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="d7fd9-240">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-240">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d7fd9-241">Esiste già un oggetto <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> attivo per il fotogramma corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-241">There is already an active <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d7fd9-242">È possibile eseguire l'override di questo metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d7fd9-242">You cannot override this method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RevertAll">
      <MemberSignature Language="C#" Value="public static void RevertAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertAll" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7fd9-243">Tutti i precedenti override per il frame corrente vengono rimossi e non sono più attivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-243">Causes all previous overrides for the current frame to be removed and no longer in effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-244">Se esistono override (<xref:System.Security.CodeAccessPermission.Assert%2A>, <xref:System.Security.CodeAccessPermission.Deny%2A>, o <xref:System.Security.CodeAccessPermission.PermitOnly%2A>) per il frame corrente, un <xref:System.ExecutionEngineException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-244">If there are no overrides (<xref:System.Security.CodeAccessPermission.Assert%2A>, <xref:System.Security.CodeAccessPermission.Deny%2A>, or <xref:System.Security.CodeAccessPermission.PermitOnly%2A>) for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d7fd9-245">Non esistono precedenti override <see cref="M:System.Security.CodeAccessPermission.Assert" />, <see cref="M:System.Security.CodeAccessPermission.Deny" /> oppure <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> per il frame corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-245">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" />, <see cref="M:System.Security.CodeAccessPermission.Deny" />, or <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RevertAssert">
      <MemberSignature Language="C#" Value="public static void RevertAssert ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAssert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertAssert" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAssert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAssert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7fd9-246">Provoca la rimozione di qualsiasi <see cref="M:System.Security.CodeAccessPermission.Assert" /> precedente per il frame corrente, annullandone la validità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-246">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame to be removed and no longer in effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-247">Se è presente alcun <xref:System.Security.CodeAccessPermission.Assert%2A> per il frame corrente, un <xref:System.ExecutionEngineException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-247">If there is no <xref:System.Security.CodeAccessPermission.Assert%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d7fd9-248">Non esistono metodi <see cref="M:System.Security.CodeAccessPermission.Assert" /> precedenti per il frame corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-248">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RevertDeny">
      <MemberSignature Language="C#" Value="public static void RevertDeny ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertDeny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertDeny" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertDeny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertDeny();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7fd9-249">Provoca la rimozione di qualsiasi <see cref="M:System.Security.CodeAccessPermission.Deny" /> precedente per il frame corrente, annullandone la validità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-249">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame to be removed and no longer in effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-250">Se è presente alcun <xref:System.Security.CodeAccessPermission.Deny%2A> per il frame corrente, un <xref:System.ExecutionEngineException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-250">If there is no <xref:System.Security.CodeAccessPermission.Deny%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d7fd9-251">Non esistono metodi <see cref="M:System.Security.CodeAccessPermission.Deny" /> precedenti per il frame corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-251">There is no previous <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RevertPermitOnly">
      <MemberSignature Language="C#" Value="public static void RevertPermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertPermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertPermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertPermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertPermitOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7fd9-252">Provoca la rimozione di qualsiasi <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> precedente per il frame corrente, annullandone la validità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-252">Causes any previous <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame to be removed and no longer in effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-253">Se è presente alcun <xref:System.Security.CodeAccessPermission.PermitOnly%2A> per il frame corrente, un <xref:System.ExecutionEngineException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-253">If there is no <xref:System.Security.CodeAccessPermission.PermitOnly%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d7fd9-254">Non esistono metodi <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> precedenti per il frame corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-254">There is no previous <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IPermission.Demand">
      <MemberSignature Language="C#" Value="void IPermission.Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IPermission.Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IPermission#Demand" />
      <MemberSignature Language="VB.NET" Value="Sub Demand () Implements IPermission.Demand" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IPermission.Demand() = System::Security::IPermission::Demand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.Assert">
      <MemberSignature Language="C#" Value="void IStackWalk.Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert" />
      <MemberSignature Language="VB.NET" Value="Sub Assert () Implements IStackWalk.Assert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.Assert() = System::Security::IStackWalk::Assert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.Demand">
      <MemberSignature Language="C#" Value="void IStackWalk.Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand" />
      <MemberSignature Language="VB.NET" Value="Sub Demand () Implements IStackWalk.Demand" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.Demand() = System::Security::IStackWalk::Demand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.Deny">
      <MemberSignature Language="C#" Value="void IStackWalk.Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny" />
      <MemberSignature Language="VB.NET" Value="Sub Deny () Implements IStackWalk.Deny" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.Deny() = System::Security::IStackWalk::Deny;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.PermitOnly">
      <MemberSignature Language="C#" Value="void IStackWalk.PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Sub PermitOnly () Implements IStackWalk.PermitOnly" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.PermitOnly() = System::Security::IStackWalk::PermitOnly;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7fd9-255">Crea e restituisce una rappresentazione di stringa dell'oggetto autorizzazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-255">Creates and returns a string representation of the current permission object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7fd9-256">Rappresentazione di stringa dell'oggetto autorizzazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-256">A string representation of the current permission object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-257">Questo metodo è utile per il debug quando è necessario visualizzare l'autorizzazione come stringa.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-257">This method is useful in debugging when you need to display the permission as a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public abstract System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7fd9-258">Quando sottoposto a override in una classe derivata, crea una codifica XML dell'oggetto di sicurezza e del relativo stato corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-258">When overridden in a derived class, creates an XML encoding of the security object and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7fd9-259">Codifica XML dell'oggetto di sicurezza, che include le eventuali informazioni sullo stato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-259">An XML encoding of the security object, including any state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-260">Codice personalizzato che estende gli oggetti di sicurezza deve implementare il <xref:System.Security.CodeAccessPermission.ToXml%2A> e <xref:System.Security.CodeAccessPermission.FromXml%2A> metodi per rendere gli oggetti codificabili.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-260">Custom code that extends security objects needs to implement the <xref:System.Security.CodeAccessPermission.ToXml%2A> and <xref:System.Security.CodeAccessPermission.FromXml%2A> methods to make the objects security-encodable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7fd9-261">Esempio di codice seguente viene illustrato un override del <xref:System.Security.CodeAccessPermission.ToXml%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-261">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.ToXml%2A> method.</span></span> <span data-ttu-id="d7fd9-262">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.CodeAccessPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-262">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#11)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#11)]
 [!code-vb[System.Security.Permissions.NameIdPermission#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d7fd9-263">È necessario eseguire l'override di questo metodo in una classe derivata.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d7fd9-263">You must override this method in a derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public virtual System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Union(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="d7fd9-264">Autorizzazione da combinare con quella corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-264">A permission to combine with the current permission.</span>
          </span>
          <span data-ttu-id="d7fd9-265">Deve essere dello stesso tipo dell'autorizzazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-265">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7fd9-266">Quando sottoposto a override in una classe derivata, crea un'autorizzazione che rappresenta l'unione dell'autorizzazione corrente e di quella specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-266">When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7fd9-267">Nuova autorizzazione che rappresenta l'unione dell'autorizzazione corrente e di quella specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-267">A new permission that represents the union of the current permission and the specified permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fd9-268">Il risultato di una chiamata a <xref:System.Security.CodeAccessPermission.Union%2A> è un'autorizzazione che rappresenta tutte le operazioni indicate sia dell'autorizzazione corrente e l'autorizzazione specificata.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-268">The result of a call to <xref:System.Security.CodeAccessPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="d7fd9-269">Qualsiasi richiesta che passa l'autorizzazione passa l'unione.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-269">Any demand that passes either permission passes their union.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7fd9-270">Esempio di codice seguente viene illustrato un override del <xref:System.Security.CodeAccessPermission.Union%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-270">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.Union%2A> method.</span></span> <span data-ttu-id="d7fd9-271">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.CodeAccessPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="d7fd9-271">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#12)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#12)]
 [!code-vb[System.Security.Permissions.NameIdPermission#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d7fd9-272">Il parametro <paramref name="other" /> non è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-272">The <paramref name="other" /> parameter is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d7fd9-273">Questo metodo è supportato a questo livello solo se passato come <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7fd9-273">This method is only supported at this level when passed <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d7fd9-274">È necessario eseguire l'override di questo metodo in una classe derivata.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d7fd9-274">You must override this method in a derived class.</span>
            </span>
            <span data-ttu-id="d7fd9-275">È necessario restituire una copia dell'autorizzazione se il valore di <paramref name="other" /> parametro <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d7fd9-275">You should return a copy of the permission if the value of the <paramref name="other" /> parameter is <see langword="null" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>