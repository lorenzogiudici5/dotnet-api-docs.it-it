<Type Name="PermissionSet" FullName="System.Security.PermissionSet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95f6c01a7b25f39bc7cb8067cfb65f467a5def79" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PermissionSet : System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Security.ISecurityEncodable, System.Security.IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PermissionSet extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Security.ISecurityEncodable, class System.Security.IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.PermissionSet" />
  <TypeSignature Language="VB.NET" Value="Public Class PermissionSet&#xA;Implements ICollection, IDeserializationCallback, ISecurityEncodable, IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public ref class PermissionSet : System::Collections::ICollection, System::Runtime::Serialization::IDeserializationCallback, System::Security::ISecurityEncodable, System::Security::IStackWalk" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IStackWalk</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a2ed4-101">Rappresenta una raccolta che contiene molti tipi diversi di autorizzazioni.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a2ed4-101">Represents a collection that can contain many different types of permissions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-102">È possibile utilizzare <xref:System.Security.PermissionSet> per eseguire operazioni su più autorizzazioni diverse come gruppo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-102">You can use <xref:System.Security.PermissionSet> to perform operations on several different permissions as a group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-103">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet> classe e i membri.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-103">The following code example demonstrates the use of the <xref:System.Security.PermissionSet> class and members.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#1)]
 [!code-csharp[System.Security.PermissionSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#1)]
 [!code-vb[System.Security.PermissionSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="a2ed4-104">per gli eredi siano completamente attendibili, o in un assembly firmato con Microsoft <see cref="T:System.Security.Policy.StrongName" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a2ed4-104">for inheritors to be fully trusted, or in an assembly that is signed with the Microsoft <see cref="T:System.Security.Policy.StrongName" />.</span>
      </span>
    </permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-105">Inizializza una nuova istanza della classe <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-105">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="a2ed4-106">Uno dei valori dell'enumerazione che specifica l'accesso del set di autorizzazioni alle risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-106">One of the enumeration values that specifies the permission set's access to resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-107">Inizializza una nuova istanza della classe <see cref="T:System.Security.PermissionSet" /> con l'oggetto <see cref="T:System.Security.Permissions.PermissionState" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-107">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-108">Il `Unrestricted` stato consente tutte le autorizzazioni che implementano il <xref:System.Security.Permissions.IUnrestrictedPermission> interfaccia, mentre `None` non consente autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-108">The `Unrestricted` state allows all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface, while `None` allows no permissions.</span></span>  
  
 <span data-ttu-id="a2ed4-109">Utilizzare <xref:System.Security.PermissionSet.AddPermission%2A> su un oggetto vuoto <xref:System.Security.PermissionSet> per definire il set in maggiore dettaglio.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-109">Use <xref:System.Security.PermissionSet.AddPermission%2A> on an empty <xref:System.Security.PermissionSet> to define the set in greater detail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-110">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.%23ctor%2A> costruttore per creare un'autorizzazione impostata con uno stato di autorizzazione <xref:System.Security.Permissions.PermissionState.None>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-110">The following code example shows the use of the <xref:System.Security.PermissionSet.%23ctor%2A> constructor to create a permission set with a permission state of <xref:System.Security.Permissions.PermissionState.None>.</span></span> <span data-ttu-id="a2ed4-111">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-111">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#2)]
 [!code-csharp[System.Security.PermissionSet#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#2)]
 [!code-vb[System.Security.PermissionSet#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2ed4-112">Il parametro <paramref name="state" /> non è un oggetto <see cref="T:System.Security.Permissions.PermissionState" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-112">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.PermissionSet permSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.PermissionSet permSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (permSet As PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::PermissionSet ^ permSet);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="permSet">
          <span data-ttu-id="a2ed4-113">Set da cui ottenere il valore del nuovo oggetto <see cref="T:System.Security.PermissionSet" /> oppure <see langword="null" /> per creare un oggetto <see cref="T:System.Security.PermissionSet" /> vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-113">The set from which to take the value of the new <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> to create an empty <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-114">Inizializza una nuova istanza della classe <see cref="T:System.Security.PermissionSet" /> utilizzando come valori iniziali i valori del parametro <paramref name="permSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-114">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with initial values taken from the <paramref name="permSet" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-115">Il nuovo <xref:System.Security.PermissionSet> contiene copie delle autorizzazioni contenute nell'oggetto specificato <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-115">The new <xref:System.Security.PermissionSet> contains copies of the permissions contained in the specified <xref:System.Security.PermissionSet>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2ed4-116">Ciò equivale a <xref:System.Security.PermissionSet.Copy%2A> quando il `permSet` parametro non è `null`.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-116">This is equivalent to <xref:System.Security.PermissionSet.Copy%2A> when the `permSet` parameter is not `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission AddPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission AddPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ AddPermission(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">
          <span data-ttu-id="a2ed4-117">Autorizzazione da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-117">The permission to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-118">Aggiunge un'autorizzazione specificata a <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-118">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-119">L'unione tra l'autorizzazione aggiunta ed eventuali altre autorizzazioni dello stesso tipo esistenti in <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-119">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-120">Se un'autorizzazione dello stesso tipo dell'autorizzazione aggiunta già esiste nel <xref:System.Security.PermissionSet>, la nuova autorizzazione è l'unione dell'oggetto di autorizzazione esistenti e l'oggetto di autorizzazione specificata.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-120">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="a2ed4-121">Ad esempio, se un'autorizzazione che implementa <xref:System.Security.Permissions.IUnrestrictedPermission> viene aggiunto a un <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>, l'unione risulta è originale `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-121">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-122">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.AddPermission%2A> metodo per aggiungere un'autorizzazione a un set di autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-122">The following code example shows the use of the <xref:System.Security.PermissionSet.AddPermission%2A> method to add a permission to a permission set.</span></span> <span data-ttu-id="a2ed4-123">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-123">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#3)]
 [!code-csharp[System.Security.PermissionSet#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#3)]
 [!code-vb[System.Security.PermissionSet#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2ed4-124">Il metodo viene chiamato dall'oggetto <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-124">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a2ed4-125">Quando si eredita da <see cref="T:System.Security.PermissionSet" />, è possibile modificare il comportamento del <see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /> metodo eseguendo l'override di <see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /> metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a2ed4-125">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission AddPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission AddPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ AddPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">
          <span data-ttu-id="a2ed4-126">Autorizzazione da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-126">The permission to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-127">Aggiunge un'autorizzazione specificata a <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-127">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-128">Unione tra l'autorizzazione aggiunta e qualsiasi altra autorizzazione dello stesso tipo esistente in <see cref="T:System.Security.PermissionSet" /> oppure <see langword="null" /> se <paramref name="perm" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-128">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if <paramref name="perm" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-129">Il <xref:System.Security.PermissionSet.AddPermissionImpl%2A> metodo è l'implementazione per il <xref:System.Security.PermissionSet.AddPermission%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-129">The <xref:System.Security.PermissionSet.AddPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.AddPermission%2A> method.</span></span>  
  
 <span data-ttu-id="a2ed4-130">Se un'autorizzazione dello stesso tipo dell'autorizzazione aggiunta già esiste nel <xref:System.Security.PermissionSet>, la nuova autorizzazione è l'unione dell'oggetto di autorizzazione esistenti e l'oggetto di autorizzazione specificata.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-130">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="a2ed4-131">Ad esempio, se un'autorizzazione che implementa <xref:System.Security.Permissions.IUnrestrictedPermission> viene aggiunto a un <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>, l'unione risulta è originale `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-131">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2ed4-132">Il metodo viene chiamato dall'oggetto <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-132">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Assert();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-133">Dichiara che il codice chiamante può accedere alla risorsa protetta da una richiesta di autorizzazione tramite il codice che chiama il metodo, anche se ai chiamanti più in alto nello stack non è stata concessa l'autorizzazione per accedere alla risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-133">Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</span>
          </span>
          <span data-ttu-id="a2ed4-134">Se si utilizza il metodo <see cref="M:System.Security.PermissionSet.Assert" />, è possibile che vengano generati problemi di sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-134">Using <see cref="M:System.Security.PermissionSet.Assert" /> can create security vulnerabilities.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-135">Questo è l'unico modo per asserire più autorizzazioni contemporaneamente all'interno di un frame in quanto un solo <xref:System.Security.PermissionSet.Assert%2A> può essere attivo su un frame.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-135">This is the only way to assert multiple permissions at the same time within a frame because only one <xref:System.Security.PermissionSet.Assert%2A> can be active on a frame.</span></span> <span data-ttu-id="a2ed4-136"><xref:System.Security.PermissionSet.Assert%2A> è valido solo per le autorizzazioni concesse.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-136"><xref:System.Security.PermissionSet.Assert%2A> is only effective for granted permissions.</span></span> <span data-ttu-id="a2ed4-137">Chiamare il <xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType> o <xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType> metodo per annullare un oggetto attivo <xref:System.Security.PermissionSet.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-137">Call the <xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType> or <xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType> method to cancel an active <xref:System.Security.PermissionSet.Assert%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a2ed4-138">Poiché la chiamata di <xref:System.Security.PermissionSet.Assert%2A> metodo rimuove il requisito che tutto il codice nella catena di chiamate deve essere concessa l'autorizzazione per accedere alla risorsa specificata, può provocare problemi di sicurezza se usata in modo non corretto o inappropriato.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-138">Because calling the <xref:System.Security.PermissionSet.Assert%2A> method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</span></span> <span data-ttu-id="a2ed4-139">Pertanto, devono essere utilizzata con estrema cautela.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-139">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a2ed4-140">L'istanza di <see cref="T:System.Security.PermissionSet" /> asserita non è stata concessa al codice di asserzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-140">The <see cref="T:System.Security.PermissionSet" /> instance asserted has not been granted to the asserting code.</span>
          </span>
          <span data-ttu-id="a2ed4-141">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-141">-or-</span>
          </span>
          <span data-ttu-id="a2ed4-142">Esiste già un oggetto <see cref="M:System.Security.PermissionSet.Assert" /> attivo per il fotogramma corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-142">There is already an active <see cref="M:System.Security.PermissionSet.Assert" /> for the current frame.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsNonCodeAccessPermissions">
      <MemberSignature Language="C#" Value="public bool ContainsNonCodeAccessPermissions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsNonCodeAccessPermissions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsNonCodeAccessPermissions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsNonCodeAccessPermissions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-143">Ottiene un valore che indica se l'oggetto <see cref="T:System.Security.PermissionSet" /> contiene autorizzazioni che non sono derivate da <see cref="T:System.Security.CodeAccessPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-143">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-144">
            <see langword="true" /> se <see cref="T:System.Security.PermissionSet" /> contiene autorizzazioni che non sono derivate da <see cref="T:System.Security.CodeAccessPermission" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-144">
              <see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a2ed4-145">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-145">The following code example shows the use of the <xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A> method.</span></span> <span data-ttu-id="a2ed4-146">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-146">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#9)]
 [!code-csharp[System.Security.PermissionSet#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#9)]
 [!code-vb[System.Security.PermissionSet#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertPermissionSet">
      <MemberSignature Language="C#" Value="public static byte[] ConvertPermissionSet (string inFormat, byte[] inData, string outFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ConvertPermissionSet(string inFormat, unsigned int8[] inData, string outFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertPermissionSet (inFormat As String, inData As Byte(), outFormat As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ ConvertPermissionSet(System::String ^ inFormat, cli::array &lt;System::Byte&gt; ^ inData, System::String ^ outFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inFormat" Type="System.String" />
        <Parameter Name="inData" Type="System.Byte[]" />
        <Parameter Name="outFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inFormat">
          <span data-ttu-id="a2ed4-147">Stringa che rappresenta uno dei formati di codifica seguenti: ASCII, Unicode o Binary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-147">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span>
          </span>
          <span data-ttu-id="a2ed4-148">I valori possibili sono "XMLASCII" o "XML", "XMLUNICODE" e "BINARY".</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-148">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span>
          </span>
        </param>
        <param name="inData">
          <span data-ttu-id="a2ed4-149">Set di autorizzazioni con codifica XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-149">An XML-encoded permission set.</span>
          </span>
        </param>
        <param name="outFormat">
          <span data-ttu-id="a2ed4-150">Stringa che rappresenta uno dei formati di codifica seguenti: ASCII, Unicode o Binary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-150">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span>
          </span>
          <span data-ttu-id="a2ed4-151">I valori possibili sono "XMLASCII" o "XML", "XMLUNICODE" e "BINARY".</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-151">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-152">Converte un oggetto <see cref="T:System.Security.PermissionSet" /> codificato da un formato di codifica XML in un altro formato di codifica XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-152">Converts an encoded <see cref="T:System.Security.PermissionSet" /> from one XML encoding format to another XML encoding format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-153">Set di autorizzazioni crittografato con il formato di output specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-153">An encrypted permission set with the specified output format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-154">Non usare questo metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-154">Do not use this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="a2ed4-155">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-155">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.PermissionSet Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Copy () As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::PermissionSet ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-156">Crea una copia di <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-156">Creates a copy of the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-157">Copia di <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-157">A copy of the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-158">Una copia di un <xref:System.Security.PermissionSet> rappresenta lo stesso accesso alle risorse dell'oggetto originale.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-158">A copy of a <xref:System.Security.PermissionSet> represents the same access to resources as the original object.</span></span> <span data-ttu-id="a2ed4-159">Le modifiche apportate alla copia non influiscono sul set di autorizzazioni originale.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-159">Changes made to the copy do not affect the original permission set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-160">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.Copy%2A> metodo per creare una copia di un set di autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-160">The following code example shows the use of the <xref:System.Security.PermissionSet.Copy%2A> method to create a copy of a permission set.</span></span> <span data-ttu-id="a2ed4-161">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-161">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#20)]
 [!code-csharp[System.Security.PermissionSet#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#20)]
 [!code-vb[System.Security.PermissionSet#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="a2ed4-162">Matrice di destinazione in cui eseguire la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-162">The target array to which to copy.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a2ed4-163">La posizione iniziale nella matrice da cui iniziare la copia (in base zero).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-163">The starting position in the array to begin copying (zero based).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-164">Copia gli oggetti di autorizzazione del set nel percorso indicato in un oggetto <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-164">Copies the permission objects of the set to the indicated location in an <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2ed4-165">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-165">The <paramref name="array" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2ed4-166">Il parametro <paramref name="array" /> ha più di una dimensione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-166">The <paramref name="array" /> parameter has more than one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="a2ed4-167">Il parametro <paramref name="index" /> è compreso nell'intervallo del parametro <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-167">The <paramref name="index" /> parameter is out of the range of the <paramref name="array" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-168">Ottiene il numero di oggetti autorizzazioni contenuti nel set di autorizzazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-168">Gets the number of permission objects contained in the permission set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a2ed4-169">Numero di oggetti autorizzazioni contenuti nell'oggetto <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-169">The number of permission objects contained in the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-170">Nel `None` o `Unrestricted` stato restituisce zero, perché viene utilizzata alcuna istanza di oggetto di autorizzazione effettivo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-170">In the `None` or `Unrestricted` state this returns zero, because no actual permission object instances are used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-171">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.Count%2A> proprietà per ottenere il numero di oggetti autorizzazioni in un set di autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-171">The following code example shows the use of the <xref:System.Security.PermissionSet.Count%2A> property to get the number of permission objects in a permission set.</span></span> <span data-ttu-id="a2ed4-172">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-172">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#5)]
 [!code-csharp[System.Security.PermissionSet#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#5)]
 [!code-vb[System.Security.PermissionSet#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-173">Forza un oggetto <see cref="T:System.Security.SecurityException" /> in fase di esecuzione se a tutti i chiamanti nella parte superiore dello stack di chiamate non sono state concesse le autorizzazioni specificate dall'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-173">Forces a <see cref="T:System.Security.SecurityException" /> at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-174">Utilizzare <xref:System.Security.PermissionSet.Demand%2A> su un <xref:System.Security.PermissionSet> per garantire che tutti i chiamanti dispongano di tutte le autorizzazioni del set con una sola operazione.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-174">Use <xref:System.Security.PermissionSet.Demand%2A> on a <xref:System.Security.PermissionSet> to ensure that all callers have all permissions in the set with one operation.</span></span>  
  
 <span data-ttu-id="a2ed4-175">Le autorizzazioni del codice che chiama questo metodo non vengono esaminate; il controllo inizia da parte del chiamante immediato del codice e continua fino allo stack.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-175">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="a2ed4-176">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-176">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="a2ed4-177"><xref:System.Security.PermissionSet.Demand%2A> ha esito positivo solo se nessun <xref:System.Security.SecurityException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-177"><xref:System.Security.PermissionSet.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is thrown.</span></span>  
  
 <span data-ttu-id="a2ed4-178">Se il <xref:System.Security.PermissionSet> contiene autorizzazioni che non ereditano da <xref:System.Security.CodeAccessPermission>, `Demand` vengono chiamati anche i metodi di tali autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-178">If the <xref:System.Security.PermissionSet> contains permissions that do not inherit from <xref:System.Security.CodeAccessPermission>, the `Demand` methods of those permissions are called as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-179">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.Demand%2A> metodo per richiedere tutte le autorizzazioni in un set di autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-179">The following code example shows the use of the <xref:System.Security.PermissionSet.Demand%2A> method to demand all the permissions in a permission set.</span></span> <span data-ttu-id="a2ed4-180">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-180">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#4)]
 [!code-csharp[System.Security.PermissionSet#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#4)]
 [!code-vb[System.Security.PermissionSet#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a2ed4-181">Uno dei chiamanti nella sequenza delle chiamate non ha l'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-181">A caller in the call chain does not have the permission demanded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Deny();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-182">Causa la non riuscita di tutti i metodi <see cref="M:System.Security.PermissionSet.Demand" /> che attraversano il codice chiamante per un'autorizzazione che presenta un'intersezione con un'autorizzazione di un tipo contenuto nell'oggetto <see cref="T:System.Security.PermissionSet" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-182">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <see cref="T:System.Security.PermissionSet" /> to fail.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-183">Questo metodo impedisce ai chiamanti più in alto nello stack di chiamate di accedere alla risorsa protetta tramite il codice che chiama questo metodo, anche se i chiamanti dispongono dell'autorizzazione per accedervi.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-183">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="a2ed4-184">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-184">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="a2ed4-185"><xref:System.Security.PermissionSet.Deny%2A> può limitare la responsabilità del programmatore o impedire vulnerabilità della sicurezza accidentale, in quanto impedisce che il metodo che chiama <xref:System.Security.PermissionSet.Deny%2A> venga utilizzato per accedere alla risorsa protetta dall'autorizzazione negata.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-185"><xref:System.Security.PermissionSet.Deny%2A> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <xref:System.Security.PermissionSet.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="a2ed4-186">Se chiama un metodo <xref:System.Security.PermissionSet.Deny%2A> su un'autorizzazione e se un <xref:System.Security.PermissionSet.Demand%2A> per tale autorizzazione viene richiamato da un chiamante inferiore nello stack di chiamate, la verifica della sicurezza non riesce quando raggiunge il <xref:System.Security.PermissionSet.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-186">If a method calls <xref:System.Security.PermissionSet.Deny%2A> on a permission, and if a <xref:System.Security.PermissionSet.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the <xref:System.Security.PermissionSet.Deny%2A>.</span></span>  
  
 <span data-ttu-id="a2ed4-187"><xref:System.Security.PermissionSet.Deny%2A> viene ignorato per un'autorizzazione non concessa in quanto non sarà possibile effettuare una richiesta di tale autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-187"><xref:System.Security.PermissionSet.Deny%2A> is ignored for a permission that is not granted because a demand for that permission cannot succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a2ed4-188">Una precedente chiamata a <see cref="M:System.Security.PermissionSet.Deny" /> ha già limitato le autorizzazioni per lo stack frame corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-188">A previous call to <see cref="M:System.Security.PermissionSet.Deny" /> has already restricted the permissions for the current stack frame.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Equals(System.Object)" FrameworkAlternate="netframework-4.5;netcore-2.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="a2ed4-189">Oggetto da confrontare con l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-189">The object to compare with the current <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </param>
        <param name="obj">To be added.</param>
        <summary>
          <span data-ttu-id="a2ed4-190">Determina se l'oggetto <see cref="T:System.Security.PermissionSet" /> o <see cref="T:System.Security.NamedPermissionSet" /> specificato è uguale all'oggetto <see cref="T:System.Security.PermissionSet" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-190">Determines whether the specified <see cref="T:System.Security.PermissionSet" /> or <see cref="T:System.Security.NamedPermissionSet" /> object is equal to the current <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-191">
            <see langword="true" /> se l'oggetto specificato è uguale all'oggetto <see cref="T:System.Security.PermissionSet" /> corrente. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-191">
              <see langword="true" /> if the specified object is equal to the current <see cref="T:System.Security.PermissionSet" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-192">L'uguaglianza è determinata dalle autorizzazioni contenute nel set di autorizzazioni specificato da `obj`.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-192">Equality is determined by the permissions contained in the permission set specified by `obj`.</span></span> <span data-ttu-id="a2ed4-193">`obj` può essere un <xref:System.Security.PermissionSet> oggetto o un <xref:System.Security.NamedPermissionSet> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-193">`obj` can be either a <xref:System.Security.PermissionSet> object or a <xref:System.Security.NamedPermissionSet> object.</span></span> <span data-ttu-id="a2ed4-194">Se `obj` è un <xref:System.Security.NamedPermissionSet>, il nome e descrizione vengono ignorati.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-194">If `obj` is a <xref:System.Security.NamedPermissionSet>, the name and description are ignored.</span></span>  
  
 <span data-ttu-id="a2ed4-195">Per ulteriori informazioni, vedere <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-195">For more information, see <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public virtual void FromXml (System.Security.SecurityElement et);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement et) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FromXml (et As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ et);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="et" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="et">
          <span data-ttu-id="a2ed4-196">Codifica XML da usare per ricostruire l'oggetto di sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-196">The XML encoding to use to reconstruct the security object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-197">Ricostruisce un oggetto di sicurezza con uno stato specificato da una codifica XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-197">Reconstructs a security object with a specified state from an XML encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a2ed4-198">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.FromXml%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-198">The following code example shows the use of the <xref:System.Security.PermissionSet.FromXml%2A> method.</span></span> <span data-ttu-id="a2ed4-199">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-199">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2ed4-200">Il valore del parametro <paramref name="et" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-200">The <paramref name="et" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2ed4-201">Il parametro <paramref name="et" /> non è un elemento di autorizzazione valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-201">The <paramref name="et" /> parameter is not a valid permission element.</span>
          </span>
          <span data-ttu-id="a2ed4-202">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-202">-or-</span>
          </span>
          <span data-ttu-id="a2ed4-203">Il numero di versione del parametro <paramref name="et" /> non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-203">The <paramref name="et" /> parameter's version number is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-204">Restituisce un enumeratore per le autorizzazioni del set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-204">Returns an enumerator for the permissions of the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-205">Oggetto enumeratore per le autorizzazioni del set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-205">An enumerator object for the permissions of the set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-206">Utilizzare l'enumeratore di un indice per accedere agli oggetti di autorizzazione singolo nel set.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-206">Use the enumerator as an index to access individual permission objects in the set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-207">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.GetEnumerator%2A> metodo per elencare tutte le autorizzazioni in un set di autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-207">The following code example shows the use of the <xref:System.Security.PermissionSet.GetEnumerator%2A> method to list all the permissions in a permission set.</span></span> <span data-ttu-id="a2ed4-208">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-208">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#18)]
 [!code-csharp[System.Security.PermissionSet#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#18)]
 [!code-vb[System.Security.PermissionSet#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#18)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a2ed4-209">Quando si eredita da <see cref="T:System.Security.PermissionSet" />, è possibile modificare il comportamento del <see cref="M:System.Security.PermissionSet.GetEnumerator" /> metodo eseguendo l'override di <see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /> metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a2ed4-209">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetEnumerator" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerator GetEnumeratorImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumeratorImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumeratorImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEnumeratorImpl () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IEnumerator ^ GetEnumeratorImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-210">Restituisce un enumeratore per le autorizzazioni del set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-210">Returns an enumerator for the permissions of the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-211">Oggetto enumeratore per le autorizzazioni del set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-211">An enumerator object for the permissions of the set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-212">Il <xref:System.Security.PermissionSet.GetEnumeratorImpl%2A> metodo è l'implementazione per il <xref:System.Security.PermissionSet.GetEnumerator%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-212">The <xref:System.Security.PermissionSet.GetEnumeratorImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-213">Ottiene un codice hash per l'oggetto <see cref="T:System.Security.PermissionSet" /> adatto per l'uso in algoritmi di hash e in strutture di dati, come una tabella hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-213">Gets a hash code for the <see cref="T:System.Security.PermissionSet" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-214">Codice hash per l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-214">A hash code for the current <see cref="T:System.Security.PermissionSet" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-215">Il codice hash per due istanze dello stesso set di autorizzazioni potrebbe essere diverso, pertanto un codice hash non deve essere utilizzato per confrontare due <xref:System.Security.PermissionSet> oggetti.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-215">The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two <xref:System.Security.PermissionSet> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission GetPermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission GetPermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ GetPermission(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass">
          <span data-ttu-id="a2ed4-216">Tipo dell'oggetto autorizzazioni desiderato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-216">The type of the desired permission object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-217">Ottiene un oggetto autorizzazioni del tipo specificato, se è presente nel set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-217">Gets a permission object of the specified type, if it exists in the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-218">Copia dell'oggetto di autorizzazione del tipo specificato dal parametro <paramref name="permClass" /> contenuto in <see cref="T:System.Security.PermissionSet" /> oppure <see langword="null" /> se non ne esiste nessuno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-218">A copy of the permission object of the type specified by the <paramref name="permClass" /> parameter contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-219">Il metodo restituisce `null` per un `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-219">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="a2ed4-220">Sebbene un `Unrestricted` <xref:System.Security.PermissionSet> contiene tutte le autorizzazioni, non dispone di istanze reali da restituire.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-220">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a2ed4-221">Quando si eredita da <see cref="T:System.Security.PermissionSet" />, è possibile modificare il comportamento del <see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /> metodo eseguendo l'override di <see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /> metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a2ed4-221">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission GetPermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission GetPermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ GetPermissionImpl(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass">
          <span data-ttu-id="a2ed4-222">Tipo dell’oggetto di autorizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-222">The type of the permission object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-223">Ottiene un oggetto autorizzazioni del tipo specificato, se è presente nel set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-223">Gets a permission object of the specified type, if it exists in the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-224">Copia dell'oggetto autorizzazioni del tipo specificato dal parametro <paramref name="permClass" /> contenuto in <see cref="T:System.Security.PermissionSet" /> oppure <see langword="null" /> se non ne esiste alcuno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-224">A copy of the permission object, of the type specified by the <paramref name="permClass" /> parameter, contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-225">Il <xref:System.Security.PermissionSet.GetPermissionImpl%2A> metodo è l'implementazione per il <xref:System.Security.PermissionSet.GetPermission%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-225">The <xref:System.Security.PermissionSet.GetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="a2ed4-226">Il metodo restituisce `null` per un `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-226">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="a2ed4-227">Sebbene un `Unrestricted` <xref:System.Security.PermissionSet> contiene tutte le autorizzazioni, non dispone di istanze reali da restituire.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-227">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Intersect (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Intersect(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Intersect(System::Security::PermissionSet ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="a2ed4-228">Set di autorizzazioni da intersecare con l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-228">A permission set to intersect with the current <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-229">Crea e restituisce un set di autorizzazioni che rappresenta l'intersezione tra l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente e l'oggetto <see cref="T:System.Security.PermissionSet" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-229">Creates and returns a permission set that is the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-230">Nuovo set di autorizzazioni che rappresenta l'intersezione fra l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente e la destinazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-230">A new permission set that represents the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified target.</span>
          </span>
          <span data-ttu-id="a2ed4-231">Questo oggetto è <see langword="null" /> se l'intersezione è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-231">This object is <see langword="null" /> if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-232">L'intersezione di due set di autorizzazioni è un set di autorizzazioni che descrive il set di operazioni che hanno in comune.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-232">The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="a2ed4-233">In particolare, rappresenta le autorizzazioni minime in modo che qualsiasi richiesta che supera entrambe autorizzazioni passino anche loro intersezione.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-233">Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</span></span>  
  
 <span data-ttu-id="a2ed4-234">Per ogni tipo di autorizzazione che è presente in entrambi i set, le due istanze di tali autorizzazioni vengono intersecate tramite l'autorizzazione `Intersect` metodo; l'autorizzazione risulta viene inclusa nella finestra di <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-234">For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's `Intersect` method; the resulting permission is included in the resulting <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="a2ed4-235">I tipi di autorizzazione che esistono solo in uno dei due set vengono esclusi dal set risultante.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-235">Permission types that exist in only one of the two sets are excluded from the resulting set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-236">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.Intersect%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-236">The following code example shows the use of the <xref:System.Security.PermissionSet.Intersect%2A> method.</span></span> <span data-ttu-id="a2ed4-237">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-237">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#12)]
 [!code-csharp[System.Security.PermissionSet#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#12)]
 [!code-vb[System.Security.PermissionSet#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEmpty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-238">Ottiene un valore che indica se l'oggetto <see cref="T:System.Security.PermissionSet" /> è vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-238">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-239">
            <see langword="true" /> se l'oggetto <see cref="T:System.Security.PermissionSet" /> è vuoto; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-239">
              <see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is empty; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-240">Oggetto <xref:System.Security.PermissionSet> può essere vuoto e ancora contenere istanze di autorizzazioni se tali autorizzazioni sono in stato di restrizioni.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-240">A <xref:System.Security.PermissionSet> can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</span></span> <span data-ttu-id="a2ed4-241">Le autorizzazioni sono in uno stato senza restrizioni se i relativi `IsSubsetOf` restituiscono `true` quando `null` viene passato come parametro.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-241">Permissions are in a fully restricted state if their `IsSubsetOf` methods return `true` when `null` is passed as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-242">Ottiene un valore che indica se la raccolta è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-242">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a2ed4-243">Sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-243">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-244">Oggetto <xref:System.Security.PermissionSet> non può essere di sola lettura, pertanto questa proprietà è sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-244">A <xref:System.Security.PermissionSet> cannot be read-only, so this property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-245">Esempio di codice seguente viene illustrato il valore restituito dal <xref:System.Security.PermissionSet.IsReadOnly%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-245">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsReadOnly%2A> property.</span></span> <span data-ttu-id="a2ed4-246">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-246">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#7)]
 [!code-csharp[System.Security.PermissionSet#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#7)]
 [!code-vb[System.Security.PermissionSet#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.PermissionSet target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubsetOf(class System.Security.PermissionSet target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As PermissionSet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::PermissionSet ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="a2ed4-247">Set di autorizzazioni da testare per la relazione di subset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-247">The permission set to test for the subset relationship.</span>
          </span>
          <span data-ttu-id="a2ed4-248">Deve essere un oggetto <see cref="T:System.Security.PermissionSet" /> o <see cref="T:System.Security.NamedPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-248">This must be either a <see cref="T:System.Security.PermissionSet" /> or a <see cref="T:System.Security.NamedPermissionSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-249">Determina se l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente è un sottoinsieme dell'oggetto <see cref="T:System.Security.PermissionSet" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-249">Determines whether the current <see cref="T:System.Security.PermissionSet" /> is a subset of the specified <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-250">
            <see langword="true" /> se l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente è un sottoinsieme del parametro <paramref name="target" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-250">
              <see langword="true" /> if the current <see cref="T:System.Security.PermissionSet" /> is a subset of the <paramref name="target" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-251">A <xref:System.Security.PermissionSet> è un subset della destinazione <xref:System.Security.PermissionSet> se tutte le richieste eseguite con esito positivo per il <xref:System.Security.PermissionSet> inoltre avere esito positivo per la destinazione.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-251">A <xref:System.Security.PermissionSet> is a subset of the target <xref:System.Security.PermissionSet> if all demands that succeed for the <xref:System.Security.PermissionSet> also succeed for the target.</span></span> <span data-ttu-id="a2ed4-252">Che la destinazione contiene almeno le autorizzazioni contenute nel subset.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-252">That is, the target contains at least the permissions contained in the subset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-253">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.IsSubsetOf%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-253">The following code example shows the use of the <xref:System.Security.PermissionSet.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="a2ed4-254">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-254">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#11)]
 [!code-csharp[System.Security.PermissionSet#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#11)]
 [!code-vb[System.Security.PermissionSet#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-255">Ottiene un valore che indica se la raccolta è sicuramente thread-safe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-255">Gets a value indicating whether the collection is guaranteed to be thread safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a2ed4-256">Sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-256">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-257"><xref:System.Security.PermissionSet> gestisce automaticamente la sicurezza dei thread, pertanto questa proprietà è sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-257"><xref:System.Security.PermissionSet> does not automatically handle thread safety, so this property is always `false`.</span></span>  
  
 <span data-ttu-id="a2ed4-258">Questo metodo è necessario per supportare <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-258">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-259">Esempio di codice seguente viene illustrato il valore restituito dal <xref:System.Security.PermissionSet.IsSynchronized%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-259">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsSynchronized%2A> property.</span></span> <span data-ttu-id="a2ed4-260">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-260">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#6)]
 [!code-csharp[System.Security.PermissionSet#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#6)]
 [!code-vb[System.Security.PermissionSet#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-261">Determina se <see cref="T:System.Security.PermissionSet" /> è <see langword="Unrestricted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-261">Determines whether the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-262">
            <see langword="true" /> se <see cref="T:System.Security.PermissionSet" /> è <see langword="Unrestricted" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-262">
              <see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-263">Un `Unrestricted` <xref:System.Security.PermissionSet> contiene tutte le autorizzazioni che implementano il <xref:System.Security.Permissions.IUnrestrictedPermission> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-263">An `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-264">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.IsUnrestricted%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-264">The following code example shows the use of the <xref:System.Security.PermissionSet.IsUnrestricted%2A> method.</span></span> <span data-ttu-id="a2ed4-265">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-265">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#19)]
 [!code-csharp[System.Security.PermissionSet#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#19)]
 [!code-vb[System.Security.PermissionSet#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PermitOnly();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-266">Determina l'annullamento di tutti i metodi <see cref="M:System.Security.PermissionSet.Demand" /> che attraversano il codice chiamante per un <see cref="T:System.Security.PermissionSet" /> che non è un sottoinsieme del <see cref="T:System.Security.PermissionSet" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-266">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for any <see cref="T:System.Security.PermissionSet" /> that is not a subset of the current <see cref="T:System.Security.PermissionSet" /> to fail.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-267"><xref:System.Security.PermissionSet.PermitOnly%2A> è simile a <xref:System.Security.PermissionSet.Deny%2A>, perché entrambi provocano l'analisi dello stack se avranno esito positivo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-267"><xref:System.Security.PermissionSet.PermitOnly%2A> is similar to <xref:System.Security.PermissionSet.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="a2ed4-268">La differenza è che <xref:System.Security.PermissionSet.Deny%2A> specifica le autorizzazioni che provocano il percorso, di stack ma <xref:System.Security.PermissionSet.PermitOnly%2A> specifica solo le autorizzazioni che non provocano il percorso di stack.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-268">The difference is that <xref:System.Security.PermissionSet.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.PermissionSet.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span> <span data-ttu-id="a2ed4-269">Chiamare questo metodo per verificare che il codice può essere utilizzato per accedere solo le risorse specificate.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-269">Call this method to ensure that your code can be used to access only the specified resources.</span></span>  
  
 <span data-ttu-id="a2ed4-270"><xref:System.Security.PermissionSet.PermitOnly%2A> viene ignorato per un'autorizzazione non concessa in quanto non sarà possibile effettuare una richiesta di tale autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-270"><xref:System.Security.PermissionSet.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission cannot succeed.</span></span> <span data-ttu-id="a2ed4-271">Tuttavia, se il codice inferiore nello stack di in un secondo momento chiama <xref:System.Security.PermissionSet.Demand%2A> per l'autorizzazione, un <xref:System.Security.SecurityException> viene generata quando il percorso stack raggiunge il codice che ha tentato di chiamare <xref:System.Security.PermissionSet.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-271">However, if code lower on the call stack later calls <xref:System.Security.PermissionSet.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.PermissionSet.PermitOnly%2A>.</span></span> <span data-ttu-id="a2ed4-272">In questo modo il codice che ha chiamato <xref:System.Security.PermissionSet.PermitOnly%2A> non dispone dell'autorizzazione, anche se chiamato <xref:System.Security.PermissionSet.PermitOnly%2A> per tale autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-272">This is because the code that called <xref:System.Security.PermissionSet.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.PermissionSet.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="a2ed4-273">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-273">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission RemovePermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission RemovePermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemovePermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ RemovePermission(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass">
          <span data-ttu-id="a2ed4-274">Tipo di autorizzazione da eliminare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-274">The type of permission to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-275">Rimuove un'autorizzazione di un determinato tipo dal set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-275">Removes a permission of a certain type from the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-276">Autorizzazione rimossa dal set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-276">The permission removed from the set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="a2ed4-277">È possibile rimuovere le autorizzazioni da un set di autorizzazioni senza restrizioni.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-277">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="a2ed4-278">L'autorizzazione impostata rimane illimitato dopo che si tenta di rimuovere l'autorizzazione e non viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-278">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 <span data-ttu-id="a2ed4-279">Il codice c# seguente tenta di rimuovere il <xref:System.Security.Permissions.FileIOPermission> dal `FullTrust` set di autorizzazioni, ma non viene rimossa l'autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-279">The following C# code attempts to remove the <xref:System.Security.Permissions.FileIOPermission> from the `FullTrust` permission set, but the permission is not removed.</span></span>  
  
```  
PolicyLevel myPol = PolicyLevel.CreateAppDomainLevel();  
PermissionSet myPermSet = myPol.GetNamedPermissionSet("FullTrust");  
myPermSet.RemovePermission(typeof(FileIOPermission));  
```  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-280">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.RemovePermission%2A> metodo per rimuovere un <xref:System.Security.Permissions.FileIOPermission> da un'autorizzazione impostata.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-280">The following code example shows the use of the <xref:System.Security.PermissionSet.RemovePermission%2A> method to remove a <xref:System.Security.Permissions.FileIOPermission> from a permission set.</span></span> <span data-ttu-id="a2ed4-281">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-281">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#15)]
 [!code-csharp[System.Security.PermissionSet#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#15)]
 [!code-vb[System.Security.PermissionSet#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2ed4-282">Il metodo viene chiamato dall'oggetto <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-282">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a2ed4-283">Quando si eredita da <see cref="T:System.Security.PermissionSet" />, è possibile modificare il comportamento del <see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /> metodo eseguendo l'override di <see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /> metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a2ed4-283">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemovePermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission RemovePermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission RemovePermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RemovePermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ RemovePermissionImpl(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass">
          <span data-ttu-id="a2ed4-284">Tipo dell’autorizzazione da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-284">The type of the permission to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-285">Rimuove un'autorizzazione di un determinato tipo dal set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-285">Removes a permission of a certain type from the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-286">Autorizzazione rimossa dal set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-286">The permission removed from the set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-287">Il <xref:System.Security.PermissionSet.RemovePermissionImpl%2A> metodo è l'implementazione per il <xref:System.Security.PermissionSet.RemovePermission%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-287">The <xref:System.Security.PermissionSet.RemovePermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.RemovePermission%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a2ed4-288">È possibile rimuovere le autorizzazioni da un set di autorizzazioni senza restrizioni.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-288">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="a2ed4-289">L'autorizzazione impostata rimane illimitato dopo che si tenta di rimuovere l'autorizzazione e non viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-289">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2ed4-290">Il metodo viene chiamato dall'oggetto <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-290">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RevertAssert">
      <MemberSignature Language="C#" Value="public static void RevertAssert ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAssert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RevertAssert" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAssert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAssert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-291">Provoca la rimozione di qualsiasi metodo <see cref="M:System.Security.CodeAccessPermission.Assert" /> precedente per il frame corrente, annullandone la validità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-291">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame to be removed and no longer be in effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-292">Se è presente alcun <xref:System.Security.CodeAccessPermission.Assert%2A> per il frame corrente, un <xref:System.ExecutionEngineException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-292">If there is no <xref:System.Security.CodeAccessPermission.Assert%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2ed4-293">Non esistono metodi <see cref="M:System.Security.CodeAccessPermission.Assert" /> precedenti per il frame corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-293">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission SetPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission SetPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ SetPermission(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">
          <span data-ttu-id="a2ed4-294">Autorizzazione da impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-294">The permission to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-295">Imposta un'autorizzazione su <see cref="T:System.Security.PermissionSet" />, sostituendo eventuali autorizzazioni dello stesso tipo esistenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-295">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-296">Autorizzazione impostata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-296">The set permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-297">Questo metodo rimuove qualsiasi oggetto di autorizzazione esistenti dello stesso tipo dal <xref:System.Security.PermissionSet> e lo sostituisce con il `perm` parametro.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-297">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="a2ed4-298">Se un'autorizzazione che implementa <xref:System.Security.Permissions.IUnrestrictedPermission> è impostata su un <xref:System.Security.PermissionSet> ovvero <xref:System.Security.Permissions.PermissionState.Unrestricted>, il valore risultante <xref:System.Security.PermissionSet> non è più `Unrestricted`.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-298">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-299">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.SetPermission%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-299">The following code example shows the use of the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span> <span data-ttu-id="a2ed4-300">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-300">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#16)]
 [!code-csharp[System.Security.PermissionSet#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#16)]
 [!code-vb[System.Security.PermissionSet#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2ed4-301">Il metodo viene chiamato dall'oggetto <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-301">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a2ed4-302">Quando si eredita da <see cref="T:System.Security.PermissionSet" />, è possibile modificare il comportamento del <see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /> metodo eseguendo l'override di <see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /> metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a2ed4-302">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission SetPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission SetPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ SetPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">
          <span data-ttu-id="a2ed4-303">Autorizzazione da impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-303">The permission to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-304">Imposta un'autorizzazione su <see cref="T:System.Security.PermissionSet" />, sostituendo eventuali autorizzazioni dello stesso tipo esistenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-304">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-305">Autorizzazione impostata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-305">The set permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-306">Il <xref:System.Security.PermissionSet.SetPermissionImpl%2A> metodo è l'implementazione per il <xref:System.Security.PermissionSet.SetPermission%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-306">The <xref:System.Security.PermissionSet.SetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="a2ed4-307">Questo metodo rimuove qualsiasi oggetto di autorizzazione esistenti dello stesso tipo dal <xref:System.Security.PermissionSet> e lo sostituisce con il `perm` parametro.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-307">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="a2ed4-308">Se un'autorizzazione che implementa <xref:System.Security.Permissions.IUnrestrictedPermission> è impostata su un <xref:System.Security.PermissionSet> ovvero <xref:System.Security.Permissions.PermissionState.Unrestricted>, il valore risultante <xref:System.Security.PermissionSet> non è più `Unrestricted`.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-308">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2ed4-309">Il metodo viene chiamato dall'oggetto <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-309">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-310">Ottiene l'oggetto radice della raccolta corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-310">Gets the root object of the current collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a2ed4-311">Oggetto radice della raccolta corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-311">The root object of the current collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-312">Questo metodo è necessario per supportare <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-312">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-313">Esempio di codice seguente viene illustrato l'utilizzo di <xref:System.Security.PermissionSet.SyncRoot%2A> proprietà per ottenere l'oggetto radice della raccolta corrente.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-313">The following code example shows the use of <xref:System.Security.PermissionSet.SyncRoot%2A> property to get the root object of the current collection.</span></span> <span data-ttu-id="a2ed4-314">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-314">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#8)]
 [!code-csharp[System.Security.PermissionSet#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#8)]
 [!code-vb[System.Security.PermissionSet#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="a2ed4-315">Oggetto che ha avviato il callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-315">The object that initiated the callback.</span>
          </span>
          <span data-ttu-id="a2ed4-316">La funzionalità di questo parametro non è attualmente implementata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-316">The functionality for this parameter is not currently implemented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-317">Viene eseguito dopo la deserializzazione dell'intero grafico di oggetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-317">Runs when the entire object graph has been deserialized.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-318">Restituisce una rappresentazione di stringa di <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-318">Returns a string representation of the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-319">Rappresentazione di <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-319">A representation of the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-320">La rappresentazione di stringa è utile per il debug per visualizzare lo stato di un <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-320">The string representation is useful in debugging to see the state of a <xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-321">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.ToString%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-321">The following code example shows the use of the <xref:System.Security.PermissionSet.ToString%2A> method.</span></span> <span data-ttu-id="a2ed4-322">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-322">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#10)]
 [!code-csharp[System.Security.PermissionSet#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#10)]
 [!code-vb[System.Security.PermissionSet#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public virtual System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2ed4-323">Crea una codifica XML dell'oggetto di sicurezza e del suo stato corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-323">Creates an XML encoding of the security object and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-324">Codifica XML dell'oggetto di sicurezza, che include le eventuali informazioni sullo stato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-324">An XML encoding of the security object, including any state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a2ed4-325">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.ToXml%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-325">The following code example shows the use of the <xref:System.Security.PermissionSet.ToXml%2A> method.</span></span> <span data-ttu-id="a2ed4-326">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-326">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Union (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Union(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Union(System::Security::PermissionSet ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="a2ed4-327">Set di autorizzazioni per formare l'unione con l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-327">The permission set to form the union with the current <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ed4-328">Crea un <see cref="T:System.Security.PermissionSet" /> che è l'unione tra l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente e l'oggetto <see cref="T:System.Security.PermissionSet" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-328">Creates a <see cref="T:System.Security.PermissionSet" /> that is the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ed4-329">Nuovo set di autorizzazioni che rappresenta l'unione fra l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente e l'oggetto <see cref="T:System.Security.PermissionSet" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ed4-329">A new permission set that represents the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ed4-330">Il risultato di una chiamata a <xref:System.Security.PermissionSet.Union%2A> è un <xref:System.Security.PermissionSet> che rappresenta tutte le operazioni rappresentate dall'oggetto corrente <xref:System.Security.PermissionSet> nonché tutte le operazioni rappresentate dall'oggetto <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-330">The result of a call to <xref:System.Security.PermissionSet.Union%2A> is a <xref:System.Security.PermissionSet> that represents all the operations represented by the current <xref:System.Security.PermissionSet> as well as all the operations represented by the specified <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="a2ed4-331">Se uno dei due set è `Unrestricted`, l'unione è `Unrestricted` anche.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-331">If either set is `Unrestricted`, the union is `Unrestricted` as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2ed4-332">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Security.PermissionSet.Union%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-332">The following code example shows the use of the <xref:System.Security.PermissionSet.Union%2A> method.</span></span> <span data-ttu-id="a2ed4-333">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="a2ed4-333">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#13)]
 [!code-csharp[System.Security.PermissionSet#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#13)]
 [!code-vb[System.Security.PermissionSet#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>