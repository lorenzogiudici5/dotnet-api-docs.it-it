<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PermissionSet.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c95f6c01a7b25f39bc7cb8067cfb65f467a5def79.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95f6c01a7b25f39bc7cb8067cfb65f467a5def79</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.PermissionSet">
          <source>Represents a collection that can contain many different types of permissions.</source>
          <target state="translated">Rappresenta una raccolta che contiene molti tipi diversi di autorizzazioni.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.PermissionSet">
          <source>You can use <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> to perform operations on several different permissions as a group.</source>
          <target state="translated">È possibile utilizzare <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> per eseguire operazioni su più autorizzazioni diverse come gruppo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.PermissionSet">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class and members.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe e i membri.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.PermissionSet">
          <source>for inheritors to be fully trusted, or in an assembly that is signed with the Microsoft <ph id="ph1">&lt;see cref="T:System.Security.Policy.StrongName" /&gt;</ph>.</source>
          <target state="translated">per gli eredi siano completamente attendibili, o in un assembly firmato con Microsoft <ph id="ph1">&lt;see cref="T:System.Security.Policy.StrongName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Security.PermissionSet">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>One of the enumeration values that specifies the permission set's access to resources.</source>
          <target state="translated">Uno dei valori dell'enumerazione che specifica l'accesso del set di autorizzazioni alle risorse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> con l'oggetto <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>The <ph id="ph1">`Unrestricted`</ph> state allows all permissions that implement the <ph id="ph2">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface, while <ph id="ph3">`None`</ph> allows no permissions.</source>
          <target state="translated">Il <ph id="ph1">`Unrestricted`</ph> stato consente tutte le autorizzazioni che implementano il <ph id="ph2">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interfaccia, mentre <ph id="ph3">`None`</ph> non consente autorizzazioni.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> on an empty <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> to define the set in greater detail.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> su un oggetto vuoto <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> per definire il set in maggiore dettaglio.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.%23ctor%2A&gt;</ph> constructor to create a permission set with a permission state of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.%23ctor%2A&gt;</ph> costruttore per creare un'autorizzazione impostata con uno stato di autorizzazione <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>The <ph id="ph1">&lt;paramref name="state" /&gt;</ph> parameter is not a valid <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="state" /&gt;</ph> non è un oggetto <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>The set from which to take the value of the new <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to create an empty <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Set da cui ottenere il valore del nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> oppure <ph id="ph2">&lt;see langword="null" /&gt;</ph> per creare un oggetto <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> vuoto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> class with initial values taken from the <ph id="ph2">&lt;paramref name="permSet" /&gt;</ph> parameter.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> utilizzando come valori iniziali i valori del parametro <ph id="ph2">&lt;paramref name="permSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>The new <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contains copies of the permissions contained in the specified <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Il nuovo <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contiene copie delle autorizzazioni contenute nell'oggetto specificato <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>This is equivalent to <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> when the <ph id="ph2">`permSet`</ph> parameter is not <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Ciò equivale a <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> quando il <ph id="ph2">`permSet`</ph> parametro non è <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The permission to add.</source>
          <target state="translated">Autorizzazione da aggiungere.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>Adds a specified permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Aggiunge un'autorizzazione specificata a <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The union of the permission added and any permission of the same type that already exists in the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">L'unione tra l'autorizzazione aggiunta ed eventuali altre autorizzazioni dello stesso tipo esistenti in <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>If a permission of the same type as the added permission already exists in the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">Se un'autorizzazione dello stesso tipo dell'autorizzazione aggiunta già esiste nel <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, la nuova autorizzazione è l'unione dell'oggetto di autorizzazione esistenti e l'oggetto di autorizzazione specificata.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>For example, if a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is added to an <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, the resulting union is the original <ph id="ph4">`Unrestricted`</ph><ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Ad esempio, se un'autorizzazione che implementa <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> viene aggiunto a un <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, l'unione risulta è originale <ph id="ph4">`Unrestricted`</ph> <ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> method to add a permission to a permission set.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> metodo per aggiungere un'autorizzazione a un set di autorizzazioni.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Il metodo viene chiamato dall'oggetto <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /&gt;</ph> method.</source>
          <target state="translated">Quando si eredita da <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, è possibile modificare il comportamento del <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /&gt;</ph> metodo eseguendo l'override di <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The permission to add.</source>
          <target state="translated">Autorizzazione da aggiungere.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>Adds a specified permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Aggiunge un'autorizzazione specificata a <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The union of the permission added and any permission of the same type that already exists in the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="perm" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Unione tra l'autorizzazione aggiunta e qualsiasi altra autorizzazione dello stesso tipo esistente in <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> oppure <ph id="ph2">&lt;see langword="null" /&gt;</ph> se <ph id="ph3">&lt;paramref name="perm" /&gt;</ph> è <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermissionImpl%2A&gt;</ph> metodo è l'implementazione per il <ph id="ph2">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>If a permission of the same type as the added permission already exists in the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">Se un'autorizzazione dello stesso tipo dell'autorizzazione aggiunta già esiste nel <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, la nuova autorizzazione è l'unione dell'oggetto di autorizzazione esistenti e l'oggetto di autorizzazione specificata.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>For example, if a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is added to an <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, the resulting union is the original <ph id="ph4">`Unrestricted`</ph><ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Ad esempio, se un'autorizzazione che implementa <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> viene aggiunto a un <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, l'unione risulta è originale <ph id="ph4">`Unrestricted`</ph> <ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Il metodo viene chiamato dall'oggetto <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</source>
          <target state="translated">Dichiara che il codice chiamante può accedere alla risorsa protetta da una richiesta di autorizzazione tramite il codice che chiama il metodo, anche se ai chiamanti più in alto nello stack non è stata concessa l'autorizzazione per accedere alla risorsa.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>Using <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> can create security vulnerabilities.</source>
          <target state="translated">Se si utilizza il metodo <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph>, è possibile che vengano generati problemi di sicurezza.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>This is the only way to assert multiple permissions at the same time within a frame because only one <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> can be active on a frame.</source>
          <target state="translated">Questo è l'unico modo per asserire più autorizzazioni contemporaneamente all'interno di un frame in quanto un solo <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> può essere attivo su un frame.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> is only effective for granted permissions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> è valido solo per le autorizzazioni concesse.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>Call the <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType&gt;</ph> method to cancel an active <ph id="ph3">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph>.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType&gt;</ph> metodo per annullare un oggetto attivo <ph id="ph3">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>Because calling the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</source>
          <target state="translated">Poiché la chiamata di <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> metodo rimuove il requisito che tutto il codice nella catena di chiamate deve essere concessa l'autorizzazione per accedere alla risorsa specificata, può provocare problemi di sicurezza se usata in modo non corretto o inappropriato.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>Therefore, it should be used with great caution.</source>
          <target state="translated">Pertanto, devono essere utilizzata con estrema cautela.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> instance asserted has not been granted to the asserting code.</source>
          <target state="translated">L'istanza di <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> asserita non è stata concessa al codice di asserzione.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>There is already an active <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> for the current frame.</source>
          <target state="translated">Esiste già un oggetto <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> attivo per il fotogramma corrente.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contains permissions that are not derived from <ph id="ph2">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>.</source>
          <target state="translated">Ottiene un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contiene autorizzazioni che non sono derivate da <ph id="ph2">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contains permissions that are not derived from <ph id="ph3">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contiene autorizzazioni che non sono derivate da <ph id="ph3">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">Stringa che rappresenta uno dei formati di codifica seguenti: ASCII, Unicode o Binary.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">I valori possibili sono "XMLASCII" o "XML", "XMLUNICODE" e "BINARY".</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>An XML-encoded permission set.</source>
          <target state="translated">Set di autorizzazioni con codifica XML.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">Stringa che rappresenta uno dei formati di codifica seguenti: ASCII, Unicode o Binary.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">I valori possibili sono "XMLASCII" o "XML", "XMLUNICODE" e "BINARY".</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Converts an encoded <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> from one XML encoding format to another XML encoding format.</source>
          <target state="translated">Converte un oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> codificato da un formato di codifica XML in un altro formato di codifica XML.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>An encrypted permission set with the specified output format.</source>
          <target state="translated">Set di autorizzazioni crittografato con il formato di output specificato.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Do not use this method.</source>
          <target state="translated">Non usare questo metodo.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>In all cases.</source>
          <target state="translated">In tutti i casi.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Copy">
          <source>Creates a copy of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Crea una copia di <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Copy">
          <source>A copy of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Copia di <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>A copy of a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> represents the same access to resources as the original object.</source>
          <target state="translated">Una copia di un <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> rappresenta lo stesso accesso alle risorse dell'oggetto originale.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>Changes made to the copy do not affect the original permission set.</source>
          <target state="translated">Le modifiche apportate alla copia non influiscono sul set di autorizzazioni originale.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> method to create a copy of a permission set.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> metodo per creare una copia di un set di autorizzazioni.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The target array to which to copy.</source>
          <target state="translated">Matrice di destinazione in cui eseguire la copia.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The starting position in the array to begin copying (zero based).</source>
          <target state="translated">La posizione iniziale nella matrice da cui iniziare la copia (in base zero).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>Copies the permission objects of the set to the indicated location in an <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>.</source>
          <target state="translated">Copia gli oggetti di autorizzazione del set nel percorso indicato in un oggetto <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="array" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="array" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="array" /&gt;</ph> parameter has more than one dimension.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="array" /&gt;</ph> ha più di una dimensione.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> parameter is out of the range of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph> parameter.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="index" /&gt;</ph> è compreso nell'intervallo del parametro <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.Count">
          <source>Gets the number of permission objects contained in the permission set.</source>
          <target state="translated">Ottiene il numero di oggetti autorizzazioni contenuti nel set di autorizzazioni.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>The number of permission objects contained in the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Numero di oggetti autorizzazioni contenuti nell'oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>In the <ph id="ph1">`None`</ph> or <ph id="ph2">`Unrestricted`</ph> state this returns zero, because no actual permission object instances are used.</source>
          <target state="translated">Nel <ph id="ph1">`None`</ph> o <ph id="ph2">`Unrestricted`</ph> stato restituisce zero, perché viene utilizzata alcuna istanza di oggetto di autorizzazione effettivo.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Count%2A&gt;</ph> property to get the number of permission objects in a permission set.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.Count%2A&gt;</ph> proprietà per ottenere il numero di oggetti autorizzazioni in un set di autorizzazioni.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Demand">
          <source>Forces a <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</source>
          <target state="translated">Forza un oggetto <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> in fase di esecuzione se a tutti i chiamanti nella parte superiore dello stack di chiamate non sono state concesse le autorizzazioni specificate dall'istanza corrente.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>Use <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> to ensure that all callers have all permissions in the set with one operation.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> su un <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> per garantire che tutti i chiamanti dispongano di tutte le autorizzazioni del set con una sola operazione.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</source>
          <target state="translated">Le autorizzazioni del codice che chiama questo metodo non vengono esaminate; il controllo inizia da parte del chiamante immediato del codice e continua fino allo stack.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> succeeds only if no <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> ha esito positivo solo se nessun <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>If the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contains permissions that do not inherit from <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission&gt;</ph>, the <ph id="ph3">`Demand`</ph> methods of those permissions are called as well.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contiene autorizzazioni che non ereditano da <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission&gt;</ph>, <ph id="ph3">`Demand`</ph> vengono chiamati anche i metodi di tali autorizzazioni.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> method to demand all the permissions in a permission set.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> metodo per richiedere tutte le autorizzazioni in un set di autorizzazioni.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Demand">
          <source>A caller in the call chain does not have the permission demanded.</source>
          <target state="translated">Uno dei chiamanti nella sequenza delle chiamate non ha l'autorizzazione richiesta.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Deny">
          <source>Causes any <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> to fail.</source>
          <target state="translated">Causa la non riuscita di tutti i metodi <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> che attraversano il codice chiamante per un'autorizzazione che presenta un'intersezione con un'autorizzazione di un tipo contenuto nell'oggetto <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source>This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</source>
          <target state="translated">Questo metodo impedisce ai chiamanti più in alto nello stack di chiamate di accedere alla risorsa protetta tramite il codice che chiama questo metodo, anche se i chiamanti dispongono dell'autorizzazione per accedervi.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> from being used to access the resource protected by the denied permission.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> può limitare la responsabilità del programmatore o impedire vulnerabilità della sicurezza accidentale, in quanto impedisce che il metodo che chiama <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> venga utilizzato per accedere alla risorsa protetta dall'autorizzazione negata.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source>If a method calls <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> on a permission, and if a <ph id="ph2">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the <ph id="ph3">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>.</source>
          <target state="translated">Se chiama un metodo <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> su un'autorizzazione e se un <ph id="ph2">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> per tale autorizzazione viene richiamato da un chiamante inferiore nello stack di chiamate, la verifica della sicurezza non riesce quando raggiunge il <ph id="ph3">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> is ignored for a permission that is not granted because a demand for that permission cannot succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> viene ignorato per un'autorizzazione non concessa in quanto non sarà possibile effettuare una richiesta di tale autorizzazione.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Deny">
          <source>A previous call to <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Deny" /&gt;</ph> has already restricted the permissions for the current stack frame.</source>
          <target state="translated">Una precedente chiamata a <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Deny" /&gt;</ph> ha già limitato le autorizzazioni per lo stack frame corrente.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>The object to compare with the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Oggetto da confrontare con l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph> object is equal to the current <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Determina se l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> o <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph> specificato è uguale all'oggetto <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto specificato è uguale all'oggetto <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente. In caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>Equality is determined by the permissions contained in the permission set specified by <ph id="ph1">`obj`</ph>.</source>
          <target state="translated">L'uguaglianza è determinata dalle autorizzazioni contenute nel set di autorizzazioni specificato da <ph id="ph1">`obj`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source><ph id="ph1">`obj`</ph> can be either a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> object or a <ph id="ph3">&lt;xref:System.Security.NamedPermissionSet&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`obj`</ph> può essere un <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> oggetto o un <ph id="ph3">&lt;xref:System.Security.NamedPermissionSet&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>If <ph id="ph1">`obj`</ph> is a <ph id="ph2">&lt;xref:System.Security.NamedPermissionSet&gt;</ph>, the name and description are ignored.</source>
          <target state="translated">Se <ph id="ph1">`obj`</ph> è un <ph id="ph2">&lt;xref:System.Security.NamedPermissionSet&gt;</ph>, il nome e descrizione vengono ignorati.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <ph id="ph1">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">Codifica XML da usare per ricostruire l'oggetto di sicurezza.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs a security object with a specified state from an XML encoding.</source>
          <target state="translated">Ricostruisce un oggetto di sicurezza con uno stato specificato da una codifica XML.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.FromXml%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.FromXml%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="et" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="et" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="et" /&gt;</ph> parameter is not a valid permission element.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="et" /&gt;</ph> non è un elemento di autorizzazione valido.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="et" /&gt;</ph> parameter's version number is not supported.</source>
          <target state="translated">Il numero di versione del parametro <ph id="ph1">&lt;paramref name="et" /&gt;</ph> non è supportato.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">Restituisce un enumeratore per le autorizzazioni del set.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">Oggetto enumeratore per le autorizzazioni del set.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>Use the enumerator as an index to access individual permission objects in the set.</source>
          <target state="translated">Utilizzare l'enumeratore di un indice per accedere agli oggetti di autorizzazione singolo nel set.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> method to list all the permissions in a permission set.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> metodo per elencare tutte le autorizzazioni in un set di autorizzazioni.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetEnumerator" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /&gt;</ph> method.</source>
          <target state="translated">Quando si eredita da <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, è possibile modificare il comportamento del <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetEnumerator" /&gt;</ph> metodo eseguendo l'override di <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumeratorImpl">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">Restituisce un enumeratore per le autorizzazioni del set.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumeratorImpl">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">Oggetto enumeratore per le autorizzazioni del set.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumeratorImpl">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumeratorImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumeratorImpl%2A&gt;</ph> metodo è l'implementazione per il <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetHashCode">
          <source>Gets a hash code for the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> object that is suitable for use in hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">Ottiene un codice hash per l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> adatto per l'uso in algoritmi di hash e in strutture di dati, come una tabella hash.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> object.</source>
          <target state="translated">Codice hash per l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetHashCode">
          <source>The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> objects.</source>
          <target state="translated">Il codice hash per due istanze dello stesso set di autorizzazioni potrebbe essere diverso, pertanto un codice hash non deve essere utilizzato per confrontare due <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>The type of the desired permission object.</source>
          <target state="translated">Tipo dell'oggetto autorizzazioni desiderato.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">Ottiene un oggetto autorizzazioni del tipo specificato, se è presente nel set.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>A copy of the permission object of the type specified by the <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> parameter contained in the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Copia dell'oggetto di autorizzazione del tipo specificato dal parametro <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> contenuto in <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> oppure <ph id="ph3">&lt;see langword="null" /&gt;</ph> se non ne esiste nessuno.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Il metodo restituisce <ph id="ph1">`null`</ph> per un <ph id="ph2">`Unrestricted`</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>Although an <ph id="ph1">`Unrestricted`</ph><ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated">Sebbene un <ph id="ph1">`Unrestricted`</ph> <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> contiene tutte le autorizzazioni, non dispone di istanze reali da restituire.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Quando si eredita da <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, è possibile modificare il comportamento del <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /&gt;</ph> metodo eseguendo l'override di <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>The type of the permission object.</source>
          <target state="translated">Tipo dell’oggetto di autorizzazione.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">Ottiene un oggetto autorizzazioni del tipo specificato, se è presente nel set.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>A copy of the permission object, of the type specified by the <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> parameter, contained in the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Copia dell'oggetto autorizzazioni del tipo specificato dal parametro <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> contenuto in <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> oppure <ph id="ph3">&lt;see langword="null" /&gt;</ph> se non ne esiste alcuno.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetPermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetPermission%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetPermissionImpl%2A&gt;</ph> metodo è l'implementazione per il <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetPermission%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Il metodo restituisce <ph id="ph1">`null`</ph> per un <ph id="ph2">`Unrestricted`</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>Although an <ph id="ph1">`Unrestricted`</ph><ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated">Sebbene un <ph id="ph1">`Unrestricted`</ph> <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> contiene tutte le autorizzazioni, non dispone di istanze reali da restituire.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>A permission set to intersect with the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Set di autorizzazioni da intersecare con l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>Creates and returns a permission set that is the intersection of the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Crea e restituisce un set di autorizzazioni che rappresenta l'intersezione tra l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente e l'oggetto <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>A new permission set that represents the intersection of the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified target.</source>
          <target state="translated">Nuovo set di autorizzazioni che rappresenta l'intersezione fra l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente e la destinazione specificata.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>This object is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the intersection is empty.</source>
          <target state="translated">Questo oggetto è <ph id="ph1">&lt;see langword="null" /&gt;</ph> se l'intersezione è vuota.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</source>
          <target state="translated">L'intersezione di due set di autorizzazioni è un set di autorizzazioni che descrive il set di operazioni che hanno in comune.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</source>
          <target state="translated">In particolare, rappresenta le autorizzazioni minime in modo che qualsiasi richiesta che supera entrambe autorizzazioni passino anche loro intersezione.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's <ph id="ph1">`Intersect`</ph> method; the resulting permission is included in the resulting <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Per ogni tipo di autorizzazione che è presente in entrambi i set, le due istanze di tali autorizzazioni vengono intersecate tramite l'autorizzazione <ph id="ph1">`Intersect`</ph> metodo; l'autorizzazione risulta viene inclusa nella finestra di <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>Permission types that exist in only one of the two sets are excluded from the resulting set.</source>
          <target state="translated">I tipi di autorizzazione che esistono solo in uno dei due set vengono esclusi dal set risultante.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Intersect%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.Intersect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsEmpty">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is empty.</source>
          <target state="translated">Ottiene un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> è vuoto.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is empty; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> è vuoto; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsEmpty">
          <source>A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> può essere vuoto e ancora contenere istanze di autorizzazioni se tali autorizzazioni sono in stato di restrizioni.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsEmpty">
          <source>Permissions are in a fully restricted state if their <ph id="ph1">`IsSubsetOf`</ph> methods return <ph id="ph2">`true`</ph> when <ph id="ph3">`null`</ph> is passed as a parameter.</source>
          <target state="translated">Le autorizzazioni sono in uno stato senza restrizioni se i relativi <ph id="ph1">`IsSubsetOf`</ph> restituiscono <ph id="ph2">`true`</ph> quando <ph id="ph3">`null`</ph> viene passato come parametro.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>Gets a value indicating whether the collection is read-only.</source>
          <target state="translated">Ottiene un valore che indica se la raccolta è di sola lettura.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> cannot be read-only, so this property is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> non può essere di sola lettura, pertanto questa proprietà è sempre <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>The following code example shows the value returned by the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsReadOnly%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato il valore restituito dal <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsReadOnly%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>The permission set to test for the subset relationship.</source>
          <target state="translated">Set di autorizzazioni da testare per la relazione di subset.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>This must be either a <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> or a <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Deve essere un oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> o <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is a subset of the specified <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Determina se l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente è un sottoinsieme dell'oggetto <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is a subset of the <ph id="ph3">&lt;paramref name="target" /&gt;</ph> parameter; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente è un sottoinsieme del parametro <ph id="ph3">&lt;paramref name="target" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> is a subset of the target <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> if all demands that succeed for the <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> also succeed for the target.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> è un subset della destinazione <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> se tutte le richieste eseguite con esito positivo per il <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> inoltre avere esito positivo per la destinazione.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>That is, the target contains at least the permissions contained in the subset.</source>
          <target state="translated">Che la destinazione contiene almeno le autorizzazioni contenute nel subset.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSubsetOf%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSubsetOf%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>Gets a value indicating whether the collection is guaranteed to be thread safe.</source>
          <target state="translated">Ottiene un valore che indica se la raccolta è sicuramente thread-safe.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> does not automatically handle thread safety, so this property is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> gestisce automaticamente la sicurezza dei thread, pertanto questa proprietà è sempre <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>This method is required to support <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Questo metodo è necessario per supportare <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>The following code example shows the value returned by the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSynchronized%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato il valore restituito dal <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSynchronized%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is <ph id="ph2">&lt;see langword="Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Determina se <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> è <ph id="ph2">&lt;see langword="Unrestricted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> è <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>An <ph id="ph1">`Unrestricted`</ph><ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> effectively contains all permissions that implement the <ph id="ph3">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface.</source>
          <target state="translated">Un <ph id="ph1">`Unrestricted`</ph> <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> contiene tutte le autorizzazioni che implementano il <ph id="ph3">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsUnrestricted%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsUnrestricted%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>Causes any <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> that passes through the calling code for any <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is not a subset of the current <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> to fail.</source>
          <target state="translated">Determina l'annullamento di tutti i metodi <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> che attraversano il codice chiamante per un <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> che non è un sottoinsieme del <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> is similar to <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>, in that both cause stack walks to fail when they would otherwise succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> è simile a <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>, perché entrambi provocano l'analisi dello stack se avranno esito positivo.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>The difference is that <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> specifies permissions that will cause the stack walk to fail, but <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> specifies the only permissions that do not cause the stack walk to fail.</source>
          <target state="translated">La differenza è che <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> specifica le autorizzazioni che provocano il percorso, di stack ma <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> specifica solo le autorizzazioni che non provocano il percorso di stack.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>Call this method to ensure that your code can be used to access only the specified resources.</source>
          <target state="translated">Chiamare questo metodo per verificare che il codice può essere utilizzato per accedere solo le risorse specificate.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> is ignored for a permission not granted because a demand for that permission cannot succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> viene ignorato per un'autorizzazione non concessa in quanto non sarà possibile effettuare una richiesta di tale autorizzazione.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>However, if code lower on the call stack later calls <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> for that permission, a <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when the stack walk reaches the code that tried to call <ph id="ph3">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph>.</source>
          <target state="translated">Tuttavia, se il codice inferiore nello stack di in un secondo momento chiama <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> per l'autorizzazione, un <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> viene generata quando il percorso stack raggiunge il codice che ha tentato di chiamare <ph id="ph3">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>This is because the code that called <ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> has not been granted the permission, even though it called <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> for that permission.</source>
          <target state="translated">In questo modo il codice che ha chiamato <ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> non dispone dell'autorizzazione, anche se chiamato <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> per tale autorizzazione.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The type of permission to delete.</source>
          <target state="translated">Tipo di autorizzazione da eliminare.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">Rimuove un'autorizzazione di un determinato tipo dal set.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The permission removed from the set.</source>
          <target state="translated">Autorizzazione rimossa dal set.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated">È possibile rimuovere le autorizzazioni da un set di autorizzazioni senza restrizioni.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">L'autorizzazione impostata rimane illimitato dopo che si tenta di rimuovere l'autorizzazione e non viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The following C# code attempts to remove the <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> from the <ph id="ph2">`FullTrust`</ph> permission set, but the permission is not removed.</source>
          <target state="translated">Il codice c# seguente tenta di rimuovere il <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> dal <ph id="ph2">`FullTrust`</ph> set di autorizzazioni, ma non viene rimossa l'autorizzazione.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> method to remove a <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> from a permission set.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> metodo per rimuovere un <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> da un'autorizzazione impostata.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Il metodo viene chiamato dall'oggetto <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Quando si eredita da <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, è possibile modificare il comportamento del <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /&gt;</ph> metodo eseguendo l'override di <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The type of the permission to remove.</source>
          <target state="translated">Tipo dell’autorizzazione da rimuovere.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">Rimuove un'autorizzazione di un determinato tipo dal set.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The permission removed from the set.</source>
          <target state="translated">Autorizzazione rimossa dal set.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermissionImpl%2A&gt;</ph> metodo è l'implementazione per il <ph id="ph2">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated">È possibile rimuovere le autorizzazioni da un set di autorizzazioni senza restrizioni.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">L'autorizzazione impostata rimane illimitato dopo che si tenta di rimuovere l'autorizzazione e non viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Il metodo viene chiamato dall'oggetto <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RevertAssert">
          <source>Causes any previous <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> for the current frame to be removed and no longer be in effect.</source>
          <target state="translated">Provoca la rimozione di qualsiasi metodo <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> precedente per il frame corrente, annullandone la validità.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RevertAssert">
          <source>If there is no <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> for the current frame, an <ph id="ph2">&lt;xref:System.ExecutionEngineException&gt;</ph> is thrown.</source>
          <target state="translated">Se è presente alcun <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> per il frame corrente, un <ph id="ph2">&lt;xref:System.ExecutionEngineException&gt;</ph> viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RevertAssert">
          <source>There is no previous <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> for the current frame.</source>
          <target state="translated">Non esistono metodi <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> precedenti per il frame corrente.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The permission to set.</source>
          <target state="translated">Autorizzazione da impostare.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>Sets a permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, replacing any existing permission of the same type.</source>
          <target state="translated">Imposta un'autorizzazione su <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, sostituendo eventuali autorizzazioni dello stesso tipo esistenti.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The set permission.</source>
          <target state="translated">Autorizzazione impostata.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>This method removes any existing permission object of the same type from the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> and replaces it with the <ph id="ph2">`perm`</ph> parameter.</source>
          <target state="translated">Questo metodo rimuove qualsiasi oggetto di autorizzazione esistenti dello stesso tipo dal <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> e lo sostituisce con il <ph id="ph2">`perm`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>If a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that is <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, the resulting <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> is no longer <ph id="ph5">`Unrestricted`</ph>.</source>
          <target state="translated">Se un'autorizzazione che implementa <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> è impostata su un <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> ovvero <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, il valore risultante <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> non è più <ph id="ph5">`Unrestricted`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Il metodo viene chiamato dall'oggetto <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /&gt;</ph> method.</source>
          <target state="translated">Quando si eredita da <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, è possibile modificare il comportamento del <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /&gt;</ph> metodo eseguendo l'override di <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The permission to set.</source>
          <target state="translated">Autorizzazione da impostare.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>Sets a permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, replacing any existing permission of the same type.</source>
          <target state="translated">Imposta un'autorizzazione su <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, sostituendo eventuali autorizzazioni dello stesso tipo esistenti.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The set permission.</source>
          <target state="translated">Autorizzazione impostata.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermissionImpl%2A&gt;</ph> metodo è l'implementazione per il <ph id="ph2">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>This method removes any existing permission object of the same type from the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> and replaces it with the <ph id="ph2">`perm`</ph> parameter.</source>
          <target state="translated">Questo metodo rimuove qualsiasi oggetto di autorizzazione esistenti dello stesso tipo dal <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> e lo sostituisce con il <ph id="ph2">`perm`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>If a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that is <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, the resulting <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> is no longer <ph id="ph5">`Unrestricted`</ph>.</source>
          <target state="translated">Se un'autorizzazione che implementa <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> è impostata su un <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> ovvero <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, il valore risultante <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> non è più <ph id="ph5">`Unrestricted`</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Il metodo viene chiamato dall'oggetto <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>Gets the root object of the current collection.</source>
          <target state="translated">Ottiene l'oggetto radice della raccolta corrente.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>The root object of the current collection.</source>
          <target state="translated">Oggetto radice della raccolta corrente.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>This method is required to support <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Questo metodo è necessario per supportare <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>The following code example shows the use of <ph id="ph1">&lt;xref:System.Security.PermissionSet.SyncRoot%2A&gt;</ph> property to get the root object of the current collection.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Security.PermissionSet.SyncRoot%2A&gt;</ph> proprietà per ottenere l'oggetto radice della raccolta corrente.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The object that initiated the callback.</source>
          <target state="translated">Oggetto che ha avviato il callback.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The functionality for this parameter is not currently implemented.</source>
          <target state="translated">La funzionalità di questo parametro non è attualmente implementata.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>Runs when the entire object graph has been deserialized.</source>
          <target state="translated">Viene eseguito dopo la deserializzazione dell'intero grafico di oggetti.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToString">
          <source>Returns a string representation of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Restituisce una rappresentazione di stringa di <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToString">
          <source>A representation of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Rappresentazione di <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToString">
          <source>The string representation is useful in debugging to see the state of a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">La rappresentazione di stringa è utile per il debug per visualizzare lo stato di un <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToString">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToString%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToString%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToString">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToXml">
          <source>Creates an XML encoding of the security object and its current state.</source>
          <target state="translated">Crea una codifica XML dell'oggetto di sicurezza e del suo stato corrente.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToXml">
          <source>An XML encoding of the security object, including any state information.</source>
          <target state="translated">Codifica XML dell'oggetto di sicurezza, che include le eventuali informazioni sullo stato.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToXml">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToXml%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToXml%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToXml">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>The permission set to form the union with the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Set di autorizzazioni per formare l'unione con l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is the union of the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Crea un <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> che è l'unione tra l'oggetto <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente e l'oggetto <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>A new permission set that represents the union of the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Nuovo set di autorizzazioni che rappresenta l'unione fra l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> corrente e l'oggetto <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>The result of a call to <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> is a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that represents all the operations represented by the current <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> as well as all the operations represented by the specified <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Il risultato di una chiamata a <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> è un <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> che rappresenta tutte le operazioni rappresentate dall'oggetto corrente <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> nonché tutte le operazioni rappresentate dall'oggetto <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>If either set is <ph id="ph1">`Unrestricted`</ph>, the union is <ph id="ph2">`Unrestricted`</ph> as well.</source>
          <target state="translated">Se uno dei due set è <ph id="ph1">`Unrestricted`</ph>, l'unione è <ph id="ph2">`Unrestricted`</ph> anche.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>