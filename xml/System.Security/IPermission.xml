<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPermission.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ab62c8d43e0ca696a66655b37755ebe3e68e56e6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab62c8d43e0ca696a66655b37755ebe3e68e56e6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.IPermission">
          <source>Defines methods implemented by permission types.</source>
          <target state="translated">Definisce metodi implementati da tipi di autorizzazioni.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Permissions in the common language runtime are objects that describe sets of operations that can be secured for specified resources.</source>
          <target state="translated">Le autorizzazioni in common language runtime sono oggetti che descrivono i set di operazioni che possono essere protette per le risorse specificate.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>A permission object describes operations or access that is subject to security control; it does not represent access or a right to perform operations.</source>
          <target state="translated">Un oggetto di autorizzazione descrive le operazioni o accesso che è soggetto a controllo di sicurezza. non rappresenta un diritto di eseguire operazioni o di accesso.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Permissions are used by both application code and the .NET Framework security system in the following ways.</source>
          <target state="translated">Le autorizzazioni sono utilizzate dal codice dell'applicazione e il sistema di sicurezza di .NET Framework nei modi seguenti.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Code requests the permissions it needs in order to run.</source>
          <target state="translated">Codice richiede le autorizzazioni che necessarie per l'esecuzione.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>The security system policy grants permissions to code in order for it to run.</source>
          <target state="translated">I criteri di sistema di sicurezza concedono le autorizzazioni al codice in modo che per l'esecuzione.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Code demands that calling code has a permission.</source>
          <target state="translated">Il codice richiede che il codice chiamante disponga di un'autorizzazione.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Code overrides the security stack using assert/deny/permit-only.</source>
          <target state="translated">Codice esegue l'override dello stack di sicurezza solo utilizzando assert/deny/autorizzazione.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>If you write a new permission, you must implement this interface in your class.</source>
          <target state="translated">Se si scrive una nuova autorizzazione, è necessario implementare questa interfaccia della classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>A permission can be accessed by multiple threads.</source>
          <target state="translated">Un'autorizzazione può accedere da più thread.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>When implementing this interface, you must guarantee that the <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Security.IPermission.Copy%2A&gt;</ph> method implementations are thread safe.</source>
          <target state="translated">Quando si implementa questa interfaccia, è necessario garantire che il <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Security.IPermission.Copy%2A&gt;</ph> implementazioni del metodo sono thread-safe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>This example shows how to define a permission class for use with code access security.</source>
          <target state="translated">In questo esempio viene illustrato come definire una classe di autorizzazioni per l'utilizzo con sicurezza dall'accesso di codice.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>All of the necessary permission interfaces are implemented.</source>
          <target state="translated">Vengono implementate tutte le interfacce di autorizzazione necessaria.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Copy">
          <source>Creates and returns an identical copy of the current permission.</source>
          <target state="translated">Crea e restituisce una copia identica dell'autorizzazione corrente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Copy">
          <source>A copy of the current permission.</source>
          <target state="translated">Copia dell'autorizzazione corrente.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Copy">
          <source>A copy of a permission represents the same access to resources as the original permission.</source>
          <target state="translated">Una copia di un'autorizzazione rappresenta lo stesso accesso alle risorse dell'autorizzazione originale.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Copy">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.IPermission.Copy%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrata l'implementazione di <ph id="ph1">&lt;xref:System.Security.IPermission.Copy%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Copy">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Demand">
          <source>Throws a <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> at run time if the security requirement is not met.</source>
          <target state="translated">Genera un'eccezione <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> in fase di esecuzione se non viene soddisfatto il requisito di sicurezza.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>This method is typically used by secure libraries to ensure that callers have permission to access a resource.</source>
          <target state="translated">Questo metodo viene in genere utilizzato da librerie protette per garantire che i chiamanti dispongano dell'autorizzazione per accedere a una risorsa.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>For example, a file class in a secure class library calls <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;</ph> for the necessary <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> before performing a file operation requested by the caller.</source>
          <target state="translated">Ad esempio, una classe di file in una libreria di classi protette chiama <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;</ph> per gli oggetti necessari <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> prima di eseguire un'operazione di file richiesta dal chiamante.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>Although the majority of the classes that implement this interface method satisfy the security criteria by performing a full stack walk, a stack walk is not necessarily performed.</source>
          <target state="translated">Sebbene la maggior parte delle classi che implementano questo metodo di interfaccia soddisfino i criteri di sicurezza mediante l'esecuzione di un percorso stack completo, un percorso stack non viene necessariamente eseguito.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>An example of an implementation that does not perform a stack walk is <ph id="ph1">&lt;xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Un esempio di un'implementazione che non esegue un'analisi dello stack è <ph id="ph1">&lt;xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>When a stack walk is performed, the permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</source>
          <target state="translated">Quando viene eseguita un'analisi dello stack, le autorizzazioni del codice che chiama questo metodo non vengono esaminate; il controllo inizia da parte del chiamante immediato del codice e continua fino allo stack.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">Lo stack di chiamate viene rappresentato in genere come espansione verso il basso, in modo che più in alto nello stack di chiamate a metodi chiamano metodi inferiore nello stack di chiamate.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source><ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;</ph> succeeds only if no <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;</ph> ha esito positivo solo se nessun <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> viene generato.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>A permission to intersect with the current permission.</source>
          <target state="translated">Autorizzazione da intersecare con quella corrente.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">Deve essere dello stesso tipo dell'autorizzazione corrente.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>Creates and returns a permission that is the intersection of the current permission and the specified permission.</source>
          <target state="translated">Crea e restituisce un'autorizzazione che rappresenta l'intersezione tra l'autorizzazione corrente e quella specificata.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>A new permission that represents the intersection of the current permission and the specified permission.</source>
          <target state="translated">Nuova autorizzazione che rappresenta l'intersezione dell'autorizzazione corrente e di quella specificata.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>This new permission is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the intersection is empty.</source>
          <target state="translated">La nuova autorizzazione è <ph id="ph1">&lt;see langword="null" /&gt;</ph> se l'intersezione è vuota.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>The intersection of two permissions is a permission that describes the set of operations they both describe in common.</source>
          <target state="translated">L'intersezione delle due autorizzazioni è un'autorizzazione che descrive il set di operazioni che hanno in comune.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>Only a demand that passes both original permissions will pass the intersection.</source>
          <target state="translated">Solo una richiesta che supera entrambe le autorizzazioni originali passerà l'intersezione.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>The following statements are required to be true for all implementations of the <ph id="ph1">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph> method.</source>
          <target state="translated">Le istruzioni seguenti devono essere true per tutte le implementazioni del <ph id="ph1">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph> and <ph id="ph2">`Y`</ph> represent <ph id="ph3">&lt;xref:System.Security.IPermission&gt;</ph> object references that are not <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph> e <ph id="ph2">`Y`</ph> rappresentano <ph id="ph3">&lt;xref:System.Security.IPermission&gt;</ph> riferimenti agli oggetti che non sono <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`X`</ph>) returns a value equal to <ph id="ph3">`X`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. Intersect (<ph id="ph2">`X`</ph>) restituisce un valore pari a <ph id="ph3">`X`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`Y`</ph>) returns the same value as <ph id="ph3">`Y`</ph>.Intersect(<ph id="ph4">`X`</ph>).</source>
          <target state="translated"><ph id="ph1">`X`</ph>. Intersect (<ph id="ph2">`Y`</ph>) restituisce lo stesso valore di <ph id="ph3">`Y`</ph>. Intersect (<ph id="ph4">`X`</ph>).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`null`</ph>) returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. Intersect (<ph id="ph2">`null`</ph>) restituisce <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrata l'implementazione di <ph id="ph1">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> and is not an instance of the same class as the current permission.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="target" /&gt;</ph> non è <ph id="ph2">&lt;see langword="null" /&gt;</ph> e non è un'istanza della stessa classe dell'autorizzazione corrente.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>A permission that is to be tested for the subset relationship.</source>
          <target state="translated">Autorizzazione da testare per la relazione del subset.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>This permission must be of the same type as the current permission.</source>
          <target state="translated">Questa autorizzazione deve essere dello stesso tipo di quella corrente.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>Determines whether the current permission is a subset of the specified permission.</source>
          <target state="translated">Determina se l'autorizzazione corrente è un subset di quella specificata.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current permission is a subset of the specified permission; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'autorizzazione corrente è un sottoinsieme dell'autorizzazione specificata; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</source>
          <target state="translated">Se l'autorizzazione corrente specifica un set di operazioni che è interamente contenuto l'autorizzazione specificata, l'autorizzazione corrente è un subset dell'autorizzazione specificata.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:<ph id="ph1">\\</ph>.</source>
          <target state="translated">Ad esempio, un'autorizzazione che rappresenta l'accesso a C:\example.txt è un subset di un'autorizzazione che rappresenta l'accesso in c:<ph id="ph1">\\</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.</source>
          <target state="translated">Se questo metodo restituisce <ph id="ph1">`true`</ph>, l'autorizzazione corrente non rappresenta un accesso alla risorsa protetta rispetto a quello dell'autorizzazione specificata.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The following statements are required to be true for all implementations of the <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph> method.</source>
          <target state="translated">Le istruzioni seguenti devono essere true per tutte le implementazioni del <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>, <ph id="ph2">`Y`</ph>, and <ph id="ph3">`Z`</ph> represent <ph id="ph4">&lt;xref:System.Security.IPermission&gt;</ph> objects that are not <ph id="ph5">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>, <ph id="ph2">`Y`</ph>, e <ph id="ph3">`Z`</ph> rappresentano <ph id="ph4">&lt;xref:System.Security.IPermission&gt;</ph> gli oggetti che non <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.IsSubsetOf(<ph id="ph2">`X`</ph>) returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. IsSubsetOf (<ph id="ph2">`X`</ph>) restituisce <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.IsSubsetOf(<ph id="ph2">`Y`</ph>) returns the same value as <ph id="ph3">`Y`</ph>.IsSubsetOf(<ph id="ph4">`X`</ph>) if and only if <ph id="ph5">`X`</ph> and <ph id="ph6">`Y`</ph> represent the same set of permissions.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. IsSubsetOf (<ph id="ph2">`Y`</ph>) restituisce lo stesso valore di <ph id="ph3">`Y`</ph>. IsSubsetOf (<ph id="ph4">`X`</ph>) solo se <ph id="ph5">`X`</ph> e <ph id="ph6">`Y`</ph> rappresentano lo stesso set di autorizzazioni.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">`X`</ph>.IsSubsetOf(<ph id="ph2">`Y`</ph>) and <ph id="ph3">`Y`</ph>.IsSubsetOf(<ph id="ph4">`Z`</ph>) both return <ph id="ph5">`true`</ph>, <ph id="ph6">`X`</ph>.IsSubsetOf(<ph id="ph7">`Z`</ph>) returns <ph id="ph8">`true`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`X`</ph>. IsSubsetOf (<ph id="ph2">`Y`</ph>) e <ph id="ph3">`Y`</ph>. IsSubsetOf (<ph id="ph4">`Z`</ph>) restituiscono entrambi <ph id="ph5">`true`</ph>, <ph id="ph6">`X`</ph>. IsSubsetOf (<ph id="ph7">`Z`</ph>) restituisce <ph id="ph8">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">`X`</ph> represents an empty <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> object with a permission state of <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> and <ph id="ph4">`Y`</ph> represents an <ph id="ph5">&lt;xref:System.Security.IPermission&gt;</ph> object that is <ph id="ph6">`null`</ph>, <ph id="ph7">`X`</ph>.IsSubsetOf(<ph id="ph8">`Y`</ph>) returns <ph id="ph9">`true`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`X`</ph> rappresenta un oggetto vuoto <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> oggetto con uno stato di autorizzazione <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> e <ph id="ph4">`Y`</ph> rappresenta un <ph id="ph5">&lt;xref:System.Security.IPermission&gt;</ph> oggetto <ph id="ph6">`null`</ph>, <ph id="ph7">`X`</ph>. IsSubsetOf (<ph id="ph8">`Y`</ph>) restituisce <ph id="ph9">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">`Z`</ph> is also an empty permission, the compound set operation <ph id="ph2">`X`</ph>.Union(Z).IsSubsetOf(Y) also returns <ph id="ph3">`true`</ph> because the union of two empty permissions is an empty permission.</source>
          <target state="translated">Se <ph id="ph1">`Z`</ph> è anche un'autorizzazione vuota, l'operazione di impostazione composta <ph id="ph2">`X`</ph>. Union(Z). IsSubsetOf (y) restituisce inoltre <ph id="ph3">`true`</ph> perché l'unione delle due autorizzazioni vuote è un'autorizzazione vuota.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrata l'implementazione di <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> and is not of the same type as the current permission.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="target" /&gt;</ph> non è <ph id="ph2">&lt;see langword="null" /&gt;</ph> ed è di un tipo diverso rispetto all'autorizzazione corrente.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>A permission to combine with the current permission.</source>
          <target state="translated">Autorizzazione da combinare con quella corrente.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">Deve essere dello stesso tipo dell'autorizzazione corrente.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>Creates a permission that is the union of the current permission and the specified permission.</source>
          <target state="translated">Crea un'autorizzazione che rappresenta l'unione dell'autorizzazione corrente e di quella specificata.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>A new permission that represents the union of the current permission and the specified permission.</source>
          <target state="translated">Nuova autorizzazione che rappresenta l'unione dell'autorizzazione corrente e di quella specificata.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>The result of a call to <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> is a permission that represents all the operations represented by both the current permission and the specified permission.</source>
          <target state="translated">Il risultato di una chiamata a <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> è un'autorizzazione che rappresenta tutte le operazioni indicate sia dell'autorizzazione corrente e l'autorizzazione specificata.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>Any demand that passes either permission passes their union.</source>
          <target state="translated">Qualsiasi richiesta che passa l'autorizzazione passa l'unione.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>The following statements are required to be true for all implementations of the <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> method.</source>
          <target state="translated">Le istruzioni seguenti devono essere true per tutte le implementazioni del <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph> and <ph id="ph2">`Y`</ph> represent <ph id="ph3">&lt;xref:System.Security.IPermission&gt;</ph> objects that are not <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph> e <ph id="ph2">`Y`</ph> rappresentano <ph id="ph3">&lt;xref:System.Security.IPermission&gt;</ph> gli oggetti che non <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Union(<ph id="ph2">`X`</ph>) returns an object that has the same value as <ph id="ph3">`X`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. Union (<ph id="ph2">`X`</ph>) restituisce un oggetto che ha lo stesso valore <ph id="ph3">`X`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Union(<ph id="ph2">`Y`</ph>) returns an object that has the same value as the object returned by <ph id="ph3">`Y`</ph>.Union(<ph id="ph4">`X`</ph>).</source>
          <target state="translated"><ph id="ph1">`X`</ph>. Union (<ph id="ph2">`Y`</ph>) restituisce un oggetto che ha lo stesso valore dell'oggetto restituito da <ph id="ph3">`Y`</ph>. Union (<ph id="ph4">`X`</ph>).</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Union(<ph id="ph2">`null`</ph>) returns an object that has the same value as <ph id="ph3">`X`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. Union (<ph id="ph2">`null`</ph>) restituisce un oggetto che ha lo stesso valore <ph id="ph3">`X`</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrata l'implementazione di <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> and is not of the same type as the current permission.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="target" /&gt;</ph> non è <ph id="ph2">&lt;see langword="null" /&gt;</ph> ed è di un tipo diverso rispetto all'autorizzazione corrente.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>