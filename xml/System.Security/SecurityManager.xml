<Type Name="SecurityManager" FullName="System.Security.SecurityManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="51b52be500a5be1b9b263e9528638a7f09b2cb2a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30500685" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class SecurityManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed SecurityManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityManager" />
  <TypeSignature Language="VB.NET" Value="Public Class SecurityManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce il punto di accesso principale per le classi che interagiscono con il sistema di sicurezza. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sicurezza fornisce metodi per accedere e modificare la configurazione dei criteri di sicurezza. È possibile creare istanze di <xref:System.Security.SecurityManager>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckExecutionRights">
      <MemberSignature Language="C#" Value="public static bool CheckExecutionRights { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CheckExecutionRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityManager.CheckExecutionRights" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CheckExecutionRights As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CheckExecutionRights { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il codice deve avere il campo <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> per poter essere eseguito.</summary>
        <value>
          <see langword="true" /> se il codice deve avere il campo <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> per poter essere eseguito; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questa proprietà è `false`, anche il codice senza <xref:System.Security.Permissions.SecurityPermissionFlag.Execution> possono eseguire. La verifica dell'esecuzione è dispendioso e può annullare i vantaggi della risoluzione dei criteri lazy. Questa proprietà viene fornita per disabilitare l'esecuzione di controllo quando necessario.  
  
 Una modifica a questa proprietà non viene mantenuta fino a quando <xref:System.Security.SecurityManager.SavePolicy%2A> viene chiamato. Nuovi processi non essere interessati dalla modifica fino a quando non è persistente nel Registro di sistema.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Il codice che chiama questo metodo non ha <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per poter modificare i criteri. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentThreadRequiresSecurityContextCapture">
      <MemberSignature Language="C#" Value="public static bool CurrentThreadRequiresSecurityContextCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CurrentThreadRequiresSecurityContextCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CurrentThreadRequiresSecurityContextCapture () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CurrentThreadRequiresSecurityContextCapture();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se il thread corrente richiede un'acquisizione del contesto di sicurezza nel caso in cui lo stato di sicurezza debba essere ricreato in un secondo momento.</summary>
        <returns>
          <see langword="false" /> se lo stack non contiene domini applicazione parzialmente attendibili, assembly parzialmente attendibili né modificatori <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> o <see cref="M:System.Security.CodeAccessPermission.Deny" /> correntemente attivi; <see langword="true" /> se Common Language Runtime non è in grado di garantire l'assenza di tali elementi nello stack.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A> metodo prima memorizzare nella cache i dati sensibili ottenuti dopo i requisiti di sicurezza riusciti.  
  
 Se il <xref:System.Security.CodeAccessPermission.Assert%2A> metodo è stato chiamato superiore nello stack, i dati necessario non memorizzare nella cache senza acquisire il contesto di sicurezza corrispondente. In caso contrario, i dati sensibili ottenuti tramite un <xref:System.Security.CodeAccessPermission.Assert%2A> possono diventare disponibili per il codice non è più in esecuzione con tale <xref:System.Security.CodeAccessPermission.Assert%2A> sul posto.  
  
> [!IMPORTANT]
>  Il valore restituito è affidabile solo quando è `false`, il che significa che il thread è garantito per non richiedere un'acquisizione del contesto di sicurezza. Il metodo può restituire true quando un'acquisizione del contesto di sicurezza non è necessaria, per evitare vulnerabilità di sicurezza.  
  
 <xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A> è critico per la sicurezza perché l'uso principale consiste nell'evitare il contesto di sicurezza non necessari acquisizioni, che indica che il codice di utilizzo è riservato e deve essere controllato.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede l'attendibilità totale per il chiamante immediato. Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetStandardSandbox">
      <MemberSignature Language="C#" Value="public static System.Security.PermissionSet GetStandardSandbox (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.PermissionSet GetStandardSandbox(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::PermissionSet ^ GetStandardSandbox(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">Evidenza host da confrontare con un set di autorizzazioni.</param>
        <summary>Ottiene un set di autorizzazioni che può essere concesso senza alcun rischio di sicurezza a un'applicazione che dispone dell'evidenza fornita.</summary>
        <returns>Set di autorizzazioni che può essere utilizzato come insieme delle autorizzazioni per l'applicazione che dispone dell'evidenza fornita.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Nel [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], l'evidenza host in `evidence` deve contenere <xref:System.Security.Policy.Zone?displayProperty=nameWithType> evidenza.  
>   
>  Nella tabella seguente viene illustrato il set di autorizzazioni che vengono restituiti per ogni area.  
  
|Zona|Set di autorizzazioni|  
|----------|--------------------|  
|<xref:System.Security.SecurityZone.MyComputer>|`FullTrust`|  
|<xref:System.Security.SecurityZone.Intranet>|`LocalIntranet`|  
|<xref:System.Security.SecurityZone.Trusted>|`Internet`|  
|<xref:System.Security.SecurityZone.Internet>|`Internet`|  
|<xref:System.Security.SecurityZone.Untrusted>|nessuno|  
|<xref:System.Security.SecurityZone.NoZone>|nessuno|  
  
 Altre evidenze, ad esempio <xref:System.Security.Policy.Url> o <xref:System.Security.Policy.Site>, può essere considerata.  
  
 Il set di autorizzazioni restituito è utilizzabile da una sandbox per eseguire l'applicazione. Si noti che questo metodo non specifica criteri, ma consente a un host per determinare se il set di autorizzazioni richiesto da un'applicazione è ragionevole. Questo metodo può essere utilizzato per eseguire il mapping di una zona in un sandbox.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Security.SecurityManager.GetStandardSandbox%2A> per ottenere l'autorizzazione impostata per un'applicazione creata mediante sandbox. Per ulteriori informazioni sull'esecuzione di un'applicazione in un ambiente sandbox, vedere [procedura: eseguire codice parzialmente attendibile in un ambiente Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).  
  
 [!code-csharp[sandboxingApis#1](~/samples/snippets/csharp/VS_Snippets_CLR/SandboxingAPIs/CS/program.cs#1)]
 [!code-vb[sandboxingApis#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SandboxingAPIs/VB/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidence" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetZoneAndOrigin">
      <MemberSignature Language="C#" Value="public static void GetZoneAndOrigin (out System.Collections.ArrayList zone, out System.Collections.ArrayList origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetZoneAndOrigin([out] class System.Collections.ArrayList&amp; zone, [out] class System.Collections.ArrayList&amp; origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetZoneAndOrigin (ByRef zone As ArrayList, ByRef origin As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetZoneAndOrigin([Runtime::InteropServices::Out] System::Collections::ArrayList ^ % zone, [Runtime::InteropServices::Out] System::Collections::ArrayList ^ % origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="System.Collections.ArrayList&amp;" RefType="out" />
        <Parameter Name="origin" Type="System.Collections.ArrayList&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="zone">Parametro di output che contiene un oggetto <see cref="T:System.Collections.ArrayList" /> di oggetti <see cref="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone" /> concessi.</param>
        <param name="origin">Parametro di output che contiene un oggetto <see cref="T:System.Collections.ArrayList" /> di oggetti <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> concessi.</param>
        <summary>Ottiene i set di autorizzazioni di identità dell'area e di identità dell'URL concessi per l'assembly corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'alternativa consigliata per questo metodo è possibile utilizzare l'evidenza URL e dell'area dell'assembly in esecuzione per chiamare <xref:System.Security.SecurityManager.ResolvePolicy%2A> per ogni tipo di evidenza. I set di autorizzazioni restituiti dal <xref:System.Security.SecurityManager.ResolvePolicy%2A> chiamate identificano le autorizzazioni concesse all'assembly in esecuzione in base alla zona e l'URL di origine.  
  
> [!NOTE]
>  Questo membro esegue una richiesta di collegamento per la chiave pubblica ECMA, non è una chiave di crittografia valida ma una pseudo-chiave. In .NET Framework la richiesta di collegamento per la pseudo-chiave ECMA viene automaticamente convertita in una richiesta di collegamento per la chiave pubblica di Microsoft. L'eccezione di sicurezza è basato sulla chiave pubblica Microsoft, non la pseudo-chiave ECMA.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Richiesta dell'oggetto <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> non riuscita.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede l'attendibilità totale per il chiamante immediato. Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsGranted">
      <MemberSignature Language="C#" Value="public static bool IsGranted (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsGranted(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.IsGranted(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsGranted (perm As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsGranted(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">Autorizzazione da verificare con i privilegi del chiamante.</param>
        <summary>Determina se un'autorizzazione è concessa al chiamante.</summary>
        <returns>
          <see langword="true" /> se le autorizzazioni concesse al chiamante includono il parametro <paramref name="perm" /> dell'autorizzazione; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Concessione di autorizzazioni è determinata dai criteri ed è diversa da una richiesta di soggetto a override, ad esempio un'asserzione. Inoltre, <xref:System.Security.SecurityManager.IsGranted%2A> solo i test la concessione di assembly di codice chiamante, indipendentemente da altri chiamanti nello stack.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPolicyLevelFromFile">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromFile (string path, System.Security.PolicyLevelType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.PolicyLevel LoadPolicyLevelFromFile(string path, valuetype System.Security.PolicyLevelType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadPolicyLevelFromFile (path As String, type As PolicyLevelType) As PolicyLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::PolicyLevel ^ LoadPolicyLevelFromFile(System::String ^ path, System::Security::PolicyLevelType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyLevel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="type" Type="System.Security.PolicyLevelType" />
      </Parameters>
      <Docs>
        <param name="path">Percorso fisico di un file contenente le informazioni sui criteri di sicurezza.</param>
        <param name="type">Uno dei valori di enumerazione che specifica il tipo di livello di criteri da caricare.</param>
        <summary>Carica un oggetto <see cref="T:System.Security.Policy.PolicyLevel" /> dal file specificato.</summary>
        <returns>Livello di criteri caricato.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il file indicato dal parametro <paramref name="path" /> non esiste.</exception>
        <exception cref="T:System.Security.SecurityException">Il codice che chiama questo metodo non ha <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.  
  
 oppure  
  
 Il codice che chiama questo metodo non ha <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.  
  
 oppure  
  
 Il codice che chiama questo metodo non ha <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.  
  
 oppure  
  
 Il codice che chiama questo metodo non ha <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</exception>
        <exception cref="T:System.NotSupportedException">Questo metodo usa criteri di sicurezza dall'accesso di codice, che sono obsoleti in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. Per abilitare questi criteri per la compatibilità con le versioni precedenti di .NET Framework, usare l'[elemento &lt;legacyCasPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per poter visualizzare e modificare i criteri. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la lettura e scrittura di file. Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadPolicyLevelFromString">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromString (string str, System.Security.PolicyLevelType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.PolicyLevel LoadPolicyLevelFromString(string str, valuetype System.Security.PolicyLevelType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadPolicyLevelFromString (str As String, type As PolicyLevelType) As PolicyLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::PolicyLevel ^ LoadPolicyLevelFromString(System::String ^ str, System::Security::PolicyLevelType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyLevel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="type" Type="System.Security.PolicyLevelType" />
      </Parameters>
      <Docs>
        <param name="str">La rappresentazione XML di un livello di criteri di sicurezza nella stessa forma utilizzata nel file di configurazione.</param>
        <param name="type">Uno dei valori di enumerazione che specifica il tipo di livello di criteri da caricare.</param>
        <summary>Carica un oggetto <see cref="T:System.Security.Policy.PolicyLevel" /> dalla stringa specificata.</summary>
        <returns>Livello di criteri caricato.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="str" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="str" /> non è valido.</exception>
        <exception cref="T:System.Security.SecurityException">Il codice che chiama questo metodo non ha <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per poter visualizzare e modificare i criteri. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PolicyHierarchy">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator PolicyHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerator PolicyHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.PolicyHierarchy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PolicyHierarchy () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerator ^ PolicyHierarchy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornisce un enumeratore per accedere alla gerarchia dei criteri di sicurezza in base ai livelli, ad esempio criteri computer e utente.</summary>
        <returns>Enumeratore per gli oggetti <see cref="T:System.Security.Policy.PolicyLevel" /> che compongono la gerarchia dei criteri di sicurezza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'enumeratore restituito fornisce successivi <xref:System.Security.Policy.PolicyLevel> gli oggetti che rappresentano i criteri al rispettivo (computer, utente, enterprise, il dominio applicazione) livello della gerarchia. Questi oggetti sono gli oggetti di criteri in tempo reale. modifica di questi oggetti può produrre risultati imprevisti.  
  
 Gerarchia di criteri minima è costituito da un livello di computer, un livello aziendale e un livello di utente. Tuttavia, la gerarchia può includere livelli aggiuntivi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Questo metodo usa criteri di sicurezza dall'accesso di codice, che sono obsoleti in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. Per abilitare questi criteri per la compatibilità con le versioni precedenti di .NET Framework, usare l'[elemento &lt;legacyCasPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).</exception>
        <exception cref="T:System.Security.SecurityException">Il codice che chiama questo metodo non ha <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per poter visualizzare e modificare i criteri. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolvePolicy">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina quali autorizzazioni concedere al codice.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolvePolicy">
      <MemberSignature Language="C#" Value="public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.PermissionSet ResolvePolicy(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::PermissionSet ^ ResolvePolicy(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">Set di evidenze usato per valutare i criteri.</param>
        <summary>Determina le autorizzazioni da concedere al codice in base all'evidenza specificata.</summary>
        <returns>Set di autorizzazioni che possono essere concesse dal sistema di sicurezza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo richiama il motore dei criteri di sicurezza, fornendo l'evidenza dell'identità del codice chiamante. Il risultato è determinato dai criteri di sicurezza.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Questo metodo usa criteri di sicurezza dall'accesso di codice, che sono obsoleti in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. Per abilitare questi criteri per la compatibilità con le versioni precedenti di .NET Framework, usare l'[elemento &lt;legacyCasPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolvePolicy">
      <MemberSignature Language="C#" Value="public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence[] evidences);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.PermissionSet ResolvePolicy(class System.Security.Policy.Evidence[] evidences) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolvePolicy (evidences As Evidence()) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::PermissionSet ^ ResolvePolicy(cli::array &lt;System::Security::Policy::Evidence ^&gt; ^ evidences);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidences" Type="System.Security.Policy.Evidence[]" />
      </Parameters>
      <Docs>
        <param name="evidences">Matrice di oggetti di evidenza usati per valutare i criteri.</param>
        <summary>Determina le autorizzazioni da concedere al codice in base all'evidenza specificata.</summary>
        <returns>Set di autorizzazioni appropriate per tutte le evidenze fornite.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo richiama il motore dei criteri di sicurezza, fornendo una matrice di <xref:System.Security.Policy.Evidence> oggetti. Il set di autorizzazioni restituito rappresenta solo le autorizzazioni che si applicano a tutte le evidenze nella matrice. Queste autorizzazioni sono equivalenti a, o un sottoinsieme delle autorizzazioni che sarebbe concesso criteri a ogni singola evidenza. Questo metodo si comporta come se venisse eseguita un'intersezione sui risultati dei criteri in ogni di risoluzione di <xref:System.Security.Policy.Evidence> oggetti nella matrice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Questo metodo usa criteri di sicurezza dall'accesso di codice, che sono obsoleti in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. Per abilitare questi criteri per la compatibilità con le versioni precedenti di .NET Framework, usare l'[elemento &lt;legacyCasPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolvePolicy">
      <MemberSignature Language="C#" Value="public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence, System.Security.PermissionSet reqdPset, System.Security.PermissionSet optPset, System.Security.PermissionSet denyPset, out System.Security.PermissionSet denied);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.PermissionSet ResolvePolicy(class System.Security.Policy.Evidence evidence, class System.Security.PermissionSet reqdPset, class System.Security.PermissionSet optPset, class System.Security.PermissionSet denyPset, [out] class System.Security.PermissionSet&amp; denied) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::PermissionSet ^ ResolvePolicy(System::Security::Policy::Evidence ^ evidence, System::Security::PermissionSet ^ reqdPset, System::Security::PermissionSet ^ optPset, System::Security::PermissionSet ^ denyPset, [Runtime::InteropServices::Out] System::Security::PermissionSet ^ % denied);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="reqdPset" Type="System.Security.PermissionSet" />
        <Parameter Name="optPset" Type="System.Security.PermissionSet" />
        <Parameter Name="denyPset" Type="System.Security.PermissionSet" />
        <Parameter Name="denied" Type="System.Security.PermissionSet&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="evidence">Set di evidenze usato per valutare i criteri.</param>
        <param name="reqdPset">Autorizzazioni necessarie che il codice deve eseguire.</param>
        <param name="optPset">Autorizzazioni facoltative che verranno usate se concesse, ma che il codice non deve necessariamente eseguire.</param>
        <param name="denyPset">Autorizzazioni negate che non devono mai essere concesse al codice, anche se i criteri lo consentono.</param>
        <param name="denied">Parametro di output che contiene il set di autorizzazioni non concesse.</param>
        <summary>Determina le autorizzazioni da concedere al codice in base all'evidenza e alle richieste specificate.</summary>
        <returns>Set di autorizzazioni che possono essere concesse dal sistema di sicurezza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo richiama il motore dei criteri di sicurezza, fornendo le evidenze dell'identità del codice chiamante e il set di autorizzazioni di codice richieste. Il risultato è determinato dai criteri di sicurezza. Questo metodo restituisce il set di autorizzazioni concesse dal sistema di sicurezza e restituisce il set di autorizzazioni che verrebbe negato come parametro di output. Le autorizzazioni valide concesse sono quelle in set di autorizzazioni concesse non inclusi nel set delle autorizzazioni negate.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Questo metodo usa criteri di sicurezza dall'accesso di codice, che sono obsoleti in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. Per abilitare questi criteri per la compatibilità con le versioni precedenti di .NET Framework, usare l'[elemento &lt;legacyCasPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).</exception>
        <exception cref="T:System.Security.Policy.PolicyException">I criteri non concedono le autorizzazioni minime necessarie specificate dal parametro <paramref name="reqdPset" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolvePolicyGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator ResolvePolicyGroups (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerator ResolvePolicyGroups(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerator ^ ResolvePolicyGroups(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">Evidenza impostata a fronte della quale viene valutato il criterio.</param>
        <summary>Ottiene una raccolta di gruppi di codice corrispondenti all'evidenza specificata.</summary>
        <returns>Enumerazione del set di gruppi di codice corrispondente all'evidenza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è utile per analizzare il funzionamento di una configurazione di criteri specificata con tipi specifici di prova.  
  
 Gruppi di codice verranno restituiti da tutti i livelli applicabili della gerarchia di criteri di corrispondenza di `evidence` parametro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Questo metodo usa criteri di sicurezza dall'accesso di codice, che sono obsoleti in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. Per abilitare questi criteri per la compatibilità con le versioni precedenti di .NET Framework, usare l'[elemento &lt;legacyCasPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveSystemPolicy">
      <MemberSignature Language="C#" Value="public static System.Security.PermissionSet ResolveSystemPolicy (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.PermissionSet ResolveSystemPolicy(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::PermissionSet ^ ResolveSystemPolicy(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">Set di evidenze usato per valutare i criteri.</param>
        <summary>Determina quali autorizzazioni concedere al codice in base all'evidenza specificata, esclusi i criteri per il livello <see cref="T:System.AppDomain" />.</summary>
        <returns>Set di autorizzazioni che possono essere concesse dal sistema di sicurezza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo richiama il motore dei criteri di sicurezza e fornisce la prova dell'identità del codice chiamante. Il risultato è determinato dai criteri di sicurezza del sistema esclude qualsiasi <xref:System.AppDomain> criteri.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Questo metodo usa criteri di sicurezza dall'accesso di codice, che sono obsoleti in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. Per abilitare questi criteri per la compatibilità con le versioni precedenti di .NET Framework, usare l'[elemento &lt;legacyCasPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).</exception>
      </Docs>
    </Member>
    <Member MemberName="SavePolicy">
      <MemberSignature Language="C#" Value="public static void SavePolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SavePolicy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.SavePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SavePolicy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SavePolicy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva lo stato dei criteri di sicurezza modificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo salva i criteri esposti da <xref:System.Security.SecurityManager.PolicyHierarchy%2A>, <xref:System.Security.Policy.PolicyLevel>, e altre classi che rappresentano la configurazione dei criteri di sicurezza. A meno che questo metodo viene chiamato, le modifiche apportate agli oggetti dei criteri non verranno salvate e non avrà effetto sulle esecuzioni successive dell'applicazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Questo metodo usa criteri di sicurezza dall'accesso di codice, che sono obsoleti in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. Per abilitare questi criteri per la compatibilità con le versioni precedenti di .NET Framework, usare l'[elemento &lt;legacyCasPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).</exception>
        <exception cref="T:System.Security.SecurityException">Il codice che chiama questo metodo non ha <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per poter modificare i criteri. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SavePolicyLevel">
      <MemberSignature Language="C#" Value="public static void SavePolicyLevel (System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SavePolicyLevel(class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SavePolicyLevel (level As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SavePolicyLevel(System::Security::Policy::PolicyLevel ^ level);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="level">Oggetto del livello di criteri da salvare.</param>
        <summary>Salva un livello di criteri di sicurezza modificato che è stato caricato con <see cref="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Policy.PolicyLevel> verrà salvato nello stesso percorso da cui è caricato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Il codice che chiama questo metodo non ha <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
        <exception cref="T:System.NotSupportedException">Questo metodo usa criteri di sicurezza dall'accesso di codice, che sono obsoleti in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. Per abilitare questi criteri per la compatibilità con le versioni precedenti di .NET Framework, usare l'[elemento &lt;legacyCasPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per poter modificare i criteri. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SecurityEnabled">
      <MemberSignature Language="C#" Value="public static bool SecurityEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SecurityEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityManager.SecurityEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SecurityEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool SecurityEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The security manager cannot be turned off on MS runtime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se è attivata la sicurezza.</summary>
        <value>
          <see langword="true" /> se è attivata la sicurezza; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà viene utilizzata per la [Caspol.exe (strumento di criteri di sicurezza di accesso di codice)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)  
  
 `-security` (`-s`) per disattivare la sicurezza basata su codice.  
  
 <xref:System.Security.SecurityManager.SecurityEnabled%2A> consente agli amministratori di disabilitare la sicurezza dall'accesso di codice. Quando la sicurezza per l'accesso al codice è disabilitata, tutte le richieste di accesso avanzate dal codice verranno esaudite. In effetti, ciò consente di tutto il codice `FullTrust`. La disabilitazione della sicurezza di accesso di codice consente di ignorare il sistema di sicurezza in modo che potrebbe eseguire codice leggermente migliori rispetto alla concessione di criteri di sicurezza equivalenti `FullTrust` a tutto il codice. Questa proprietà non disabilitare la protezione basata sui ruoli. Pertanto, <xref:System.Security.Permissions.PrincipalPermission> richieste non sono state interessate.  
  
> [!CAUTION]
>  La disabilitazione della sicurezza dall'accesso di codice rende il sistema vulnerabile agli attacchi di codice dannoso, tra cui virus e programmi distruttivi. La disabilitazione della sicurezza di accesso di codice non blocca automaticamente il codice gestito venga eseguito in qualsiasi modo. Si ottiene solo che il codice venga eseguito senza limitazioni dal sistema di sicurezza di accesso di codice gestito, pertanto devono essere eseguite solo con estrema cautela. La disattivazione della protezione per migliorare le prestazioni deve essere eseguita solo quando sono state adottate altre misure di sicurezza per proteggere la sicurezza del sistema. Esempi di precauzioni alternative sono la disconnessione da reti pubbliche, la sicurezza fisica dei computer e così via.  
  
 Una modifica a questa proprietà non è persistente nel Registro di sistema finché <xref:System.Security.SecurityManager.SavePolicy%2A> viene chiamato. Nuovi processi non essere interessati dalla modifica fino a quando non è persistente nel Registro di sistema. Il valore di questa proprietà in un processo in esecuzione non necessariamente la modifica dello stato nel modo previsto. Affinché le modifiche sono diventate effettive, è necessario chiamare <xref:System.Security.SecurityManager.SavePolicy%2A> e avviare un nuovo processo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Il codice che chiama questo metodo non ha <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per poter modificare i criteri. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>