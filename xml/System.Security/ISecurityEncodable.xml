<Type Name="ISecurityEncodable" FullName="System.Security.ISecurityEncodable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5cfb5999b32a91be9f92a2ac1390b32d73f6a804" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30496935" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISecurityEncodable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISecurityEncodable" />
  <TypeSignature Language="DocId" Value="T:System.Security.ISecurityEncodable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISecurityEncodable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definisce i metodi per la conversione dello stato dell'oggetto di autorizzazione in e da una rappresentazione di elemento XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La rappresentazione XML di autorizzazioni viene utilizzata per descrivere le istanze di autorizzazioni per le richieste del codice, set di autorizzazioni di sicurezza dichiarativa e configurazione dei criteri di sicurezza.  
  
> [!NOTE]
>  È necessario implementare questa interfaccia per qualsiasi nuovo oggetto di autorizzazione.  
  
   
  
## Examples  
 In questo esempio viene illustrato come definire una classe di autorizzazioni per l'utilizzo con sicurezza dall'accesso di codice. Vengono implementate tutte le interfacce di autorizzazione necessaria.  
  
 [!code-cpp[Permission#1](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#1)]
 [!code-csharp[Permission#1](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#1)]
 [!code-vb[Permission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">Codifica XML da usare per ricostruire l'oggetto di sicurezza.</param>
        <summary>Ricostruisce un oggetto di sicurezza con uno stato specificato da una codifica XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Codice personalizzato che estende gli oggetti di sicurezza deve implementare il <xref:System.Security.ISecurityEncodable.ToXml%2A> e <xref:System.Security.ISecurityEncodable.FromXml%2A> metodi per rendere gli oggetti codificabili.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'implementazione di <xref:System.Security.ISecurityEncodable.FromXml%2A> metodo. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.ISecurityEncodable> classe.  
  
 [!code-cpp[Permission#6](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#6)]
 [!code-csharp[Permission#6](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#6)]
 [!code-vb[Permission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.ISecurityEncodable.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una codifica XML dell'oggetto di sicurezza e del suo stato corrente.</summary>
        <returns>Codifica XML dell'oggetto di sicurezza, che include le eventuali informazioni sullo stato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Codice personalizzato che estende gli oggetti di sicurezza deve implementare il <xref:System.Security.ISecurityEncodable.ToXml%2A> e <xref:System.Security.ISecurityEncodable.FromXml%2A> metodi per rendere gli oggetti codificabili.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'implementazione di <xref:System.Security.ISecurityEncodable.FromXml%2A> metodo. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.ISecurityEncodable> classe.  
  
 [!code-cpp[Permission#7](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#7)]
 [!code-csharp[Permission#7](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#7)]
 [!code-vb[Permission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>