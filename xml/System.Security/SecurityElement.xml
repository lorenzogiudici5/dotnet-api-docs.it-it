<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9e13ab606e9616d0c4f55d43e917229c2a09f97" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="928fc-101">Rappresenta il modello a oggetti XML per la codifica di oggetti di sicurezza.</span>
      <span class="sxs-lookup">
        <span data-stu-id="928fc-101">Represents the XML object model for encoding security objects.</span>
      </span>
      <span data-ttu-id="928fc-102">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="928fc-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-103">Questa classe è destinata a un'implementazione semplice di un modello a oggetti XML semplice da utilizzare all'interno del sistema di sicurezza e non per l'utilizzo come modello generale di un oggetto XML.</span><span class="sxs-lookup"><span data-stu-id="928fc-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="928fc-104">Questa documentazione si presuppone una conoscenza di base di XML.</span><span class="sxs-lookup"><span data-stu-id="928fc-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="928fc-105">Il modello a oggetti XML semplice per un elemento è costituito dalle parti seguenti:</span><span class="sxs-lookup"><span data-stu-id="928fc-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="928fc-106">Il tag è il nome dell'elemento.</span><span class="sxs-lookup"><span data-stu-id="928fc-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="928fc-107">Gli attributi sono zero o più coppie nome/valore attributo sull'elemento.</span><span class="sxs-lookup"><span data-stu-id="928fc-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="928fc-108">Gli elementi figlio sono zero o più elementi annidati all'interno di `<tag>` e `</tag>`.</span><span class="sxs-lookup"><span data-stu-id="928fc-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="928fc-109">È consigliabile utilizzare la rappresentazione XML basato su attributo per esprimere gli elementi di sicurezza e i relativi valori.</span><span class="sxs-lookup"><span data-stu-id="928fc-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="928fc-110">In questo modo le proprietà di un elemento sono espresse come attributi e i valori delle proprietà sono espressi come valori di attributo.</span><span class="sxs-lookup"><span data-stu-id="928fc-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="928fc-111">Non annidare il testo all'interno dei tag.</span><span class="sxs-lookup"><span data-stu-id="928fc-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="928fc-112">Per qualsiasi `<tag>text</tag>` rappresentazione in forma di una rappresentazione di tipo `<tag value="text"/>` in genere è disponibile.</span><span class="sxs-lookup"><span data-stu-id="928fc-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="928fc-113">Utilizzando questa rappresentazione XML basato su attributi di aumenta la leggibilità e consente di portabilità WMI della serializzazione XML risulta.</span><span class="sxs-lookup"><span data-stu-id="928fc-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="928fc-114">Un nome di attributo deve essere uno o più caratteri e non può essere `null`.</span><span class="sxs-lookup"><span data-stu-id="928fc-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="928fc-115">Se viene utilizzata una rappresentazione di valore di elemento di base, gli elementi con il testo di una stringa che rappresenta `null` sono rappresentati nel `<tag/>` modulo; in caso contrario, il testo è delimitato dal `<tag>` e `</tag>` token.</span><span class="sxs-lookup"><span data-stu-id="928fc-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="928fc-116">Entrambe le forme possono essere combinate con gli attributi, che vengono visualizzati se presente.</span><span class="sxs-lookup"><span data-stu-id="928fc-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="928fc-117">Il tag, attributi e testo degli elementi, se presente, sono sempre tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="928fc-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="928fc-118">Il formato XML contiene virgolette e caratteri di escape dove necessario.</span><span class="sxs-lookup"><span data-stu-id="928fc-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="928fc-119">I valori stringa contenenti caratteri non validi per l'utilizzo in XML determinano un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="928fc-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="928fc-120">Queste regole si applicano a tutte le proprietà e metodi.</span><span class="sxs-lookup"><span data-stu-id="928fc-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="928fc-121">Per motivi di prestazioni, la validità dei caratteri viene verificata solo quando l'elemento è codificato in formato di testo XML e non in tutti i set di una proprietà o metodo.</span><span class="sxs-lookup"><span data-stu-id="928fc-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="928fc-122">I metodi statici consentono la verifica in caso di necessità espliciti.</span><span class="sxs-lookup"><span data-stu-id="928fc-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="928fc-123">Nell'esempio seguente viene illustrato come utilizzare i membri del <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="928fc-124">Inizializza una nuova istanza della classe <see cref="T:System.Security.SecurityElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="928fc-125">Nome del tag di un elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-125">The tag name of an XML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-126">Inizializza una nuova istanza della classe <see cref="T:System.Security.SecurityElement" /> con il tag specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-127">Il `tag` parametro deve essere costituito da un nome di tag XML valido.</span><span class="sxs-lookup"><span data-stu-id="928fc-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="928fc-128">Utilizzare <xref:System.Security.SecurityElement.Escape%2A> per rimuovere la stringa di caratteri non validi.</span><span class="sxs-lookup"><span data-stu-id="928fc-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="928fc-129">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.%23ctor%2A> costruttore per creare un nuovo <xref:System.Security.SecurityElement> oggetto.</span><span class="sxs-lookup"><span data-stu-id="928fc-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="928fc-130">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="928fc-131">Il valore del parametro <paramref name="tag" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="928fc-132">Il parametro <paramref name="tag" /> non è valido in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-132">The <paramref name="tag" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="928fc-133">Nome del tag dell'elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-133">The tag name of the XML element.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="928fc-134">Contenuto testuale dell'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-134">The text content within the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-135">Inizializza una nuova istanza della classe <see cref="T:System.Security.SecurityElement" /> con il tag e il testo specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-136">Se il `text` parametro `null` questo costruttore produce un elemento identico al costruttore predefinito.</span><span class="sxs-lookup"><span data-stu-id="928fc-136">If the `text` parameter is `null` this constructor produces an element identical to the default constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="928fc-137">Il valore del parametro <paramref name="tag" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="928fc-138">Il parametro <paramref name="tag" /> o <paramref name="text" /> non è valido in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="928fc-139">Nome dell'attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-139">The name of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="928fc-140">Valore dell'attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-140">The value of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-141">Aggiunge un attributo nome/valore a un elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-141">Adds a name/value attribute to an XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-142">Nomi e i valori negli attributi devono contenere solo caratteri di attributo XML validi.</span><span class="sxs-lookup"><span data-stu-id="928fc-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="928fc-143">I nomi di attributo XML devono essere univoci.</span><span class="sxs-lookup"><span data-stu-id="928fc-143">XML attribute names must be unique.</span></span> <span data-ttu-id="928fc-144">Utilizzare <xref:System.Security.SecurityElement.Escape%2A> per rimuovere la stringa di caratteri non validi.</span><span class="sxs-lookup"><span data-stu-id="928fc-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="928fc-145">Non è previsto alcun supporto per le stringhe tra virgolette, pertanto le stringhe per coppie nome/valore non devono contenere virgolette o altri caratteri che richiedono l'uso di virgolette.</span><span class="sxs-lookup"><span data-stu-id="928fc-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="928fc-146">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.AddAttribute%2A> metodo per aggiungere un attributo di nome/valore a un elemento XML.</span><span class="sxs-lookup"><span data-stu-id="928fc-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="928fc-147">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="928fc-148">Il parametro <paramref name="name" /> o <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="928fc-149">Il parametro <paramref name="name" /> o <paramref name="value" /> non è valido in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span>
          </span>
          <span data-ttu-id="928fc-150">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-150">-or-</span>
          </span>
          <span data-ttu-id="928fc-151">Un attributo con il nome specificato dal parametro <paramref name="name" /> esiste già.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-151">An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="928fc-152">Elemento figlio da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-152">The child element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-153">Aggiunge un elemento figlio all'elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-153">Adds a child element to the XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-154">L'elemento figlio viene aggiunto dopo qualsiasi elemento figlio già esistente.</span><span class="sxs-lookup"><span data-stu-id="928fc-154">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="928fc-155">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.AddChild%2A> metodo per aggiungere un elemento figlio all'elemento XML.</span><span class="sxs-lookup"><span data-stu-id="928fc-155">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="928fc-156">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-156">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="928fc-157">Il valore del parametro <paramref name="child" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-157">The <paramref name="child" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="928fc-158">Nome dell'attributo da ricercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-158">The name of the attribute for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-159">Trova un attributo in base al nome in un elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-159">Finds an attribute by name in an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="928fc-160">Il valore associato all'attributo denominato oppure <see langword="null" /> se non esiste alcun attributo con parametro <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-160">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-161">Con XML come indicato di seguito, `Attribute("B")` deve restituire "456".</span><span class="sxs-lookup"><span data-stu-id="928fc-161">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="928fc-162">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.Attribute%2A> metodo per trovare un attributo in base al nome.</span><span class="sxs-lookup"><span data-stu-id="928fc-162">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="928fc-163">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-163">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="928fc-164">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-164">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="928fc-165">Ottiene o imposta gli attributi di un elemento XML come coppie nome/valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-165">Gets or sets the attributes of an XML element as name/value pairs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="928fc-166">Oggetto <see cref="T:System.Collections.Hashtable" /> per i valori di attributo dell'elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-166">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-167">Ogni attributo viene archiviato nella <xref:System.Collections.Hashtable> come una coppia nome/valore.</span><span class="sxs-lookup"><span data-stu-id="928fc-167">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="928fc-168">Nomi e i valori negli attributi devono contenere solo caratteri di attributo XML validi.</span><span class="sxs-lookup"><span data-stu-id="928fc-168">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="928fc-169">Utilizzare <xref:System.Security.SecurityElement.Escape%2A> per rimuovere la stringa di caratteri non validi.</span><span class="sxs-lookup"><span data-stu-id="928fc-169">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="928fc-170">Non è previsto alcun supporto per le stringhe tra virgolette, pertanto le stringhe per coppie nome/valore non devono contenere virgolette o altri caratteri che richiedono l'uso di virgolette.</span><span class="sxs-lookup"><span data-stu-id="928fc-170">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="928fc-171">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.Attributes%2A> proprietà da ottenere un attributo di un elemento XML.</span><span class="sxs-lookup"><span data-stu-id="928fc-171">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="928fc-172">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-172">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="928fc-173">Il  nome o il valore dell'oggetto <see cref="T:System.Collections.Hashtable" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-173">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="928fc-174">Il nome non è un nome dell'attributo XML valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-174">The name is not a valid XML attribute name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="928fc-175">Ottiene o imposta la matrice degli elementi figlio dell'elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-175">Gets or sets the array of child elements of the XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="928fc-176">Elementi figlio ordinati dell'elemento XML come elementi di sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-176">The ordered child elements of the XML element as security elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-177">Se un <xref:System.Security.SecurityElement> contiene sia <xref:System.Security.SecurityElement.Text%2A> e <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> verranno visualizzati per primi.</span><span class="sxs-lookup"><span data-stu-id="928fc-177">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="928fc-178">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.Children%2A> proprietà per ottenere la matrice di elementi figlio dell'elemento XML.</span><span class="sxs-lookup"><span data-stu-id="928fc-178">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="928fc-179">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-179">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="928fc-180">Un figlio del nodo XML padre è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-180">A child of the XML parent node is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="928fc-181">Crea e restituisce una copia identica dell'oggetto <see cref="T:System.Security.SecurityElement" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-181">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="928fc-182">Copia dell'oggetto <see cref="T:System.Security.SecurityElement" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-182">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-183">La copia include sia il <xref:System.Security.SecurityElement.Children%2A> e <xref:System.Security.SecurityElement.Attributes%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="928fc-183">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="928fc-184">Oggetto di un elemento XML con cui confrontare l'oggetto dell'elemento XML corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-184">An XML element object to which to compare the current XML element object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-185">Verifica l'uguaglianza tra due oggetti dell'elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-185">Compares two XML element objects for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="928fc-186">
            <see langword="true" /> se il tag, i nomi e i valori di attributo, gli elementi figlio e i campi di testo dell'elemento XML corrente sono identici alle rispettive controparti nel parametro <paramref name="other" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-186">
              <see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-187">Se sono presenti elementi figlio, confronto si estende in modo ricorsivo a essi.</span><span class="sxs-lookup"><span data-stu-id="928fc-187">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="928fc-188">Non è previsto alcun supporto per il confronto di rappresentazioni XML diverse degli stessi caratteri.</span><span class="sxs-lookup"><span data-stu-id="928fc-188">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="928fc-189">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.Equal%2A> metodo per confrontare due elementi XML.</span><span class="sxs-lookup"><span data-stu-id="928fc-189">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="928fc-190">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-190">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="928fc-191">Stringa in cui eseguire l'escape dei caratteri non validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-191">The string within which to escape invalid characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-192">Sostituisce i caratteri XML non validi in una stringa con l'equivalente XML valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-192">Replaces invalid XML characters in a string with their valid XML equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="928fc-193">Stringa di input con caratteri non validi che è stata sostituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-193">The input string with invalid characters replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-194">Utilizzare questo metodo per sostituire i caratteri non validi in una stringa prima di utilizzare la stringa in un <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="928fc-194">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="928fc-195">Se vengono utilizzati caratteri non validi un <xref:System.Security.SecurityElement> senza la sequenza di escape, un <xref:System.ArgumentException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="928fc-195">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="928fc-196">Nella tabella seguente mostra i caratteri XML non validi e i relativi equivalenti in sequenza escape.</span><span class="sxs-lookup"><span data-stu-id="928fc-196">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  
  
|<span data-ttu-id="928fc-197">Carattere XML non valido</span><span class="sxs-lookup"><span data-stu-id="928fc-197">invalid XML Character</span></span>|<span data-ttu-id="928fc-198">Sostituito con</span><span class="sxs-lookup"><span data-stu-id="928fc-198">Replaced With</span></span>|  
|---------------------------|-------------------|  
|<span data-ttu-id="928fc-199">"\<"</span><span class="sxs-lookup"><span data-stu-id="928fc-199">"\<"</span></span>|<span data-ttu-id="928fc-200">"&lt;"</span><span class="sxs-lookup"><span data-stu-id="928fc-200">"&lt;"</span></span>|  
|<span data-ttu-id="928fc-201">">"</span><span class="sxs-lookup"><span data-stu-id="928fc-201">">"</span></span>|<span data-ttu-id="928fc-202">"&gt;"</span><span class="sxs-lookup"><span data-stu-id="928fc-202">"&gt;"</span></span>|  
|<span data-ttu-id="928fc-203">"\\""</span><span class="sxs-lookup"><span data-stu-id="928fc-203">"\\""</span></span>|<span data-ttu-id="928fc-204">"&quot;"</span><span class="sxs-lookup"><span data-stu-id="928fc-204">"&quot;"</span></span>|  
|<span data-ttu-id="928fc-205">"\\'"</span><span class="sxs-lookup"><span data-stu-id="928fc-205">"\\'"</span></span>|<span data-ttu-id="928fc-206">"&apos;"</span><span class="sxs-lookup"><span data-stu-id="928fc-206">"&apos;"</span></span>|  
|<span data-ttu-id="928fc-207">"&"</span><span class="sxs-lookup"><span data-stu-id="928fc-207">"&"</span></span>|<span data-ttu-id="928fc-208">"&amp;"</span><span class="sxs-lookup"><span data-stu-id="928fc-208">"&amp;"</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="928fc-209">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.Escape%2A> metodo XML non valido di sostituire i caratteri in una stringa con l'equivalente XML valido.</span><span class="sxs-lookup"><span data-stu-id="928fc-209">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="928fc-210">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-210">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="928fc-211">Stringa con codifica XML da cui viene creato l'elemento di sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-211">The XML-encoded string from which to create the security element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-212">Crea un elemento di sicurezza da una stringa con codifica XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-212">Creates a security element from an XML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="928fc-213">Elemento <see cref="T:System.Security.SecurityElement" /> creato dalla stringa XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-213">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-214">Non utilizzare virgolette nella stringa XML. utilizzare virgolette doppie con caratteri di escape.</span><span class="sxs-lookup"><span data-stu-id="928fc-214">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="928fc-215">Ad esempio, invece di "`<value name='Company'>Microsoft</value>"` utilizzare"`<value name=\"Company\">Microsoft</value>"`.</span><span class="sxs-lookup"><span data-stu-id="928fc-215">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="928fc-216">Utilizzo delle virgolette singole può causare uno viene generata un'eccezione o, in alcuni casi, le virgolette singole vengono considerate come testo nella stringa.</span><span class="sxs-lookup"><span data-stu-id="928fc-216">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException">
          <span data-ttu-id="928fc-217">
            <paramref name="xml" /> contiene uno o più caratteri di virgoletta singola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-217">
              <paramref name="xml" /> contains one or more single quotation mark characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="928fc-218">
            <paramref name="xml" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-218">
              <paramref name="xml" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="928fc-219">Nome dell'attributo di cui eseguire il test di validità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-219">The attribute name to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-220">Determina se una stringa è un nome di attributo valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-220">Determines whether a string is a valid attribute name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="928fc-221">
            <see langword="true" /> se il parametro <paramref name="name" /> è un nome di attributo XML valido; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-221">
              <see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-222">Questo metodo può essere utilizzato per testare un attributo prima di aggiungerlo a un elemento di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="928fc-222">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="928fc-223">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.IsValidAttributeName%2A> metodo per determinare se una stringa è un nome di attributo valido.</span><span class="sxs-lookup"><span data-stu-id="928fc-223">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="928fc-224">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-224">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="928fc-225">Valore dell'attributo di cui eseguire il test di validità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-225">The attribute value to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-226">Determina se una stringa è un valore di attributo valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-226">Determines whether a string is a valid attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="928fc-227">
            <see langword="true" /> se il parametro <paramref name="value" /> è un valore di attributo XML valido; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-227">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-228">Questo metodo può essere utilizzato per testare un attributo prima di aggiungerlo a un elemento di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="928fc-228">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="928fc-229">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> metodo per determinare se una stringa è un valore valido dell'attributo.</span><span class="sxs-lookup"><span data-stu-id="928fc-229">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="928fc-230">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-230">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="928fc-231">Tag di cui eseguire il test di validità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-231">The tag to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-232">Determina se una stringa è un tag valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-232">Determines whether a string is a valid tag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="928fc-233">
            <see langword="true" /> se il parametro <paramref name="tag" /> è un tag XML valido; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-233">
              <see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-234">Può essere utilizzato per testare un <xref:System.Security.SecurityElement.Tag%2A> prima di impostarlo.</span><span class="sxs-lookup"><span data-stu-id="928fc-234">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="928fc-235">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.IsValidTag%2A> metodo per determinare se una stringa è un tag valido dell'attributo.</span><span class="sxs-lookup"><span data-stu-id="928fc-235">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="928fc-236">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-236">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="928fc-237">Testo di cui eseguire il test di validità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-237">The text to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-238">Determina se una stringa è valida come testo all'interno di un elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-238">Determines whether a string is valid as text within an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="928fc-239">
            <see langword="true" /> se il parametro <paramref name="text" /> è un elemento testuale XML valido; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-239">
              <see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-240">Questo metodo può essere utilizzato per eseguire il test <xref:System.Security.SecurityElement.Text%2A> prima di impostarlo.</span><span class="sxs-lookup"><span data-stu-id="928fc-240">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="928fc-241">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.IsValidText%2A> metodo per determinare se una stringa è valida come testo dell'elemento XML.</span><span class="sxs-lookup"><span data-stu-id="928fc-241">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="928fc-242">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-242">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="928fc-243">Tag da cercare negli elementi figlio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-243">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-244">Rileva un elemento figlio in base al nome del tag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-244">Finds a child by its tag name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="928fc-245">Il primo elemento XML figlio con il valore di tag specificato oppure <see langword="null" /> se non esiste alcun elemento figlio con <paramref name="tag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-245">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-246">Con XML come indicato di seguito, `SearchForChildByTag("second")` deve restituire l'elemento figlio `<second>`.</span><span class="sxs-lookup"><span data-stu-id="928fc-246">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="928fc-247">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.SearchForChildByTag%2A> metodo per trovare un elemento figlio in base al nome di tag.</span><span class="sxs-lookup"><span data-stu-id="928fc-247">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="928fc-248">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-248">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="928fc-249">Il valore del parametro <paramref name="tag" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-249">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="928fc-250">Tag da cercare negli elementi figlio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-250">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="928fc-251">Trova un elemento figlio in base al nome del tag e restituisce il testo in esso contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-251">Finds a child by its tag name and returns the contained text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="928fc-252">Contenuto testuale del primo elemento figlio con il valore di tag specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-252">The text contents of the first child element with the specified tag value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-253">Questo metodo è equivalente a quanto segue:</span><span class="sxs-lookup"><span data-stu-id="928fc-253">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="928fc-254">Con XML come indicato di seguito, `SearchForTextOfTag("second")` deve restituire "text2".</span><span class="sxs-lookup"><span data-stu-id="928fc-254">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="928fc-255">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> per trovare un elemento figlio in base al nome di tag e restituire il testo contenuto.</span><span class="sxs-lookup"><span data-stu-id="928fc-255">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="928fc-256">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-256">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="928fc-257">
            <paramref name="tag" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-257">
              <paramref name="tag" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="928fc-258">Ottiene o imposta il nome del tag di un elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-258">Gets or sets the tag name of an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="928fc-259">Nome del tag di un elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-259">The tag name of an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-260">Nel codice XML, il tag viene visualizzato nello script come indicato di seguito:</span><span class="sxs-lookup"><span data-stu-id="928fc-260">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="928fc-261">Se questo elemento contiene elementi figlio, i figli sostituiranno `text`.</span><span class="sxs-lookup"><span data-stu-id="928fc-261">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="928fc-262">Assegnare solo stringhe di tag XML valide per questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="928fc-262">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="928fc-263">Utilizzare <xref:System.Security.SecurityElement.Escape%2A> per rimuovere la stringa di caratteri non validi.</span><span class="sxs-lookup"><span data-stu-id="928fc-263">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="928fc-264">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.Tag%2A> proprietà da ottenere il nome del tag di un elemento XML.</span><span class="sxs-lookup"><span data-stu-id="928fc-264">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="928fc-265">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-265">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="928fc-266">Il tag è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-266">The tag is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="928fc-267">Il tag non è valido in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-267">The tag is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="928fc-268">Ottiene o imposta il testo in un elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-268">Gets or sets the text within an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="928fc-269">Valore del testo in un elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-269">The value of the text within an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-270">Il testo non deve contenere caratteri speciali XML.</span><span class="sxs-lookup"><span data-stu-id="928fc-270">The text should not contain XML special characters.</span></span> <span data-ttu-id="928fc-271">Utilizzare <xref:System.Security.SecurityElement.Escape%2A> per rimuovere la stringa di caratteri non validi.</span><span class="sxs-lookup"><span data-stu-id="928fc-271">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="928fc-272">Se un <xref:System.Security.SecurityElement> contiene sia <xref:System.Security.SecurityElement.Text%2A> e <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> verranno visualizzati per primi.</span><span class="sxs-lookup"><span data-stu-id="928fc-272">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="928fc-273">Il codice seguente viene illustrato come utilizzare il <xref:System.Security.SecurityElement.Text%2A> proprietà da ottenere il testo di un elemento XML.</span><span class="sxs-lookup"><span data-stu-id="928fc-273">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="928fc-274">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="928fc-274">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="928fc-275">Il testo non è valido in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-275">The text is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="928fc-276">Produce una rappresentazione in forma di stringa di un elemento XML e dei relativi attributi costitutivi, elementi figlio e testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-276">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="928fc-277">Elemento XML e il relativo contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="928fc-277">The XML element and its contents.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="928fc-278">Questo metodo è utile per il debug per visualizzare la rappresentazione XML dell'elemento.</span><span class="sxs-lookup"><span data-stu-id="928fc-278">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>