<Type Name="CompositionService" FullName="System.ComponentModel.Composition.Hosting.CompositionService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="123a022f8664c321a75ad2b8acdc041e5b8cafc1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36643869" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompositionService : IDisposable, System.ComponentModel.Composition.ICompositionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositionService extends System.Object implements class System.ComponentModel.Composition.ICompositionService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.CompositionService" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositionService&#xA;Implements ICompositionService, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionService : IDisposable, System::ComponentModel::Composition::ICompositionService" />
  <TypeSignature Language="F#" Value="type CompositionService = class&#xA;    interface ICompositionService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.ICompositionService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bf23b-101">Fornisce metodi per soddisfare le importazioni sull'istanza di una parte esistente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf23b-101">Provides methods to satisfy imports on an existing part instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="bf23b-102">Questo tipo implementa la <xref:System.IDisposable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="bf23b-102">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="bf23b-103">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</span><span class="sxs-lookup"><span data-stu-id="bf23b-103">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="bf23b-104">Per eliminare direttamente il tipo, chiamare il relativo <xref:System.IDisposable.Dispose%2A> metodo in un `try` / `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="bf23b-104">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="bf23b-105">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="bf23b-105">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="bf23b-106">Per altre informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="bf23b-106">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="compositionService.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf23b-107">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf23b-107">Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf23b-108">Chiamare il metodo `Dispose` dopo aver terminato di utilizzare l'oggetto <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span><span class="sxs-lookup"><span data-stu-id="bf23b-108">Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span> <span data-ttu-id="bf23b-109">Il metodo `Dispose` lascia l'oggetto <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> in una condizione di inutilizzabilità.</span><span class="sxs-lookup"><span data-stu-id="bf23b-109">The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> in an unusable state.</span></span> <span data-ttu-id="bf23b-110">Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti per il <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> consentire al garbage collector di recuperare la memoria che il <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> occupata.</span><span class="sxs-lookup"><span data-stu-id="bf23b-110">After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> was occupying.</span></span>  
  
 <span data-ttu-id="bf23b-111">Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="bf23b-111">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf23b-112">Chiamare sempre il metodo `Dispose` prima di rilasciare l'ultimo riferimento a <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span><span class="sxs-lookup"><span data-stu-id="bf23b-112">Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span> <span data-ttu-id="bf23b-113">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="bf23b-113">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SatisfyImportsOnce(class System.ComponentModel.Composition.Primitives.ComposablePart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SatisfyImportsOnce (part As ComposablePart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SatisfyImportsOnce(System::ComponentModel::Composition::Primitives::ComposablePart ^ part);" />
      <MemberSignature Language="F#" Value="abstract member SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit&#xA;override this.SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit" Usage="compositionService.SatisfyImportsOnce part" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
      </Parameters>
      <Docs>
        <param name="part">
          <span data-ttu-id="bf23b-114">Parte da comporre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf23b-114">The part to compose.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf23b-115">Compone la parte specificata, con convalida e ricomposizione disabilitate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf23b-115">Composes the specified part, with recomposition and validation disabled.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>