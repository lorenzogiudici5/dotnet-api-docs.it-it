<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CompositionContainer.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5531be8b9445e82ab2acefc549474a24be1a166d3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">531be8b9445e82ab2acefc549474a24be1a166d3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Manages the composition of parts.</source>
          <target state="translated">Gestisce la composizione di parti.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object serves two major purposes in an application.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> oggetto ha due scopi principali in un'applicazione.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>First, it keeps track of which parts are available for composition and what their dependencies are, and performs composition whenever the set of available parts changes.</source>
          <target state="translated">Innanzitutto, tiene traccia di quali parti sono disponibili per la composizione e quali sono le relative dipendenze ed esegue la composizione ogni volta che il set di parti disponibili le modifiche.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Second, it provides the methods by which the application gets instances of composed parts or fills the dependencies of a composable part.</source>
          <target state="translated">In secondo luogo, fornisce i metodi con cui l'applicazione ottiene le istanze di parti composte o riempie le dipendenze di una parte componibile.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Questo tipo implementa il <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Per eliminare direttamente il tipo, chiamare il relativo <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> metodo in un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> blocco.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio <ph id="ph1">`using`</ph> in C# o <ph id="ph2">`Using`</ph> in Visual Basic.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Per ulteriori informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> argomento relativo all'interfaccia.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Parts can be made available to the container either directly or through the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A&gt;</ph> property.</source>
          <target state="translated">Le parti possono essere resi disponibili per il contenitore sia direttamente o tramite il <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>All the parts discoverable in this <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog&gt;</ph> are available to the container to fulfill imports, along with any parts added directly.</source>
          <target state="translated">Tutte le parti individuabili in questo <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog&gt;</ph> sono disponibili per il contenitore per soddisfare le importazioni, insieme a tutte le parti aggiunte direttamente.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph> method allows instantiated parts to be added to an existing container.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph> metodo consente alle parti di un'istanza da aggiungere a un contenitore esistente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Assuming composition is successful, these parts will have their imports filled with parts retrieved from the container, and their exports will be available to other parts.</source>
          <target state="translated">Se la composizione ha esito positivo, queste parti avrà le importazioni riempite con parti recuperate dal contenitore e le esportazioni sarà disponibile ad altre parti.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Imports marked as recomposable will be registered for recomposition.</source>
          <target state="translated">Le importazioni contrassegnate come ricomponibile verranno registrate per la ricomposizione.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A&gt;</ph> method allows a part to have its imports filled without being added to the container.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A&gt;</ph> metodo consente a una parte di disporre di importazioni riempite senza essere aggiunte al contenitore.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>If the composition is successful, the part's imports will be filled, but the part's exports will not be available to other parts and no imports will be registered for recomposition.</source>
          <target state="translated">Se la composizione ha esito positivo, verranno compilate importazioni della parte, ma le esportazioni della parte non sarà disponibile ad altre parti e nessuna importazione verranno registrata per la ricomposizione.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> objects should always be disposed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> gli oggetti devono sempre essere eliminati.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>When the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object also disposes all the parts that it has created.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A&gt;</ph> metodo viene chiamato, il <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> oggetto elimina anche tutte le parti che ha creato.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object that can be accessed from multiple threads must be constructed with the <ph id="ph2">`isThreadSafe`</ph> parameter set to <ph id="ph3">`true`</ph>, using the <ph id="ph4">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.%23ctor%28System.ComponentModel.Composition.Primitives.ComposablePartCatalog%2CSystem.Boolean%2CSystem.ComponentModel.Composition.Hosting.ExportProvider%5B%5D%29&gt;</ph> constructor.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> oggetto a cui è possibile accedere da più thread deve essere costruito con la <ph id="ph2">`isThreadSafe`</ph> parametro impostato su <ph id="ph3">`true`</ph>, usando il <ph id="ph4">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.%23ctor%28System.ComponentModel.Composition.Primitives.ComposablePartCatalog%2CSystem.Boolean%2CSystem.ComponentModel.Composition.Hosting.ExportProvider%5B%5D%29&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Performance will be slightly slower when <ph id="ph1">`isThreadSafe`</ph> is <ph id="ph2">`true`</ph>, so we recommend that you set this parameter to <ph id="ph3">`false`</ph> in single-threaded scenarios.</source>
          <target state="translated">Le prestazioni sono leggermente più lente quando <ph id="ph1">`isThreadSafe`</ph> è <ph id="ph2">`true`</ph>, pertanto è consigliabile impostare questo parametro <ph id="ph3">`false`</ph> in scenari a thread singolo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> should never import itself, or a part that has a reference to it.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> non deve mai importare se stesso, o una parte che contiene un riferimento a esso.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Such a reference could allow an untrusted part to gain access all the parts in the container.</source>
          <target state="translated">Tale riferimento può consentire una parte non attendibile accedere a tutte le parti nel contenitore.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object is initialized with a catalog and is used to fill the imports of a part.</source>
          <target state="translated">Nell'esempio seguente, un <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> oggetto viene inizializzato con un catalogo e viene utilizzato per riempire le importazioni di una parte.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>This example uses the Attributed Programming Model.</source>
          <target state="translated">Questo esempio viene utilizzato il modello di programmazione con attributi.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> objects that provide the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> to set <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> to an empty <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Matrice di oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> che forniscono a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> l'accesso a oggetti <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> oppure <ph id="ph4">&lt;see langword="null" /&gt;</ph> per impostare <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> su un oggetto <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> vuoto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class with the specified export providers.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> con i provider di esportazione specificati.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contiene un elemento <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An object that specifies the behavior of this container.</source>
          <target state="translated">Oggetto che specifica il comportamento del contenitore.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> objects that provide the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> to set <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> to an empty <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Matrice di oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> che forniscono a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> l'accesso a oggetti <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> oppure <ph id="ph4">&lt;see langword="null" /&gt;</ph> per impostare <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> su un oggetto <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> vuoto.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class with the specified export providers and options.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> con i provider e le opzioni di esportazione specificati.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contiene un elemento <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>A catalog that provides <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</source>
          <target state="translated">Catalogo che fornisce oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> objects that provide the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> to set <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> to an empty <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Matrice di oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> che forniscono a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> l'accesso a oggetti <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> oppure <ph id="ph4">&lt;see langword="null" /&gt;</ph> per impostare <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> su un oggetto <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> vuoto.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class with the specified catalog and export providers.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> con i provider di catalogo e di esportazione specificati.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contiene un elemento <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>A catalog that provides <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</source>
          <target state="translated">Catalogo che fornisce oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> object must be thread-safe; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se questo oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> deve essere thread-safe. In caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> objects that provide the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> to set the <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> property to an empty <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Matrice di oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> che forniscono a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> l'accesso a oggetti <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> oppure <ph id="ph4">&lt;see langword="null" /&gt;</ph> per impostare la proprietà <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> su un oggetto <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> vuoto.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class with the specified catalog, thread-safe mode, and export providers.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> con il catalogo, la modalità thread-safe e i provider di esportazione specificati.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object that can be accessed from multiple threads must set the <ph id="ph2">`isThreadSafe`</ph> parameter to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> necessario impostare l'oggetto che è possibile accedere da più thread di <ph id="ph2">`isThreadSafe`</ph> parametro <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>Performance will be slightly slower when <ph id="ph1">`isThreadSafe`</ph> is <ph id="ph2">`true`</ph>, so we recommend that you set this parameter to <ph id="ph3">`false`</ph> in single-threaded scenarios.</source>
          <target state="translated">Le prestazioni sono leggermente più lente quando <ph id="ph1">`isThreadSafe`</ph> è <ph id="ph2">`true`</ph>, pertanto è consigliabile impostare questo parametro <ph id="ph3">`false`</ph> in scenari a thread singolo.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>One or more elements of <ph id="ph1">&lt;paramref name="providers" /&gt;</ph> are <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o più elementi di <ph id="ph1">&lt;paramref name="providers" /&gt;</ph> sono <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>A catalog that provides <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</source>
          <target state="translated">Catalogo che fornisce oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An object that specifies options that affect the behavior of the container.</source>
          <target state="translated">Oggetto che specifica le opzioni che influiscono sul comportamento del contenitore.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> objects that provide the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> to set <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> to an empty <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Matrice di oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> che forniscono a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> l'accesso a oggetti <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> oppure <ph id="ph4">&lt;see langword="null" /&gt;</ph> per impostare <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> su un oggetto <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> vuoto.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class with the specified catalog, options, and export providers.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> con i provider di catalogo, opzioni e esportazione specificati.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contiene un elemento <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> that provides the container access to <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> che fornisce al contenitore l'accesso agli oggetti <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog">
          <source>The catalog that provides the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to exports produced from <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> objects.</source>
          <target state="translated">Catalogo che fornisce a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> l'accesso alle esportazioni prodotte da oggetti <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> object has been disposed of.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>Changes to the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> to include during the composition.</source>
          <target state="translated">Modifiche a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> da includere durante la composizione.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>Adds or removes the parts in the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" /&gt;</ph> from the container and executes composition.</source>
          <target state="translated">Aggiunge o rimuove le parti nell'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" /&gt;</ph> specificato dal contenitore ed esegue la composizione.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>This method is the primary way of directly adding or removing parts from the container.</source>
          <target state="translated">Questo metodo è il modo principale di direttamente aggiungendo o rimuovendo le parti dal contenitore.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> will always maintain a stable, composed state.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> manterrà sempre uno stato stabile e composto.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>Therefore, calling <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph> with an empty <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionBatch&gt;</ph> is never necessary to start composition.</source>
          <target state="translated">Pertanto, la chiamata <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph> con un oggetto vuoto <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionBatch&gt;</ph> non è mai necessaria iniziare la composizione.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>Instead, call the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph> method whenever you need to make changes to the parts available to the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</source>
          <target state="translated">Chiamare invece il <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph> metodo ogni volta che si desidera apportare modifiche alle parti disponibili per il <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionBatch&gt;</ph> can contain both parts to be added and parts to be removed.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionBatch&gt;</ph> può contenere entrambe le parti da aggiungere e le parti da rimuovere.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>Recomposition will take place only once for each call to <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph>.</source>
          <target state="translated">La ricomposizione verrà eseguita una sola volta per ogni chiamata a <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>In this simple example, three parts are created and added to the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>, and one part is retrieved to show that all imports have been filled.</source>
          <target state="translated">In questo semplice esempio, vengano create e aggiunto a tre parti di <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>, e una parte viene recuperata per mostrare che tutte le importazioni sono state compilate.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>This example uses the Attributed Programming Model.</source>
          <target state="translated">Questo esempio viene utilizzato il modello di programmazione con attributi.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</source>
          <target state="translated">Rilascia le risorse usate da <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class.</source>
          <target state="translated">Rilascia tutte le risorse usate dall'istanza corrente della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</source>
          <target state="translated">Chiamare il metodo <ph id="ph1">`Dispose`</ph> dopo aver terminato di utilizzare l'oggetto <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> in an unusable state.</source>
          <target state="translated">Il metodo <ph id="ph1">`Dispose`</ph> lascia l'oggetto <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> in una condizione di inutilizzabilità.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> was occupying.</source>
          <target state="translated">Dopo la chiamata <ph id="ph1">`Dispose`</ph>, è necessario rilasciare tutti i riferimenti al <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> in modo che il garbage collector può recuperare la memoria che di <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> occupata.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementazione di un metodo Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</source>
          <target state="translated">Chiamare sempre il metodo <ph id="ph1">`Dispose`</ph> prima di rilasciare l'ultimo riferimento a <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> dell'oggetto <ph id="ph2">`Finalize`</ph> non viene richiamato dal Garbage Collector.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate da <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> e, facoltativamente, le risorse gestite.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>The object that defines the conditions of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects to get.</source>
          <target state="translated">Oggetto che definisce le condizioni degli oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> da ottenere.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>The composition transaction to use, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to disable transactional composition.</source>
          <target state="translated">Transazione della composizione da utilizzare o <ph id="ph1">&lt;see langword="null" /&gt;</ph> per disabilitare la composizione transazionale.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>Returns a collection of all exports that match the conditions in the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> object.</source>
          <target state="translated">Restituisce una raccolta di tutte le esportazioni che corrispondono alle condizioni nell'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>A collection of all the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects in this <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> object that match the conditions specified by <ph id="ph3">&lt;paramref name="definition" /&gt;</ph>.</source>
          <target state="translated">Raccolta di tutti gli oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> in questo oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> che corrispondono alle condizioni specificate da <ph id="ph3">&lt;paramref name="definition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>Implementations should not treat cardinality-related mismatches as errors and should not throw exceptions for cardinality-related mismatches.</source>
          <target state="translated">Le implementazioni non devono considerare le mancate corrispondenze correlate alla cardinalità come errori e non devono generare eccezioni per le mancate corrispondenze correlate alla cardinalità.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>For example, if the import requests exactly one export and the provider has either no matching exports or more than one, the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore%2A&gt;</ph> method should return an empty <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection of <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> objects.</source>
          <target state="translated">Ad esempio, se l'importazione richiede esattamente un'esportazione e il provider ha non esportazioni corrispondenti o più, il <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore%2A&gt;</ph> metodo deve restituire un oggetto vuoto <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> insieme di <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers">
          <source>Gets the export providers that provide the container access to additional <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> objects.</source>
          <target state="translated">Ottiene i provider di esportazione che forniscono al contenitore l'accesso a oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> aggiuntivi.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> objects that provide the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to additional <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects.</source>
          <target state="translated">Raccolta di oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> che forniscono a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> accesso a oggetti <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> aggiuntivi.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers">
          <source>The default is an empty <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">L'impostazione predefinita è un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> vuoto.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> has been disposed of.</source>
          <target state="translated">Istanza <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> eliminata.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> that needs to be released.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> che deve essere rilasciato.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>Releases the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> object from the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</source>
          <target state="translated">Rilascia l'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> specificato dall'oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>The behavior of this method may vary depending on the implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.ExportProvider&gt;</ph> that produced the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> instance.</source>
          <target state="translated">Il comportamento di questo metodo può variare a seconda dell'implementazione del <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.ExportProvider&gt;</ph> che ha generato il <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> istanza.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>As a rule, non-shared exports should be detached from the container.</source>
          <target state="translated">Di norma, le esportazioni non condivisi devono essere disconnesse dal contenitore.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>For example, the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider&gt;</ph> will only release an <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> if it comes from a <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.ComposablePart&gt;</ph> that was constructed under a <ph id="ph4">&lt;xref:System.ComponentModel.Composition.CreationPolicy.NonShared&gt;</ph> context.</source>
          <target state="translated">Ad esempio, il <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider&gt;</ph> rilasceranno solo un <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> provengono da un <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.ComposablePart&gt;</ph> che è stato costruito con un <ph id="ph4">&lt;xref:System.ComponentModel.Composition.CreationPolicy.NonShared&gt;</ph> contesto.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>Release in this context means walking the dependency chain of the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> objects, detaching references from the container and calling <ph id="ph2">`Dispose`</ph> on the <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.ComposablePart&gt;</ph> objects as needed.</source>
          <target state="translated">Versione in questo contesto indica che l'analisi della catena di dipendenze del <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> oggetti, la disconnessione dei riferimenti dal contenitore e chiamare il metodo <ph id="ph2">`Dispose`</ph> sul <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.ComposablePart&gt;</ph> oggetti in base alle esigenze.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> was constructed under a <ph id="ph2">&lt;xref:System.ComponentModel.Composition.CreationPolicy.Shared&gt;</ph> context the <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider&gt;</ph> will do nothing, as the specified <ph id="ph4">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> may being used by other requestors.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> è stato costruito con un <ph id="ph2">&lt;xref:System.ComponentModel.Composition.CreationPolicy.Shared&gt;</ph> contesto il <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider&gt;</ph> non eseguirà alcuna operazione, come specificato <ph id="ph4">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> potrebbe essere in uso da parte di altri richiedenti.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>Those will only be detached when the container is itself disposed.</source>
          <target state="translated">Tali verranno disconnessi solo quando il contenitore è a sua volta è stato eliminato.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source><ph id="ph1">&lt;paramref name="export" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="export" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})">
          <source>The type of the export.</source>
          <target state="translated">Tipo dell'esportazione.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})">
          <source>An indirect reference to the export to remove.</source>
          <target state="translated">Riferimento indiretto all'esportazione da rimuovere.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})">
          <source>Removes the specified export from composition and releases its resources if possible.</source>
          <target state="translated">Rimuove l'esportazione specificata dalla composizione e rilascia le relative risorse se possibile.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects to be released.</source>
          <target state="translated">Raccolta di oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> da rilasciare.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
          <source>Releases a set of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects from the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</source>
          <target state="translated">Rilascia un set di oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> dall'oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
          <source>The behavior of this method may vary depending on the context in which the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> was constructed.</source>
          <target state="translated">Il comportamento di questo metodo può variare a seconda del contesto in cui il <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> è stata costruita.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A&gt;</ph> method.</source>
          <target state="translated">Per altre informazioni, vedere il metodo <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
          <source><ph id="ph1">&lt;paramref name="exports" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exports" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
          <source><ph id="ph1">&lt;paramref name="exports" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exports" /&gt;</ph> contiene un elemento <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})">
          <source>The type of the exports.</source>
          <target state="translated">Tipo delle esportazioni.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})">
          <source>A collection of indirect references to the exports to be removed.</source>
          <target state="translated">Raccolta di riferimenti indiretti alle esportazioni da rimuovere.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})">
          <source>Removes a collection of exports from composition and releases their resources if possible.</source>
          <target state="translated">Rimuove una raccolta di esportazioni dalla composizione e rilascia le relative risorse se possibile.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})">
          <source>The type of the exports.</source>
          <target state="translated">Tipo delle esportazioni.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})">
          <source>The type of the exports' metadata view.</source>
          <target state="translated">Tipo della visualizzazione dei metadati delle esportazioni.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})">
          <source>A collection of indirect references to the exports to be removed and their metadata.</source>
          <target state="translated">Raccolta di riferimenti indiretti alle esportazioni da rimuovere e relativi metadati.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})">
          <source>Removes a collection of exports from composition and releases their resources if possible.</source>
          <target state="translated">Rimuove una raccolta di esportazioni dalla composizione e rilascia le relative risorse se possibile.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source>The part to satisfy the imports of.</source>
          <target state="translated">Parte di cui soddisfare le importazioni.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source>Satisfies the imports of the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> object without registering it for recomposition.</source>
          <target state="translated">Soddisfa le importazioni dell'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> specificato senza registrarlo per la ricomposizione.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> object has been disposed of.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source><ph id="ph1">&lt;paramref name="part" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="part" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source>An error occurred during composition.</source>
          <target state="translated">Si è verificato un errore durante la composizione.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source><ph id="ph1">&lt;see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /&gt;</ph> will contain a collection of the errors that occurred.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /&gt;</ph> conterrà la raccolta degli errori riscontrati.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>