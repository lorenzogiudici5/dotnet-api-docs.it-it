<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TimerCallback.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac569b3f105e276f73fb4e520c9b7053918a180e13b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69b3f105e276f73fb4e520c9b7053918a180e13b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.TimerCallback">
          <source>An object containing application-specific information relevant to the method invoked by this delegate, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Oggetto contenente informazioni specifiche dell'applicazione rilevanti per il metodo richiamato da questo delegato, oppure <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Threading.TimerCallback">
          <source>Represents the method that handles calls from a <ph id="ph1">&lt;see cref="T:System.Threading.Timer" /&gt;</ph>.</source>
          <target state="translated">Rappresenta il metodo che gestisce le chiamate da un <ph id="ph1">&lt;see cref="T:System.Threading.Timer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.TimerCallback">
          <source>Use a <ph id="ph1">`TimerCallback`</ph> delegate to specify the method that is called by a <ph id="ph2">&lt;xref:System.Threading.Timer&gt;</ph>.</source>
          <target state="translated">Utilizzare un <ph id="ph1">`TimerCallback`</ph> delegato per specificare il metodo che viene chiamato da un <ph id="ph2">&lt;xref:System.Threading.Timer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.TimerCallback">
          <source>This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system.</source>
          <target state="translated">Questo metodo non viene eseguito nel thread che ha creato il timer; esegue in un thread separato del pool di thread che viene fornito dal sistema.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.TimerCallback">
          <source>The <ph id="ph1">`TimerCallback`</ph> delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <ph id="ph2">&lt;xref:System.Threading.Timer.Dispose%2A&gt;</ph> method is called, or until the <ph id="ph3">&lt;xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType&gt;</ph> method is called with the interval value <ph id="ph4">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">`TimerCallback`</ph> delegato richiama il metodo di una volta dopo il tempo di inizio specificato e continua richiamare una volta per ogni intervallo del timer fino a quando il <ph id="ph2">&lt;xref:System.Threading.Timer.Dispose%2A&gt;</ph> metodo viene chiamato, o fino a quando il <ph id="ph3">&lt;xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType&gt;</ph> metodo viene chiamato con il valore dell'intervallo <ph id="ph4">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.TimerCallback">
          <source>Callbacks can occur after the <ph id="ph1">&lt;xref:System.Threading.Timer.Dispose&gt;</ph> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</source>
          <target state="translated">I callback possono verificarsi dopo il <ph id="ph1">&lt;xref:System.Threading.Timer.Dispose&gt;</ph> overload del metodo è stato chiamato, perché il timer accoda i callback per l'esecuzione dal thread del pool.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.TimerCallback">
          <source>You can use the <ph id="ph1">&lt;xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29&gt;</ph> method overload to wait until all callbacks have completed.</source>
          <target state="translated">È possibile utilizzare il <ph id="ph1">&lt;xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29&gt;</ph> overload del metodo per attendere il completamento di tutti i callback.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.TimerCallback">
          <source>The timer delegate is specified when the timer is constructed, and cannot be changed.</source>
          <target state="translated">Il delegato timer viene specificato quando il timer viene creato e non può essere modificato.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.TimerCallback">
          <source>The start time for a <ph id="ph1">`Timer`</ph> is passed in the <ph id="ph2">`dueTime`</ph> parameter of the <ph id="ph3">`Timer`</ph> constructors, and the period is passed in the <ph id="ph4">`period`</ph> parameter.</source>
          <target state="translated">L'ora di inizio per un <ph id="ph1">`Timer`</ph> viene passato il <ph id="ph2">`dueTime`</ph> parametro del <ph id="ph3">`Timer`</ph> costruttori e il periodo di viene passata la <ph id="ph4">`period`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.TimerCallback">
          <source>For an example that demonstrates creating and using a <ph id="ph1">`TimerCallback`</ph> delegate, see <ph id="ph2">&lt;xref:System.Threading.Timer?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Per un esempio che illustra la creazione e utilizzo un <ph id="ph1">`TimerCallback`</ph> delegato, vedere <ph id="ph2">&lt;xref:System.Threading.Timer?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.TimerCallback">
          <source>The following code example shows how to create the delegate used with the <ph id="ph1">`Timer`</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come creare il delegato utilizzato con la <ph id="ph1">`Timer`</ph> classe.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>