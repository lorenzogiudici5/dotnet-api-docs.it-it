<Type Name="WaitHandle" FullName="System.Threading.WaitHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12fe7b4aeb7e4229c3b0b19f8900c53c137c3e29" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39873558" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WaitHandle : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract beforefieldinit WaitHandle extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitHandle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WaitHandle&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WaitHandle abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type WaitHandle = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="35530-101">Incapsula oggetti specifici del sistema operativo che attendono l'accesso esclusivo alle risorse condivise.</span>
      <span class="sxs-lookup">
        <span data-stu-id="35530-101">Encapsulates operating system–specific objects that wait for exclusive access to shared resources.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-102">Il <xref:System.Threading.WaitHandle> classe incapsula handle di sincronizzazione Win32 e viene usata per rappresentare tutti gli oggetti di sincronizzazione in fase di esecuzione che consentono più operazioni di attesa.</span><span class="sxs-lookup"><span data-stu-id="35530-102">The <xref:System.Threading.WaitHandle> class encapsulates Win32 synchronization handles, and is used to represent all synchronization objects in the runtime that allow multiple wait operations.</span></span> <span data-ttu-id="35530-103">Per un confronto tra gli handle di attesa con altri oggetti di sincronizzazione, vedere [panoramica delle primitive di sincronizzazione](~/docs/standard/threading/overview-of-synchronization-primitives.md).</span><span class="sxs-lookup"><span data-stu-id="35530-103">For a comparison of wait handles with other synchronization objects, see [Overview of Synchronization Primitives](~/docs/standard/threading/overview-of-synchronization-primitives.md).</span></span>  
  
 <span data-ttu-id="35530-104">Il <xref:System.Threading.WaitHandle> classe è astratta.</span><span class="sxs-lookup"><span data-stu-id="35530-104">The <xref:System.Threading.WaitHandle> class itself is abstract.</span></span> <span data-ttu-id="35530-105">Le classi derivate da <xref:System.Threading.WaitHandle> definire un meccanismo di segnalazione che indica l'attivazione o la disattivazione dell'accesso a una risorsa condivisa, ma usare ereditato <xref:System.Threading.WaitHandle> metodi per bloccare l'attesa per l'accesso alle risorse condivise.</span><span class="sxs-lookup"><span data-stu-id="35530-105">Classes derived from <xref:System.Threading.WaitHandle> define a signaling mechanism to indicate taking or releasing access to a shared resource, but they use the inherited <xref:System.Threading.WaitHandle> methods to block while waiting for access to shared resources.</span></span> <span data-ttu-id="35530-106">Le classi derivate da <xref:System.Threading.WaitHandle> includono:</span><span class="sxs-lookup"><span data-stu-id="35530-106">The classes derived from <xref:System.Threading.WaitHandle> include:</span></span>  
  
-   <span data-ttu-id="35530-107">Classe <xref:System.Threading.Mutex>.</span><span class="sxs-lookup"><span data-stu-id="35530-107">The <xref:System.Threading.Mutex> class.</span></span> <span data-ttu-id="35530-108">Visualizzare [mutex](~/docs/standard/threading/mutexes.md).</span><span class="sxs-lookup"><span data-stu-id="35530-108">See [Mutexes](~/docs/standard/threading/mutexes.md).</span></span>  
  
-   <span data-ttu-id="35530-109">Il <xref:System.Threading.EventWaitHandle> classe e delle relative classi derivate <xref:System.Threading.AutoResetEvent> e <xref:System.Threading.ManualResetEvent>.</span><span class="sxs-lookup"><span data-stu-id="35530-109">The <xref:System.Threading.EventWaitHandle> class and its derived classes, <xref:System.Threading.AutoResetEvent> and <xref:System.Threading.ManualResetEvent>.</span></span> <span data-ttu-id="35530-110">Vedere [EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span><span class="sxs-lookup"><span data-stu-id="35530-110">See [EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span></span>  
  
-   <span data-ttu-id="35530-111">Classe <xref:System.Threading.Semaphore>.</span><span class="sxs-lookup"><span data-stu-id="35530-111">The <xref:System.Threading.Semaphore> class.</span></span> <span data-ttu-id="35530-112">Visualizzare [Semaphore e SemaphoreSlim](~/docs/standard/threading/semaphore-and-semaphoreslim.md).</span><span class="sxs-lookup"><span data-stu-id="35530-112">See [Semaphore and SemaphoreSlim](~/docs/standard/threading/semaphore-and-semaphoreslim.md).</span></span>  
  
 <span data-ttu-id="35530-113">Thread può essere bloccata su un singolo handle di attesa chiamando il metodo di istanza <xref:System.Threading.WaitHandle.WaitOne%2A>, che viene ereditata dalle classi derivate da <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="35530-113">Threads can block on an individual wait handle by calling the instance method <xref:System.Threading.WaitHandle.WaitOne%2A>, which is inherited by classes derived from <xref:System.Threading.WaitHandle>.</span></span>  
  
 <span data-ttu-id="35530-114">Le classi derivate di <xref:System.Threading.WaitHandle> differiscono relativa affinità dei thread.</span><span class="sxs-lookup"><span data-stu-id="35530-114">The derived classes of <xref:System.Threading.WaitHandle> differ in their thread affinity.</span></span> <span data-ttu-id="35530-115">Handle di attesa evento (<xref:System.Threading.EventWaitHandle>, <xref:System.Threading.AutoResetEvent>, e <xref:System.Threading.ManualResetEvent>) e i semafori non presentano affinità di thread; qualsiasi thread può segnalare un semaforo o un handle di attesa evento.</span><span class="sxs-lookup"><span data-stu-id="35530-115">Event wait handles (<xref:System.Threading.EventWaitHandle>, <xref:System.Threading.AutoResetEvent>, and <xref:System.Threading.ManualResetEvent>) and semaphores do not have thread affinity; any thread can signal an event wait handle or semaphore.</span></span> <span data-ttu-id="35530-116">I mutex, d'altra parte, presentano affinità di thread; il thread che possiede un mutex necessario rilasciarlo e viene generata un'eccezione se un thread chiama il <xref:System.Threading.Mutex.ReleaseMutex%2A> metodo su un mutex di cui non è proprietario.</span><span class="sxs-lookup"><span data-stu-id="35530-116">Mutexes, on the other hand, do have thread affinity; the thread that owns a mutex must release it, and an exception is thrown if a thread calls the <xref:System.Threading.Mutex.ReleaseMutex%2A> method on a mutex that it does not own.</span></span>  
  
 <span data-ttu-id="35530-117">Poiché il <xref:System.Threading.WaitHandle> deriva dalla classe <xref:System.MarshalByRefObject>, queste classi possono essere utilizzate per sincronizzare le attività dei thread tra i limiti del dominio applicazione.</span><span class="sxs-lookup"><span data-stu-id="35530-117">Because the <xref:System.Threading.WaitHandle> class derives from <xref:System.MarshalByRefObject>, these classes can be used to synchronize the activities of threads across application domain boundaries.</span></span>  
  
 <span data-ttu-id="35530-118">Oltre alle relative classi derivate di <xref:System.Threading.WaitHandle> classe ha un numero di metodi statici che blocca un thread finché uno o più oggetti di sincronizzazione ricevano un segnale...</span><span class="sxs-lookup"><span data-stu-id="35530-118">In addition to its derived classes, the <xref:System.Threading.WaitHandle> class has a number of static methods that block a thread until one or more synchronization objects receive a signal..</span></span> <span data-ttu-id="35530-119">Sono inclusi:</span><span class="sxs-lookup"><span data-stu-id="35530-119">These include:</span></span>  
  
-   <span data-ttu-id="35530-120"><xref:System.Threading.WaitHandle.SignalAndWait%2A>, che consente a un thread segnalare un handle di attesa e immediatamente in attesa su un altro.</span><span class="sxs-lookup"><span data-stu-id="35530-120"><xref:System.Threading.WaitHandle.SignalAndWait%2A>, which allows a thread to signal one wait handle and immediately wait on another.</span></span>  
  
-   <span data-ttu-id="35530-121"><xref:System.Threading.WaitHandle.WaitAll%2A>, che consente a un thread in attesa finché tutti gli handle di attesa in una matrice ricevano un segnale.</span><span class="sxs-lookup"><span data-stu-id="35530-121"><xref:System.Threading.WaitHandle.WaitAll%2A>, which allows a thread to wait until all the wait handles in an array receive a signal.</span></span>  
  
-   <span data-ttu-id="35530-122"><xref:System.Threading.WaitHandle.WaitAny%2A>, che consente a un thread in attesa fino a quando non uno di un set specificato di handle di attesa è stato segnalato.</span><span class="sxs-lookup"><span data-stu-id="35530-122"><xref:System.Threading.WaitHandle.WaitAny%2A>, which allows a thread to wait until any one of a specified set of wait handles has been signaled .</span></span>  
  
 <span data-ttu-id="35530-123">Gli overload di questi metodi forniscono gli intervalli di timeout per l'abbandono dell'attesa e la possibilità di uscire da un contesto di sincronizzazione prima dell'attesa, usare il contesto di sincronizzazione di altri thread.</span><span class="sxs-lookup"><span data-stu-id="35530-123">The overloads of these methods provide timeout intervals for abandoning the wait, and the opportunity to exit a synchronization context before entering the wait, allowing other threads to use the synchronization context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="35530-124">Questo tipo implementa la <xref:System.IDisposable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="35530-124">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="35530-125">Dopo aver utilizzando il tipo o un tipo derivato da esso, è necessario eliminarlo direttamente o indirettamente.</span><span class="sxs-lookup"><span data-stu-id="35530-125">When you have finished using the type or a type derived from it, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="35530-126">Per eliminare il tipo direttamente, chiamare relativi <xref:System.Threading.WaitHandle.Close%2A> metodo in un `try` / `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="35530-126">To dispose of the type directly, call its <xref:System.Threading.WaitHandle.Close%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="35530-127">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="35530-127">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="35530-128">Per altre informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="35530-128">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="35530-129"><xref:System.Threading.WaitHandle> implementa il <xref:System.IDisposable.Dispose%2A> pattern.</span><span class="sxs-lookup"><span data-stu-id="35530-129"><xref:System.Threading.WaitHandle> implements the <xref:System.IDisposable.Dispose%2A> pattern.</span></span> <span data-ttu-id="35530-130">Visualizzare [modello Dispose](~/docs/standard/design-guidelines/dispose-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="35530-130">See [Dispose Pattern](~/docs/standard/design-guidelines/dispose-pattern.md).</span></span> <span data-ttu-id="35530-131">Quando si deriva da <xref:System.Threading.WaitHandle>, usare il <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> proprietà per archiviare l'handle del sistema operativo nativo.</span><span class="sxs-lookup"><span data-stu-id="35530-131">When you derive from <xref:System.Threading.WaitHandle>, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property to store your native handle operating system handle.</span></span> <span data-ttu-id="35530-132">Non è necessario eseguire l'override protetto <xref:System.Threading.WaitHandle.Dispose%2A> metodo se non si usano altre risorse non gestite.</span><span class="sxs-lookup"><span data-stu-id="35530-132">You do not need to override the protected <xref:System.Threading.WaitHandle.Dispose%2A> method unless you use additional unmanaged resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35530-133">Nell'esempio di codice riportato di seguito viene illustrato come due thread possono eseguire attività in background mentre principale thread attende l'attività da completare tramite il metodo statico <xref:System.Threading.WaitHandle.WaitAny%2A> e <xref:System.Threading.WaitHandle.WaitAll%2A> metodi del <xref:System.Threading.WaitHandle> classe.</span><span class="sxs-lookup"><span data-stu-id="35530-133">The following code example shows how two threads can do background tasks while the Main thread waits for the tasks to complete using the static <xref:System.Threading.WaitHandle.WaitAny%2A> and <xref:System.Threading.WaitHandle.WaitAll%2A> methods of the <xref:System.Threading.WaitHandle> class.</span></span>  
  
 [!code-cpp[WaitHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/WaitHandle/cpp/WaitHandle.cpp#1)]
 [!code-csharp[WaitHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/WaitHandle/CS/WaitHandle.cs#1)]
 [!code-vb[WaitHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WaitHandle/VB/WaitHandle.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="35530-134">Questo tipo è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="35530-134">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WaitHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35530-135">Inizializza una nuova istanza della classe <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-135">Initializes a new instance of the <see cref="T:System.Threading.WaitHandle" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="waitHandle.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35530-136">Rilascia tutte le risorse contenute nell'oggetto <see cref="T:System.Threading.WaitHandle" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-136">Releases all resources held by the current <see cref="T:System.Threading.WaitHandle" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-137">Questo metodo è l'implementazione pubblica del <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> metodo per il <xref:System.Threading.WaitHandle> classe e le relative classi derivate.</span><span class="sxs-lookup"><span data-stu-id="35530-137">This method is the public implementation of the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method for the <xref:System.Threading.WaitHandle> class and its derived classes.</span></span> <span data-ttu-id="35530-138">Fornisce un'implementazione standard che chiama il `Dispose(Boolean)` rapporto di overload con un `true` argomento e quindi chiama il <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="35530-138">It provides a standard implementation that calls the `Dispose(Boolean)` overload with a `true` argument and then calls the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="35530-139">Chiamare questo metodo per rilasciare tutte le risorse utilizzate da un'istanza di `WaitHandle` o una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="35530-139">Call this method to release all resources held by an instance of `WaitHandle` or a derived class.</span></span>  
  
 <span data-ttu-id="35530-140">Una volta che viene chiamato questo metodo, i riferimenti all'istanza corrente causano un comportamento indefinito.</span><span class="sxs-lookup"><span data-stu-id="35530-140">Once this method is called, references to the current instance cause undefined behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35530-141">Chiamare sempre <xref:System.Threading.WaitHandle.Close%2A> oppure <xref:System.Threading.WaitHandle.Dispose> prima di rilasciare l'ultimo riferimento al <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="35530-141">Always call <xref:System.Threading.WaitHandle.Close%2A> or <xref:System.Threading.WaitHandle.Dispose> before you release your last reference to the <xref:System.Threading.WaitHandle>.</span></span> <span data-ttu-id="35530-142">In caso contrario, le risorse utilizzate non verranno liberate.</span><span class="sxs-lookup"><span data-stu-id="35530-142">Otherwise, the resources it is using will not be freed.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="35530-143">
            <para>È consigliabile eseguire l'override di <see langword="Dispose(Boolean)" /> metodo per rilasciare le risorse allocate classi derivate.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-143">
              <para>You should override the <see langword="Dispose(Boolean)" /> method to release resources allocated in derived classes.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35530-144">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-144">Releases all resources used by the current instance of the <see cref="T:System.Threading.WaitHandle" /> class</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="waitHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35530-145">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-145">Releases all resources used by the current instance of the <see cref="T:System.Threading.WaitHandle" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-146">Questo metodo equivale al <xref:System.Threading.WaitHandle.Close%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="35530-146">This method is equivalent to the <xref:System.Threading.WaitHandle.Close%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35530-147">Chiamare sempre <xref:System.Threading.WaitHandle.Close%2A> oppure <xref:System.Threading.WaitHandle.Dispose> prima di rilasciare l'ultimo riferimento al <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="35530-147">Always call <xref:System.Threading.WaitHandle.Close%2A> or <xref:System.Threading.WaitHandle.Dispose> before you release your last reference to the <xref:System.Threading.WaitHandle>.</span></span> <span data-ttu-id="35530-148">In caso contrario, le risorse utilizzate non verranno liberate.</span><span class="sxs-lookup"><span data-stu-id="35530-148">Otherwise, the resources it is using will not be freed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool explicitDisposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool explicitDisposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (explicitDisposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool explicitDisposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="waitHandle.Dispose explicitDisposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="explicitDisposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="explicitDisposing">
          <span data-ttu-id="35530-149">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-149">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-150">Quando ne viene eseguito l'override in una classe derivata, libera le risorse non gestite usate da <see cref="T:System.Threading.WaitHandle" /> ed eventualmente di liberare le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-150">When overridden in a derived class, releases the unmanaged resources used by the <see cref="T:System.Threading.WaitHandle" />, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-151">Questo metodo viene chiamato il <xref:System.Threading.WaitHandle.Close%2A> e il <xref:System.Threading.WaitHandle.Dispose> metodi con il `explicitDisposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="35530-151">This method is called by the <xref:System.Threading.WaitHandle.Close%2A> and the <xref:System.Threading.WaitHandle.Dispose> methods with the `explicitDisposing` parameter set to `true`.</span></span>  <span data-ttu-id="35530-152">Quando la `explicitDisposing` parametro è `true`, questo metodo rilascia tutte le risorse utilizzate da qualsiasi oggetto gestito da questo <xref:System.Threading.WaitHandle> riferimenti a oggetti.</span><span class="sxs-lookup"><span data-stu-id="35530-152">When the `explicitDisposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Threading.WaitHandle> object references.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="35530-153">
            <para>È consigliabile eseguire l'override di <see cref="M:System.Threading.WaitHandle.Dispose(System.Boolean)" /> metodo per rilasciare le risorse allocate classi derivate.  Il <see cref="M:System.Threading.WaitHandle.Close" /> o <see cref="M:System.Threading.WaitHandle.Dispose" /> metodo può essere chiamato più volte da altri oggetti. Quando si esegue l'override di questo metodo, prestare attenzione a non fare riferimento agli oggetti che sono stati eliminati in una precedente chiamata a <see langword="Dispose" /> o <see langword="Close" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-153">
              <para>You should override the <see cref="M:System.Threading.WaitHandle.Dispose(System.Boolean)" /> method to release resources allocated in derived classes.  The <see cref="M:System.Threading.WaitHandle.Close" /> or <see cref="M:System.Threading.WaitHandle.Dispose" /> method can be called multiple times by other objects. When overriding this method, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" /> or <see langword="Close" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WaitHandle ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="waitHandle.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public virtual IntPtr Handle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.WaitHandle.Handle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Handle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint with get, set" Usage="System.Threading.WaitHandle.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use the SafeWaitHandle property instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35530-154">Ottiene o imposta l'handle nativo del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-154">Gets or sets the native operating system handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35530-155">
            <see langword="IntPtr" /> che rappresenta l'handle nativo del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-155">An <see langword="IntPtr" /> representing the native operating system handle.</span>
          </span>
          <span data-ttu-id="35530-156">Il valore predefinito è quello del campo <see cref="F:System.Threading.WaitHandle.InvalidHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-156">The default is the value of the <see cref="F:System.Threading.WaitHandle.InvalidHandle" /> field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-157">Assegnazione di un nuovo valore per il <xref:System.Threading.WaitHandle.Handle%2A> proprietà non chiude l'handle precedente.</span><span class="sxs-lookup"><span data-stu-id="35530-157">Assigning a new value to the <xref:System.Threading.WaitHandle.Handle%2A> property does not close the previous handle.</span></span> <span data-ttu-id="35530-158">Ciò può comportare la perdita di una handle.</span><span class="sxs-lookup"><span data-stu-id="35530-158">This can result in a leaked handle.</span></span>  
  
 <span data-ttu-id="35530-159">Non utilizzare questa proprietà in .NET Framework versione 2.0 o successiva. usare il <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> proprietà invece.</span><span class="sxs-lookup"><span data-stu-id="35530-159">Do not use this property in the .NET Framework version 2.0 or later; use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property instead.</span></span> <span data-ttu-id="35530-160">Impostando questa proprietà su un handle valido anche set il <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> proprietà, ma impostandola su <xref:System.Threading.WaitHandle.InvalidHandle> può comportare la perdita di una handle.</span><span class="sxs-lookup"><span data-stu-id="35530-160">Setting this property to a valid handle also sets the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property, but setting it to <xref:System.Threading.WaitHandle.InvalidHandle> can result in a leaked handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="35530-161">Richiede l'attendibilità totale per il chiamante immediato impostare il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-161">Requires full trust for the immediate caller to set the property value.</span>
          </span>
          <span data-ttu-id="35530-162">Questo membro non può essere impostato dal codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-162">This member cannot be set by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="35530-163">I tipi derivati devono avere <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> per impostare il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-163">Derived types must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> to set the property value.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InvalidHandle">
      <MemberSignature Language="C#" Value="protected static readonly IntPtr InvalidHandle;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly native int InvalidHandle" />
      <MemberSignature Language="DocId" Value="F:System.Threading.WaitHandle.InvalidHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly InvalidHandle As IntPtr " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly IntPtr InvalidHandle;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvalidHandle : nativeint" Usage="System.Threading.WaitHandle.InvalidHandle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35530-164">Rappresenta un handle nativo del sistema operativo non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-164">Represents an invalid native operating system handle.</span>
          </span>
          <span data-ttu-id="35530-165">Questo campo è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-165">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-166">Utilizzato internamente per inizializzare il <xref:System.Threading.WaitHandle.Handle%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="35530-166">Used internally to initialize the <xref:System.Threading.WaitHandle.Handle%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="35530-167">
            <para>È possibile usare questo valore per determinare se il <see cref="P:System.Threading.WaitHandle.Handle" /> proprietà contiene un handle nativo del sistema operativo valido.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-167">
              <para>You can use this value to determine whether the <see cref="P:System.Threading.WaitHandle.Handle" /> property contains a valid native operating system handle.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SafeWaitHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.WaitHandle.SafeWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property SafeWaitHandle As SafeWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeWaitHandle ^ SafeWaitHandle { Microsoft::Win32::SafeHandles::SafeWaitHandle ^ get(); void set(Microsoft::Win32::SafeHandles::SafeWaitHandle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SafeWaitHandle : Microsoft.Win32.SafeHandles.SafeWaitHandle with get, set" Usage="System.Threading.WaitHandle.SafeWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeWaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35530-168">Ottiene o imposta l'handle nativo del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-168">Gets or sets the native operating system handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35530-169">Oggetto <see cref="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" /> che rappresenta l'handle nativo del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-169">A <see cref="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" /> representing the native operating system handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-170">Quando si assegna un nuovo valore per il <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> proprietà, l'handle precedente verrà chiusa quando precedente <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> oggetto viene raccolto.</span><span class="sxs-lookup"><span data-stu-id="35530-170">When you assign a new value to the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property, the previous handle will be closed when the previous <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> object is collected.</span></span> <span data-ttu-id="35530-171">Non chiudere manualmente l'handle, in quanto il risultato è un' <xref:System.ObjectDisposedException> quando il <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> tenta di chiudere l'handle.</span><span class="sxs-lookup"><span data-stu-id="35530-171">Do not manually close the handle, because this results in an <xref:System.ObjectDisposedException> when the <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> attempts to close the handle.</span></span>  
  
 <span data-ttu-id="35530-172"><xref:System.Threading.WaitHandle> implementa il <xref:System.IDisposable.Dispose%2A> pattern.</span><span class="sxs-lookup"><span data-stu-id="35530-172"><xref:System.Threading.WaitHandle> implements the <xref:System.IDisposable.Dispose%2A> pattern.</span></span> <span data-ttu-id="35530-173">Visualizzare [modello Dispose](~/docs/standard/design-guidelines/dispose-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="35530-173">See [Dispose Pattern](~/docs/standard/design-guidelines/dispose-pattern.md).</span></span> <span data-ttu-id="35530-174">Quando si deriva da <xref:System.Threading.WaitHandle>, usare il <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> proprietà per archiviare l'handle del sistema operativo nativo.</span><span class="sxs-lookup"><span data-stu-id="35530-174">When you derive from <xref:System.Threading.WaitHandle>, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property to store your native handle operating system handle.</span></span> <span data-ttu-id="35530-175">Non è necessario eseguire l'override protetto <xref:System.Threading.WaitHandle.Dispose%2A> metodo se non si usano altre risorse non gestite.</span><span class="sxs-lookup"><span data-stu-id="35530-175">You do not need to override the protected <xref:System.Threading.WaitHandle.Dispose%2A> method unless you use additional unmanaged resources.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="35530-176">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-176">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="35530-177">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-177">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="35530-178">I tipi derivati devono avere <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> per chiamare questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-178">Derived types must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> to call this member.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignalAndWait">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35530-179">Segnala un oggetto <see cref="T:System.Threading.WaitHandle" /> e resta in attesa in un altro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-179">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="toSignal">
          <span data-ttu-id="35530-180">Oggetto <see cref="T:System.Threading.WaitHandle" /> da segnalare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-180">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span>
          </span>
        </param>
        <param name="toWaitOn">
          <span data-ttu-id="35530-181">Oggetto <see cref="T:System.Threading.WaitHandle" /> in cui restare in attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-181">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-182">Segnala un oggetto <see cref="T:System.Threading.WaitHandle" /> e resta in attesa in un altro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-182">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-183">
            <see langword="true" /> in caso di esito positivo sia della segnalazione che dell'attesa. Se l'attesa non viene completata, il metodo non restituisce alcun risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-183">
              <see langword="true" /> if both the signal and the wait complete successfully; if the wait does not complete, the method does not return.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-184">Questa operazione non è garantita a essere atomici.</span><span class="sxs-lookup"><span data-stu-id="35530-184">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="35530-185">Dopo il thread corrente segnala `toSignal` ma prima è in attesa di `toWaitOn`, un thread in esecuzione in un altro processore potrebbero segnalare `toWaitOn` o in attesa su di esso.</span><span class="sxs-lookup"><span data-stu-id="35530-185">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35530-186">Il codice seguente viene illustrato come utilizzare il <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> overload del metodo per consentire al thread principale di segnalare un thread bloccato e quindi attendere che il thread termina un'attività.</span><span class="sxs-lookup"><span data-stu-id="35530-186">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="35530-187">L'esempio avviati cinque thread, consente di bloccare un' <xref:System.Threading.EventWaitHandle> creato con il <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag e quindi rilascia un thread ogni volta l'utente preme il tasto INVIO.</span><span class="sxs-lookup"><span data-stu-id="35530-187">The example starts five threads, allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, and then releases one thread each time the user presses the ENTER key.</span></span> <span data-ttu-id="35530-188">Nell'esempio viene quindi Accoda altri cinque thread e vengono rilasciati tutti usando un <xref:System.Threading.EventWaitHandle> creato con il <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="35530-188">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35530-189">
            <paramref name="toSignal" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-189">
              <paramref name="toSignal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-190">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-190">-or-</span>
          </span>
          <span data-ttu-id="35530-191">
            <paramref name="toWaitOn" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-191">
              <paramref name="toWaitOn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35530-192">Il metodo è stato chiamato su un thread che dispone di <see cref="T:System.STAThreadAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-192">The method was called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="35530-193">Questo metodo non è supportato in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-193">This method is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-194">
            <paramref name="toSignal" /> è un semaforo e dispone già di un conteggio completo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-194">
              <paramref name="toSignal" /> is a semaphore, and it already has a full count.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-195">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-195">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-196">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-196">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle, millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle * int * bool -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="toSignal">
          <span data-ttu-id="35530-197">Oggetto <see cref="T:System.Threading.WaitHandle" /> da segnalare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-197">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span>
          </span>
        </param>
        <param name="toWaitOn">
          <span data-ttu-id="35530-198">Oggetto <see cref="T:System.Threading.WaitHandle" /> in cui restare in attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-198">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="35530-199">Intero che rappresenta l'intervallo di attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-199">An integer that represents the interval to wait.</span>
          </span>
          <span data-ttu-id="35530-200">Se il valore è <see cref="F:System.Threading.Timeout.Infinite" />, ovvero -1, l'attesa è infinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-200">If the value is <see cref="F:System.Threading.Timeout.Infinite" />, that is, -1, the wait is infinite.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="35530-201">
            <see langword="true" /> per uscire dal dominio di sincronizzazione per il contesto prima dell'attesa, se all'interno di un contesto sincronizzato, e riacquisirlo successivamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-201">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-202">Segnala un oggetto <see cref="T:System.Threading.WaitHandle" /> e resta in attesa in un altro, specificando un intervallo di timeout come intero con segno a 32 bit e indicando se uscire dal dominio di sincronizzazione per il contesto prima dell'attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-202">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another, specifying a time-out interval as a 32-bit signed integer and specifying whether to exit the synchronization domain for the context before entering the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-203">
            <see langword="true" /> in caso di esito positivo sia della segnalazione che dell'attesa oppure <see langword="false" /> se la segnalazione è stata completata ma si è verificato il timeout dell'attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-203">
              <see langword="true" /> if both the signal and the wait completed successfully, or <see langword="false" /> if the signal completed but the wait timed out.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-204">Questa operazione non è garantita a essere atomici.</span><span class="sxs-lookup"><span data-stu-id="35530-204">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="35530-205">Dopo il thread corrente segnala `toSignal` ma prima è in attesa di `toWaitOn`, un thread in esecuzione in un altro processore potrebbero segnalare `toWaitOn` o in attesa su di esso.</span><span class="sxs-lookup"><span data-stu-id="35530-205">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
 <span data-ttu-id="35530-206">Se `millisecondsTimeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-206">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-207">Controlla lo stato del `toWaitOn` e risponda immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-207">It tests the state of the `toWaitOn` and returns immediately.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="35530-208">Note sull'uscita dal contesto</span><span class="sxs-lookup"><span data-stu-id="35530-208">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="35530-209">Il `exitContext` parametro ha effetto solo se il <xref:System.Threading.WaitHandle.SignalAndWait%2A> metodo chiamato dall'interno di un contesto gestito.</span><span class="sxs-lookup"><span data-stu-id="35530-209">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="35530-210">Questa situazione può verificarsi se il thread si trova all'interno di una chiamata a un'istanza di una classe derivata da <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="35530-210">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="35530-211">Anche se un metodo attualmente in esecuzione in una classe che non deriva da <xref:System.ContextBoundObject>, ad esempio <xref:System.String>, è possibile essere in un contesto non predefinite se un <xref:System.ContextBoundObject> nello stack nel dominio dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="35530-211">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="35530-212">Quando il codice è in esecuzione in un contesto non predefinito, che specifica `true` per `exitContext` fa sì che il thread esce dal contesto gestito (vale a dire, per eseguire la transizione al contesto predefinito) prima di eseguire il <xref:System.Threading.WaitHandle.SignalAndWait%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="35530-212">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method.</span></span> <span data-ttu-id="35530-213">Il thread viene restituito il contesto originale non predefinita dopo la chiamata al <xref:System.Threading.WaitHandle.SignalAndWait%2A> metodo viene completato.</span><span class="sxs-lookup"><span data-stu-id="35530-213">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method completes.</span></span>  
  
 <span data-ttu-id="35530-214">Ciò può essere utile quando la classe associata al contesto presenta <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="35530-214">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="35530-215">In tal caso, tutte le chiamate ai membri della classe sono automaticamente sincronizzate e il dominio di sincronizzazione è l'intero corpo del codice per la classe.</span><span class="sxs-lookup"><span data-stu-id="35530-215">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="35530-216">Se nello stack di chiamate di un membro codice chiama il <xref:System.Threading.WaitHandle.SignalAndWait%2A> (metodo) e specifica `true` per `exitContext`, il thread esce dal dominio di sincronizzazione, consentendo a un thread bloccato in una chiamata a qualsiasi membro dell'oggetto per continuare.</span><span class="sxs-lookup"><span data-stu-id="35530-216">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="35530-217">Quando il <xref:System.Threading.WaitHandle.SignalAndWait%2A> metodo viene restituito, il thread che ha effettuato la chiamata deve attendere per immettere di nuovo il dominio di sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="35530-217">When the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35530-218">
            <paramref name="toSignal" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-218">
              <paramref name="toSignal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-219">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-219">-or-</span>
          </span>
          <span data-ttu-id="35530-220">
            <paramref name="toWaitOn" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-220">
              <paramref name="toWaitOn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35530-221">Il metodo viene chiamato su un thread che dispone di <see cref="T:System.STAThreadAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-221">The method is called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="35530-222">Questo metodo non è supportato in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-222">This method is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-223">Non è possibile segnalare la classe <see cref="T:System.Threading.WaitHandle" /> perché supererebbe il conteggio massimo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-223">The <see cref="T:System.Threading.WaitHandle" /> cannot be signaled because it would exceed its maximum count.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-224">
            <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-224">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-225">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-225">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-226">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-226">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle, timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle * TimeSpan * bool -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="toSignal">
          <span data-ttu-id="35530-227">Oggetto <see cref="T:System.Threading.WaitHandle" /> da segnalare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-227">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span>
          </span>
        </param>
        <param name="toWaitOn">
          <span data-ttu-id="35530-228">Oggetto <see cref="T:System.Threading.WaitHandle" /> in cui restare in attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-228">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="35530-229">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta l'intervallo di attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-229">A <see cref="T:System.TimeSpan" /> that represents the interval to wait.</span>
          </span>
          <span data-ttu-id="35530-230">Se il valore è -1, l'attesa è infinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-230">If the value is -1, the wait is infinite.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="35530-231">
            <see langword="true" /> per uscire dal dominio di sincronizzazione per il contesto prima dell'attesa, se all'interno di un contesto sincronizzato, e riacquisirlo successivamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-231">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-232">Segnala un oggetto <see cref="T:System.Threading.WaitHandle" /> e resta in attesa di un altro, specificando l'intervallo di timeout come <see cref="T:System.TimeSpan" /> e indicando se uscire dal dominio di sincronizzazione per il contesto prima dell'attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-232">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another, specifying the time-out interval as a <see cref="T:System.TimeSpan" /> and specifying whether to exit the synchronization domain for the context before entering the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-233">
            <see langword="true" /> in caso di esito positivo sia della segnalazione che dell'attesa oppure <see langword="false" /> se la segnalazione è stata completata ma si è verificato il timeout dell'attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-233">
              <see langword="true" /> if both the signal and the wait completed successfully, or <see langword="false" /> if the signal completed but the wait timed out.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-234">Questa operazione non è garantita a essere atomici.</span><span class="sxs-lookup"><span data-stu-id="35530-234">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="35530-235">Dopo il thread corrente segnala `toSignal` ma prima è in attesa di `toWaitOn`, un thread in esecuzione in un altro processore potrebbero segnalare `toWaitOn` o in attesa su di esso.</span><span class="sxs-lookup"><span data-stu-id="35530-235">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
 <span data-ttu-id="35530-236">Il valore massimo `timeout` è <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="35530-236">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="35530-237">Se `timeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-237">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-238">Controlla lo stato del `toWaitOn` e risponda immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-238">It tests the state of the `toWaitOn` and returns immediately.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="35530-239">Note sull'uscita dal contesto</span><span class="sxs-lookup"><span data-stu-id="35530-239">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="35530-240">Il `exitContext` parametro ha effetto solo se il <xref:System.Threading.WaitHandle.SignalAndWait%2A> metodo chiamato dall'interno di un contesto gestito.</span><span class="sxs-lookup"><span data-stu-id="35530-240">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="35530-241">Questa situazione può verificarsi se il thread si trova all'interno di una chiamata a un'istanza di una classe derivata da <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="35530-241">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="35530-242">Anche se un metodo attualmente in esecuzione in una classe che non deriva da <xref:System.ContextBoundObject>, ad esempio <xref:System.String>, è possibile essere in un contesto non predefinite se un <xref:System.ContextBoundObject> nello stack nel dominio dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="35530-242">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="35530-243">Quando il codice è in esecuzione in un contesto non predefinito, che specifica `true` per `exitContext` fa sì che il thread esce dal contesto gestito (vale a dire, per eseguire la transizione al contesto predefinito) prima di eseguire il <xref:System.Threading.WaitHandle.SignalAndWait%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="35530-243">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method.</span></span> <span data-ttu-id="35530-244">Il thread viene restituito il contesto originale non predefinita dopo la chiamata al <xref:System.Threading.WaitHandle.SignalAndWait%2A> metodo viene completato.</span><span class="sxs-lookup"><span data-stu-id="35530-244">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method completes.</span></span>  
  
 <span data-ttu-id="35530-245">Ciò può essere utile quando la classe associata al contesto presenta <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="35530-245">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="35530-246">In tal caso, tutte le chiamate ai membri della classe sono automaticamente sincronizzate e il dominio di sincronizzazione è l'intero corpo del codice per la classe.</span><span class="sxs-lookup"><span data-stu-id="35530-246">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="35530-247">Se nello stack di chiamate di un membro codice chiama il <xref:System.Threading.WaitHandle.SignalAndWait%2A> (metodo) e specifica `true` per `exitContext`, il thread esce dal dominio di sincronizzazione, consentendo a un thread bloccato in una chiamata a qualsiasi membro dell'oggetto per continuare.</span><span class="sxs-lookup"><span data-stu-id="35530-247">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="35530-248">Quando il <xref:System.Threading.WaitHandle.SignalAndWait%2A> metodo viene restituito, il thread che ha effettuato la chiamata deve attendere per immettere di nuovo il dominio di sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="35530-248">When the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35530-249">
            <paramref name="toSignal" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-249">
              <paramref name="toSignal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-250">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-250">-or-</span>
          </span>
          <span data-ttu-id="35530-251">
            <paramref name="toWaitOn" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-251">
              <paramref name="toWaitOn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35530-252">Il metodo è stato chiamato su un thread che dispone di <see cref="T:System.STAThreadAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-252">The method was called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="35530-253">Questo metodo non è supportato in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-253">This method is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-254">
            <paramref name="toSignal" /> è un semaforo e dispone già di un conteggio completo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-254">
              <paramref name="toSignal" /> is a semaphore, and it already has a full count.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-255">
            <paramref name="timeout" /> restituisce un numero di millisecondi negativo diverso da -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-255">
              <paramref name="timeout" /> evaluates to a negative number of milliseconds other than -1.</span>
          </span>
          <span data-ttu-id="35530-256">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-256">-or-</span>
          </span>
          <span data-ttu-id="35530-257">
            <paramref name="timeout" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-257">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-258">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-258">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-259">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-259">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAll">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35530-260">Attende che tutti gli elementi nella matrice specificata ricevano un segnale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-260">Waits for all the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll waitHandles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="35530-261">Matrice <see langword="WaitHandle" /> contenente gli oggetti per i quali l'istanza corrente attenderà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-261">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="35530-262">Questa matrice non può contenere più riferimenti allo stesso oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-262">This array cannot contain multiple references to the same object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-263">Attende che tutti gli elementi nella matrice specificata ricevano un segnale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-263">Waits for all the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-264">
            <see langword="true" /> se ogni elemento in <paramref name="waitHandles" /> ha ricevuto un segnale; in caso contrario, il metodo non restituisce alcun risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-264">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise the method never returns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-265"><xref:System.Threading.AbandonedMutexException> è stata introdotta in .NET Framework versione 2.0.</span><span class="sxs-lookup"><span data-stu-id="35530-265"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="35530-266">Nelle versioni precedenti, il <xref:System.Threading.WaitHandle.WaitAll%2A> restituzione del metodo `true` quando viene abbandonato un mutex.</span><span class="sxs-lookup"><span data-stu-id="35530-266">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="35530-267">Un mutex abbandonato indica spesso un grave errore di codifica.</span><span class="sxs-lookup"><span data-stu-id="35530-267">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="35530-268">Nel caso di un mutex di sistema, può indicare che un'applicazione è stata terminata in modo anomalo (ad esempio, usando Gestione attività Windows).</span><span class="sxs-lookup"><span data-stu-id="35530-268">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="35530-269">L'eccezione contiene informazioni utili per il debug.</span><span class="sxs-lookup"><span data-stu-id="35530-269">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="35530-270">Il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo viene restituito quando tutti gli handle vengono segnalati.</span><span class="sxs-lookup"><span data-stu-id="35530-270">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when all the handles are signaled.</span></span> <span data-ttu-id="35530-271">In alcune implementazioni, se vengono passati più di 64 handle, un <xref:System.NotSupportedException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-271">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="35530-272">Se la matrice contiene duplicati, la chiamata ha esito negativo con un <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="35530-272">If the array contains duplicates, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35530-273">Il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo non è supportato nei thread che hanno <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="35530-273">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="35530-274">Chiamare questo overload del metodo è equivalente alla chiamata di <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload del metodo e specificare -1 (o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) per `millisecondsTimeout` e `true` per `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="35530-274">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> method overload and specifying -1 (or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) for `millisecondsTimeout` and `true` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35530-275">Esempio di codice seguente viene illustrato come usare il pool di thread per creare e scrivere in un gruppo di file in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="35530-275">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="35530-276">Ogni operazione di scrittura viene accodata come un elemento di lavoro e segnala al termine.</span><span class="sxs-lookup"><span data-stu-id="35530-276">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="35530-277">Il thread principale attende che tutti gli elementi segnalare e quindi viene chiuso.</span><span class="sxs-lookup"><span data-stu-id="35530-277">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/CPP/source1.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/CS/source1.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/VB/source1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35530-278">Il valore del parametro <paramref name="waitHandles" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-278">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-279">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-279">-or-</span>
          </span>
          <span data-ttu-id="35530-280">Uno o più oggetti nella matrice <paramref name="waitHandles" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-280">One or more of the objects in the <paramref name="waitHandles" /> array are <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-281">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-281">-or-</span>
          </span>
          <span data-ttu-id="35530-282">
            <paramref name="waitHandles" /> è una matrice senza elementi e la versione di .NET Framework è 2.0 o successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-282">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="35530-283">
            <block subset="none" type="note">
              <para> Nelle [app .NET per Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) o nella [libreria di classi portabile](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) intercettare in alternativa l'eccezione della classe di base <see cref="T:System.ArgumentException" />. </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-283">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.ArgumentException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="35530-284">La matrice <paramref name="waitHandles" /> contiene elementi duplicati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-284">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35530-285">Il numero di oggetti in <paramref name="waitHandles" /> è maggiore di quello consentito dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-285">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="35530-286">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-286">-or-</span>
          </span>
          <span data-ttu-id="35530-287">L'attributo <see cref="T:System.STAThreadAttribute" /> viene applicato alla routine del thread corrente e <paramref name="waitHandles" /> contiene più di un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-287">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="35530-288">
            <paramref name="waitHandles" /> è una matrice senza elementi e la versione di .NET Framework è 1.0 o 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-288">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-289">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-289">The wait terminated because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-290">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-290">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-291">La matrice <paramref name="waitHandles" /> contiene un proxy trasparente per un oggetto <see cref="T:System.Threading.WaitHandle" /> in un altro dominio di applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-291">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * int -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="35530-292">Matrice <see langword="WaitHandle" /> contenente gli oggetti per i quali l'istanza corrente attenderà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-292">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="35530-293">Questa matrice non può contenere più riferimenti allo stesso oggetto (duplicati).</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-293">This array cannot contain multiple references to the same object (duplicates).</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="35530-294">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-294">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-295">Attende che tutti gli elementi nella matrice specificata ricevano un segnale, usando un valore <see cref="T:System.Int32" /> per specificare l'intervallo di tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-295">Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-296">
            <see langword="true" /> se ogni elemento in <paramref name="waitHandles" /> ha ricevuto un segnale; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-296">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-297">Se `millisecondsTimeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-297">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-298">Verifica lo stato dell'handle di attesa e restituisce immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-298">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="35530-299">Il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo viene restituito quando l'attesa termina, vale a dire tutti gli handle vengono segnalati o quando si verifica il timeout.</span><span class="sxs-lookup"><span data-stu-id="35530-299">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either when all the handles are signaled or when time-out occurs.</span></span> <span data-ttu-id="35530-300">In alcune implementazioni, se vengono passati più di 64 handle, un <xref:System.NotSupportedException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-300">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="35530-301">Se sono presenti duplicati nella matrice, la chiamata ha esito negativo con un <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="35530-301">If there are duplicates in the array, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35530-302">Il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo non è supportato nei thread che hanno <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="35530-302">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="35530-303">Chiamare questo overload del metodo è uguale alla chiamata al metodo il <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload e specificare `false` per `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="35530-303">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35530-304">Il valore del parametro <paramref name="waitHandles" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-304">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-305">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-305">-or-</span>
          </span>
          <span data-ttu-id="35530-306">Uno o più oggetti nella matrice <paramref name="waitHandles" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-306">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-307">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-307">-or-</span>
          </span>
          <span data-ttu-id="35530-308">
            <paramref name="waitHandles" /> è una matrice senza elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-308">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="35530-309">
            <block subset="none" type="note">
              <para> Nelle [app .NET per Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) o nella [libreria di classi portabile](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) intercettare in alternativa l'eccezione della classe di base <see cref="T:System.ArgumentException" />. </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-309">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.ArgumentException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="35530-310">La matrice <paramref name="waitHandles" /> contiene elementi duplicati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-310">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35530-311">Il numero di oggetti in <paramref name="waitHandles" /> è maggiore di quello consentito dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-311">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="35530-312">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-312">-or-</span>
          </span>
          <span data-ttu-id="35530-313">L'attributo <see cref="T:System.STAThreadAttribute" /> viene applicato alla routine del thread corrente e <paramref name="waitHandles" /> contiene più di un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-313">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-314">
            <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-314">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-315">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-315">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-316">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-316">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-317">La matrice <paramref name="waitHandles" /> contiene un proxy trasparente per un oggetto <see cref="T:System.Threading.WaitHandle" /> in un altro dominio di applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-317">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * TimeSpan -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="35530-318">Matrice <see langword="WaitHandle" /> contenente gli oggetti per i quali l'istanza corrente attenderà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-318">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="35530-319">Questa matrice non può contenere più riferimenti allo stesso oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-319">This array cannot contain multiple references to the same object.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="35530-320">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-320">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-321">Attende che tutti gli elementi nella matrice specificata ricevano un segnale, usando un valore <see cref="T:System.TimeSpan" /> per specificare l'intervallo di tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-321">Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-322">
            <see langword="true" /> se ogni elemento in <paramref name="waitHandles" /> ha ricevuto un segnale; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-322">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-323">Se `timeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-323">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-324">Verifica lo stato dell'handle di attesa e restituisce immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-324">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="35530-325">Il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo viene restituito quando termina l'attesa, ovvero tutti gli handle vengono segnalati o si verifica un timeout.</span><span class="sxs-lookup"><span data-stu-id="35530-325">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either all the handles are signaled or a time-out occurs.</span></span> <span data-ttu-id="35530-326">In alcune implementazioni, se vengono passati più di 64 handle, un <xref:System.NotSupportedException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-326">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="35530-327">Se la matrice contiene duplicati, la chiamata avrà esito negativo.</span><span class="sxs-lookup"><span data-stu-id="35530-327">If the array contains duplicates, the call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35530-328">Il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo non è supportato nei thread che hanno <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="35530-328">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="35530-329">Il valore massimo `timeout` è <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="35530-329">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="35530-330">Chiamare questo overload del metodo è uguale alla chiamata al metodo il <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload e specificare `false` per `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="35530-330">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35530-331">Il valore del parametro <paramref name="waitHandles" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-331">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-332">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-332">-or-</span>
          </span>
          <span data-ttu-id="35530-333">Uno o più oggetti nella matrice <paramref name="waitHandles" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-333">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-334">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-334">-or-</span>
          </span>
          <span data-ttu-id="35530-335">
            <paramref name="waitHandles" /> è una matrice senza elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-335">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="35530-336">
            <block subset="none" type="note">
              <para> Nelle [app .NET per Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) o nella [libreria di classi portabile](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) intercettare in alternativa l'eccezione della classe di base <see cref="T:System.ArgumentException" />. </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-336">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.ArgumentException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="35530-337">La matrice <paramref name="waitHandles" /> contiene elementi duplicati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-337">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35530-338">Il numero di oggetti in <paramref name="waitHandles" /> è maggiore di quello consentito dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-338">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="35530-339">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-339">-or-</span>
          </span>
          <span data-ttu-id="35530-340">L'attributo <see cref="T:System.STAThreadAttribute" /> viene applicato alla routine del thread corrente e <paramref name="waitHandles" /> contiene più di un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-340">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-341">
            <paramref name="timeout" /> è un numero negativo diverso da -1 millisecondi, che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-341">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="35530-342">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-342">-or-</span>
          </span>
          <span data-ttu-id="35530-343">
            <paramref name="timeout" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-343">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-344">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-344">The wait terminated because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-345">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-345">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-346">La matrice <paramref name="waitHandles" /> contiene un proxy trasparente per un oggetto <see cref="T:System.Threading.WaitHandle" /> in un altro dominio di applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-346">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * int * bool -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="35530-347">Matrice <see langword="WaitHandle" /> contenente gli oggetti per i quali l'istanza corrente attenderà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-347">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="35530-348">Questa matrice non può contenere più riferimenti allo stesso oggetto (duplicati).</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-348">This array cannot contain multiple references to the same object (duplicates).</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="35530-349">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-349">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="35530-350">
            <see langword="true" /> per uscire dal dominio di sincronizzazione per il contesto prima dell'attesa, se all'interno di un contesto sincronizzato, e riacquisirlo successivamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-350">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-351">Attende che tutti gli elementi nella matrice specificata ricevano un segnale, usando un valore <see cref="T:System.Int32" /> per specificare l'intervallo di tempo e indicando se uscire dal dominio di sincronizzazione prima dell'attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-351">Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-352">
            <see langword="true" /> se ogni elemento in <paramref name="waitHandles" /> ha ricevuto un segnale; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-352">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-353">Se `millisecondsTimeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-353">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-354">Verifica lo stato dell'handle di attesa e restituisce immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-354">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="35530-355"><xref:System.Threading.AbandonedMutexException> è stata introdotta in .NET Framework versione 2.0.</span><span class="sxs-lookup"><span data-stu-id="35530-355"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="35530-356">Nelle versioni precedenti, il <xref:System.Threading.WaitHandle.WaitAll%2A> restituzione del metodo `true` quando viene abbandonato un mutex.</span><span class="sxs-lookup"><span data-stu-id="35530-356">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="35530-357">Un mutex abbandonato indica spesso un grave errore di codifica.</span><span class="sxs-lookup"><span data-stu-id="35530-357">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="35530-358">Nel caso di un mutex di sistema, può indicare che un'applicazione è stata terminata in modo anomalo (ad esempio, usando Gestione attività Windows).</span><span class="sxs-lookup"><span data-stu-id="35530-358">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="35530-359">L'eccezione contiene informazioni utili per il debug.</span><span class="sxs-lookup"><span data-stu-id="35530-359">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="35530-360">Il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo viene restituito quando l'attesa termina, vale a dire tutti gli handle vengono segnalati o quando si verifica il timeout.</span><span class="sxs-lookup"><span data-stu-id="35530-360">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either when all the handles are signaled or when time-out occurs.</span></span> <span data-ttu-id="35530-361">In alcune implementazioni, se vengono passati più di 64 handle, un <xref:System.NotSupportedException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-361">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="35530-362">Se sono presenti duplicati nella matrice, la chiamata ha esito negativo con un <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="35530-362">If there are duplicates in the array, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35530-363">Il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo non è supportato nei thread che hanno <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="35530-363">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="35530-364">Note sull'uscita dal contesto</span><span class="sxs-lookup"><span data-stu-id="35530-364">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="35530-365">Il `exitContext` parametro ha effetto solo se il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo chiamato dall'interno di un contesto gestito.</span><span class="sxs-lookup"><span data-stu-id="35530-365">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAll%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="35530-366">Questa situazione può verificarsi se il thread si trova all'interno di una chiamata a un'istanza di una classe derivata da <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="35530-366">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="35530-367">Anche se un metodo attualmente in esecuzione in una classe che non è derivata da <xref:System.ContextBoundObject>, ad esempio <xref:System.String>, è possibile essere in un contesto non predefinite se un <xref:System.ContextBoundObject> nello stack nel dominio dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="35530-367">Even if you are currently executing a method on a class that is not derived from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="35530-368">Quando il codice è in esecuzione in un contesto non predefinito, che specifica `true` per `exitContext` fa sì che il thread esce dal contesto gestito (vale a dire, per eseguire la transizione al contesto predefinito) prima di eseguire il <xref:System.Threading.WaitHandle.WaitAll%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="35530-368">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAll%2A> method.</span></span> <span data-ttu-id="35530-369">Il thread viene restituito il contesto originale non predefinita dopo la chiamata al <xref:System.Threading.WaitHandle.WaitAll%2A> metodo viene completato.</span><span class="sxs-lookup"><span data-stu-id="35530-369">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAll%2A> method completes.</span></span>  
  
 <span data-ttu-id="35530-370">Ciò può essere utile quando la classe associata al contesto presenta la <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute> attributo.</span><span class="sxs-lookup"><span data-stu-id="35530-370">This can be useful when the context-bound class has the <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute> attribute.</span></span> <span data-ttu-id="35530-371">In tal caso, tutte le chiamate ai membri della classe sono automaticamente sincronizzate e il dominio di sincronizzazione è l'intero corpo del codice per la classe.</span><span class="sxs-lookup"><span data-stu-id="35530-371">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="35530-372">Se nello stack di chiamate di un membro codice chiama il <xref:System.Threading.WaitHandle.WaitAll%2A> (metodo) e specifica `true` per `exitContext`, il thread esce dal dominio di sincronizzazione, consentendo a un thread bloccato in una chiamata a qualsiasi membro dell'oggetto per continuare.</span><span class="sxs-lookup"><span data-stu-id="35530-372">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAll%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="35530-373">Quando il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo viene restituito, il thread che ha effettuato la chiamata deve attendere per immettere di nuovo il dominio di sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="35530-373">When the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35530-374">Esempio di codice seguente viene illustrato come usare il pool di thread per creare e scrivere in un gruppo di file in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="35530-374">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="35530-375">Ogni operazione di scrittura viene accodata come un elemento di lavoro e segnala al termine.</span><span class="sxs-lookup"><span data-stu-id="35530-375">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="35530-376">Il thread principale attende che tutti gli elementi segnalare e quindi viene chiuso.</span><span class="sxs-lookup"><span data-stu-id="35530-376">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35530-377">Il valore del parametro <paramref name="waitHandles" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-377">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-378">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-378">-or-</span>
          </span>
          <span data-ttu-id="35530-379">Uno o più oggetti nella matrice <paramref name="waitHandles" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-379">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-380">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-380">-or-</span>
          </span>
          <span data-ttu-id="35530-381">
            <paramref name="waitHandles" /> è una matrice senza elementi e la versione di .NET Framework è 2.0 o successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-381">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="35530-382">La matrice <paramref name="waitHandles" /> contiene elementi duplicati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-382">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35530-383">Il numero di oggetti in <paramref name="waitHandles" /> è maggiore di quello consentito dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-383">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="35530-384">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-384">-or-</span>
          </span>
          <span data-ttu-id="35530-385">L'attributo <see cref="T:System.STAThreadAttribute" /> viene applicato alla routine del thread corrente e <paramref name="waitHandles" /> contiene più di un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-385">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="35530-386">
            <paramref name="waitHandles" /> è una matrice senza elementi e la versione di .NET Framework è 1.0 o 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-386">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-387">
            <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-387">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-388">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-388">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-389">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-389">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-390">La matrice <paramref name="waitHandles" /> contiene un proxy trasparente per un oggetto <see cref="T:System.Threading.WaitHandle" /> in un altro dominio di applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-390">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * TimeSpan * bool -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="35530-391">Matrice <see langword="WaitHandle" /> contenente gli oggetti per i quali l'istanza corrente attenderà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-391">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="35530-392">Questa matrice non può contenere più riferimenti allo stesso oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-392">This array cannot contain multiple references to the same object.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="35530-393">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-393">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="35530-394">
            <see langword="true" /> per uscire dal dominio di sincronizzazione per il contesto prima dell'attesa, se all'interno di un contesto sincronizzato, e riacquisirlo successivamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-394">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-395">Attende che tutti gli elementi nella matrice specificata ricevano un segnale, usando un valore <see cref="T:System.TimeSpan" /> per specificare l'intervallo di tempo e indicando se uscire dal dominio di sincronizzazione prima dell'attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-395">Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval, and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-396">
            <see langword="true" /> quando ogni elemento in <paramref name="waitHandles" /> ha ricevuto un segnale; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-396">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-397">Se `timeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-397">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-398">Verifica lo stato dell'handle di attesa e restituisce immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-398">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="35530-399"><xref:System.Threading.AbandonedMutexException> è stata introdotta in .NET Framework versione 2.0.</span><span class="sxs-lookup"><span data-stu-id="35530-399"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="35530-400">Nelle versioni precedenti, il <xref:System.Threading.WaitHandle.WaitAll%2A> restituzione del metodo `true` quando viene abbandonato un mutex.</span><span class="sxs-lookup"><span data-stu-id="35530-400">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="35530-401">Un mutex abbandonato indica spesso un grave errore di codifica.</span><span class="sxs-lookup"><span data-stu-id="35530-401">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="35530-402">Nel caso di un mutex di sistema, può indicare che un'applicazione è stata terminata in modo anomalo (ad esempio, usando Gestione attività Windows).</span><span class="sxs-lookup"><span data-stu-id="35530-402">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="35530-403">L'eccezione contiene informazioni utili per il debug.</span><span class="sxs-lookup"><span data-stu-id="35530-403">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="35530-404">Il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo viene restituito quando termina l'attesa, ovvero tutti gli handle vengono segnalati o si verifica un timeout.</span><span class="sxs-lookup"><span data-stu-id="35530-404">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either all the handles are signaled or a time-out occurs.</span></span> <span data-ttu-id="35530-405">In alcune implementazioni, se vengono passati più di 64 handle, un <xref:System.NotSupportedException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-405">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="35530-406">Se la matrice contiene duplicati, la chiamata avrà esito negativo.</span><span class="sxs-lookup"><span data-stu-id="35530-406">If the array contains duplicates, the call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35530-407">Il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo non è supportato nei thread che hanno <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="35530-407">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="35530-408">Il valore massimo `timeout` è <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="35530-408">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="35530-409">Note sull'uscita dal contesto</span><span class="sxs-lookup"><span data-stu-id="35530-409">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="35530-410">Il `exitContext` parametro ha effetto solo se il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo chiamato dall'interno di un contesto gestito.</span><span class="sxs-lookup"><span data-stu-id="35530-410">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAll%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="35530-411">Questa situazione può verificarsi se il thread si trova all'interno di una chiamata a un'istanza di una classe derivata da <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="35530-411">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="35530-412">Anche se un metodo attualmente in esecuzione in una classe che non è derivata da <xref:System.ContextBoundObject>, ad esempio <xref:System.String>, è possibile essere in un contesto non predefinite se un <xref:System.ContextBoundObject> nello stack nel dominio dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="35530-412">Even if you are currently executing a method on a class that is not derived from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="35530-413">Quando il codice è in esecuzione in un contesto non predefinito, che specifica `true` per `exitContext` fa sì che il thread esce dal contesto gestito (vale a dire, per eseguire la transizione al contesto predefinito) prima di eseguire il <xref:System.Threading.WaitHandle.WaitAll%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="35530-413">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAll%2A> method.</span></span> <span data-ttu-id="35530-414">Restituisce il contesto originale non predefinita dopo la chiamata al <xref:System.Threading.WaitHandle.WaitAll%2A> metodo viene completato.</span><span class="sxs-lookup"><span data-stu-id="35530-414">It returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAll%2A> method completes.</span></span>  
  
 <span data-ttu-id="35530-415">Ciò può essere utile quando la classe associata al contesto presenta <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="35530-415">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="35530-416">In tal caso, tutte le chiamate ai membri della classe sono automaticamente sincronizzate e il dominio di sincronizzazione è l'intero corpo del codice per la classe.</span><span class="sxs-lookup"><span data-stu-id="35530-416">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="35530-417">Se nello stack di chiamate di un membro codice chiama il <xref:System.Threading.WaitHandle.WaitAll%2A> (metodo) e specifica `true` per `exitContext`, il thread esce dal dominio di sincronizzazione, consentendo a un thread bloccato in una chiamata a qualsiasi membro dell'oggetto per continuare.</span><span class="sxs-lookup"><span data-stu-id="35530-417">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAll%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="35530-418">Quando il <xref:System.Threading.WaitHandle.WaitAll%2A> metodo viene restituito, il thread che ha effettuato la chiamata deve attendere per immettere di nuovo il dominio di sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="35530-418">When the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35530-419">Esempio di codice seguente viene illustrato come usare il pool di thread per creare e scrivere in un gruppo di file in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="35530-419">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="35530-420">Ogni operazione di scrittura viene accodata come un elemento di lavoro e segnala al termine.</span><span class="sxs-lookup"><span data-stu-id="35530-420">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="35530-421">Il thread principale attende che tutti gli elementi segnalare e quindi viene chiuso.</span><span class="sxs-lookup"><span data-stu-id="35530-421">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35530-422">Il valore del parametro <paramref name="waitHandles" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-422">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-423">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-423">-or-</span>
          </span>
          <span data-ttu-id="35530-424">Uno o più oggetti nella matrice <paramref name="waitHandles" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-424">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-425">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-425">-or-</span>
          </span>
          <span data-ttu-id="35530-426">
            <paramref name="waitHandles" /> è una matrice senza elementi e la versione di .NET Framework è 2.0 o successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-426">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="35530-427">La matrice <paramref name="waitHandles" /> contiene elementi duplicati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-427">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35530-428">Il numero di oggetti in <paramref name="waitHandles" /> è maggiore di quello consentito dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-428">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="35530-429">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-429">-or-</span>
          </span>
          <span data-ttu-id="35530-430">L'attributo <see cref="T:System.STAThreadAttribute" /> viene applicato alla routine del thread corrente e <paramref name="waitHandles" /> contiene più di un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-430">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="35530-431">
            <paramref name="waitHandles" /> è una matrice senza elementi e la versione di .NET Framework è 1.0 o 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-431">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-432">
            <paramref name="timeout" /> è un numero negativo diverso da -1 millisecondi, che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-432">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="35530-433">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-433">-or-</span>
          </span>
          <span data-ttu-id="35530-434">
            <paramref name="timeout" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-434">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-435">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-435">The wait terminated because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-436">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-436">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-437">La matrice <paramref name="waitHandles" /> contiene un proxy trasparente per un oggetto <see cref="T:System.Threading.WaitHandle" /> in un altro dominio di applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-437">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAny">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35530-438">Attende che uno degli elementi nella matrice specificata riceva un segnale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-438">Waits for any of the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] -&gt; int" Usage="System.Threading.WaitHandle.WaitAny waitHandles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="35530-439">Matrice <see langword="WaitHandle" /> contenente gli oggetti per i quali l'istanza corrente attenderà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-439">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-440">Attende che uno degli elementi nella matrice specificata riceva un segnale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-440">Waits for any of the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-441">Indice della matrice dell'oggetto che ha soddisfatto l'attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-441">The array index of the object that satisfied the wait.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-442"><xref:System.Threading.AbandonedMutexException> è stata introdotta in .NET Framework versione 2.0.</span><span class="sxs-lookup"><span data-stu-id="35530-442"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="35530-443">Nelle versioni precedenti, il <xref:System.Threading.WaitHandle.WaitAny%2A> restituzione del metodo `true` se il tempo di attesa viene completata perché un mutex viene abbandonato.</span><span class="sxs-lookup"><span data-stu-id="35530-443">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="35530-444">Un mutex abbandonato indica spesso un grave errore di codifica.</span><span class="sxs-lookup"><span data-stu-id="35530-444">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="35530-445">Nel caso di un mutex di sistema, può indicare che un'applicazione è stata terminata in modo anomalo (ad esempio, usando Gestione attività Windows).</span><span class="sxs-lookup"><span data-stu-id="35530-445">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="35530-446">L'eccezione contiene informazioni utili per il debug.</span><span class="sxs-lookup"><span data-stu-id="35530-446">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="35530-447">Il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo genera un <xref:System.Threading.AbandonedMutexException> solo quando il tempo di attesa viene completata a causa di un mutex abbandonato.</span><span class="sxs-lookup"><span data-stu-id="35530-447">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="35530-448">Se `waitHandles` contiene un mutex con un numero di indice inferiore rispetto al mutex abbandonato, rilasciato il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo termina normalmente e non viene generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-448">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35530-449">Nelle versioni di .NET Framework precedenti alla versione 2.0, se un thread termina o si interrompe senza rilasciare in modo esplicito un <xref:System.Threading.Mutex>e che `Mutex` è in corrispondenza dell'indice 0 (zero) in un `WaitAny` array in un altro thread, l'indice restituito da `WaitAny` è 128 anziché 0.</span><span class="sxs-lookup"><span data-stu-id="35530-449">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="35530-450">Questo metodo restituisce quando viene segnalato un handle qualsiasi.</span><span class="sxs-lookup"><span data-stu-id="35530-450">This method returns when any handle is signaled.</span></span> <span data-ttu-id="35530-451">Se più di un oggetto diventa segnalato durante la chiamata, il valore restituito è l'indice della matrice dell'oggetto segnalato con il minimo valore di indice di tutti gli oggetti segnalati.</span><span class="sxs-lookup"><span data-stu-id="35530-451">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="35530-452">In alcune implementazioni, se vengono passati gli handle di 64, più di un <xref:System.NotSupportedException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-452">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="35530-453">Chiamare questo overload del metodo è equivalente alla chiamata di <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload del metodo e specificare -1 (o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) per `millisecondsTimeout` e `true` per `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="35530-453">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> method overload and specifying -1 (or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) for `millisecondsTimeout` and `true` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35530-454">Esempio di codice seguente viene illustrato come chiamare il <xref:System.Threading.WaitHandle.WaitAny%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="35530-454">The following code example demonstrates calling the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span>  
  
 [!code-cpp[WaitHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/WaitHandle/cpp/WaitHandle.cpp#1)]
 [!code-csharp[WaitHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/WaitHandle/CS/WaitHandle.cs#1)]
 [!code-vb[WaitHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WaitHandle/VB/WaitHandle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35530-455">Il valore del parametro <paramref name="waitHandles" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-455">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-456">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-456">-or-</span>
          </span>
          <span data-ttu-id="35530-457">Uno o più oggetti nella matrice <paramref name="waitHandles" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-457">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35530-458">Il numero di oggetti in <paramref name="waitHandles" /> è maggiore di quello consentito dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-458">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="35530-459">
            <paramref name="waitHandles" /> è una matrice senza elementi e la versione di .NET Framework è 1.0 o 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-459">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-460">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-460">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-461">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-461">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35530-462">
            <paramref name="waitHandles" /> è una matrice senza elementi e la versione di .NET Framework è la 2.0 o successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-462">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-463">La matrice <paramref name="waitHandles" /> contiene un proxy trasparente per un oggetto <see cref="T:System.Threading.WaitHandle" /> in un altro dominio di applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-463">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * int -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="35530-464">Matrice <see langword="WaitHandle" /> contenente gli oggetti per i quali l'istanza corrente attenderà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-464">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="35530-465">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-465">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-466">Attende che uno degli elementi nella matrice specificata riceva un segnale, usando un intero con segno a 32 bit per specificare l'intervallo di tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-466">Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-467">Indice della matrice dell'oggetto che ha soddisfatto l'attesa oppure <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> se nessun oggetto ha soddisfatto l'attesa ed è trascorso un intervallo di tempo equivalente a <paramref name="millisecondsTimeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-467">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-468">Se `millisecondsTimeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-468">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-469">Verifica lo stato dell'handle di attesa e restituisce immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-469">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="35530-470">Il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo genera un <xref:System.Threading.AbandonedMutexException> solo quando il tempo di attesa viene completata a causa di un mutex abbandonato.</span><span class="sxs-lookup"><span data-stu-id="35530-470">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="35530-471">Se `waitHandles` contiene un mutex con un numero di indice inferiore rispetto al mutex abbandonato, rilasciato il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo termina normalmente e non viene generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-471">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
 <span data-ttu-id="35530-472">Questo metodo restituisce la fine dell'attesa, uno degli handle vengono segnalato o quando si verifica un timeout.</span><span class="sxs-lookup"><span data-stu-id="35530-472">This method returns when the wait terminates, either when any of the handles are signaled or when a timeout occurs.</span></span> <span data-ttu-id="35530-473">Se più di un oggetto diventa segnalato durante la chiamata, il valore restituito è l'indice della matrice dell'oggetto segnalato con il minimo valore di indice di tutti gli oggetti segnalati.</span><span class="sxs-lookup"><span data-stu-id="35530-473">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="35530-474">In alcune implementazioni, se vengono passati gli handle di 64, più di un <xref:System.NotSupportedException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-474">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="35530-475">Chiamare questo overload del metodo è uguale alla chiamata al metodo il <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload e specificare `false` per `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="35530-475">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35530-476">Il valore del parametro <paramref name="waitHandles" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-476">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-477">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-477">-or-</span>
          </span>
          <span data-ttu-id="35530-478">Uno o più oggetti nella matrice <paramref name="waitHandles" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-478">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35530-479">Il numero di oggetti in <paramref name="waitHandles" /> è maggiore di quello consentito dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-479">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-480">
            <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-480">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-481">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-481">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-482">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-482">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35530-483">
            <paramref name="waitHandles" /> è una matrice senza elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-483">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-484">La matrice <paramref name="waitHandles" /> contiene un proxy trasparente per un oggetto <see cref="T:System.Threading.WaitHandle" /> in un altro dominio di applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-484">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), timeout As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * TimeSpan -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="35530-485">Matrice <see langword="WaitHandle" /> contenente gli oggetti per i quali l'istanza corrente attenderà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-485">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="35530-486">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-486">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-487">Attende che uno degli elementi nella matrice specificata riceva un segnale, usando un valore <see cref="T:System.TimeSpan" /> per specificare l'intervallo di tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-487">Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-488">Indice della matrice dell'oggetto che ha soddisfatto l'attesa oppure <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> se nessun oggetto ha soddisfatto l'attesa ed è trascorso un intervallo di tempo equivalente a <paramref name="timeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-488">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-489">Se `timeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-489">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-490">Verifica lo stato dell'handle di attesa e restituisce immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-490">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="35530-491">Il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo genera un <xref:System.Threading.AbandonedMutexException> solo quando il tempo di attesa viene completata a causa di un mutex abbandonato.</span><span class="sxs-lookup"><span data-stu-id="35530-491">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="35530-492">Se `waitHandles` contiene un mutex con un numero di indice inferiore rispetto al mutex abbandonato, rilasciato il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo termina normalmente e non viene generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-492">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
 <span data-ttu-id="35530-493">Questo metodo restituisce la fine dell'attesa, uno degli handle vengono segnalato o quando si verifica un timeout.</span><span class="sxs-lookup"><span data-stu-id="35530-493">This method returns when the wait terminates, either when any of the handles are signaled or when a time-out occurs.</span></span> <span data-ttu-id="35530-494">Se più di un oggetto diventa segnalato durante la chiamata, il valore restituito è l'indice della matrice dell'oggetto segnalato con il minimo valore di indice di tutti gli oggetti segnalati.</span><span class="sxs-lookup"><span data-stu-id="35530-494">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="35530-495">In alcune implementazioni, se vengono passati gli handle di 64, più di un <xref:System.NotSupportedException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-495">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="35530-496">Il valore massimo `timeout` è <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="35530-496">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="35530-497">Chiamare questo overload del metodo è uguale alla chiamata al metodo il <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload e specificare `false` per `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="35530-497">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35530-498">Il valore del parametro <paramref name="waitHandles" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-498">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-499">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-499">-or-</span>
          </span>
          <span data-ttu-id="35530-500">Uno o più oggetti nella matrice <paramref name="waitHandles" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-500">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35530-501">Il numero di oggetti in <paramref name="waitHandles" /> è maggiore di quello consentito dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-501">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-502">
            <paramref name="timeout" /> è un numero negativo diverso da -1 millisecondi, che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-502">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="35530-503">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-503">-or-</span>
          </span>
          <span data-ttu-id="35530-504">
            <paramref name="timeout" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-504">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-505">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-505">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-506">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-506">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35530-507">
            <paramref name="waitHandles" /> è una matrice senza elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-507">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-508">La matrice <paramref name="waitHandles" /> contiene un proxy trasparente per un oggetto <see cref="T:System.Threading.WaitHandle" /> in un altro dominio di applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-508">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), millisecondsTimeout As Integer, exitContext As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * int * bool -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="35530-509">Matrice <see langword="WaitHandle" /> contenente gli oggetti per i quali l'istanza corrente attenderà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-509">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="35530-510">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-510">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="35530-511">
            <see langword="true" /> per uscire dal dominio di sincronizzazione per il contesto prima dell'attesa, se all'interno di un contesto sincronizzato, e riacquisirlo successivamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-511">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-512">Attende che uno degli elementi nella matrice specificata riceva un segnale, usando un intero con segno a 32 bit per specificare l'intervallo di tempo e indicando se uscire dal dominio di sincronizzazione prima dell'attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-512">Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval, and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-513">Indice della matrice dell'oggetto che ha soddisfatto l'attesa oppure <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> se nessun oggetto ha soddisfatto l'attesa ed è trascorso un intervallo di tempo equivalente a <paramref name="millisecondsTimeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-513">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-514">Se `millisecondsTimeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-514">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-515">Verifica lo stato dell'handle di attesa e restituisce immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-515">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="35530-516"><xref:System.Threading.AbandonedMutexException> è stata introdotta in .NET Framework versione 2.0.</span><span class="sxs-lookup"><span data-stu-id="35530-516"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="35530-517">Nelle versioni precedenti, il <xref:System.Threading.WaitHandle.WaitAny%2A> restituzione del metodo `true` se il tempo di attesa viene completata perché un mutex viene abbandonato.</span><span class="sxs-lookup"><span data-stu-id="35530-517">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="35530-518">Un mutex abbandonato indica spesso un grave errore di codifica.</span><span class="sxs-lookup"><span data-stu-id="35530-518">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="35530-519">Nel caso di un mutex di sistema, può indicare che un'applicazione è stata terminata in modo anomalo (ad esempio, usando Gestione attività Windows).</span><span class="sxs-lookup"><span data-stu-id="35530-519">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="35530-520">L'eccezione contiene informazioni utili per il debug.</span><span class="sxs-lookup"><span data-stu-id="35530-520">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="35530-521">Il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo genera un <xref:System.Threading.AbandonedMutexException> solo quando il tempo di attesa viene completata a causa di un mutex abbandonato.</span><span class="sxs-lookup"><span data-stu-id="35530-521">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="35530-522">Se `waitHandles` contiene un mutex con un numero di indice inferiore rispetto al mutex abbandonato, rilasciato il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo termina normalmente e non viene generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-522">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35530-523">Nelle versioni di .NET Framework precedenti alla versione 2.0, se un thread termina o si interrompe senza rilasciare in modo esplicito un <xref:System.Threading.Mutex>e che `Mutex` è in corrispondenza dell'indice 0 (zero) in un `WaitAny` array in un altro thread, l'indice restituito da `WaitAny` è 128 anziché 0.</span><span class="sxs-lookup"><span data-stu-id="35530-523">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="35530-524">Questo metodo restituisce la fine dell'attesa, uno degli handle vengono segnalato o quando si verifica un timeout.</span><span class="sxs-lookup"><span data-stu-id="35530-524">This method returns when the wait terminates, either when any of the handles are signaled or when a timeout occurs.</span></span> <span data-ttu-id="35530-525">Se più di un oggetto diventa segnalato durante la chiamata, il valore restituito è l'indice della matrice dell'oggetto segnalato con il minimo valore di indice di tutti gli oggetti segnalati.</span><span class="sxs-lookup"><span data-stu-id="35530-525">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="35530-526">In alcune implementazioni, se vengono passati gli handle di 64, più di un <xref:System.NotSupportedException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-526">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="35530-527">Note sull'uscita dal contesto</span><span class="sxs-lookup"><span data-stu-id="35530-527">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="35530-528">Il `exitContext` parametro ha effetto solo se il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo chiamato dall'interno di un contesto gestito.</span><span class="sxs-lookup"><span data-stu-id="35530-528">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAny%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="35530-529">Questa situazione può verificarsi se il thread si trova all'interno di una chiamata a un'istanza di una classe derivata da <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="35530-529">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="35530-530">Anche se un metodo attualmente in esecuzione in una classe che non deriva da <xref:System.ContextBoundObject>, ad esempio <xref:System.String>, è possibile essere in un contesto non predefinite se un <xref:System.ContextBoundObject> nello stack nel dominio dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="35530-530">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="35530-531">Quando il codice è in esecuzione in un contesto non predefinito, che specifica `true` per `exitContext` fa sì che il thread esce dal contesto gestito (vale a dire, per eseguire la transizione al contesto predefinito) prima di eseguire il <xref:System.Threading.WaitHandle.WaitAny%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="35530-531">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span> <span data-ttu-id="35530-532">Il thread viene restituito il contesto originale non predefinita dopo la chiamata al <xref:System.Threading.WaitHandle.WaitAny%2A> metodo viene completato.</span><span class="sxs-lookup"><span data-stu-id="35530-532">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes.</span></span>  
  
 <span data-ttu-id="35530-533">Ciò può essere utile quando la classe associata al contesto presenta <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="35530-533">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="35530-534">In tal caso, tutte le chiamate ai membri della classe sono automaticamente sincronizzate e il dominio di sincronizzazione è l'intero corpo del codice per la classe.</span><span class="sxs-lookup"><span data-stu-id="35530-534">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="35530-535">Se nello stack di chiamate di un membro codice chiama il <xref:System.Threading.WaitHandle.WaitAny%2A> (metodo) e specifica `true` per `exitContext`, il thread esce dal dominio di sincronizzazione, consentendo a un thread bloccato in una chiamata a qualsiasi membro dell'oggetto per continuare.</span><span class="sxs-lookup"><span data-stu-id="35530-535">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAny%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="35530-536">Quando il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo viene restituito, il thread che ha effettuato la chiamata deve attendere per immettere di nuovo il dominio di sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="35530-536">When the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35530-537">Esempio di codice seguente viene illustrato come usare il pool di thread contemporaneamente cercare un file su più dischi.</span><span class="sxs-lookup"><span data-stu-id="35530-537">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="35530-538">Per motivi di spazio, viene cercata solo nella directory radice di ogni disco.</span><span class="sxs-lookup"><span data-stu-id="35530-538">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35530-539">Il valore del parametro <paramref name="waitHandles" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-539">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-540">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-540">-or-</span>
          </span>
          <span data-ttu-id="35530-541">Uno o più oggetti nella matrice <paramref name="waitHandles" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-541">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35530-542">Il numero di oggetti in <paramref name="waitHandles" /> è maggiore di quello consentito dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-542">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="35530-543">
            <paramref name="waitHandles" /> è una matrice senza elementi e la versione di .NET Framework è 1.0 o 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-543">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-544">
            <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-544">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-545">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-545">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-546">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-546">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35530-547">
            <paramref name="waitHandles" /> è una matrice senza elementi e la versione di .NET Framework è la 2.0 o successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-547">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-548">La matrice <paramref name="waitHandles" /> contiene un proxy trasparente per un oggetto <see cref="T:System.Threading.WaitHandle" /> in un altro dominio di applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-548">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), timeout As TimeSpan, exitContext As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * TimeSpan * bool -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="35530-549">Matrice <see langword="WaitHandle" /> contenente gli oggetti per i quali l'istanza corrente attenderà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-549">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="35530-550">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-550">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="35530-551">
            <see langword="true" /> per uscire dal dominio di sincronizzazione per il contesto prima dell'attesa, se all'interno di un contesto sincronizzato, e riacquisirlo successivamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-551">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-552">Attende che uno degli elementi nella matrice specificata riceva un segnale, usando un valore <see cref="T:System.TimeSpan" /> per specificare l'intervallo di tempo e indicando se uscire dal dominio di sincronizzazione prima dell'attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-552">Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-553">Indice della matrice dell'oggetto che ha soddisfatto l'attesa oppure <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> se nessun oggetto ha soddisfatto l'attesa ed è trascorso un intervallo di tempo equivalente a <paramref name="timeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-553">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-554">Se `timeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-554">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-555">Verifica lo stato dell'handle di attesa e restituisce immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-555">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="35530-556"><xref:System.Threading.AbandonedMutexException> è stata introdotta in .NET Framework versione 2.0.</span><span class="sxs-lookup"><span data-stu-id="35530-556"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="35530-557">Nelle versioni precedenti, il <xref:System.Threading.WaitHandle.WaitAny%2A> restituzione del metodo `true` se il tempo di attesa viene completata perché un mutex viene abbandonato.</span><span class="sxs-lookup"><span data-stu-id="35530-557">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="35530-558">Un mutex abbandonato indica spesso un grave errore di codifica.</span><span class="sxs-lookup"><span data-stu-id="35530-558">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="35530-559">Nel caso di un mutex di sistema, può indicare che un'applicazione è stata terminata in modo anomalo (ad esempio, usando Gestione attività Windows).</span><span class="sxs-lookup"><span data-stu-id="35530-559">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="35530-560">L'eccezione contiene informazioni utili per il debug.</span><span class="sxs-lookup"><span data-stu-id="35530-560">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="35530-561">Il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo genera un <xref:System.Threading.AbandonedMutexException> solo quando il tempo di attesa viene completata a causa di un mutex abbandonato.</span><span class="sxs-lookup"><span data-stu-id="35530-561">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="35530-562">Se `waitHandles` contiene un mutex con un numero di indice inferiore rispetto al mutex abbandonato, rilasciato il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo termina normalmente e non viene generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-562">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35530-563">Nelle versioni di .NET Framework precedenti alla versione 2.0, se un thread termina o si interrompe senza rilasciare in modo esplicito un <xref:System.Threading.Mutex>e che `Mutex` è in corrispondenza dell'indice 0 (zero) in un `WaitAny` array in un altro thread, l'indice restituito da `WaitAny` è 128 anziché 0.</span><span class="sxs-lookup"><span data-stu-id="35530-563">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="35530-564">Questo metodo restituisce la fine dell'attesa, uno degli handle vengono segnalato o quando si verifica un timeout.</span><span class="sxs-lookup"><span data-stu-id="35530-564">This method returns when the wait terminates, either when any of the handles are signaled or when a time-out occurs.</span></span> <span data-ttu-id="35530-565">Se più di un oggetto diventa segnalato durante la chiamata, il valore restituito è l'indice della matrice dell'oggetto segnalato con il minimo valore di indice di tutti gli oggetti segnalati.</span><span class="sxs-lookup"><span data-stu-id="35530-565">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="35530-566">In alcune implementazioni, se vengono passati gli handle di 64, più di un <xref:System.NotSupportedException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="35530-566">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="35530-567">Il valore massimo `timeout` è <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="35530-567">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="35530-568">Note sull'uscita dal contesto</span><span class="sxs-lookup"><span data-stu-id="35530-568">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="35530-569">Il `exitContext` parametro ha effetto solo se il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo chiamato dall'interno di un contesto gestito.</span><span class="sxs-lookup"><span data-stu-id="35530-569">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAny%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="35530-570">Questa situazione può verificarsi se il thread si trova all'interno di una chiamata a un'istanza di una classe derivata da <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="35530-570">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="35530-571">Anche se un metodo attualmente in esecuzione in una classe che non deriva da <xref:System.ContextBoundObject>, ad esempio <xref:System.String>, è possibile essere in un contesto non predefinite se un <xref:System.ContextBoundObject> nello stack nel dominio dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="35530-571">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="35530-572">Quando il codice è in esecuzione in un contesto non predefinito, che specifica `true` per `exitContext` fa sì che il thread esce dal contesto gestito (vale a dire, per eseguire la transizione al contesto predefinito) prima di eseguire il <xref:System.Threading.WaitHandle.WaitAny%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="35530-572">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span> <span data-ttu-id="35530-573">Il thread viene restituito il contesto originale non predefinita dopo la chiamata al <xref:System.Threading.WaitHandle.WaitAny%2A> metodo viene completato.</span><span class="sxs-lookup"><span data-stu-id="35530-573">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes.</span></span>  
  
 <span data-ttu-id="35530-574">Ciò può essere utile quando la classe associata al contesto presenta <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="35530-574">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="35530-575">In tal caso, tutte le chiamate ai membri della classe sono automaticamente sincronizzate e il dominio di sincronizzazione è l'intero corpo del codice per la classe.</span><span class="sxs-lookup"><span data-stu-id="35530-575">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="35530-576">Se nello stack di chiamate di un membro codice chiama il <xref:System.Threading.WaitHandle.WaitAny%2A> (metodo) e specifica `true` per `exitContext`, il thread esce dal dominio di sincronizzazione, consentendo a un thread bloccato in una chiamata a qualsiasi membro dell'oggetto per continuare.</span><span class="sxs-lookup"><span data-stu-id="35530-576">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAny%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="35530-577">Quando il <xref:System.Threading.WaitHandle.WaitAny%2A> metodo viene restituito, il thread che ha effettuato la chiamata deve attendere per immettere di nuovo il dominio di sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="35530-577">When the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35530-578">Esempio di codice seguente viene illustrato come usare il pool di thread contemporaneamente cercare un file su più dischi.</span><span class="sxs-lookup"><span data-stu-id="35530-578">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="35530-579">Per motivi di spazio, viene cercata solo nella directory radice di ogni disco.</span><span class="sxs-lookup"><span data-stu-id="35530-579">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35530-580">Il valore del parametro <paramref name="waitHandles" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-580">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35530-581">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-581">-or-</span>
          </span>
          <span data-ttu-id="35530-582">Uno o più oggetti nella matrice <paramref name="waitHandles" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-582">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35530-583">Il numero di oggetti in <paramref name="waitHandles" /> è maggiore di quello consentito dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-583">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="35530-584">
            <paramref name="waitHandles" /> è una matrice senza elementi e la versione di .NET Framework è 1.0 o 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-584">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-585">
            <paramref name="timeout" /> è un numero negativo diverso da -1 millisecondi, che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-585">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="35530-586">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-586">-or-</span>
          </span>
          <span data-ttu-id="35530-587">
            <paramref name="timeout" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-587">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-588">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-588">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-589">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-589">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35530-590">
            <paramref name="waitHandles" /> è una matrice senza elementi e la versione di .NET Framework è la 2.0 o successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-590">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-591">La matrice <paramref name="waitHandles" /> contiene un proxy trasparente per un oggetto <see cref="T:System.Threading.WaitHandle" /> in un altro dominio di applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-591">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitOne">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35530-592">Blocca il thread corrente finché l'oggetto <see cref="T:System.Threading.WaitHandle" /> corrente non riceve un segnale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-592">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne();" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : unit -&gt; bool&#xA;override this.WaitOne : unit -&gt; bool" Usage="waitHandle.WaitOne " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35530-593">Blocca il thread corrente finché l'oggetto <see cref="T:System.Threading.WaitHandle" /> corrente non riceve un segnale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-593">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-594">Viene restituito <see langword="true" /> se l'istanza corrente riceve un segnale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-594">
              <see langword="true" /> if the current instance receives a signal.</span>
          </span>
          <span data-ttu-id="35530-595">Se l'istanza corrente non viene mai segnalata, <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> non restituisce mai alcun valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-595">If the current instance is never signaled, <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> never returns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-596"><xref:System.Threading.AbandonedMutexException> è stata introdotta in .NET Framework versione 2.0.</span><span class="sxs-lookup"><span data-stu-id="35530-596"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="35530-597">Nelle versioni precedenti, il <xref:System.Threading.WaitHandle.WaitOne%2A> restituzione del metodo `true` quando viene abbandonato un mutex.</span><span class="sxs-lookup"><span data-stu-id="35530-597">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="35530-598">Un mutex abbandonato indica spesso un grave errore di codifica.</span><span class="sxs-lookup"><span data-stu-id="35530-598">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="35530-599">Nel caso di un mutex di sistema, può indicare che un'applicazione è stata terminata in modo anomalo (ad esempio, usando Gestione attività Windows).</span><span class="sxs-lookup"><span data-stu-id="35530-599">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="35530-600">L'eccezione contiene informazioni utili per il debug.</span><span class="sxs-lookup"><span data-stu-id="35530-600">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="35530-601">Il chiamante di questo metodo si blocca in modo indefinito finché l'istanza corrente riceve un segnale.</span><span class="sxs-lookup"><span data-stu-id="35530-601">The caller of this method blocks indefinitely until the current instance receives a signal.</span></span> <span data-ttu-id="35530-602">Usare questo metodo per bloccare fino a un <xref:System.Threading.WaitHandle> riceve un segnale da un altro thread, ad esempio viene generato quando viene completata un'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="35530-602">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="35530-603">Per altre informazioni, vedere il <xref:System.IAsyncResult> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="35530-603">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="35530-604">Chiamare questo overload del metodo è equivalente alla chiamata di <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> overload del metodo e specificare -1 o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> per il primo parametro e `false` per il secondo parametro.</span><span class="sxs-lookup"><span data-stu-id="35530-604">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> method overload and specifying -1 or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> for the first parameter and `false` for the second parameter.</span></span>  
  
 <span data-ttu-id="35530-605">Eseguire l'override di questo metodo per personalizzare il comportamento delle classi derivate.</span><span class="sxs-lookup"><span data-stu-id="35530-605">Override this method to customize the behavior of derived classes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35530-606">Esempio di codice seguente viene illustrato come utilizzare un handle di attesa per mantenere un processo venga terminato durante l'attesa di un thread in background terminare l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="35530-606">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/CPP/source1.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/CS/source1.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/VB/source1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35530-607">L'istanza corrente è già stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-607">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-608">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-608">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-609">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-609">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-610">L'istanza corrente corrisponde a un proxy trasparente per una classe <see cref="T:System.Threading.WaitHandle" /> in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-610">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : int -&gt; bool&#xA;override this.WaitOne : int -&gt; bool" Usage="waitHandle.WaitOne millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="35530-611">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-611">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-612">Blocca il thread corrente finché l'oggetto <see cref="T:System.Threading.WaitHandle" /> corrente non riceve un segnale, usando un intero con segno a 32 bit per specificare l'intervallo di tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-612">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, using a 32-bit signed integer to specify the time interval in milliseconds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-613">
            <see langword="true" /> se l'istanza corrente riceve un segnale; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-613">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-614">Se `millisecondsTimeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-614">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-615">Verifica lo stato dell'handle di attesa e restituisce immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-615">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="35530-616">Si verifica il chiamante di questo metodo si blocca fino a quando l'istanza corrente riceve un segnale o un timeout.</span><span class="sxs-lookup"><span data-stu-id="35530-616">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="35530-617">Usare questo metodo per bloccare fino a un <xref:System.Threading.WaitHandle> riceve un segnale da un altro thread, ad esempio viene generato quando viene completata un'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="35530-617">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="35530-618">Per altre informazioni, vedere il <xref:System.IAsyncResult> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="35530-618">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="35530-619">Eseguire l'override di questo metodo per personalizzare il comportamento delle classi derivate.</span><span class="sxs-lookup"><span data-stu-id="35530-619">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="35530-620">Chiamare questo overload del metodo è uguale alla chiamata al metodo il <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> overload e specificare `false` per `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="35530-620">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35530-621">Esempio di codice seguente viene illustrato come utilizzare un handle di attesa per mantenere un processo venga terminato durante l'attesa di un thread in background terminare l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="35530-621">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35530-622">L'istanza corrente è già stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-622">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-623">
            <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-623">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-624">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-624">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-625">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-625">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-626">L'istanza corrente corrisponde a un proxy trasparente per una classe <see cref="T:System.Threading.WaitHandle" /> in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-626">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : TimeSpan -&gt; bool&#xA;override this.WaitOne : TimeSpan -&gt; bool" Usage="waitHandle.WaitOne timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="35530-627">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-627">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-628">Blocca il thread corrente finché l'istanza corrente non riceve un segnale, usando un valore <see cref="T:System.TimeSpan" /> per specificare l'intervallo di tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-628">Blocks the current thread until the current instance receives a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-629">
            <see langword="true" /> se l'istanza corrente riceve un segnale; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-629">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-630">Se `timeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-630">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-631">Verifica lo stato dell'handle di attesa e restituisce immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-631">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="35530-632">Si verifica il chiamante di questo metodo si blocca fino a quando l'istanza corrente riceve un segnale o un timeout.</span><span class="sxs-lookup"><span data-stu-id="35530-632">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="35530-633">Usare questo metodo per bloccare fino a un <xref:System.Threading.WaitHandle> riceve un segnale da un altro thread, ad esempio viene generato quando viene completata un'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="35530-633">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="35530-634">Per altre informazioni, vedere il <xref:System.IAsyncResult> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="35530-634">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="35530-635">Eseguire l'override di questo metodo per personalizzare il comportamento delle classi derivate.</span><span class="sxs-lookup"><span data-stu-id="35530-635">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="35530-636">Il valore massimo `timeout` è <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="35530-636">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="35530-637">Chiamare questo overload del metodo è uguale alla chiamata al metodo il <xref:System.Threading.WaitHandle.WaitOne%28System.TimeSpan%2CSystem.Boolean%29> overload e specificare `false` per `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="35530-637">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitOne%28System.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35530-638">L'istanza corrente è già stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-638">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-639">
            <paramref name="timeout" /> è un numero negativo diverso da -1 millisecondi, che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-639">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="35530-640">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-640">-or-</span>
          </span>
          <span data-ttu-id="35530-641">
            <paramref name="timeout" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-641">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-642">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-642">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-643">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-643">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-644">L'istanza corrente corrisponde a un proxy trasparente per una classe <see cref="T:System.Threading.WaitHandle" /> in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-644">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : int * bool -&gt; bool&#xA;override this.WaitOne : int * bool -&gt; bool" Usage="waitHandle.WaitOne (millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="35530-645">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-645">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="35530-646">
            <see langword="true" /> per uscire dal dominio di sincronizzazione per il contesto prima dell'attesa, se all'interno di un contesto sincronizzato, e riacquisirlo successivamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-646">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-647">Blocca il thread corrente finché l'oggetto <see cref="T:System.Threading.WaitHandle" /> corrente non riceve un segnale, usando un intero con segno a 32 bit per specificare l'intervallo di tempo e indicando se uscire dal dominio di sincronizzazione prima dell'attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-647">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, using a 32-bit signed integer to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-648">
            <see langword="true" /> se l'istanza corrente riceve un segnale; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-648">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-649">Se `millisecondsTimeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-649">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-650">Verifica lo stato dell'handle di attesa e restituisce immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-650">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="35530-651"><xref:System.Threading.AbandonedMutexException> è stata introdotta in .NET Framework versione 2.0.</span><span class="sxs-lookup"><span data-stu-id="35530-651"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="35530-652">Nelle versioni precedenti, il <xref:System.Threading.WaitHandle.WaitOne%2A> restituzione del metodo `true` quando viene abbandonato un mutex.</span><span class="sxs-lookup"><span data-stu-id="35530-652">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="35530-653">Un mutex abbandonato indica spesso un grave errore di codifica.</span><span class="sxs-lookup"><span data-stu-id="35530-653">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="35530-654">Nel caso di un mutex di sistema, può indicare che un'applicazione è stata terminata in modo anomalo (ad esempio, usando Gestione attività Windows).</span><span class="sxs-lookup"><span data-stu-id="35530-654">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="35530-655">L'eccezione contiene informazioni utili per il debug.</span><span class="sxs-lookup"><span data-stu-id="35530-655">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="35530-656">Si verifica il chiamante di questo metodo si blocca fino a quando l'istanza corrente riceve un segnale o un timeout.</span><span class="sxs-lookup"><span data-stu-id="35530-656">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="35530-657">Usare questo metodo per bloccare fino a un <xref:System.Threading.WaitHandle> riceve un segnale da un altro thread, ad esempio viene generato quando viene completata un'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="35530-657">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="35530-658">Per altre informazioni, vedere il <xref:System.IAsyncResult> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="35530-658">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="35530-659">Eseguire l'override di questo metodo per personalizzare il comportamento delle classi derivate.</span><span class="sxs-lookup"><span data-stu-id="35530-659">Override this method to customize the behavior of derived classes.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="35530-660">Note sull'uscita dal contesto</span><span class="sxs-lookup"><span data-stu-id="35530-660">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="35530-661">Il `exitContext` parametro ha effetto solo se il <xref:System.Threading.WaitHandle.WaitOne%2A> metodo chiamato dall'interno di un contesto gestito.</span><span class="sxs-lookup"><span data-stu-id="35530-661">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitOne%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="35530-662">Questa situazione può verificarsi se il thread si trova all'interno di una chiamata a un'istanza di una classe derivata da <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="35530-662">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="35530-663">Anche se un metodo attualmente in esecuzione in una classe che non deriva da <xref:System.ContextBoundObject>, ad esempio <xref:System.String>, è possibile essere in un contesto non predefinite se un <xref:System.ContextBoundObject> nello stack nel dominio dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="35530-663">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="35530-664">Quando il codice è in esecuzione in un contesto non predefinito, che specifica `true` per `exitContext` fa sì che il thread esce dal contesto gestito (vale a dire, per eseguire la transizione al contesto predefinito) prima di eseguire il <xref:System.Threading.WaitHandle.WaitOne%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="35530-664">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="35530-665">Il thread viene restituito il contesto originale non predefinita dopo la chiamata al <xref:System.Threading.WaitHandle.WaitOne%2A> metodo viene completato.</span><span class="sxs-lookup"><span data-stu-id="35530-665">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitOne%2A> method completes.</span></span>  
  
 <span data-ttu-id="35530-666">Ciò può essere utile quando la classe associata al contesto presenta <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="35530-666">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="35530-667">In tal caso, tutte le chiamate ai membri della classe sono automaticamente sincronizzate e il dominio di sincronizzazione è l'intero corpo del codice per la classe.</span><span class="sxs-lookup"><span data-stu-id="35530-667">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="35530-668">Se nello stack di chiamate di un membro codice chiama il <xref:System.Threading.WaitHandle.WaitOne%2A> (metodo) e specifica `true` per `exitContext`, il thread esce dal dominio di sincronizzazione, consentendo a un thread bloccato in una chiamata a qualsiasi membro dell'oggetto per continuare.</span><span class="sxs-lookup"><span data-stu-id="35530-668">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitOne%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="35530-669">Quando il <xref:System.Threading.WaitHandle.WaitOne%2A> metodo viene restituito, il thread che ha effettuato la chiamata deve attendere per immettere di nuovo il dominio di sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="35530-669">When the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35530-670">L'esempio seguente illustra come il <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> overload del metodo si comporta quando viene chiamato all'interno di un dominio di sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="35530-670">The following example shows how the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> method overload behaves when it is called within a synchronization domain.</span></span> <span data-ttu-id="35530-671">In primo luogo, un thread attende con `exitContext` impostato su `false` e blocca fino a quando non scade il timeout di attesa.</span><span class="sxs-lookup"><span data-stu-id="35530-671">First, a thread waits with `exitContext` set to `false` and blocks until the wait timeout expires.</span></span> <span data-ttu-id="35530-672">Un secondo thread viene eseguito dopo il primo thread termina e resta in attesa con `exitContext` impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="35530-672">A second thread executes after the first thread terminates and waits with `exitContext` set to `true`.</span></span> <span data-ttu-id="35530-673">La chiamata per segnalare l'handle di attesa per il secondo thread non è bloccata e il thread viene completata prima del timeout di attesa.</span><span class="sxs-lookup"><span data-stu-id="35530-673">The call to signal the wait handle for this second thread is not blocked, and the thread completes before the wait timeout.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/cpp/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/cs/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35530-674">L'istanza corrente è già stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-674">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-675">
            <paramref name="millisecondsTimeout" /> è un numero negativo diverso da -1, che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-675">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-676">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-676">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-677">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-677">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-678">L'istanza corrente corrisponde a un proxy trasparente per una classe <see cref="T:System.Threading.WaitHandle" /> in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-678">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : TimeSpan * bool -&gt; bool&#xA;override this.WaitOne : TimeSpan * bool -&gt; bool" Usage="waitHandle.WaitOne (timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="35530-679">Oggetto <see cref="T:System.TimeSpan" /> che rappresenta il numero di millisecondi di attesa oppure <see cref="T:System.TimeSpan" /> che rappresenta -1 millisecondi per un'attesa indefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-679">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="35530-680">
            <see langword="true" /> per uscire dal dominio di sincronizzazione per il contesto prima dell'attesa, se all'interno di un contesto sincronizzato, e riacquisirlo successivamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-680">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35530-681">Blocca il thread corrente finché l'istanza corrente non riceve un segnale, usando un oggetto <see cref="T:System.TimeSpan" /> per specificare l'intervallo di tempo e indicando se uscire dal dominio di sincronizzazione prima dell'attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-681">Blocks the current thread until the current instance receives a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35530-682">
            <see langword="true" /> se l'istanza corrente riceve un segnale; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-682">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-683">Se `timeout` è uguale a zero, il metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="35530-683">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="35530-684">Verifica lo stato dell'handle di attesa e restituisce immediatamente.</span><span class="sxs-lookup"><span data-stu-id="35530-684">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="35530-685"><xref:System.Threading.AbandonedMutexException> è stata introdotta in .NET Framework versione 2.0.</span><span class="sxs-lookup"><span data-stu-id="35530-685"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="35530-686">Nelle versioni precedenti, il <xref:System.Threading.WaitHandle.WaitOne%2A> restituzione del metodo `true` quando viene abbandonato un mutex.</span><span class="sxs-lookup"><span data-stu-id="35530-686">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="35530-687">Un mutex abbandonato indica spesso un grave errore di codifica.</span><span class="sxs-lookup"><span data-stu-id="35530-687">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="35530-688">Nel caso di un mutex di sistema, può indicare che un'applicazione è stata terminata in modo anomalo (ad esempio, usando Gestione attività Windows).</span><span class="sxs-lookup"><span data-stu-id="35530-688">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="35530-689">L'eccezione contiene informazioni utili per il debug.</span><span class="sxs-lookup"><span data-stu-id="35530-689">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="35530-690">Si verifica il chiamante di questo metodo si blocca fino a quando l'istanza corrente riceve un segnale o un timeout.</span><span class="sxs-lookup"><span data-stu-id="35530-690">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="35530-691">Usare questo metodo per bloccare fino a un <xref:System.Threading.WaitHandle> riceve un segnale da un altro thread, ad esempio viene generato quando viene completata un'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="35530-691">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="35530-692">Per altre informazioni, vedere il <xref:System.IAsyncResult> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="35530-692">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="35530-693">Eseguire l'override di questo metodo per personalizzare il comportamento delle classi derivate.</span><span class="sxs-lookup"><span data-stu-id="35530-693">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="35530-694">Il valore massimo `timeout` è <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="35530-694">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="35530-695">Note sull'uscita dal contesto</span><span class="sxs-lookup"><span data-stu-id="35530-695">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="35530-696">Il `exitContext` parametro ha effetto solo se il <xref:System.Threading.WaitHandle.WaitOne%2A> metodo chiamato dall'interno di un contesto gestito.</span><span class="sxs-lookup"><span data-stu-id="35530-696">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitOne%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="35530-697">Questa situazione può verificarsi se il thread si trova all'interno di una chiamata a un'istanza di una classe derivata da <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="35530-697">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="35530-698">Anche se un metodo attualmente in esecuzione in una classe che non deriva da <xref:System.ContextBoundObject>, ad esempio <xref:System.String>, è possibile essere in un contesto non predefinite se un <xref:System.ContextBoundObject> nello stack nel dominio dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="35530-698">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="35530-699">Quando il codice è in esecuzione in un contesto non predefinito, che specifica `true` per `exitContext` fa sì che il thread esce dal contesto gestito (vale a dire, per eseguire la transizione al contesto predefinito) prima di eseguire il <xref:System.Threading.WaitHandle.WaitOne%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="35530-699">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="35530-700">Il thread viene restituito il contesto originale non predefinita dopo la chiamata al <xref:System.Threading.WaitHandle.WaitOne%2A> metodo viene completato.</span><span class="sxs-lookup"><span data-stu-id="35530-700">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitOne%2A> method completes.</span></span>  
  
 <span data-ttu-id="35530-701">Ciò può essere utile quando la classe associata al contesto presenta <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="35530-701">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="35530-702">In tal caso, tutte le chiamate ai membri della classe sono automaticamente sincronizzate e il dominio di sincronizzazione è l'intero corpo del codice per la classe.</span><span class="sxs-lookup"><span data-stu-id="35530-702">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="35530-703">Se nello stack di chiamate di un membro codice chiama il <xref:System.Threading.WaitHandle.WaitOne%2A> (metodo) e specifica `true` per `exitContext`, il thread esce dal dominio di sincronizzazione, consentendo a un thread bloccato in una chiamata a qualsiasi membro dell'oggetto per continuare.</span><span class="sxs-lookup"><span data-stu-id="35530-703">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitOne%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="35530-704">Quando il <xref:System.Threading.WaitHandle.WaitOne%2A> metodo viene restituito, il thread che ha effettuato la chiamata deve attendere per immettere di nuovo il dominio di sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="35530-704">When the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35530-705">Esempio di codice seguente viene illustrato come utilizzare un handle di attesa per mantenere un processo venga terminato durante l'attesa di un thread in background terminare l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="35530-705">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35530-706">L'istanza corrente è già stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-706">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35530-707">
            <paramref name="timeout" /> è un numero negativo diverso da -1 millisecondi, che rappresenta un timeout infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-707">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="35530-708">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-708">-or-</span>
          </span>
          <span data-ttu-id="35530-709">
            <paramref name="timeout" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-709">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="35530-710">L'attesa è terminata perché un thread è stato chiuso senza rilasciare un mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-710">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="35530-711">Questa eccezione non viene generata in Windows 98 o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-711">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35530-712">L'istanza corrente corrisponde a un proxy trasparente per una classe <see cref="T:System.Threading.WaitHandle" /> in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-712">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitTimeout">
      <MemberSignature Language="C#" Value="public const int WaitTimeout = 258;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 WaitTimeout = (258)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.WaitHandle.WaitTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Const WaitTimeout As Integer  = 258" />
      <MemberSignature Language="C++ CLI" Value="public: int WaitTimeout = 258;" />
      <MemberSignature Language="F#" Value="val mutable WaitTimeout : int" Usage="System.Threading.WaitHandle.WaitTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>258</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="35530-713">Indica che si è verificato il timeout di un'operazione <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> prima della segnalazione di uno degli handle di attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-713">Indicates that a <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> operation timed out before any of the wait handles were signaled.</span>
          </span>
          <span data-ttu-id="35530-714">Questo campo è costante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35530-714">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35530-715">Questo campo è uno dei possibili valori restituiti di `WaitAny`.</span><span class="sxs-lookup"><span data-stu-id="35530-715">This field is one of the possible return values of `WaitAny`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35530-716">Esempio di codice seguente viene illustrato come usare il pool di thread contemporaneamente cercare un file su più dischi.</span><span class="sxs-lookup"><span data-stu-id="35530-716">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="35530-717">Per motivi di spazio, viene cercata solo nella directory radice di ogni disco.</span><span class="sxs-lookup"><span data-stu-id="35530-717">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>