<Type Name="ThreadPoolBoundHandle" FullName="System.Threading.ThreadPoolBoundHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="465d338dbc38447ed70aa0a16bc93a4dd04694b8" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52212262" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ThreadPoolBoundHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThreadPoolBoundHandle extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadPoolBoundHandle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThreadPoolBoundHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadPoolBoundHandle sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type ThreadPoolBoundHandle = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Overlapped</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netstandard-2.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un handle di I/O associato al pool di thread di sistema che consente ai componenti di basso livello di ricevere le notifiche per le operazioni di I/O asincrone.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AllocateNativeOverlapped">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un puntatore non gestito a una struttura <see cref="T:System.Threading.NativeOverlapped" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AllocateNativeOverlapped">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* AllocateNativeOverlapped (System.Threading.PreAllocatedOverlapped preAllocated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* AllocateNativeOverlapped(class System.Threading.PreAllocatedOverlapped preAllocated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* AllocateNativeOverlapped(System::Threading::PreAllocatedOverlapped ^ preAllocated);" />
      <MemberSignature Language="F#" Value="member this.AllocateNativeOverlapped : System.Threading.PreAllocatedOverlapped -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="threadPoolBoundHandle.AllocateNativeOverlapped preAllocated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preAllocated" Type="System.Threading.PreAllocatedOverlapped" />
      </Parameters>
      <Docs>
        <param name="preAllocated">Oggetto dal quale creare il puntatore <see cref="T:System.Threading.NativeOverlapped" />.</param>
        <summary>Restituisce un puntatore non gestito a una struttura <see cref="T:System.Threading.NativeOverlapped" /> mediante lo stato del callback e i buffer associati all'oggetto <see cref="T:System.Threading.PreAllocatedOverlapped" /> specificato.</summary>
        <returns>Puntatore non gestito a una struttura <see cref="T:System.Threading.NativeOverlapped" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il puntatore non gestito restituito da questo metodo può essere passato al sistema operativo in operazioni dei / o sovrapposte. Il <xref:System.Threading.NativeOverlapped> struttura è fissa nella memoria fisica finché il <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> viene chiamato il metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="preAllocated" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="preAllocated" /> è attualmente in uso per un'altra operazione di I/O.</exception>
        <exception cref="T:System.ObjectDisposedException">Questo metodo è stato chiamato dopo l'eliminazione di <see cref="T:System.Threading.ThreadPoolBoundHandle" />.  
  
oppure 
Questo metodo è stato chiamato dopo l'eliminazione di <paramref name="preAllocated" />.</exception>
        <altmember cref="T:System.Threading.PreAllocatedOverlapped" />
      </Docs>
    </Member>
    <Member MemberName="AllocateNativeOverlapped">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* AllocateNativeOverlapped (System.Threading.IOCompletionCallback callback, object state, object pinData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* AllocateNativeOverlapped(class System.Threading.IOCompletionCallback callback, object state, object pinData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* AllocateNativeOverlapped(System::Threading::IOCompletionCallback ^ callback, System::Object ^ state, System::Object ^ pinData);" />
      <MemberSignature Language="F#" Value="member this.AllocateNativeOverlapped : System.Threading.IOCompletionCallback * obj * obj -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="threadPoolBoundHandle.AllocateNativeOverlapped (callback, state, pinData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.IOCompletionCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="pinData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Un delegato che rappresenta il metodo di callback da richiamare al completamento dell'operazione di I/O asincrona.</param>
        <param name="state">Un oggetto specificato dall'utente che distingue l'istanza <see cref="T:System.Threading.NativeOverlapped" /> da altre istanze <see cref="T:System.Threading.NativeOverlapped" />.</param>
        <param name="pinData">Un oggetto o una matrice di oggetti che rappresenta il buffer di input o output per l'operazione o <see langword="null" />. Ogni oggetto rappresenta un buffer, ad esempio una matrice di byte.</param>
        <summary>Restituisce un puntatore non gestito a una struttura <see cref="T:System.Threading.NativeOverlapped" />, specificando un delegato che viene richiamato quando l'operazione di I/O asincrona è completata, un oggetto specificato dall'utente che definisce il contesto e gli oggetti gestiti usati come buffer.</summary>
        <returns>Puntatore non gestito a una struttura <see cref="T:System.Threading.NativeOverlapped" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callback" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Questo metodo è stato chiamato dopo l'eliminazione dell'oggetto <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BindHandle">
      <MemberSignature Language="C#" Value="public static System.Threading.ThreadPoolBoundHandle BindHandle (System.Runtime.InteropServices.SafeHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.ThreadPoolBoundHandle BindHandle(class System.Runtime.InteropServices.SafeHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindHandle (handle As SafeHandle) As ThreadPoolBoundHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::ThreadPoolBoundHandle ^ BindHandle(System::Runtime::InteropServices::SafeHandle ^ handle);" />
      <MemberSignature Language="F#" Value="static member BindHandle : System.Runtime.InteropServices.SafeHandle -&gt; System.Threading.ThreadPoolBoundHandle" Usage="System.Threading.ThreadPoolBoundHandle.BindHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadPoolBoundHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="handle">Oggetto che contiene l'handle del sistema operativo. È necessario che l'handle sia stato aperto per operazioni di I/O sovrapposte nel codice non gestito.</param>
        <summary>Restituisce un oggetto <see cref="T:System.Threading.ThreadPoolBoundHandle" /> per l'handle specificato, associato al pool di thread del sistema.</summary>
        <returns>Oggetto <see cref="T:System.Threading.ThreadPoolBoundHandle" /> per <paramref name="handle" />, associato al pool di thread del sistema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo deve essere chiamato una volta per ogni handle.  
  
 Il <xref:System.Threading.ThreadPoolBoundHandle> non accetta la proprietà dell'oggetto `handle`; resta la responsabilità del chiamante per chiamare <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="handle" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="handle" /> è stato eliminato.  
  
oppure 
 <paramref name="handle" /> non fa riferimento a un handle di operazioni di I/O valido.  
  
oppure 
 <paramref name="handle" /> fa riferimento a un handle che non è stato aperto per operazioni di I/O sovrapposte.  
  
oppure 
 <paramref name="handle" /> fa riferimento a un handle che è già stato associato.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="threadPoolBoundHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia le risorse non gestite usate dall'istanza di <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeNativeOverlapped">
      <MemberSignature Language="C#" Value="public void FreeNativeOverlapped (System.Threading.NativeOverlapped* overlapped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FreeNativeOverlapped(valuetype System.Threading.NativeOverlapped* overlapped) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FreeNativeOverlapped(System::Threading::NativeOverlapped* overlapped);" />
      <MemberSignature Language="F#" Value="member this.FreeNativeOverlapped : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; unit" Usage="threadPoolBoundHandle.FreeNativeOverlapped overlapped" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overlapped" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="overlapped">Un puntatore non gestito per la struttura <see cref="T:System.Threading.NativeOverlapped" /> da liberare.</param>
        <summary>Libera la memoria associata a una struttura <see cref="T:System.Threading.NativeOverlapped" /> allocata dal metodo <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  È necessario chiamare il <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> metodo esattamente una volta in ogni <xref:System.Threading.NativeOverlapped> puntatore non gestito allocato utilizzando il <xref:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped%2A> (metodo). Se non si chiama il <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> metodo, si verificherà una perdita di memoria. Se si chiama il <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> più volte nello stesso metodo <xref:System.Threading.NativeOverlapped> puntatore non gestito, risulteranno danneggiata memoria.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="overlapped" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Questo metodo è stato chiamato dopo l'eliminazione dell'oggetto <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNativeOverlappedState">
      <MemberSignature Language="C#" Value="public static object GetNativeOverlappedState (System.Threading.NativeOverlapped* overlapped);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetNativeOverlappedState(valuetype System.Threading.NativeOverlapped* overlapped) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetNativeOverlappedState(System::Threading::NativeOverlapped* overlapped);" />
      <MemberSignature Language="F#" Value="static member GetNativeOverlappedState : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; obj" Usage="System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState overlapped" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overlapped" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="overlapped">Puntatore non gestito alla struttura <see cref="T:System.Threading.NativeOverlapped" /> dalla quale restituire l'oggetto specificato dall'utente associato.</param>
        <summary>Restituisce l'oggetto specificato dall'utente quando l'istanza <see cref="T:System.Threading.NativeOverlapped" /> è stata allocata mediante la chiamata del metodo <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" />.</summary>
        <returns>Oggetto specificato dall'utente che distingue questa istanza <see cref="T:System.Threading.NativeOverlapped" /> da altre istanze <see cref="T:System.Threading.NativeOverlapped" /> oppure <see langword="null" /> se non è stato specificato all'allocazione dell'istanza mediante chiamata del metodo <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="overlapped" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.SafeHandle Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.InteropServices.SafeHandle Handle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadPoolBoundHandle.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As SafeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::SafeHandle ^ Handle { System::Runtime::InteropServices::SafeHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : System.Runtime.InteropServices.SafeHandle" Usage="System.Threading.ThreadPoolBoundHandle.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'handle del sistema operativo associato.</summary>
        <value>Oggetto che contiene l'handle del sistema operativo associato.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>