<Type Name="Timer" FullName="System.Threading.Timer">
  <TypeSignature Language="C#" Value="public sealed class Timer : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Timer extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Timer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Timer&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer sealed : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="467c7-101">Fornisce un meccanismo per eseguire un metodo su un thread del pool di thread a intervalli specificati.</span><span class="sxs-lookup"><span data-stu-id="467c7-101">Provides a mechanism for executing a method on a thread pool thread at specified intervals.</span></span> <span data-ttu-id="467c7-102">Questa classe non può essere ereditata.</span><span class="sxs-lookup"><span data-stu-id="467c7-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467c7-103">Utilizzare un <xref:System.Threading.TimerCallback> delegato per specificare il metodo desiderato di <xref:System.Threading.Timer> da eseguire.</span><span class="sxs-lookup"><span data-stu-id="467c7-103">Use a <xref:System.Threading.TimerCallback> delegate to specify the method you want the <xref:System.Threading.Timer> to execute.</span></span> <span data-ttu-id="467c7-104">La firma del <xref:System.Threading.TimerCallback> delegato è:</span><span class="sxs-lookup"><span data-stu-id="467c7-104">The signature of the <xref:System.Threading.TimerCallback> delegate is:</span></span>  
  
```csharp  
void TimerCallback(Object state)  
```  
  
```cpp  
void TimerCallback(Object state)  
```  
  
```vb  
Sub TimerCallback(state As Object)  
```  
  
 <span data-ttu-id="467c7-105">Il delegato timer viene specificato quando il timer viene creato e non può essere modificato.</span><span class="sxs-lookup"><span data-stu-id="467c7-105">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="467c7-106">Il metodo non viene eseguito sul thread che ha creato il timer; viene eseguito per un <xref:System.Threading.ThreadPool> thread fornito dal sistema.</span><span class="sxs-lookup"><span data-stu-id="467c7-106">The method does not execute on the thread that created the timer; it executes on a <xref:System.Threading.ThreadPool> thread supplied by the system.</span></span>  
  
> [!TIP]
> <span data-ttu-id="467c7-107">.NET include quattro classi denominate `Timer`in ognuno dei quali offre diverse funzionalità:</span><span class="sxs-lookup"><span data-stu-id="467c7-107">.NET includes four classes named `Timer`, each of which offers different functionality:</span></span>  
>
> - <span data-ttu-id="467c7-108"><xref:System.Timers.Timer?displayProperty=nameWithType>, che viene generato un evento e viene eseguito il codice in uno o più eventi sink a intervalli regolari.</span><span class="sxs-lookup"><span data-stu-id="467c7-108"><xref:System.Timers.Timer?displayProperty=nameWithType>, which fires an event and executes the code in one or more event sinks at regular intervals.</span></span> <span data-ttu-id="467c7-109">La classe è destinata all'utilizzo come basato su server o il componente del servizio in un ambiente con multithreading non dispone di alcuna interfaccia utente e non è visibile in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="467c7-109">The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>
> - <span data-ttu-id="467c7-110"><xref:System.Threading.Timer?displayProperty=nameWithType>, che esegue un metodo di callback singolo in un pool di thread a intervalli regolari.</span><span class="sxs-lookup"><span data-stu-id="467c7-110"><xref:System.Threading.Timer?displayProperty=nameWithType>, which executes a single callback method on a thread pool thread at regular intervals.</span></span> <span data-ttu-id="467c7-111">Il metodo di callback viene definito quando il timer viene creata un'istanza e non può essere modificato.</span><span class="sxs-lookup"><span data-stu-id="467c7-111">The callback method is defined when the timer is instantiated and cannot be changed.</span></span> <span data-ttu-id="467c7-112">Ad esempio il <xref:System.Timers.Timer?displayProperty=nameWithType> (classe), questa classe è destinata all'utilizzo come un componente basato su server o servizio in un ambiente con multithreading, ma senza un'interfaccia utente e non è visibile in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="467c7-112">Like the <xref:System.Timers.Timer?displayProperty=nameWithType> class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>
> - <span data-ttu-id="467c7-113"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (Solo .NET framework), un componente di Windows Form che genera un evento ed esegue il codice in uno o più sink di evento a intervalli regolari.</span><span class="sxs-lookup"><span data-stu-id="467c7-113"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (.NET Framework only), a Windows Forms component that fires an event and executes the code in one or more event sinks at regular intervals.</span></span> <span data-ttu-id="467c7-114">Il componente non dispone di alcuna interfaccia utente ed è progettato per l'utilizzo in un ambiente a thread singolo viene eseguito nel thread UI.</span><span class="sxs-lookup"><span data-stu-id="467c7-114">The component has no user interface and is designed for use in a single-threaded environment; it executes on the UI thread.</span></span>
> - <span data-ttu-id="467c7-115"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (Solo .NET framework), un componente ASP.NET che esegue i postback asincroni o sincroni di pagina web a intervalli regolari.</span><span class="sxs-lookup"><span data-stu-id="467c7-115"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (.NET Framework only), an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</span></span>
  
 <span data-ttu-id="467c7-116">Quando si crea un timer, è possibile specificare un periodo di tempo di attesa prima della prima esecuzione del metodo (ora di scadenza) e una quantità di tempo di attesa tra le esecuzioni successive (punto).</span><span class="sxs-lookup"><span data-stu-id="467c7-116">When you create a timer, you can specify an amount of time to wait before the first execution of the method (due time), and an amount of time to wait between subsequent executions (period).</span></span> <span data-ttu-id="467c7-117">La <xref:System.Threading.Timer> classe ha la stessa risoluzione l'orologio di sistema.</span><span class="sxs-lookup"><span data-stu-id="467c7-117">The <xref:System.Threading.Timer> class has the same resolution as the system clock.</span></span> <span data-ttu-id="467c7-118">Ciò significa che se il periodo è minore rispetto alla risoluzione del clock di sistema di <xref:System.Threading.TimerCallback> delegato verrà eseguito a intervalli definiti per la risoluzione del clock di sistema, è di circa 15 millisecondi nei sistemi Windows 7 e Windows 8.</span><span class="sxs-lookup"><span data-stu-id="467c7-118">This means that if the period is less than the resolution of the system clock, the <xref:System.Threading.TimerCallback> delegate will execute at intervals defined by the resolution of the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems.</span></span> <span data-ttu-id="467c7-119">È possibile modificare la data di scadenza ora e periodo o disabilitare il timer, usando il <xref:System.Threading.Timer.Change%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467c7-119">You can change the due time and period, or disable the timer, by using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="467c7-120">Come si utilizza un <xref:System.Threading.Timer>, è necessario mantenere un riferimento a esso.</span><span class="sxs-lookup"><span data-stu-id="467c7-120">As long as you are using a <xref:System.Threading.Timer>, you must keep a reference to it.</span></span> <span data-ttu-id="467c7-121">Come con qualsiasi oggetto gestito, un <xref:System.Threading.Timer> è sottoposte a garbage collection quando non sono presenti riferimenti a esso.</span><span class="sxs-lookup"><span data-stu-id="467c7-121">As with any managed object, a <xref:System.Threading.Timer> is subject to garbage collection when there are no references to it.</span></span> <span data-ttu-id="467c7-122">Il fatto che un <xref:System.Threading.Timer> è ancora attivo non impedisce che venga raccolto.</span><span class="sxs-lookup"><span data-stu-id="467c7-122">The fact that a <xref:System.Threading.Timer> is still active does not prevent it from being collected.</span></span>  
  
 <span data-ttu-id="467c7-123">Quando un timer non è più necessario, utilizzare il <xref:System.Threading.Timer.Dispose%2A> metodo per liberare le risorse utilizzate dal timer.</span><span class="sxs-lookup"><span data-stu-id="467c7-123">When a timer is no longer needed, use the <xref:System.Threading.Timer.Dispose%2A> method to free the resources held by the timer.</span></span> <span data-ttu-id="467c7-124">Si noti che i callback possono verificarsi dopo il <xref:System.Threading.Timer.Dispose> overload del metodo è stato chiamato, perché il timer accoda i callback per l'esecuzione dal thread del pool.</span><span class="sxs-lookup"><span data-stu-id="467c7-124">Note that callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="467c7-125">È possibile utilizzare il <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> overload del metodo per attendere il completamento di tutti i callback.</span><span class="sxs-lookup"><span data-stu-id="467c7-125">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="467c7-126">Il metodo di callback eseguito dal timer deve essere rientrante, perché viene chiamato su <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="467c7-126">The callback method executed by the timer should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="467c7-127">Il callback può essere eseguito contemporaneamente in due thread di pool di thread se l'intervallo del timer è inferiore al tempo necessario per eseguire il callback, o se tutti i thread del pool sono in uso e il callback è in coda più volte.</span><span class="sxs-lookup"><span data-stu-id="467c7-127">The callback can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the callback, or if all thread pool threads are in use and the callback is queued multiple times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="467c7-128"><xref:System.Threading.Timer?displayProperty=nameWithType> è un timer semplice e leggero che utilizza i metodi di callback e viene servito dal thread del pool.</span><span class="sxs-lookup"><span data-stu-id="467c7-128"><xref:System.Threading.Timer?displayProperty=nameWithType> is a simple, lightweight timer that uses callback methods and is served by thread pool threads.</span></span> <span data-ttu-id="467c7-129">Non è consigliabile per l'uso con Windows Form, in quanto il callback non vengono eseguiti nel thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="467c7-129">It is not recommended for use with Windows Forms, because its callbacks do not occur on the user interface thread.</span></span> <span data-ttu-id="467c7-130"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> è una scelta migliore per l'uso con Windows Form.</span><span class="sxs-lookup"><span data-stu-id="467c7-130"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> is a better choice for use with Windows Forms.</span></span> <span data-ttu-id="467c7-131">Per la funzionalità di timer basate su server, è possibile utilizzare <xref:System.Timers.Timer?displayProperty=nameWithType>, che genera eventi e dispone di funzionalità aggiuntive.</span><span class="sxs-lookup"><span data-stu-id="467c7-131">For server-based timer functionality, you might consider using <xref:System.Timers.Timer?displayProperty=nameWithType>, which raises events and has additional features.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467c7-132">L'esempio seguente definisce un `StatusChecker` classe che include un `CheckStatus` la cui firma corrisponde al metodo come la <xref:System.Threading.TimerCallback> delegato.</span><span class="sxs-lookup"><span data-stu-id="467c7-132">The following example defines a `StatusChecker` class  that includes a `CheckStatus` method whose signature is the same as the <xref:System.Threading.TimerCallback> delegate.</span></span> <span data-ttu-id="467c7-133">Il `state` argomento del `CheckStatus` metodo è un <xref:System.Threading.AutoResetEvent> oggetto utilizzato per sincronizzare i thread dell'applicazione e il pool di thread che esegue il delegato di callback.</span><span class="sxs-lookup"><span data-stu-id="467c7-133">The  `state` argument of the `CheckStatus` method is an <xref:System.Threading.AutoResetEvent> object that is used to synchronize the application thread and the thread pool thread that executes the callback delegate.</span></span> <span data-ttu-id="467c7-134">La `StatusChecker` classe include anche due variabili di stato:</span><span class="sxs-lookup"><span data-stu-id="467c7-134">The `StatusChecker` class also includes two state variables:</span></span>  
  
 `invokeCount`  
 <span data-ttu-id="467c7-135">Indica il numero di volte in cui che è stato richiamato il metodo di callback.</span><span class="sxs-lookup"><span data-stu-id="467c7-135">Indicates the number of times the callback method has been invoked.</span></span>  
  
 `maxCount`  
 <span data-ttu-id="467c7-136">Determina il numero massimo di volte in cui che deve essere richiamato il metodo di callback.</span><span class="sxs-lookup"><span data-stu-id="467c7-136">Determines the maximum number of times the callback method should be invoked.</span></span>  
  
 <span data-ttu-id="467c7-137">Il thread dell'applicazione crea il timer, che attende un secondo e quindi esegue il `CheckStatus` metodo di callback ogni 250 millisecondi.</span><span class="sxs-lookup"><span data-stu-id="467c7-137">The application thread creates the timer, which waits one second and then executes  the `CheckStatus` callback method every 250 milliseconds.</span></span> <span data-ttu-id="467c7-138">Il thread dell'applicazione viene bloccato fino a quando il <xref:System.Threading.AutoResetEvent> oggetto è stato segnalato.</span><span class="sxs-lookup"><span data-stu-id="467c7-138">The application thread then blocks until the <xref:System.Threading.AutoResetEvent> object is signaled.</span></span> <span data-ttu-id="467c7-139">Quando il `CheckStatus` esecuzione del metodo di callback `maxCount` volte, chiama il `AutoResetEvent.Set` per impostare lo stato del <xref:System.Threading.AutoResetEvent> oggetto segnalato.</span><span class="sxs-lookup"><span data-stu-id="467c7-139">When the `CheckStatus` callback method executes `maxCount` times, it calls the `AutoResetEvent.Set` method to set the state of the <xref:System.Threading.AutoResetEvent> object to signaled.</span></span> <span data-ttu-id="467c7-140">La prima volta in questo caso, il thread dell'applicazione chiama il <xref:System.Threading.Timer.Change%28System.Int32%2CSystem.Int32%29> metodo in modo che il metodo di callback verrà eseguito ogni mezzo secondo.</span><span class="sxs-lookup"><span data-stu-id="467c7-140">The first time this happens, the application thread calls the <xref:System.Threading.Timer.Change%28System.Int32%2CSystem.Int32%29> method so that the callback method now executes every half second.</span></span> <span data-ttu-id="467c7-141">Ancora una volta si blocca fino a quando il <xref:System.Threading.AutoResetEvent> oggetto è stato segnalato.</span><span class="sxs-lookup"><span data-stu-id="467c7-141">It once again blocks until the <xref:System.Threading.AutoResetEvent> object is signaled.</span></span> <span data-ttu-id="467c7-142">In questo caso, il timer viene eliminato definitivamente chiamando il relativo <xref:System.Threading.Timer.Dispose%2A> (metodo) e l'applicazione termina.</span><span class="sxs-lookup"><span data-stu-id="467c7-142">When this happens, the timer is destroyed by calling its <xref:System.Threading.Timer.Dispose%2A> method, and the application terminates.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="467c7-143">Questo tipo è thread-safe.</span><span class="sxs-lookup"><span data-stu-id="467c7-143">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Threading.TimerCallback" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467c7-144">Inizializza una nuova istanza della classe <see langword="Timer" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-144">Initializes a new instance of the <see langword="Timer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="467c7-145">Delegato <see cref="T:System.Threading.TimerCallback" /> che rappresenta un metodo da eseguire.</span><span class="sxs-lookup"><span data-stu-id="467c7-145">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span></span></param>
        <summary><span data-ttu-id="467c7-146">Inizializza una nuova istanza della classe <see cref="T:System.Threading.Timer" /> con un periodo e un' ora di esecuzione infiniti, utilizzando l'oggetto <see cref="T:System.Threading.Timer" /> appena creato come oggetto di stato.</span><span class="sxs-lookup"><span data-stu-id="467c7-146">Initializes a new instance of the <see cref="T:System.Threading.Timer" /> class with an infinite period and an infinite due time, using the newly created <see cref="T:System.Threading.Timer" /> object as the state object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467c7-147">Chiamare questo costruttore quando si desidera utilizzare il <xref:System.Threading.Timer> oggetto stesso come oggetto di stato.</span><span class="sxs-lookup"><span data-stu-id="467c7-147">Call this constructor when you want to use the <xref:System.Threading.Timer> object itself as the state object.</span></span> <span data-ttu-id="467c7-148">Dopo avere creato il timer, utilizzare il <xref:System.Threading.Timer.Change%2A> per impostare l'intervallo e l'ora di scadenza.</span><span class="sxs-lookup"><span data-stu-id="467c7-148">After creating the timer, use the <xref:System.Threading.Timer.Change%2A> method to set the interval and due time.</span></span>  
  
 <span data-ttu-id="467c7-149">Questo costruttore viene specificato un infiniti prima il primo callback e un intervallo infinito tra i callback, per impedire che il primo callback che precedono il <xref:System.Threading.Timer> oggetto viene assegnato all'oggetto di stato.</span><span class="sxs-lookup"><span data-stu-id="467c7-149">This constructor specifies an infinite due time before the first callback and an infinite interval between callbacks, in order to prevent the first callback from occurring before the <xref:System.Threading.Timer> object is assigned to the state object.</span></span>  
  
 <span data-ttu-id="467c7-150">Il metodo specificato per `callback` deve essere rientrante, perché viene chiamato su <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="467c7-150">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="467c7-151">Il metodo può essere eseguito simultaneamente in due thread di pool di thread se l'intervallo del timer è inferiore al tempo necessario per eseguire il metodo, o se tutti i thread del pool sono in uso e il metodo viene accodato più volte.</span><span class="sxs-lookup"><span data-stu-id="467c7-151">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467c7-152">Esempio di codice seguente crea un nuovo timer utilizzando il timer stesso come oggetto di stato.</span><span class="sxs-lookup"><span data-stu-id="467c7-152">The following code example creates a new timer, using the timer itself as the state object.</span></span> <span data-ttu-id="467c7-153">Il <xref:System.Threading.Timer.Change%2A> metodo viene utilizzato per avviare il timer.</span><span class="sxs-lookup"><span data-stu-id="467c7-153">The <xref:System.Threading.Timer.Change%2A> method is used to start the timer.</span></span> <span data-ttu-id="467c7-154">Quando si verifica il callback del timer, l'oggetto stato viene utilizzato per disattivare il timer.</span><span class="sxs-lookup"><span data-stu-id="467c7-154">When the timer callback occurs, the state object is used to turn the timer off.</span></span>  
  
 [!code-csharp[TimerSelfCtor#1](~/samples/snippets/csharp/VS_Snippets_Misc/timerSelfCtor/CS/source.cs#1)]
 [!code-vb[TimerSelfCtor#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/timerSelfCtor/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, int dueTime, int period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, int32 dueTime, int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As Integer, period As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, int dueTime, int period);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.Int32" />
        <Parameter Name="period" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="467c7-155">Delegato <see cref="T:System.Threading.TimerCallback" /> che rappresenta un metodo da eseguire.</span><span class="sxs-lookup"><span data-stu-id="467c7-155">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="467c7-156">Oggetto contenente informazioni che devono essere utilizzate dal metodo di callback, oppure <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-156">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="467c7-157">Intervallo di attesa, in millisecondi, prima che venga chiamato <c>callback</c>.</span><span class="sxs-lookup"><span data-stu-id="467c7-157">The amount of time to delay before <c>callback</c> is invoked, in milliseconds.</span></span> <span data-ttu-id="467c7-158">Specificare <see cref="F:System.Threading.Timeout.Infinite" /> per impedire l'avvio del timer.</span><span class="sxs-lookup"><span data-stu-id="467c7-158">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span></span> <span data-ttu-id="467c7-159">Specificare zero (0) per avviare il timer immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-159">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="467c7-160">Intervallo di tempo, in millisecondi, tra le chiamate di <c>callback</c>.</span><span class="sxs-lookup"><span data-stu-id="467c7-160">The time interval between invocations of <c>callback</c>, in milliseconds.</span></span> <span data-ttu-id="467c7-161">Specificare <see cref="F:System.Threading.Timeout.Infinite" /> per disabilitare la segnalazione periodica.</span><span class="sxs-lookup"><span data-stu-id="467c7-161">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="467c7-162">Consente di inizializzare una nuova istanza della classe <see langword="Timer" /> utilizzando un integer con segno a 32 bit per specificare l'intervallo di tempo.</span><span class="sxs-lookup"><span data-stu-id="467c7-162">Initializes a new instance of the <see langword="Timer" /> class, using a 32-bit signed integer to specify the time interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467c7-163">Il delegato specificato per il `callback` parametro viene richiamato una volta dopo `dueTime` scade e successivamente ogni volta che il `period` dell'intervallo di tempo.</span><span class="sxs-lookup"><span data-stu-id="467c7-163">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="467c7-164">Se `dueTime` è zero (0), `callback` viene richiamato immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-164">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="467c7-165">Se `dueTime` è <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` non viene richiamato; il timer è disabilitato, ma possono essere riabilitato tramite la chiamata di <xref:System.Threading.Timer.Change%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467c7-165">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="467c7-166">Poiché il <xref:System.Threading.Timer> classe ha la stessa risoluzione l'orologio di sistema, è di circa 15 millisecondi nei sistemi Windows 7 e Windows 8, il `callback` delegato viene eseguito a intervalli definiti per la risoluzione del clock di sistema se `period`è minore rispetto alla risoluzione del clock di sistema.</span><span class="sxs-lookup"><span data-stu-id="467c7-166">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="467c7-167">Se `period` è zero (0) o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> e `dueTime` non <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` viene richiamato una volta; il comportamento periodico del timer è disabilitato, ma può essere riattivato tramite il <xref:System.Threading.Timer.Change%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467c7-167">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="467c7-168">Il metodo specificato per `callback` deve essere rientrante, perché viene chiamato su <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="467c7-168">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="467c7-169">Il metodo può essere eseguito simultaneamente in due thread di pool di thread se l'intervallo del timer è inferiore al tempo necessario per eseguire il metodo, o se tutti i thread del pool sono in uso e il metodo viene accodato più volte.</span><span class="sxs-lookup"><span data-stu-id="467c7-169">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467c7-170">Esempio di codice seguente viene illustrato come creare un `TimerCallback` delegato e inizializzare una nuova istanza di `Timer` classe.</span><span class="sxs-lookup"><span data-stu-id="467c7-170">The following code example shows how to create a `TimerCallback` delegate and initialize a new instance of the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="467c7-171">Il parametro <paramref name="dueTime" /> o <paramref name="period" /> è negativo e non è uguale a <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-171">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="467c7-172">Il valore del parametro <paramref name="callback" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-172">The <paramref name="callback" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, long dueTime, long period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, int64 dueTime, int64 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As Long, period As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, long dueTime, long period);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.Int64" />
        <Parameter Name="period" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="467c7-173">Delegato <see cref="T:System.Threading.TimerCallback" /> che rappresenta un metodo da eseguire.</span><span class="sxs-lookup"><span data-stu-id="467c7-173">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="467c7-174">Oggetto contenente informazioni che devono essere utilizzate dal metodo di callback, oppure <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-174">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="467c7-175">Intervallo di attesa, in millisecondi, prima che venga chiamato <c>callback</c>.</span><span class="sxs-lookup"><span data-stu-id="467c7-175">The amount of time to delay before <c>callback</c> is invoked, in milliseconds.</span></span> <span data-ttu-id="467c7-176">Specificare <see cref="F:System.Threading.Timeout.Infinite" /> per impedire l'avvio del timer.</span><span class="sxs-lookup"><span data-stu-id="467c7-176">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span></span> <span data-ttu-id="467c7-177">Specificare zero (0) per avviare il timer immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-177">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="467c7-178">Intervallo di tempo, in millisecondi, tra le chiamate di <c>callback</c>.</span><span class="sxs-lookup"><span data-stu-id="467c7-178">The time interval between invocations of <c>callback</c>, in milliseconds.</span></span> <span data-ttu-id="467c7-179">Specificare <see cref="F:System.Threading.Timeout.Infinite" /> per disabilitare la segnalazione periodica.</span><span class="sxs-lookup"><span data-stu-id="467c7-179">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="467c7-180">Consente l'inizializzazione di una nuova istanza della classe <see langword="Timer" /> utilizzando integer con segno a 64 bit per misurare gli intervalli di tempo.</span><span class="sxs-lookup"><span data-stu-id="467c7-180">Initializes a new instance of the <see langword="Timer" /> class, using 64-bit signed integers to measure time intervals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467c7-181">Il delegato specificato per il `callback` parametro viene richiamato una volta dopo `dueTime` scade e successivamente ogni volta che il `period` dell'intervallo di tempo.</span><span class="sxs-lookup"><span data-stu-id="467c7-181">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="467c7-182">Se `dueTime` è zero (0), `callback` viene richiamato immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-182">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="467c7-183">Se `dueTime` è <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` non viene richiamato; il timer è disabilitato, ma possono essere riabilitato tramite la chiamata di <xref:System.Threading.Timer.Change%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467c7-183">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="467c7-184">Poiché il <xref:System.Threading.Timer> classe ha la stessa risoluzione l'orologio di sistema, è di circa 15 millisecondi nei sistemi Windows 7 e Windows 8, il `callback` delegato viene eseguito a intervalli definiti per la risoluzione del clock di sistema se `period`è minore rispetto alla risoluzione del clock di sistema.</span><span class="sxs-lookup"><span data-stu-id="467c7-184">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="467c7-185">Se `period` è zero (0) o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> e `dueTime` non <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` viene richiamato una volta; il comportamento periodico del timer è disabilitato, ma può essere riattivato tramite il <xref:System.Threading.Timer.Change%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467c7-185">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="467c7-186">Il metodo specificato per `callback` deve essere rientrante, perché viene chiamato su <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="467c7-186">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="467c7-187">Il metodo può essere eseguito simultaneamente in due thread di pool di thread se l'intervallo del timer è inferiore al tempo necessario per eseguire il metodo, o se tutti i thread del pool sono in uso e il metodo viene accodato più volte.</span><span class="sxs-lookup"><span data-stu-id="467c7-187">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="467c7-188">Il parametro <paramref name="dueTime" /> o <paramref name="period" /> è negativo e non è uguale a <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-188">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="467c7-189">Il parametro <paramref name="dueTime" /> o <paramref name="period" /> è maggiore di 4294967294.</span><span class="sxs-lookup"><span data-stu-id="467c7-189">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is greater than 4294967294.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, valuetype System.TimeSpan dueTime, valuetype System.TimeSpan period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As TimeSpan, period As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, TimeSpan dueTime, TimeSpan period);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.TimeSpan" />
        <Parameter Name="period" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="467c7-190">Delegato che rappresenta un metodo da eseguire.</span><span class="sxs-lookup"><span data-stu-id="467c7-190">A delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="467c7-191">Oggetto contenente informazioni che devono essere utilizzate dal metodo di callback, oppure <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-191">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="467c7-192">Intervallo di attesa prima che il parametro <c>callback</c> chiami i relativi metodi.</span><span class="sxs-lookup"><span data-stu-id="467c7-192">The amount of time to delay before the <c>callback</c> parameter invokes its methods.</span></span> <span data-ttu-id="467c7-193">Specificare il valore uno negativo (-1) in millisecondi per impedire l'avvio del timer.</span><span class="sxs-lookup"><span data-stu-id="467c7-193">Specify negative one (-1) milliseconds to prevent the timer from starting.</span></span> <span data-ttu-id="467c7-194">Specificare zero (0) per avviare il timer immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-194">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="467c7-195">Intervallo di tempo tra le chiamate dei metodi a cui fa riferimento <c>callback</c>.</span><span class="sxs-lookup"><span data-stu-id="467c7-195">The time interval between invocations of the methods referenced by <c>callback</c>.</span></span> <span data-ttu-id="467c7-196">Specificare il valore uno negativo (-1) in millisecondi per disabilitare la segnalazione periodica.</span><span class="sxs-lookup"><span data-stu-id="467c7-196">Specify negative one (-1) milliseconds to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="467c7-197">Consente l'inizializzazione di una nuova istanza della classe <see langword="Timer" /> utilizzando i valori <see cref="T:System.TimeSpan" /> per misurare gli intervalli di tempo.</span><span class="sxs-lookup"><span data-stu-id="467c7-197">Initializes a new instance of the <see langword="Timer" /> class, using <see cref="T:System.TimeSpan" /> values to measure time intervals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467c7-198">Il delegato specificato per il `callback` parametro viene richiamato una volta dopo `dueTime` scade e successivamente ogni volta che il `period` dell'intervallo di tempo.</span><span class="sxs-lookup"><span data-stu-id="467c7-198">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="467c7-199">Se `dueTime` è zero (0), `callback` viene richiamato immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-199">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="467c7-200">Se `dueTime` è uno negativo (-1) in millisecondi, `callback` non viene richiamato; il timer è disabilitato, ma possono essere riabilitato tramite la chiamata di <xref:System.Threading.Timer.Change%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467c7-200">If `dueTime` is negative one (-1) milliseconds, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="467c7-201">Poiché il <xref:System.Threading.Timer> classe ha la stessa risoluzione l'orologio di sistema, è di circa 15 millisecondi nei sistemi Windows 7 e Windows 8, il `callback` delegato viene eseguito a intervalli definiti per la risoluzione del clock di sistema se `period`è minore rispetto alla risoluzione del clock di sistema.</span><span class="sxs-lookup"><span data-stu-id="467c7-201">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="467c7-202">Se `period` è zero (0) o negativo (-1) in millisecondi e `dueTime` è positivo, `callback` viene richiamato una volta; il comportamento periodico del timer è disabilitato, ma può essere riattivato tramite il <xref:System.Threading.Timer.Change%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467c7-202">If `period` is zero (0) or negative one (-1) milliseconds and `dueTime` is positive, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="467c7-203">Il metodo specificato per `callback` deve essere rientrante, perché viene chiamato su <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="467c7-203">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="467c7-204">Il metodo può essere eseguito simultaneamente in due thread di pool di thread se l'intervallo del timer è inferiore al tempo necessario per eseguire il metodo, o se tutti i thread del pool sono in uso e il metodo viene accodato più volte.</span><span class="sxs-lookup"><span data-stu-id="467c7-204">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467c7-205">Esempio di codice seguente viene illustrato come creare un `TimerCallback` delegato e inizializzare una nuova istanza di `Timer` classe.</span><span class="sxs-lookup"><span data-stu-id="467c7-205">The following code example shows how to create a `TimerCallback` delegate and initialize a new instance of the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.Timer2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer2/CS/source2.cs#1)]
 [!code-vb[System.Threading.Timer2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="467c7-206">Il numero di millisecondi nel valore di <paramref name="dueTime" /> o <paramref name="period" /> è negativo e non è uguale a <see cref="F:System.Threading.Timeout.Infinite" />, oppure è maggiore di <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-206">The number of milliseconds in the value of <paramref name="dueTime" /> or <paramref name="period" /> is negative and not equal to <see cref="F:System.Threading.Timeout.Infinite" />, or is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="467c7-207">Il valore del parametro <paramref name="callback" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-207">The <paramref name="callback" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, uint dueTime, uint period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, unsigned int32 dueTime, unsigned int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As UInteger, period As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, System::UInt32 dueTime, System::UInt32 period);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.UInt32" />
        <Parameter Name="period" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="467c7-208">Delegato che rappresenta un metodo da eseguire.</span><span class="sxs-lookup"><span data-stu-id="467c7-208">A delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="467c7-209">Oggetto contenente informazioni che devono essere utilizzate dal metodo di callback, oppure <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-209">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="467c7-210">Intervallo di attesa, in millisecondi, prima che venga chiamato <c>callback</c>.</span><span class="sxs-lookup"><span data-stu-id="467c7-210">The amount of time to delay before <c>callback</c> is invoked, in milliseconds.</span></span> <span data-ttu-id="467c7-211">Specificare <see cref="F:System.Threading.Timeout.Infinite" /> per impedire l'avvio del timer.</span><span class="sxs-lookup"><span data-stu-id="467c7-211">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span></span> <span data-ttu-id="467c7-212">Specificare zero (0) per avviare il timer immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-212">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="467c7-213">Intervallo di tempo, in millisecondi, tra le chiamate di <c>callback</c>.</span><span class="sxs-lookup"><span data-stu-id="467c7-213">The time interval between invocations of <c>callback</c>, in milliseconds.</span></span> <span data-ttu-id="467c7-214">Specificare <see cref="F:System.Threading.Timeout.Infinite" /> per disabilitare la segnalazione periodica.</span><span class="sxs-lookup"><span data-stu-id="467c7-214">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="467c7-215">Consente l'inizializzazione di una nuova istanza della classe <see langword="Timer" /> utilizzando integer senza segno a 32 bit per misurare gli intervalli di tempo.</span><span class="sxs-lookup"><span data-stu-id="467c7-215">Initializes a new instance of the <see langword="Timer" /> class, using 32-bit unsigned integers to measure time intervals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467c7-216">Il delegato specificato per il `callback` parametro viene richiamato una volta dopo `dueTime` scade e successivamente ogni volta che il `period` dell'intervallo di tempo.</span><span class="sxs-lookup"><span data-stu-id="467c7-216">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="467c7-217">Se `dueTime` è zero (0), `callback` viene richiamato immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-217">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="467c7-218">Se `dueTime` è <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` non viene richiamato; il timer è disabilitato, ma possono essere riabilitato tramite la chiamata di <xref:System.Threading.Timer.Change%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467c7-218">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="467c7-219">Poiché il <xref:System.Threading.Timer> classe ha la stessa risoluzione l'orologio di sistema, è di circa 15 millisecondi nei sistemi Windows 7 e Windows 8, il `callback` delegato viene eseguito a intervalli definiti per la risoluzione del clock di sistema se `period`è minore rispetto alla risoluzione del clock di sistema.</span><span class="sxs-lookup"><span data-stu-id="467c7-219">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="467c7-220">Se `period` è zero (0) o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> e `dueTime` non <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` viene richiamato una volta; il comportamento periodico del timer è disabilitato, ma può essere riattivato tramite il <xref:System.Threading.Timer.Change%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467c7-220">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="467c7-221">Il metodo specificato per `callback` deve essere rientrante, perché viene chiamato su <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="467c7-221">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="467c7-222">Il metodo può essere eseguito simultaneamente in due thread di pool di thread se l'intervallo del timer è inferiore al tempo necessario per eseguire il metodo, o se tutti i thread del pool sono in uso e il metodo viene accodato più volte.</span><span class="sxs-lookup"><span data-stu-id="467c7-222">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="467c7-223">Il parametro <paramref name="dueTime" /> o <paramref name="period" /> è negativo e non è uguale a <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-223">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="467c7-224">Il valore del parametro <paramref name="callback" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-224">The <paramref name="callback" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Change">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467c7-225">Modifica l'ora di inizio e l'intervallo tra le chiamate dei metodi di un timer.</span><span class="sxs-lookup"><span data-stu-id="467c7-225">Changes the start time and the interval between method invocations for a timer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (int dueTime, int period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(int32 dueTime, int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As Integer, period As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(int dueTime, int period);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.Int32" />
        <Parameter Name="period" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="467c7-226">Intervallo di attesa, in millisecondi, prima di richiamare il metodo di callback specificato quando <see cref="T:System.Threading.Timer" /> è stato costruito.</span><span class="sxs-lookup"><span data-stu-id="467c7-226">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="467c7-227">Specificare <see cref="F:System.Threading.Timeout.Infinite" /> per impedire il riavvio del timer.</span><span class="sxs-lookup"><span data-stu-id="467c7-227">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span></span> <span data-ttu-id="467c7-228">Specificare zero (0) per riavviare il timer immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-228">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="467c7-229">Intervallo di tempo, in millisecondi, tra le chiamate del metodo di callback specificato quando è stato costruito <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-229">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="467c7-230">Specificare <see cref="F:System.Threading.Timeout.Infinite" /> per disabilitare la segnalazione periodica.</span><span class="sxs-lookup"><span data-stu-id="467c7-230">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="467c7-231">Modifica l'ora di inizio e l'intervallo tra le chiamate dei metodi di un timer, usando interi con segno a 32 bit per misurare gli intervalli di tempo.</span><span class="sxs-lookup"><span data-stu-id="467c7-231">Changes the start time and the interval between method invocations for a timer, using 32-bit signed integers to measure time intervals.</span></span></summary>
        <returns>
          <span data-ttu-id="467c7-232"><see langword="true" /> se il timer è stato aggiornato correttamente, in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-232"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467c7-233">Il metodo di callback viene richiamato una volta dopo `dueTime` allo scadere dell'intervallo e successivamente ogni volta l'intervallo di tempo specificato da `period` scade.</span><span class="sxs-lookup"><span data-stu-id="467c7-233">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="467c7-234">Se `dueTime` è zero (0), il metodo di callback viene richiamato immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-234">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="467c7-235">Se `dueTime` è <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, il metodo di callback non viene mai richiamato; il timer è disabilitato, ma può essere riattivato chiamando <xref:System.Threading.Timer.Change%2A> e specificando un valore positivo per `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="467c7-235">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="467c7-236">Se `period` è zero (0) o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, e `dueTime` non <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, il metodo di callback viene richiamato una volta; il comportamento periodico del timer è disabilitato, ma può essere riattivato chiamando <xref:System.Threading.Timer.Change%2A> e specificando un valore positivo per `period`.</span><span class="sxs-lookup"><span data-stu-id="467c7-236">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="467c7-237">Il <xref:System.Threading.Timer.Change%2A> metodo può essere chiamato dal <xref:System.Threading.TimerCallback> delegato.</span><span class="sxs-lookup"><span data-stu-id="467c7-237">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467c7-238">Esempio di codice seguente viene illustrato come avviare un `Timer` e, dopo un numero di set di chiamate, modificarne il periodo.</span><span class="sxs-lookup"><span data-stu-id="467c7-238">The following code example demonstrates how to start a `Timer` and, after a set number of invocations, change its period.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="467c7-239">L'istanza <see cref="T:System.Threading.Timer" /> è già stata eliminata.</span><span class="sxs-lookup"><span data-stu-id="467c7-239">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="467c7-240">Il parametro <paramref name="dueTime" /> o <paramref name="period" /> è negativo e non è uguale a <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-240">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (long dueTime, long period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(int64 dueTime, int64 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As Long, period As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(long dueTime, long period);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.Int64" />
        <Parameter Name="period" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="467c7-241">Intervallo di attesa, in millisecondi, prima di richiamare il metodo di callback specificato quando <see cref="T:System.Threading.Timer" /> è stato costruito.</span><span class="sxs-lookup"><span data-stu-id="467c7-241">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="467c7-242">Specificare <see cref="F:System.Threading.Timeout.Infinite" /> per impedire il riavvio del timer.</span><span class="sxs-lookup"><span data-stu-id="467c7-242">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span></span> <span data-ttu-id="467c7-243">Specificare zero (0) per riavviare il timer immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-243">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="467c7-244">Intervallo di tempo, in millisecondi, tra le chiamate del metodo di callback specificato quando è stato costruito <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-244">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="467c7-245">Specificare <see cref="F:System.Threading.Timeout.Infinite" /> per disabilitare la segnalazione periodica.</span><span class="sxs-lookup"><span data-stu-id="467c7-245">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="467c7-246">Modifica l'ora di inizio e l'intervallo tra le chiamate dei metodi di un timer, usando interi con segno a 64 bit per misurare gli intervalli di tempo.</span><span class="sxs-lookup"><span data-stu-id="467c7-246">Changes the start time and the interval between method invocations for a timer, using 64-bit signed integers to measure time intervals.</span></span></summary>
        <returns>
          <span data-ttu-id="467c7-247"><see langword="true" /> se il timer è stato aggiornato correttamente, in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-247"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467c7-248">Il metodo di callback viene richiamato una volta dopo `dueTime` allo scadere dell'intervallo e successivamente ogni volta l'intervallo di tempo specificato da `period` scade.</span><span class="sxs-lookup"><span data-stu-id="467c7-248">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="467c7-249">Se `dueTime` è zero (0), il metodo di callback viene richiamato immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-249">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="467c7-250">Se `dueTime` è <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, il metodo di callback non viene mai richiamato; il timer è disabilitato, ma può essere riattivato chiamando <xref:System.Threading.Timer.Change%2A> e specificando un valore positivo per `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="467c7-250">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="467c7-251">Se `period` è zero (0) o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, e `dueTime` non <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, il metodo di callback viene richiamato una volta; il comportamento periodico del timer è disabilitato, ma può essere riattivato chiamando <xref:System.Threading.Timer.Change%2A> e specificando un valore positivo per `period`.</span><span class="sxs-lookup"><span data-stu-id="467c7-251">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="467c7-252">Il <xref:System.Threading.Timer.Change%2A> metodo può essere chiamato dal <xref:System.Threading.TimerCallback> delegato.</span><span class="sxs-lookup"><span data-stu-id="467c7-252">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="467c7-253">L'istanza <see cref="T:System.Threading.Timer" /> è già stata eliminata.</span><span class="sxs-lookup"><span data-stu-id="467c7-253">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="467c7-254">Il parametro <paramref name="dueTime" /> o <paramref name="period" /> è minore di -1.</span><span class="sxs-lookup"><span data-stu-id="467c7-254">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is less than -1.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="467c7-255">Il parametro <paramref name="dueTime" /> o <paramref name="period" /> è maggiore di 4294967294.</span><span class="sxs-lookup"><span data-stu-id="467c7-255">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is greater than 4294967294.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(valuetype System.TimeSpan dueTime, valuetype System.TimeSpan period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As TimeSpan, period As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(TimeSpan dueTime, TimeSpan period);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.TimeSpan" />
        <Parameter Name="period" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="467c7-256">Parametro <see cref="T:System.TimeSpan" /> che rappresenta l'intervallo di attesa prima di richiamare il metodo di callback specificato quando <see cref="T:System.Threading.Timer" /> è stato costruito.</span><span class="sxs-lookup"><span data-stu-id="467c7-256">A <see cref="T:System.TimeSpan" /> representing the amount of time to delay before invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed.</span></span> <span data-ttu-id="467c7-257">Specificare il valore uno negativo (-1) in millisecondi per impedire il riavvio del timer.</span><span class="sxs-lookup"><span data-stu-id="467c7-257">Specify negative one (-1) milliseconds to prevent the timer from restarting.</span></span> <span data-ttu-id="467c7-258">Specificare zero (0) per riavviare il timer immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-258">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="467c7-259">Intervallo di tempo tra le chiamate del metodo di callback specificato quando è stato costruito <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-259">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed.</span></span> <span data-ttu-id="467c7-260">Specificare il valore uno negativo (-1) in millisecondi per disabilitare la segnalazione periodica.</span><span class="sxs-lookup"><span data-stu-id="467c7-260">Specify negative one (-1) milliseconds to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="467c7-261">Consente di modificare il tempo di attesa e gli intervalli tra i richiami di un timer utilizzando i valori di <see cref="T:System.TimeSpan" /> per misurare gli intervalli di tempo.</span><span class="sxs-lookup"><span data-stu-id="467c7-261">Changes the start time and the interval between method invocations for a timer, using <see cref="T:System.TimeSpan" /> values to measure time intervals.</span></span></summary>
        <returns>
          <span data-ttu-id="467c7-262"><see langword="true" /> se il timer è stato aggiornato correttamente, in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-262"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467c7-263">Il metodo di callback viene richiamato una volta dopo `dueTime` allo scadere dell'intervallo e successivamente ogni volta l'intervallo di tempo specificato da `period` scade.</span><span class="sxs-lookup"><span data-stu-id="467c7-263">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="467c7-264">Se `dueTime` è zero (0), il metodo di callback viene richiamato immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-264">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="467c7-265">Se `dueTime` è negativo (-1) in millisecondi, il metodo di callback non viene mai richiamato; il timer è disabilitato, ma può essere riattivato chiamando <xref:System.Threading.Timer.Change%2A> e specificando un valore positivo per `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="467c7-265">If `dueTime` is negative one (-1) milliseconds, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="467c7-266">Se `period` è zero (0) o uno negativo (-1) in millisecondi, e `dueTime` è positivo, il metodo di callback viene richiamato una volta; il comportamento periodico del timer è disabilitato, ma può essere riattivato chiamando <xref:System.Threading.Timer.Change%2A> e specificando un valore maggiore di zero per `period`.</span><span class="sxs-lookup"><span data-stu-id="467c7-266">If `period` is zero (0) or negative one (-1) milliseconds, and `dueTime` is positive, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a value greater than zero for `period`.</span></span>  
  
 <span data-ttu-id="467c7-267">Il <xref:System.Threading.Timer.Change%2A> metodo può essere chiamato dal <xref:System.Threading.TimerCallback> delegato.</span><span class="sxs-lookup"><span data-stu-id="467c7-267">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467c7-268">Esempio di codice seguente viene illustrato come avviare un `Timer` e, dopo un numero di set di chiamate, modificarne il periodo.</span><span class="sxs-lookup"><span data-stu-id="467c7-268">The following code example demonstrates how to start a `Timer` and, after a set number of invocations, change its period.</span></span>  
  
 [!code-cpp[System.Threading.Timer2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.Timer2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer2/CS/source2.cs#1)]
 [!code-vb[System.Threading.Timer2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="467c7-269">L'istanza <see cref="T:System.Threading.Timer" /> è già stata eliminata.</span><span class="sxs-lookup"><span data-stu-id="467c7-269">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="467c7-270">Il valore del parametro <paramref name="dueTime" /> o <paramref name="period" /> è inferiore a -1, in millisecondi.</span><span class="sxs-lookup"><span data-stu-id="467c7-270">The <paramref name="dueTime" /> or <paramref name="period" /> parameter, in milliseconds, is less than -1.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="467c7-271">Il valore del parametro <paramref name="dueTime" /> o <paramref name="period" /> è superiore a 4294967294, in millisecondi.</span><span class="sxs-lookup"><span data-stu-id="467c7-271">The <paramref name="dueTime" /> or <paramref name="period" /> parameter, in milliseconds, is greater than 4294967294.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (uint dueTime, uint period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(unsigned int32 dueTime, unsigned int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As UInteger, period As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(System::UInt32 dueTime, System::UInt32 period);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.UInt32" />
        <Parameter Name="period" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="467c7-272">Intervallo di attesa, in millisecondi, prima di richiamare il metodo di callback specificato quando <see cref="T:System.Threading.Timer" /> è stato costruito.</span><span class="sxs-lookup"><span data-stu-id="467c7-272">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="467c7-273">Specificare <see cref="F:System.Threading.Timeout.Infinite" /> per impedire il riavvio del timer.</span><span class="sxs-lookup"><span data-stu-id="467c7-273">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span></span> <span data-ttu-id="467c7-274">Specificare zero (0) per riavviare il timer immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-274">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="467c7-275">Intervallo di tempo, in millisecondi, tra le chiamate del metodo di callback specificato quando è stato costruito <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-275">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="467c7-276">Specificare <see cref="F:System.Threading.Timeout.Infinite" /> per disabilitare la segnalazione periodica.</span><span class="sxs-lookup"><span data-stu-id="467c7-276">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="467c7-277">Modifica l'ora di inizio e l'intervallo tra le chiamate dei metodi di un timer, usando interi senza segno a 32 bit per misurare gli intervalli di tempo.</span><span class="sxs-lookup"><span data-stu-id="467c7-277">Changes the start time and the interval between method invocations for a timer, using 32-bit unsigned integers to measure time intervals.</span></span></summary>
        <returns>
          <span data-ttu-id="467c7-278"><see langword="true" /> se il timer è stato aggiornato correttamente, in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-278"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467c7-279">Il metodo di callback viene richiamato una volta dopo `dueTime` allo scadere dell'intervallo e successivamente ogni volta l'intervallo di tempo specificato da `period` scade.</span><span class="sxs-lookup"><span data-stu-id="467c7-279">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="467c7-280">Se `dueTime` è zero (0), il metodo di callback viene richiamato immediatamente.</span><span class="sxs-lookup"><span data-stu-id="467c7-280">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="467c7-281">Se `dueTime` è <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, il metodo di callback non viene mai richiamato; il timer è disabilitato, ma può essere riattivato chiamando <xref:System.Threading.Timer.Change%2A> e specificando un valore positivo per `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="467c7-281">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="467c7-282">Se `period` è zero (0) o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, e `dueTime` non <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, il metodo di callback viene richiamato una volta; il comportamento periodico del timer è disabilitato, ma può essere riattivato chiamando <xref:System.Threading.Timer.Change%2A> e specificando un valore positivo per `period`.</span><span class="sxs-lookup"><span data-stu-id="467c7-282">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="467c7-283">Il <xref:System.Threading.Timer.Change%2A> metodo può essere chiamato dal <xref:System.Threading.TimerCallback> delegato.</span><span class="sxs-lookup"><span data-stu-id="467c7-283">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="467c7-284">L'istanza <see cref="T:System.Threading.Timer" /> è già stata eliminata.</span><span class="sxs-lookup"><span data-stu-id="467c7-284">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467c7-285">Consente di rilasciare tutte le risorse utilizzate dall'istanza corrente di <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-285">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="467c7-286">Consente di rilasciare tutte le risorse utilizzate dall'istanza corrente di <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-286">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467c7-287">La chiamata `Dispose` le risorse utilizzate da di <xref:System.Threading.Timer> riallocazione per altri scopi.</span><span class="sxs-lookup"><span data-stu-id="467c7-287">Calling `Dispose` allows the resources used by the <xref:System.Threading.Timer> to be reallocated for other purposes.</span></span> <span data-ttu-id="467c7-288">Per ulteriori informazioni su `Dispose`, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="467c7-288">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="467c7-289">I callback possono verificarsi dopo il <xref:System.Threading.Timer.Dispose> overload del metodo è stato chiamato, perché il timer accoda i callback per l'esecuzione dal thread del pool.</span><span class="sxs-lookup"><span data-stu-id="467c7-289">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="467c7-290">È possibile utilizzare il <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> overload del metodo per attendere il completamento di tutti i callback.</span><span class="sxs-lookup"><span data-stu-id="467c7-290">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467c7-291">Esempio di codice seguente viene illustrato come liberare le risorse utilizzate da un `Timer`.</span><span class="sxs-lookup"><span data-stu-id="467c7-291">The following code example shows how to free the resources held by a `Timer`.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public bool Dispose (System.Threading.WaitHandle notifyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Dispose(class System.Threading.WaitHandle notifyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dispose (notifyObject As WaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Dispose(System::Threading::WaitHandle ^ notifyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notifyObject" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="notifyObject"><span data-ttu-id="467c7-292"><see cref="T:System.Threading.WaitHandle" /> da segnalare quando <see langword="Timer" /> è stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="467c7-292">The <see cref="T:System.Threading.WaitHandle" /> to be signaled when the <see langword="Timer" /> has been disposed of.</span></span></param>
        <summary><span data-ttu-id="467c7-293">Consente di rilasciare tutte le risorse utilizzate dall'istanza corrente di <see cref="T:System.Threading.Timer" /> segnalando l'ora dell'eliminazione del timer.</span><span class="sxs-lookup"><span data-stu-id="467c7-293">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" /> and signals when the timer has been disposed of.</span></span></summary>
        <returns>
          <span data-ttu-id="467c7-294">Viene restituito <see langword="true" /> se la funzione viene eseguita correttamente; in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-294"><see langword="true" /> if the function succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467c7-295">La chiamata `Dispose` le risorse utilizzate da di <xref:System.Threading.Timer> riallocazione per altri scopi.</span><span class="sxs-lookup"><span data-stu-id="467c7-295">Calling `Dispose` allows the resources used by the <xref:System.Threading.Timer> to be reallocated for other purposes.</span></span> <span data-ttu-id="467c7-296">Per ulteriori informazioni su `Dispose`, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="467c7-296">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 <span data-ttu-id="467c7-297">Quando questo metodo viene completato, viene segnalato il <xref:System.Threading.WaitHandle> specificato per il `notifyObject` parametro. Utilizzare questo overload del metodo di <xref:System.Threading.Timer.Dispose%2A> metodo se si desidera essere in grado di bloccare fino a quando non si è certi che il timer è stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="467c7-297">When this method completes, it signals the <xref:System.Threading.WaitHandle> specified by the `notifyObject` parameter.Use this overload of the <xref:System.Threading.Timer.Dispose%2A> method if you want to be able to block until you are certain that the timer has been disposed.</span></span> <span data-ttu-id="467c7-298">Il timer non viene eliminato fino al completamento di tutte le richiamate attualmente in coda.</span><span class="sxs-lookup"><span data-stu-id="467c7-298">The timer is not disposed until all currently queued callbacks have completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="467c7-299">Se il callback utilizza il <xref:System.Threading.Timer.Change%2A> per impostare il `dueTime` parametro a zero, che può verificarsi una race condition quando il <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> overload del metodo viene chiamato: se il timer Accoda un callback di nuovo prima il <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> overload del metodo rileva che non esiste alcun callback non vengono accodati, <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> continua a bloccare; in caso contrario, il timer è stato eliminato durante il callback nuovo accodato e un <xref:System.ObjectDisposedException> viene generata quando viene chiamato il callback di nuovo il <xref:System.Threading.Timer.Change%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467c7-299">If the callback uses the <xref:System.Threading.Timer.Change%2A> method to set the `dueTime` parameter to zero, a race condition can occur when the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload is called: If the timer queues a new callback before the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload detects that there are no callbacks queued, <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> continues to block; otherwise, the timer is disposed while the new callback is being queued, and an <xref:System.ObjectDisposedException> is thrown when the new callback calls the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="467c7-300">Il valore del parametro <paramref name="notifyObject" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467c7-300">The <paramref name="notifyObject" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>