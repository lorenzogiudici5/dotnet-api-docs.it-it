<Type Name="ThreadLocal&lt;T&gt;" FullName="System.Threading.ThreadLocal&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6323fcea1edf41d4f6e3331b766846c3cfd2274b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36606036" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ThreadLocal&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadLocal`1&lt;T&gt; extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadLocal`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadLocal(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ThreadLocal : IDisposable" />
  <TypeSignature Language="F#" Value="type ThreadLocal&lt;'T&gt; = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("IsValueCreated={IsValueCreated}, Value={ValueForDebugDisplay}, Count={ValuesCountForDebugDisplay}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.SystemThreading_ThreadLocalDebugView`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="25921-101">Specifica il tipo di dati archiviati per thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="25921-101">Specifies the type of data stored per-thread.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="25921-102">Consente l'archiviazione dei dati nella memoria locale dei thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="25921-102">Provides thread-local storage of data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="25921-103">Nell'esempio riportato di seguito viene illustrato come usare <xref:System.Threading.ThreadLocal%601>:</span><span class="sxs-lookup"><span data-stu-id="25921-103">The following example shows how to use <xref:System.Threading.ThreadLocal%601>:</span></span>  
  
 [!code-csharp[System.Threading.ThreadLocal#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.threadlocal/cs/threadlocal.cs#01)]
 [!code-vb[System.Threading.ThreadLocal#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.threadlocal/vb/threadlocal.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="25921-104">Ad eccezione di <see cref="M:System.Threading.ThreadLocal`1.Dispose" />, tutti pubblici e membri protetti delle <see cref="T:System.Threading.ThreadLocal`1" /> sono thread-safe e possono essere utilizzate contemporaneamente da più thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="25921-104">With the exception of <see cref="M:System.Threading.ThreadLocal`1.Dispose" />, all public and protected members of <see cref="T:System.Threading.ThreadLocal`1" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
      <span data-ttu-id="25921-105">Il valore restituito per il <see cref="P:System.Threading.ThreadLocal`1.Value" /> e <see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" /> proprietà è specifico per il thread su cui si accede alla proprietà.</span>
      <span class="sxs-lookup">
        <span data-stu-id="25921-105">The value returned for the <see cref="P:System.Threading.ThreadLocal`1.Value" /> and <see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" /> properties is specific for the thread on which the property is accessed.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Lazy`1" />
    <altmember cref="T:System.Threading.AsyncLocal`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="25921-106">Inizializza un'istanza di <see cref="T:System.Threading.ThreadLocal`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-106">Initializes a <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25921-107">Inizializza l'istanza di <see cref="T:System.Threading.ThreadLocal`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-107">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25921-108">Il valore predefinito di `T` utilizzato per inizializzare l'istanza quando <xref:System.Threading.ThreadLocal%601.Value%2A> esegue l'accesso per la prima volta.</span><span class="sxs-lookup"><span data-stu-id="25921-108">The default value of `T` is used to initialize the instance when <xref:System.Threading.ThreadLocal%601.Value%2A> is accessed for the first time.</span></span>  
  
 <span data-ttu-id="25921-109">Questo costruttore è equivalente alla chiamata di <xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29> costruttore con un valore di `false` per il `trackAllValues` argomento.</span><span class="sxs-lookup"><span data-stu-id="25921-109">This constructor is equivalent to calling the <xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29> constructor with a value of `false` for the `trackAllValues` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (bool trackAllValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool trackAllValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (trackAllValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(bool trackAllValues);" />
      <MemberSignature Language="F#" Value="new System.Threading.ThreadLocal&lt;'T&gt; : bool -&gt; System.Threading.ThreadLocal&lt;'T&gt;" Usage="new System.Threading.ThreadLocal&lt;'T&gt; trackAllValues" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="trackAllValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="trackAllValues">
          <span data-ttu-id="25921-110">
            <see langword="true" /> per tenere traccia di tutti i valori impostati sull'istanza ed esporli tramite la proprietà <see cref="P:System.Threading.ThreadLocal`1.Values" />. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-110">
              <see langword="true" /> to track all values set on the instance and expose them through the <see cref="P:System.Threading.ThreadLocal`1.Values" /> property; <see langword="false" /> otherwise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25921-111">Inizializza l'istanza di <see cref="T:System.Threading.ThreadLocal`1" /> e specifica se tutti i valori sono accessibili da qualsiasi thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-111">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance and specifies whether all values are accessible from any thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25921-112">Se `trackAllValues` è `false`, solo il valore di questa istanza per il thread corrente è accessibile.</span><span class="sxs-lookup"><span data-stu-id="25921-112">If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible.</span></span> <span data-ttu-id="25921-113">Tentativo di utilizzare il <xref:System.Threading.ThreadLocal%601.Values%2A> genera i valori delle proprietà per recuperare tutti un <xref:System.InvalidOperationException> (eccezione).</span><span class="sxs-lookup"><span data-stu-id="25921-113">Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (Func&lt;T&gt; valueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!T&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (valueFactory As Func(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(Func&lt;T&gt; ^ valueFactory);" />
      <MemberSignature Language="F#" Value="new System.Threading.ThreadLocal&lt;'T&gt; : Func&lt;'T&gt; -&gt; System.Threading.ThreadLocal&lt;'T&gt;" Usage="new System.Threading.ThreadLocal&lt;'T&gt; valueFactory" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="valueFactory" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="valueFactory">
          <span data-ttu-id="25921-114">Oggetto <see cref="T:System.Func`1" /> richiamato per produrre un valore con inizializzazione differita quando si prova a recuperare l'oggetto <see cref="P:System.Threading.ThreadLocal`1.Value" /> senza che sia stato inizializzato in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-114">The  <see cref="T:System.Func`1" /> invoked to produce a lazily-initialized value when an attempt is made to retrieve <see cref="P:System.Threading.ThreadLocal`1.Value" /> without it having been previously initialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25921-115">Inizializza l'istanza di <see cref="T:System.Threading.ThreadLocal`1" /> con la funzione <paramref name="valueFactory" /> specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-115">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance with the specified <paramref name="valueFactory" /> function.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25921-116">
            <paramref name="valueFactory" /> è un riferimento null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-116">
              <paramref name="valueFactory" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (Func&lt;T&gt; valueFactory, bool trackAllValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!T&gt; valueFactory, bool trackAllValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (valueFactory As Func(Of T), trackAllValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(Func&lt;T&gt; ^ valueFactory, bool trackAllValues);" />
      <MemberSignature Language="F#" Value="new System.Threading.ThreadLocal&lt;'T&gt; : Func&lt;'T&gt; * bool -&gt; System.Threading.ThreadLocal&lt;'T&gt;" Usage="new System.Threading.ThreadLocal&lt;'T&gt; (valueFactory, trackAllValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="valueFactory" Type="System.Func&lt;T&gt;" />
        <Parameter Name="trackAllValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="valueFactory">
          <span data-ttu-id="25921-117">Oggetto <see cref="T:System.Func`1" /> richiamato per produrre un valore con inizializzazione differita quando si tenta di recuperare l'oggetto <see cref="P:System.Threading.ThreadLocal`1.Value" /> senza che sia stato inizializzato in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-117">The <see cref="T:System.Func`1" /> invoked to produce a lazily-initialized value when an attempt is made to retrieve <see cref="P:System.Threading.ThreadLocal`1.Value" /> without it having been previously initialized.</span>
          </span>
        </param>
        <param name="trackAllValues">
          <span data-ttu-id="25921-118">
            <see langword="true" /> per tenere traccia di tutti i valori impostati sull'istanza ed esporli tramite la proprietà <see cref="P:System.Threading.ThreadLocal`1.Values" />. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-118">
              <see langword="true" /> to track all values set on the instance and expose them through the <see cref="P:System.Threading.ThreadLocal`1.Values" /> property; <see langword="false" /> otherwise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25921-119">Inizializza l'istanza di <see cref="T:System.Threading.ThreadLocal`1" /> con la funzione <paramref name="valueFactory" /> specificata e un flag che indica se tutti i valori sono accessibili da qualsiasi thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-119">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance with the specified <paramref name="valueFactory" /> function and a flag that indicates whether all values are accessible from any thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25921-120">Se `trackAllValues` è `false`, solo il valore di questa istanza per il thread corrente è accessibile.</span><span class="sxs-lookup"><span data-stu-id="25921-120">If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible.</span></span> <span data-ttu-id="25921-121">Tentativo di utilizzare il <xref:System.Threading.ThreadLocal%601.Values%2A> genera i valori delle proprietà per recuperare tutti un <xref:System.InvalidOperationException> (eccezione).</span><span class="sxs-lookup"><span data-stu-id="25921-121">Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="25921-122">
            <paramref name="valueFactory" /> è un riferimento <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-122">
              <paramref name="valueFactory" /> is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="25921-123">Rilascia le risorse usate dall'istanza di <see cref="T:System.Threading.ThreadLocal`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-123">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="threadLocal.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25921-124">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Threading.ThreadLocal`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-124">Releases all resources used by the current instance of the <see cref="T:System.Threading.ThreadLocal`1" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25921-125">Chiamare il metodo `Dispose` dopo aver terminato di utilizzare l'oggetto <xref:System.Threading.ThreadLocal%601>.</span><span class="sxs-lookup"><span data-stu-id="25921-125">Call `Dispose` when you are finished using the <xref:System.Threading.ThreadLocal%601>.</span></span> <span data-ttu-id="25921-126">Il metodo `Dispose` lascia l'oggetto <xref:System.Threading.ThreadLocal%601> in una condizione di inutilizzabilità.</span><span class="sxs-lookup"><span data-stu-id="25921-126">The `Dispose` method leaves the <xref:System.Threading.ThreadLocal%601> in an unusable state.</span></span> <span data-ttu-id="25921-127">Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti per il <xref:System.Threading.ThreadLocal%601> consentire al garbage collector di recuperare la memoria che il <xref:System.Threading.ThreadLocal%601> occupata.</span><span class="sxs-lookup"><span data-stu-id="25921-127">After calling `Dispose`, you must release all references to the <xref:System.Threading.ThreadLocal%601> so the garbage collector can reclaim the memory that the <xref:System.Threading.ThreadLocal%601> was occupying.</span></span>  
  
 <span data-ttu-id="25921-128">Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="25921-128">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25921-129">Chiamare sempre il metodo `Dispose` prima di rilasciare l'ultimo riferimento a <xref:System.Threading.ThreadLocal%601>.</span><span class="sxs-lookup"><span data-stu-id="25921-129">Always call `Dispose` before you release your last reference to the <xref:System.Threading.ThreadLocal%601>.</span></span> <span data-ttu-id="25921-130">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Threading.ThreadLocal%601> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="25921-130">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ThreadLocal%601> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="threadLocal.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="25921-131">Valore booleano che indica se questo metodo viene chiamato a causa di una chiamata a <see cref="M:System.Threading.ThreadLocal`1.Dispose" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-131">A Boolean value that indicates whether this method is being called due to a call to <see cref="M:System.Threading.ThreadLocal`1.Dispose" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25921-132">Rilascia le risorse usate dall'istanza di <see cref="T:System.Threading.ThreadLocal`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-132">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25921-133">A differenza della maggior parte dei membri di <xref:System.Threading.ThreadLocal%601>, questo metodo non è thread-safe.</span><span class="sxs-lookup"><span data-stu-id="25921-133">Unlike most of the members of <xref:System.Threading.ThreadLocal%601>, this method is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ThreadLocal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ThreadLocal`1 ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="threadLocal.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25921-134">Rilascia le risorse usate dall'istanza di <see cref="T:System.Threading.ThreadLocal`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-134">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="IsValueCreated">
      <MemberSignature Language="C#" Value="public bool IsValueCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueCreated" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.IsValueCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValueCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValueCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValueCreated : bool" Usage="System.Threading.ThreadLocal&lt;'T&gt;.IsValueCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25921-135">Ottiene un valore che indica se l'oggetto <see cref="P:System.Threading.ThreadLocal`1.Value" /> è inizializzato sul thread corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-135">Gets whether <see cref="P:System.Threading.ThreadLocal`1.Value" /> is initialized on the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25921-136">true se <see cref="P:System.Threading.ThreadLocal`1.Value" /> viene inizializzato sul thread corrente; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-136">true if <see cref="P:System.Threading.ThreadLocal`1.Value" /> is initialized on the current thread; otherwise false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="25921-137">L’istanza di <see cref="T:System.Threading.ThreadLocal`1" /> è stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-137">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="threadLocal.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25921-138">Crea e restituisce una rappresentazione di stringa di questa istanza per il thread corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-138">Creates and returns a string representation of this instance for the current thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25921-139">Risultato della chiamata di <see cref="M:System.Object.ToString" /> su <see cref="P:System.Threading.ThreadLocal`1.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-139">The result of calling <see cref="M:System.Object.ToString" /> on the <see cref="P:System.Threading.ThreadLocal`1.Value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25921-140">Chiamare questo metodo forza l'inizializzazione per il thread corrente, come accade con l'accesso a <xref:System.Threading.ThreadLocal%601.Value%2A> direttamente.</span><span class="sxs-lookup"><span data-stu-id="25921-140">Calling this method forces initialization for the current thread, as is the case with accessing <xref:System.Threading.ThreadLocal%601.Value%2A> directly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="25921-141">L’istanza di <see cref="T:System.Threading.ThreadLocal`1" /> è stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-141">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="25921-142">L'oggetto <see cref="P:System.Threading.ThreadLocal`1.Value" /> per il thread corrente è un riferimento Null (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-142">The <see cref="P:System.Threading.ThreadLocal`1.Value" /> for the current thread is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25921-143">La funzione di inizializzazione tenta di fare riferimento in modo ricorsivo a <see cref="P:System.Threading.ThreadLocal`1.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-143">The initialization function attempted to reference <see cref="P:System.Threading.ThreadLocal`1.Value" /> recursively.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="25921-144">Non è fornito alcun costruttore predefinito e non è fornito alcun valore di factory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-144">No default constructor is provided and no value factory is supplied.</span>
          </span>
        </exception>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); void set(T value); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'T with get, set" Usage="System.Threading.ThreadLocal&lt;'T&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25921-145">Ottiene o imposta il valore di questa istanza per il thread corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-145">Gets or sets the value of this instance for the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25921-146">Restituisce un'istanza dell'oggetto della cui inizializzazione è responsabile questo oggetto ThreadLocal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-146">Returns an instance of the object that this ThreadLocal is responsible for initializing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25921-147">Se questa istanza non è stata inizializzata in precedenza per il thread corrente, l'accesso a <xref:System.Threading.ThreadLocal%601.Value%2A> tenterà di inizializzarlo.</span><span class="sxs-lookup"><span data-stu-id="25921-147">If this instance was not previously initialized for the current thread, accessing <xref:System.Threading.ThreadLocal%601.Value%2A> will attempt to initialize it.</span></span> <span data-ttu-id="25921-148">Se una funzione di inizializzazione è stata fornita durante la costruzione, si verificherà che l'inizializzazione richiamando la funzione per recuperare il valore iniziale per <xref:System.Threading.ThreadLocal%601.Value%2A>.</span><span class="sxs-lookup"><span data-stu-id="25921-148">If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <xref:System.Threading.ThreadLocal%601.Value%2A>.</span></span> <span data-ttu-id="25921-149">In caso contrario, verrà utilizzato il valore predefinito.</span><span class="sxs-lookup"><span data-stu-id="25921-149">Otherwise, the default value of will be used.</span></span> <span data-ttu-id="25921-150">Se viene generata un'eccezione, tale eccezione viene memorizzata nella cache e generata per ogni successivo accesso della proprietà.</span><span class="sxs-lookup"><span data-stu-id="25921-150">If an exception is thrown, that exception is cached and thrown on each subsequent access of the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="25921-151">L’istanza di <see cref="T:System.Threading.ThreadLocal`1" /> è stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-151">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25921-152">La funzione di inizializzazione tenta di fare riferimento in modo ricorsivo a <see cref="P:System.Threading.ThreadLocal`1.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-152">The initialization function attempted to reference <see cref="P:System.Threading.ThreadLocal`1.Value" /> recursively.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="25921-153">Non è fornito alcun costruttore predefinito e non è fornito alcun valore di factory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-153">No default constructor is provided and no value factory is supplied.</span>
          </span>
        </exception>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;T&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Values { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.IList&lt;'T&gt;" Usage="System.Threading.ThreadLocal&lt;'T&gt;.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25921-154">Ottiene un elenco di tutti i valori attualmente archiviati da tutti i thread che hanno eseguito l'accesso a questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-154">Gets a list for all of the values currently stored by all of the threads that have accessed this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25921-155">Elenco di tutti i valori attualmente archiviati da tutti i thread che hanno eseguito l'accesso a questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-155">A list for all of the values currently stored by all of the threads that have accessed this instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25921-156">I valori archiviati da tutti i thread non sono disponibili perché questa istanza è stata inizializzata con l'argomento <paramref name="trackAllValues" /> impostato su <see langword="false" /> nella chiamata al costruttore di una classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-156">Values stored by all threads are not available because this instance was initialized with the <paramref name="trackAllValues" /> argument set to <see langword="false" /> in the call to a class constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="25921-157">L’istanza di <see cref="T:System.Threading.ThreadLocal`1" /> è stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25921-157">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>