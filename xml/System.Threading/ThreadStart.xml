<Type Name="ThreadStart" FullName="System.Threading.ThreadStart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2847d7cf8164513d435c7548adb57b6cd1419a68" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30526365" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ThreadStart()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ThreadStart();" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>Rappresenta il metodo eseguito in un oggetto <see cref="T:System.Threading.Thread" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene creato un thread gestito, il metodo che viene eseguita sul thread è rappresentato da un <xref:System.Threading.ThreadStart> delegato o un <xref:System.Threading.ParameterizedThreadStart> delegato che viene passato per il <xref:System.Threading.Thread.%23ctor%2A> costruttore. Il thread non avviato l'esecuzione fino a quando il <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> metodo viene chiamato. Alla prima riga del metodo rappresentato dall'inizio dell'esecuzione di <xref:System.Threading.ThreadStart> o <xref:System.Threading.ParameterizedThreadStart> delegato.  
  
> [!NOTE]
>  Gli utenti di Visual Basic e c# è possono omettere il <xref:System.Threading.ThreadStart> o <xref:System.Threading.ParameterizedThreadStart> costruttore di delegato durante la creazione di un thread. In Visual Basic, usare il `AddressOf` operatore quando si passa il metodo per il <xref:System.Threading.Thread.%23ctor%2A> costruttore, ad esempio `Dim t As New Thread(AddressOf ThreadProc)`. In c#, è sufficiente specificare il nome della routine del thread. Il compilatore seleziona il costruttore di delegato corretto.  
  
 [C++]  
  
> [!NOTE]
>  Nella versione 2.0 di .NET Framework, la creazione di un <xref:System.Threading.ThreadStart> delegato per un metodo statico in C++, è necessario un solo parametro: l'indirizzo del metodo di callback, qualificato dal nome della classe. Nelle versioni precedenti erano necessari due parametri quando si crea un delegato per un metodo statico: (null) e l'indirizzo del metodo. Per un metodo di istanza, tutte le versioni richiedono due parametri: la variabile di istanza e l'indirizzo del metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata la sintassi per creare e utilizzare un <xref:System.Threading.ThreadStart> delegato con un metodo di istanza e un metodo statico.  
  
 Per un altro esempio semplice che illustra come creare un <xref:System.Threading.ThreadStart> delegato, vedere il <xref:System.Threading.Thread.Start?displayProperty=nameWithType> overload del metodo. Per ulteriori informazioni sulla creazione di thread, vedere [la creazione di thread e passaggio di dati in fase di avvio](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).  
  
 [!code-cpp[System.Threading.ThreadStart2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadStart2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadStart2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadStart2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ParameterizedThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
  </Docs>
</Type>