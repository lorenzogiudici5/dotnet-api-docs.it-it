<Type Name="Semaphore" FullName="System.Threading.Semaphore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47dc3c315c3032983e55c27b5310ada10bd2501f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36406833" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Semaphore : System.Threading.WaitHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Semaphore extends System.Threading.WaitHandle" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Semaphore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Semaphore&#xA;Inherits WaitHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class Semaphore sealed : System::Threading::WaitHandle" />
  <TypeSignature Language="F#" Value="type Semaphore = class&#xA;    inherit WaitHandle" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.WaitHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fb557-101">Limits the number of threads that can access a resource or pool of resources concurrently.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fb557-101">Limits the number of threads that can access a resource or pool of resources concurrently.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb557-102">Utilizzare la <xref:System.Threading.Semaphore> classe per controllare l'accesso a un pool di risorse.</span><span class="sxs-lookup"><span data-stu-id="fb557-102">Use the <xref:System.Threading.Semaphore> class to control access to a pool of resources.</span></span> <span data-ttu-id="fb557-103">Thread al semaforo chiamando il <xref:System.Threading.WaitHandle.WaitOne%2A> metodo, che viene ereditato dal <xref:System.Threading.WaitHandle> classe e rilasciare il semaforo chiamando il <xref:System.Threading.Semaphore.Release%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="fb557-103">Threads enter the semaphore by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method, which is inherited from the <xref:System.Threading.WaitHandle> class, and release the semaphore by calling the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="fb557-104">Il conteggio su un semaforo viene decrementato ogni volta che un thread accede al semaforo e incrementato quando un thread rilascia il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-104">The count on a semaphore is decremented each time a thread enters the semaphore, and incremented when a thread releases the semaphore.</span></span> <span data-ttu-id="fb557-105">Quando il conteggio è zero, le successive richieste bloccano finché non altri thread rilasciano il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-105">When the count is zero, subsequent requests block until other threads release the semaphore.</span></span> <span data-ttu-id="fb557-106">Quando tutti i thread hanno rilasciato il semaforo, il numero viene raggiunto il valore massimo specificato quando è stato creato il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-106">When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created.</span></span>  
  
 <span data-ttu-id="fb557-107">Non è garantito alcun ordine, ad esempio FIFO o LIFO, in cui i thread bloccati al semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-107">There is no guaranteed order, such as FIFO or LIFO, in which blocked threads enter the semaphore.</span></span>  
  
 <span data-ttu-id="fb557-108">Un thread può accedere al semaforo più volte, chiamando la <xref:System.Threading.WaitHandle.WaitOne%2A> metodo ripetutamente.</span><span class="sxs-lookup"><span data-stu-id="fb557-108">A thread can enter the semaphore multiple times, by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method repeatedly.</span></span> <span data-ttu-id="fb557-109">Per rilasciare alcune o tutte queste voci, il thread può chiamare senza parametri <xref:System.Threading.Semaphore.Release> overload del metodo più volte oppure è possibile chiamare il <xref:System.Threading.Semaphore.Release%28System.Int32%29> overload del metodo che specifica il numero di voci da rilasciare.</span><span class="sxs-lookup"><span data-stu-id="fb557-109">To release some or all of these entries, the thread can call the parameterless <xref:System.Threading.Semaphore.Release> method overload multiple times, or it can call the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload that specifies the number of entries to be released.</span></span>  
  
 <span data-ttu-id="fb557-110">Il <xref:System.Threading.Semaphore> classe non impone l'identità del thread nelle chiamate a <xref:System.Threading.WaitHandle.WaitOne%2A> o <xref:System.Threading.Semaphore.Release%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb557-110">The <xref:System.Threading.Semaphore> class does not enforce thread identity on calls to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.Semaphore.Release%2A>.</span></span> <span data-ttu-id="fb557-111">È responsabilità del programmatore garantire che i thread non rilasciano il semaforo troppe volte.</span><span class="sxs-lookup"><span data-stu-id="fb557-111">It is the programmer's responsibility to ensure that threads do not release the semaphore too many times.</span></span> <span data-ttu-id="fb557-112">Ad esempio, si consideri un semaforo con un conteggio massimo di due e il thread A e B accedano entrambi al semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-112">For example, suppose a semaphore has a maximum count of two, and that thread A and thread B both enter the semaphore.</span></span> <span data-ttu-id="fb557-113">Se un errore di programmazione nel thread B fa sì che la chiamata a <xref:System.Threading.Semaphore.Release%2A> due volte, entrambe le chiamate hanno esito positivo.</span><span class="sxs-lookup"><span data-stu-id="fb557-113">If a programming error in thread B causes it to call <xref:System.Threading.Semaphore.Release%2A> twice, both calls succeed.</span></span> <span data-ttu-id="fb557-114">Il conteggio sul semaforo è completo e quando il thread A alla fine chiama <xref:System.Threading.Semaphore.Release%2A>, viene generata un'eccezione <xref:System.Threading.SemaphoreFullException>.</span><span class="sxs-lookup"><span data-stu-id="fb557-114">The count on the semaphore is full, and when thread A eventually calls <xref:System.Threading.Semaphore.Release%2A>, a <xref:System.Threading.SemaphoreFullException> is thrown.</span></span>  
  
 <span data-ttu-id="fb557-115">Sono disponibili due tipi: i semafori locali e i semafori di sistema denominato.</span><span class="sxs-lookup"><span data-stu-id="fb557-115">Semaphores are of two types: local semaphores and named system semaphores.</span></span> <span data-ttu-id="fb557-116">Se si crea un <xref:System.Threading.Semaphore> usando un costruttore che accetta un nome dell'oggetto è associato a un semaforo di sistema operativo di tale nome.</span><span class="sxs-lookup"><span data-stu-id="fb557-116">If you create a <xref:System.Threading.Semaphore> object using a constructor that accepts a name, it is associated with an operating-system semaphore of that name.</span></span> <span data-ttu-id="fb557-117">Di sistema sono visibili in tutto il sistema operativo, i semafori e possono essere usati per sincronizzare le attività dei processi denominati.</span><span class="sxs-lookup"><span data-stu-id="fb557-117">Named system semaphores are visible throughout the operating system, and can be used to synchronize the activities of processes.</span></span> <span data-ttu-id="fb557-118">È possibile creare più <xref:System.Threading.Semaphore> gli oggetti che rappresentano lo stesso semaforo di sistema ed è possibile utilizzare il <xref:System.Threading.Semaphore.OpenExisting%2A> metodo per aprire un oggetto esistente denominato semaforo di sistema.</span><span class="sxs-lookup"><span data-stu-id="fb557-118">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore, and you can use the <xref:System.Threading.Semaphore.OpenExisting%2A> method to open an existing named system semaphore.</span></span>  
  
 <span data-ttu-id="fb557-119">Un semaforo locale esiste solo all'interno del processo.</span><span class="sxs-lookup"><span data-stu-id="fb557-119">A local semaphore exists only within your process.</span></span> <span data-ttu-id="fb557-120">Può essere usato da qualsiasi thread nel processo che abbia un riferimento all'oggetto <xref:System.Threading.Semaphore> locale.</span><span class="sxs-lookup"><span data-stu-id="fb557-120">It can be used by any thread in your process that has a reference to the local <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="fb557-121">Ogni <xref:System.Threading.Semaphore> oggetto rappresenta un semaforo locale distinto.</span><span class="sxs-lookup"><span data-stu-id="fb557-121">Each <xref:System.Threading.Semaphore> object is a separate local semaphore.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb557-122">Esempio di codice seguente crea un semaforo con un conteggio massimo di tre e un conteggio iniziale pari a zero.</span><span class="sxs-lookup"><span data-stu-id="fb557-122">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="fb557-123">Nell'esempio viene avviato cinque thread, tra cui bloccare l'attesa per il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-123">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="fb557-124">Il thread principale utilizza i <xref:System.Threading.Semaphore.Release%28System.Int32%29> overload del metodo per aumentare il conteggio del semaforo al valore massimo, consentendo a tre thread di accedere al semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-124">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="fb557-125">Ogni thread Usa la <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> metodo per attendere un secondo, per simulare il funzionamento e quindi chiama il <xref:System.Threading.Semaphore.Release> overload del metodo per rilasciare il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-125">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span> <span data-ttu-id="fb557-126">Ogni volta che viene rilasciato il semaforo, viene visualizzato il conteggio del semaforo precedente.</span><span class="sxs-lookup"><span data-stu-id="fb557-126">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="fb557-127">Utilizzo del semaforo traccia i messaggi della console.</span><span class="sxs-lookup"><span data-stu-id="fb557-127">Console messages track semaphore use.</span></span> <span data-ttu-id="fb557-128">L'intervallo di lavoro simulato viene aumentato leggermente per ogni thread, per rendere più facile da leggere l'output.</span><span class="sxs-lookup"><span data-stu-id="fb557-128">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="fb557-129">Questo tipo è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fb557-129">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fb557-130">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-130">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="fb557-131">The initial number of requests for the semaphore that can be granted concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-131">The initial number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <param name="maximumCount">
          <span data-ttu-id="fb557-132">The maximum number of requests for the semaphore that can be granted concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-132">The maximum number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb557-133">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-133">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb557-134">Questo costruttore inizializza un semaforo senza nome.</span><span class="sxs-lookup"><span data-stu-id="fb557-134">This constructor initializes an unnamed semaphore.</span></span> <span data-ttu-id="fb557-135">Tutti i thread che utilizzano un'istanza di tale semaforo devono disporre di riferimenti all'istanza.</span><span class="sxs-lookup"><span data-stu-id="fb557-135">All threads that use an instance of such a semaphore must have references to the instance.</span></span>  
  
 <span data-ttu-id="fb557-136">Se `initialCount` è minore `maximumCount`, l'effetto è lo stesso come se fosse stato chiamato il thread corrente <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` meno `initialCount`) volte.</span><span class="sxs-lookup"><span data-stu-id="fb557-136">If `initialCount` is less than `maximumCount`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span> <span data-ttu-id="fb557-137">Se non si desidera riservare tutte le voci per il thread che crea il semaforo, utilizzare lo stesso numero per `maximumCount` e `initialCount`.</span><span class="sxs-lookup"><span data-stu-id="fb557-137">If you do not want to reserve any entries for the thread that creates the semaphore, use the same number for `maximumCount` and `initialCount`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb557-138">Nell'esempio seguente crea un semaforo con un conteggio massimo di tre e un conteggio iniziale pari a zero.</span><span class="sxs-lookup"><span data-stu-id="fb557-138">The following example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="fb557-139">Nell'esempio viene avviato cinque thread, tra cui bloccare l'attesa per il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-139">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="fb557-140">Il thread principale utilizza i <xref:System.Threading.Semaphore.Release%28System.Int32%29> overload del metodo per aumentare il conteggio del semaforo al valore massimo, consentendo a tre thread di accedere al semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-140">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="fb557-141">Ogni thread Usa la <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> metodo per attendere un secondo, per simulare il funzionamento e quindi chiama il <xref:System.Threading.Semaphore.Release> overload del metodo per rilasciare il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-141">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span> <span data-ttu-id="fb557-142">Ogni volta che viene rilasciato il semaforo, viene visualizzato il conteggio del semaforo precedente.</span><span class="sxs-lookup"><span data-stu-id="fb557-142">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="fb557-143">Utilizzo del semaforo traccia i messaggi della console.</span><span class="sxs-lookup"><span data-stu-id="fb557-143">Console messages track semaphore use.</span></span> <span data-ttu-id="fb557-144">L'intervallo di lavoro simulato viene aumentato leggermente per ogni thread, per rendere più facile da leggere l'output.</span><span class="sxs-lookup"><span data-stu-id="fb557-144">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fb557-145">
            <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-145">
              <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fb557-146">
            <paramref name="maximumCount" /> is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-146">
              <paramref name="maximumCount" /> is less than 1.</span>
          </span>
          <span data-ttu-id="fb557-147">-or-  <paramref name="initialCount" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-147">-or-  <paramref name="initialCount" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="fb557-148">The initial number of requests for the semaphore that can be granted concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-148">The initial number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <param name="maximumCount">
          <span data-ttu-id="fb557-149">The maximum number of requests for the semaphore that can be granted concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-149">The maximum number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="fb557-150">The name of a named system semaphore object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-150">The name of a named system semaphore object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb557-151">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, and optionally specifying the name of a system semaphore object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-151">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, and optionally specifying the name of a system semaphore object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb557-152">Questo costruttore inizializza un <xref:System.Threading.Semaphore> oggetto che rappresenta un semaforo di sistema denominato.</span><span class="sxs-lookup"><span data-stu-id="fb557-152">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="fb557-153">È possibile creare più <xref:System.Threading.Semaphore> gli oggetti che rappresentano lo stesso semaforo di sistema.</span><span class="sxs-lookup"><span data-stu-id="fb557-153">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="fb557-154">Se il semaforo di sistema denominato non esiste, viene creato con il numero iniziale e conteggio massimo specificati da `initialCount` e `maximumCount`.</span><span class="sxs-lookup"><span data-stu-id="fb557-154">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="fb557-155">Se il semaforo di sistema denominato esiste già, `initialCount` e `maximumCount` non vengono utilizzati anche se i valori non validi comunque causano eccezioni.</span><span class="sxs-lookup"><span data-stu-id="fb557-155">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="fb557-156">Se è necessario determinare se è stato creato un semaforo di sistema denominato, usare il <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%29> overload del costruttore.</span><span class="sxs-lookup"><span data-stu-id="fb557-156">If you need to determine whether or not a named system semaphore was created, use the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%29> constructor overload instead.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fb557-157">Quando si utilizza questo overload del costruttore, la procedura consigliata consiste nello specificare lo stesso numero per `initialCount` e `maximumCount`.</span><span class="sxs-lookup"><span data-stu-id="fb557-157">When you use this constructor overload, the recommended practice is to specify the same number for `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="fb557-158">Se `initialCount` è minore `maximumCount`e viene creato un semaforo di sistema denominato, l'effetto è lo stesso come se fosse stato chiamato il thread corrente <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` meno `initialCount`) volte.</span><span class="sxs-lookup"><span data-stu-id="fb557-158">If `initialCount` is less than `maximumCount`, and a named system semaphore is created, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span> <span data-ttu-id="fb557-159">Tuttavia, con questo overload del costruttore è un modo per determinare se è stato creato un semaforo di sistema denominato.</span><span class="sxs-lookup"><span data-stu-id="fb557-159">However, with this constructor overload there is no way to determine whether a named system semaphore was created.</span></span>  
  
 <span data-ttu-id="fb557-160">Se si specifica `null` o una stringa vuota per `name`, viene creato un semaforo locale, come se fosse stato chiamato il <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> overload del costruttore.</span><span class="sxs-lookup"><span data-stu-id="fb557-160">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span>  
  
 <span data-ttu-id="fb557-161">Poiché i semafori denominati sono visibili in tutto il sistema operativo, possono essere utilizzati per coordinare l'utilizzo delle risorse attraverso i limiti di processo.</span><span class="sxs-lookup"><span data-stu-id="fb557-161">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
 <span data-ttu-id="fb557-162">Se si desidera verificare l'esistenza di una classe semaforo di sistema denominato, usare il <xref:System.Threading.Semaphore.OpenExisting%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="fb557-162">If you want to find out whether a named system semaphore exists, use the <xref:System.Threading.Semaphore.OpenExisting%2A> method.</span></span> <span data-ttu-id="fb557-163">Il <xref:System.Threading.Semaphore.OpenExisting%2A> metodo tenta di aprire un semaforo denominato esistente e genera un'eccezione se il semaforo di sistema non esiste.</span><span class="sxs-lookup"><span data-stu-id="fb557-163">The <xref:System.Threading.Semaphore.OpenExisting%2A> method attempts to open an existing named semaphore, and throws an exception if the system semaphore does not exist.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb557-164">Esempio di codice seguente viene illustrato il comportamento tra processi di un semaforo denominato.</span><span class="sxs-lookup"><span data-stu-id="fb557-164">The following code example demonstrates the cross-process behavior of a named semaphore.</span></span> <span data-ttu-id="fb557-165">Nell'esempio viene creato un semaforo denominato con un conteggio massimo di cinque e un conteggio iniziale pari a cinque.</span><span class="sxs-lookup"><span data-stu-id="fb557-165">The example creates a named semaphore with a maximum count of five and an initial count of five.</span></span> <span data-ttu-id="fb557-166">Il programma effettua tre chiamate al <xref:System.Threading.WaitHandle.WaitOne%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="fb557-166">The program makes three calls to the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="fb557-167">Pertanto, se si esegue l'esempio compilato da due finestre di comando, la seconda copia verrà bloccata la terza chiamata a <xref:System.Threading.WaitHandle.WaitOne%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb557-167">Thus, if you run the compiled example from two command windows, the second copy will block on the third call to <xref:System.Threading.WaitHandle.WaitOne%2A>.</span></span> <span data-ttu-id="fb557-168">Rilasciare una o più voci nella prima copia del programma per sbloccare il secondo.</span><span class="sxs-lookup"><span data-stu-id="fb557-168">Release one or more entries in the first copy of the program to unblock the second.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fb557-169">
            <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-169">
              <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          </span>
          <span data-ttu-id="fb557-170">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-170">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fb557-171">
            <paramref name="maximumCount" /> is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-171">
              <paramref name="maximumCount" /> is less than 1.</span>
          </span>
          <span data-ttu-id="fb557-172">-or-  <paramref name="initialCount" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-172">-or-  <paramref name="initialCount" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fb557-173">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-173">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="fb557-174">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-174">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="fb557-175">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-175">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fb557-176">per chiamare codice non gestito per creare un semaforo di sistema denominato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-176">for calling unmanaged code to create a named system semaphore.</span>
          </span>
          <span data-ttu-id="fb557-177">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-177">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="fb557-178">Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-178">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name, out bool createdNew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name, [out] bool&amp; createdNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer, name As String, ByRef createdNew As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string *  -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name, createdNew)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="fb557-179">The initial number of requests for the semaphore that can be satisfied concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-179">The initial number of requests for the semaphore that can be satisfied concurrently.</span>
          </span>
        </param>
        <param name="maximumCount">
          <span data-ttu-id="fb557-180">The maximum number of requests for the semaphore that can be satisfied concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-180">The maximum number of requests for the semaphore that can be satisfied concurrently.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="fb557-181">The name of a named system semaphore object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-181">The name of a named system semaphore object.</span>
          </span>
        </param>
        <param name="createdNew">
          <span data-ttu-id="fb557-182">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-182">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span>
          </span>
          <span data-ttu-id="fb557-183">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-183">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb557-184">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, and specifying a variable that receives a value indicating whether a new system semaphore was created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-184">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, and specifying a variable that receives a value indicating whether a new system semaphore was created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb557-185">Questo costruttore inizializza un <xref:System.Threading.Semaphore> oggetto che rappresenta un semaforo di sistema denominato.</span><span class="sxs-lookup"><span data-stu-id="fb557-185">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="fb557-186">È possibile creare più <xref:System.Threading.Semaphore> gli oggetti che rappresentano lo stesso semaforo di sistema.</span><span class="sxs-lookup"><span data-stu-id="fb557-186">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="fb557-187">Se il semaforo di sistema denominato non esiste, viene creato con il numero iniziale e conteggio massimo specificati da `initialCount` e `maximumCount`.</span><span class="sxs-lookup"><span data-stu-id="fb557-187">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="fb557-188">Se il semaforo di sistema denominato esiste già, `initialCount` e `maximumCount` non vengono utilizzati anche se i valori non validi comunque causano eccezioni.</span><span class="sxs-lookup"><span data-stu-id="fb557-188">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="fb557-189">Utilizzare `createdNew` per determinare se è stato creato il semaforo di sistema.</span><span class="sxs-lookup"><span data-stu-id="fb557-189">Use `createdNew` to determine whether the system semaphore was created.</span></span>  
  
 <span data-ttu-id="fb557-190">Se `initialCount` è minore `maximumCount`, e `createdNew` viene `true`, l'effetto è lo stesso come se fosse stato chiamato il thread corrente <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` meno `initialCount`) volte.</span><span class="sxs-lookup"><span data-stu-id="fb557-190">If `initialCount` is less than `maximumCount`, and `createdNew` is `true`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span>  
  
 <span data-ttu-id="fb557-191">Se si specifica `null` o una stringa vuota per `name`, viene creato un semaforo locale, come se fosse stato chiamato il <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> overload del costruttore.</span><span class="sxs-lookup"><span data-stu-id="fb557-191">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span> <span data-ttu-id="fb557-192">In questo caso `createdNew` è sempre `true`.</span><span class="sxs-lookup"><span data-stu-id="fb557-192">In this case, `createdNew` is always `true`.</span></span>  
  
 <span data-ttu-id="fb557-193">Poiché i semafori denominati sono visibili in tutto il sistema operativo, possono essere utilizzati per coordinare l'utilizzo delle risorse attraverso i limiti di processo.</span><span class="sxs-lookup"><span data-stu-id="fb557-193">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb557-194">Esempio di codice seguente viene illustrato il comportamento tra processi di un semaforo denominato.</span><span class="sxs-lookup"><span data-stu-id="fb557-194">The following code example demonstrates the cross-process behavior of a named semaphore.</span></span> <span data-ttu-id="fb557-195">Nell'esempio viene creato un semaforo denominato con un conteggio massimo di cinque e un conteggio iniziale di due.</span><span class="sxs-lookup"><span data-stu-id="fb557-195">The example creates a named semaphore with a maximum count of five and an initial count of two.</span></span> <span data-ttu-id="fb557-196">Vale a dire, sono riservati e tre le voci per il thread che chiama il costruttore.</span><span class="sxs-lookup"><span data-stu-id="fb557-196">That is, it reserves three entries for the thread that calls the constructor.</span></span> <span data-ttu-id="fb557-197">Se `createNew` viene `false`, il programma effettua tre chiamate al <xref:System.Threading.WaitHandle.WaitOne%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="fb557-197">If `createNew` is `false`, the program makes three calls to the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="fb557-198">Pertanto, se si esegue l'esempio compilato da due finestre di comando, la seconda copia verrà bloccata la terza chiamata a <xref:System.Threading.WaitHandle.WaitOne%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb557-198">Thus, if you run the compiled example from two command windows, the second copy will block on the third call to <xref:System.Threading.WaitHandle.WaitOne%2A>.</span></span> <span data-ttu-id="fb557-199">Rilasciare una o più voci nella prima copia del programma per sbloccare il secondo.</span><span class="sxs-lookup"><span data-stu-id="fb557-199">Release one or more entries in the first copy of the program to unblock the second.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fb557-200">
            <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-200">
              <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          </span>
          <span data-ttu-id="fb557-201">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-201">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fb557-202">
            <paramref name="maximumCount" /> is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-202">
              <paramref name="maximumCount" /> is less than 1.</span>
          </span>
          <span data-ttu-id="fb557-203">-or-  <paramref name="initialCount" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-203">-or-  <paramref name="initialCount" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fb557-204">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-204">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="fb557-205">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-205">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="fb557-206">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-206">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fb557-207">per chiamare codice non gestito per creare un semaforo di sistema denominato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-207">for calling unmanaged code to create a named system semaphore.</span>
          </span>
          <span data-ttu-id="fb557-208">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-208">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="fb557-209">Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-209">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name, out bool createdNew, System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name, [out] bool&amp; createdNew, class System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew, System::Security::AccessControl::SemaphoreSecurity ^ semaphoreSecurity);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string *  * System.Security.AccessControl.SemaphoreSecurity -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name, createdNew, semaphoreSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="semaphoreSecurity" Type="System.Security.AccessControl.SemaphoreSecurity" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="fb557-210">The initial number of requests for the semaphore that can be satisfied concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-210">The initial number of requests for the semaphore that can be satisfied concurrently.</span>
          </span>
        </param>
        <param name="maximumCount">
          <span data-ttu-id="fb557-211">The maximum number of requests for the semaphore that can be satisfied concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-211">The maximum number of requests for the semaphore that can be satisfied concurrently.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="fb557-212">The name of a named system semaphore object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-212">The name of a named system semaphore object.</span>
          </span>
        </param>
        <param name="createdNew">
          <span data-ttu-id="fb557-213">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-213">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span>
          </span>
          <span data-ttu-id="fb557-214">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-214">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="semaphoreSecurity">
          <span data-ttu-id="fb557-215">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-215">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb557-216">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, specifying a variable that receives a value indicating whether a new system semaphore was created, and specifying security access control for the system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-216">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, specifying a variable that receives a value indicating whether a new system semaphore was created, and specifying security access control for the system semaphore.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb557-217">Utilizzare questo costruttore per applicare un semaforo di sistema denominato sicurezza dall'accesso di controllo al momento della creazione, impedendo ad altro codice di assumere il controllo del semaforo di.</span><span class="sxs-lookup"><span data-stu-id="fb557-217">Use this constructor to apply access control security to a named system semaphore when it is created, preventing other code from taking control of the semaphore.</span></span>  
  
 <span data-ttu-id="fb557-218">Questo costruttore inizializza un <xref:System.Threading.Semaphore> oggetto che rappresenta un semaforo di sistema denominato.</span><span class="sxs-lookup"><span data-stu-id="fb557-218">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="fb557-219">È possibile creare più <xref:System.Threading.Semaphore> gli oggetti che rappresentano lo stesso semaforo di sistema.</span><span class="sxs-lookup"><span data-stu-id="fb557-219">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="fb557-220">Se il semaforo di sistema denominato non esiste, viene creato con la sicurezza del controllo di accesso specificato.</span><span class="sxs-lookup"><span data-stu-id="fb557-220">If the named system semaphore does not exist, it is created with the specified access control security.</span></span> <span data-ttu-id="fb557-221">Se il semaforo denominato esiste, la sicurezza del controllo di accesso specificato viene ignorata.</span><span class="sxs-lookup"><span data-stu-id="fb557-221">If the named semaphore exists, the specified access control security is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb557-222">Il chiamante dispone del controllo completo su appena creato <xref:System.Threading.Semaphore> oggetto anche se `semaphoreSecurity` nega o non riesce a concedere alcuni diritti di accesso per l'utente corrente.</span><span class="sxs-lookup"><span data-stu-id="fb557-222">The caller has full control over the newly created <xref:System.Threading.Semaphore> object even if `semaphoreSecurity` denies or fails to grant some access rights to the current user.</span></span> <span data-ttu-id="fb557-223">Tuttavia, se l'utente corrente tenta di ottenere un altro <xref:System.Threading.Semaphore> dell'oggetto per rappresentare lo stesso semaforo denominato, utilizzando un costruttore o <xref:System.Threading.Semaphore.OpenExisting%2A> (metodo), Windows viene applicata la sicurezza del controllo di accesso.</span><span class="sxs-lookup"><span data-stu-id="fb557-223">However, if the current user attempts to get another <xref:System.Threading.Semaphore> object to represent the same named semaphore, using either a constructor or the <xref:System.Threading.Semaphore.OpenExisting%2A> method, Windows access control security is applied.</span></span>  
  
 <span data-ttu-id="fb557-224">Se il semaforo di sistema denominato non esiste, viene creato con il numero iniziale e conteggio massimo specificati da `initialCount` e `maximumCount`.</span><span class="sxs-lookup"><span data-stu-id="fb557-224">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="fb557-225">Se il semaforo di sistema denominato esiste già, `initialCount` e `maximumCount` non vengono utilizzati anche se i valori non validi comunque causano eccezioni.</span><span class="sxs-lookup"><span data-stu-id="fb557-225">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="fb557-226">Utilizzare il `createdNew` parametro per determinare se il semaforo di sistema è stato creato da questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="fb557-226">Use the `createdNew` parameter to determine whether the system semaphore was created by this constructor.</span></span>  
  
 <span data-ttu-id="fb557-227">Se `initialCount` è minore `maximumCount`, e `createdNew` viene `true`, l'effetto è lo stesso come se fosse stato chiamato il thread corrente <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` meno `initialCount`) volte.</span><span class="sxs-lookup"><span data-stu-id="fb557-227">If `initialCount` is less than `maximumCount`, and `createdNew` is `true`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span>  
  
 <span data-ttu-id="fb557-228">Se si specifica `null` o una stringa vuota per `name`, viene creato un semaforo locale, come se fosse stato chiamato il <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> overload del costruttore.</span><span class="sxs-lookup"><span data-stu-id="fb557-228">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span> <span data-ttu-id="fb557-229">In questo caso `createdNew` è sempre `true`.</span><span class="sxs-lookup"><span data-stu-id="fb557-229">In this case, `createdNew` is always `true`.</span></span>  
  
 <span data-ttu-id="fb557-230">Poiché i semafori denominati sono visibili in tutto il sistema operativo, possono essere utilizzati per coordinare l'utilizzo delle risorse attraverso i limiti di processo.</span><span class="sxs-lookup"><span data-stu-id="fb557-230">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb557-231">Esempio di codice seguente viene illustrato il comportamento tra processi di un semaforo denominato con sicurezza del controllo di accesso.</span><span class="sxs-lookup"><span data-stu-id="fb557-231">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="fb557-232">Nell'esempio viene utilizzato il <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> overload del metodo per verificare l'esistenza di un semaforo denominato.</span><span class="sxs-lookup"><span data-stu-id="fb557-232">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span> <span data-ttu-id="fb557-233">Se il semaforo non esiste, viene creato con un conteggio massimo di due e con sicurezza del controllo di accesso che nega l'utente corrente il diritto di utilizzare il semaforo ma concede il diritto di leggere e modificare le autorizzazioni per il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-233">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore but grants the right to read and change permissions on the semaphore.</span></span> <span data-ttu-id="fb557-234">Se si esegue l'esempio compilato da due finestre di comando, la seconda copia genererà un'eccezione di violazione di accesso alla chiamata al <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="fb557-234">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="fb557-235">L'eccezione viene intercettata e nell'esempio viene utilizzato il <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> overload del metodo per aprire il semaforo con i diritti necessari per leggere e modificare le autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="fb557-235">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="fb557-236">Dopo la modifica delle autorizzazioni, il semaforo viene aperto con i diritti necessari per immettere e rilasciare.</span><span class="sxs-lookup"><span data-stu-id="fb557-236">After the permissions are changed, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="fb557-237">Se si esegue l'esempio compilato da una terza finestra di comando, viene eseguito con le nuove autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="fb557-237">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fb557-238">
            <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-238">
              <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          </span>
          <span data-ttu-id="fb557-239">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-239">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fb557-240">
            <paramref name="maximumCount" /> is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-240">
              <paramref name="maximumCount" /> is less than 1.</span>
          </span>
          <span data-ttu-id="fb557-241">-or-  <paramref name="initialCount" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-241">-or-  <paramref name="initialCount" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="fb557-242">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-242">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fb557-243">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-243">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="fb557-244">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-244">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fb557-245">per chiamare codice non gestito per creare un semaforo di sistema denominato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-245">for calling unmanaged code to create a named system semaphore.</span>
          </span>
          <span data-ttu-id="fb557-246">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-246">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="fb557-247">Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-247">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.SemaphoreSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.SemaphoreSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As SemaphoreSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::SemaphoreSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.SemaphoreSecurity" Usage="semaphore.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.SemaphoreSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fb557-248">Gets the access control security for a named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-248">Gets the access control security for a named system semaphore.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fb557-249">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security for the named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-249">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security for the named system semaphore.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb557-250">Il <xref:System.Threading.Semaphore.GetAccessControl%2A> metodo utilizza la seguente combinazione di flag (combinate tramite l'operazione OR bit per bit) per cercare le autorizzazioni: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, e <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fb557-250">The <xref:System.Threading.Semaphore.GetAccessControl%2A> method uses the following combination of flags (combined using the bitwise OR operation) to search for permissions: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, and <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fb557-251">L'utente deve disporre <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> diritti per chiamare questo metodo e il semaforo devono essere aperto con <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> diritti.</span><span class="sxs-lookup"><span data-stu-id="fb557-251">The user must have <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> rights to call this method, and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> rights.</span></span>  
  
 <span data-ttu-id="fb557-252">Su un semaforo locale, controllo degli accessi è irrilevante.</span><span class="sxs-lookup"><span data-stu-id="fb557-252">On a local semaphore, access control security is irrelevant.</span></span> <span data-ttu-id="fb557-253">Se il <xref:System.Threading.Semaphore> oggetto non rappresenta un semaforo di sistema denominato, questo metodo restituisce un <xref:System.Security.AccessControl.SemaphoreSecurity> oggetto che concede tutti i diritti a tutti gli utenti.</span><span class="sxs-lookup"><span data-stu-id="fb557-253">If the <xref:System.Threading.Semaphore> object does not represent a named system semaphore, this method returns a <xref:System.Security.AccessControl.SemaphoreSecurity> object that grants all rights to any user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb557-254">Esempio di codice seguente viene illustrato il comportamento tra processi di un semaforo denominato con sicurezza del controllo di accesso.</span><span class="sxs-lookup"><span data-stu-id="fb557-254">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="fb557-255">Nell'esempio viene utilizzato il <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> overload del metodo per verificare l'esistenza di un semaforo denominato.</span><span class="sxs-lookup"><span data-stu-id="fb557-255">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="fb557-256">Se il semaforo non esiste, viene creato con un conteggio massimo di due e con sicurezza del controllo di accesso che nega l'utente corrente il diritto di utilizzare il semaforo, ma concede il diritto di leggere e modificare le autorizzazioni per il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-256">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="fb557-257">Se si esegue l'esempio compilato da due finestre di comando, la seconda copia genererà un'eccezione di violazione di accesso alla chiamata al <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="fb557-257">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="fb557-258">L'eccezione viene intercettata e nell'esempio viene utilizzato il <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> overload del metodo per aprire il semaforo con i diritti necessari per leggere e modificare le autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="fb557-258">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span> <span data-ttu-id="fb557-259">La sicurezza di controllo di accesso per il semaforo di sistema viene ottenuta utilizzando il <xref:System.Threading.Semaphore.GetAccessControl%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="fb557-259">The access control security for the system semaphore is obtained using the <xref:System.Threading.Semaphore.GetAccessControl%2A> method.</span></span>  
  
 <span data-ttu-id="fb557-260">Dopo la modifica delle autorizzazioni, il semaforo viene aperto con i diritti necessari per immettere e rilasciare.</span><span class="sxs-lookup"><span data-stu-id="fb557-260">After the permissions are changed, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="fb557-261">Se si esegue l'esempio compilato da una terza finestra di comando, viene eseguito con le nuove autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="fb557-261">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="fb557-262">The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-262">The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span>
          </span>
          <span data-ttu-id="fb557-263">-or-  The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore and was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-263">-or-  The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore and was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fb557-264">Not supported for Windows 98 or Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-264">Not supported for Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fb557-265">Opens a specified named semaphore, if it already exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-265">Opens a specified named semaphore, if it already exists.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.Semaphore OpenExisting (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Semaphore OpenExisting(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String) As Semaphore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Semaphore ^ OpenExisting(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string -&gt; System.Threading.Semaphore" Usage="System.Threading.Semaphore.OpenExisting name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Semaphore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fb557-266">The name of the system semaphore to open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-266">The name of the system semaphore to open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb557-267">Opens the specified named semaphore, if it already exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-267">Opens the specified named semaphore, if it already exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fb557-268">An object that represents the named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-268">An object that represents the named system semaphore.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb557-269">Il <xref:System.Threading.Semaphore.OpenExisting%2A> metodo tenta di aprire il semaforo denominato specificato.</span><span class="sxs-lookup"><span data-stu-id="fb557-269">The <xref:System.Threading.Semaphore.OpenExisting%2A> method tries to open the specified named semaphore.</span></span> <span data-ttu-id="fb557-270">Se il semaforo di sistema non esiste, questo metodo genera un'eccezione anziché creare il semaforo di sistema.</span><span class="sxs-lookup"><span data-stu-id="fb557-270">If the system semaphore does not exist, this method throws an exception instead of creating the system semaphore.</span></span> <span data-ttu-id="fb557-271">Per creare il semaforo di sistema quando non esiste già, utilizzare uno del <xref:System.Threading.Semaphore.%23ctor%2A> costruttori che dispone di un `name` parametro.</span><span class="sxs-lookup"><span data-stu-id="fb557-271">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="fb557-272">Più chiamate al metodo che utilizzano lo stesso valore per `name` non necessariamente restituire lo stesso <xref:System.Threading.Semaphore> dell'oggetto, anche se gli oggetti sono restituiti rappresentano lo stesso semaforo di sistema.</span><span class="sxs-lookup"><span data-stu-id="fb557-272">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="fb557-273">Overload di questo metodo è equivalente alla chiamata di <xref:System.Threading.Semaphore.OpenExisting%2A> overload del metodo e specificando <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> e <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> diritti, combinati tramite l'operazione OR bit per bit.</span><span class="sxs-lookup"><span data-stu-id="fb557-273">This method overload is equivalent to calling the <xref:System.Threading.Semaphore.OpenExisting%2A> method overload and specifying <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span>  
  
 <span data-ttu-id="fb557-274">Specifica il <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag consente a un thread di accedere al semaforo e specificando il <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag consente a un thread chiamare il <xref:System.Threading.Semaphore.Release%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="fb557-274">Specifying the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag allows a thread to enter the semaphore, and specifying the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb557-275">Esempio di codice seguente viene illustrato il comportamento tra processi di un semaforo denominato con sicurezza del controllo di accesso.</span><span class="sxs-lookup"><span data-stu-id="fb557-275">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="fb557-276">Nell'esempio viene utilizzato il <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> overload del metodo per verificare l'esistenza di un semaforo denominato.</span><span class="sxs-lookup"><span data-stu-id="fb557-276">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="fb557-277">Se il semaforo non esiste, viene creato con un conteggio massimo di due e con sicurezza del controllo di accesso che la negazione dell'utente corrente il diritto di utilizzare il semaforo, ma concede il diritto di leggere e modificare le autorizzazioni per il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-277">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but which grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="fb557-278">Se si esegue l'esempio compilato da due finestre di comando, la seconda copia genererà un'eccezione di violazione di accesso alla chiamata al <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="fb557-278">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload.</span></span> <span data-ttu-id="fb557-279">L'eccezione viene intercettata e nell'esempio viene utilizzato il <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> overload del metodo per aprire il semaforo con i diritti necessari per leggere e modificare le autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="fb557-279">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="fb557-280">Dopo la modifica delle autorizzazioni, il semaforo viene aperto con i diritti necessari per immettere e lo rilascia.</span><span class="sxs-lookup"><span data-stu-id="fb557-280">After the permissions are changed, the semaphore is opened with the rights required to enter and release it.</span></span> <span data-ttu-id="fb557-281">Se si esegue l'esempio compilato da una terza finestra di comando, viene eseguito con le nuove autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="fb557-281">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fb557-282">
            <paramref name="name" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-282">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="fb557-283">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-283">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb557-284">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-284">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="fb557-285">The named semaphore does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-285">The named semaphore does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fb557-286">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-286">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="fb557-287">The named semaphore exists, but the user does not have the security access required to use it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-287">The named semaphore exists, but the user does not have the security access required to use it.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fb557-288">per chiamare codice non gestito per aprire un semaforo di sistema denominato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-288">for calling unmanaged code to open a named system semaphore.</span>
          </span>
          <span data-ttu-id="fb557-289">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-289">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="fb557-290">Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-290">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.Semaphore OpenExisting (string name, System.Security.AccessControl.SemaphoreRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Semaphore OpenExisting(string name, valuetype System.Security.AccessControl.SemaphoreRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.OpenExisting(System.String,System.Security.AccessControl.SemaphoreRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String, rights As SemaphoreRights) As Semaphore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Semaphore ^ OpenExisting(System::String ^ name, System::Security::AccessControl::SemaphoreRights rights);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.Security.AccessControl.SemaphoreRights -&gt; System.Threading.Semaphore" Usage="System.Threading.Semaphore.OpenExisting (name, rights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Semaphore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Security.AccessControl.SemaphoreRights" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fb557-291">The name of the system semaphore to open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-291">The name of the system semaphore to open.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="fb557-292">A bitwise combination of the enumeration values that represent the desired security access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-292">A bitwise combination of the enumeration values that represent the desired security access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb557-293">Opens the specified named semaphore, if it already exists, with the desired security access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-293">Opens the specified named semaphore, if it already exists, with the desired security access.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fb557-294">An object that represents the named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-294">An object that represents the named system semaphore.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb557-295">Il `rights` parametro deve includere il <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag per consentire ai thread di accedere al semaforo e il <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag per consentire ai thread di chiamare il <xref:System.Threading.Semaphore.Release%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="fb557-295">The `rights` parameter must include the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag to allow threads to enter the semaphore, and the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="fb557-296">Il <xref:System.Threading.Semaphore.OpenExisting%2A> metodo tenta di aprire un semaforo denominato esistente.</span><span class="sxs-lookup"><span data-stu-id="fb557-296">The <xref:System.Threading.Semaphore.OpenExisting%2A> method tries to open an existing named semaphore.</span></span> <span data-ttu-id="fb557-297">Se il semaforo di sistema non esiste, questo metodo genera un'eccezione anziché creare il semaforo di sistema.</span><span class="sxs-lookup"><span data-stu-id="fb557-297">If the system semaphore does not exist, this method throws an exception instead of creating the system semaphore.</span></span> <span data-ttu-id="fb557-298">Per creare il semaforo di sistema quando non esiste già, utilizzare uno del <xref:System.Threading.Semaphore.%23ctor%2A> costruttori che dispone di un `name` parametro.</span><span class="sxs-lookup"><span data-stu-id="fb557-298">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="fb557-299">Più chiamate al metodo che utilizzano lo stesso valore per `name` non necessariamente restituire lo stesso <xref:System.Threading.Semaphore> dell'oggetto, anche se gli oggetti sono restituiti rappresentano lo stesso semaforo di sistema.</span><span class="sxs-lookup"><span data-stu-id="fb557-299">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb557-300">Esempio di codice seguente viene illustrato il comportamento tra processi di un semaforo denominato con sicurezza del controllo di accesso.</span><span class="sxs-lookup"><span data-stu-id="fb557-300">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="fb557-301">Nell'esempio viene utilizzato il <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> overload del metodo per verificare l'esistenza di un semaforo denominato.</span><span class="sxs-lookup"><span data-stu-id="fb557-301">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="fb557-302">Se il semaforo non esiste, viene creato con un conteggio massimo di due e con sicurezza del controllo di accesso che nega l'utente corrente il diritto di utilizzare il semaforo, ma concede il diritto di leggere e modificare le autorizzazioni per il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-302">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="fb557-303">Se si esegue l'esempio compilato da due finestre di comando, la seconda copia genererà un'eccezione di violazione di accesso alla chiamata al <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="fb557-303">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="fb557-304">L'eccezione viene intercettata e nell'esempio viene utilizzato il <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> overload del metodo per aprire il semaforo con i diritti necessari per leggere e modificare le autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="fb557-304">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="fb557-305">Dopo la modifica delle autorizzazioni, il semaforo viene aperto con i diritti necessari per immettere e lo rilascia.</span><span class="sxs-lookup"><span data-stu-id="fb557-305">After the permissions are changed, the semaphore is opened with the rights required to enter and release it.</span></span> <span data-ttu-id="fb557-306">Se si esegue l'esempio compilato da una terza finestra di comando, viene eseguito con le nuove autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="fb557-306">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fb557-307">
            <paramref name="name" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-307">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="fb557-308">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-308">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb557-309">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-309">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="fb557-310">The named semaphore does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-310">The named semaphore does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fb557-311">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-311">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="fb557-312">The named semaphore exists, but the user does not have the desired security access rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-312">The named semaphore exists, but the user does not have the desired security access rights.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fb557-313">per chiamare codice non gestito per creare un semaforo di sistema denominato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-313">for calling unmanaged code to create a named system semaphore.</span>
          </span>
          <span data-ttu-id="fb557-314">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-314">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="fb557-315">Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-315">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Release">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fb557-316">Exits the semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-316">Exits the semaphore.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.Release" />
      <MemberSignature Language="VB.NET" Value="Public Function Release () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release();" />
      <MemberSignature Language="F#" Value="member this.Release : unit -&gt; int" Usage="semaphore.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.PrePrepareMethod</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fb557-317">Exits the semaphore and returns the previous count.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-317">Exits the semaphore and returns the previous count.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fb557-318">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-318">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb557-319">I thread usano in genere il <xref:System.Threading.WaitHandle.WaitOne%2A> metodo immettere in genere il semaforo e utilizzare questo overload del metodo per uscire dall'installazione.</span><span class="sxs-lookup"><span data-stu-id="fb557-319">Threads typically use the <xref:System.Threading.WaitHandle.WaitOne%2A> method to enter the semaphore, and they typically use this method overload to exit.</span></span>  
  
 <span data-ttu-id="fb557-320">Se un <xref:System.Threading.SemaphoreFullException> viene generata dal <xref:System.Threading.Semaphore.Release%2A> metodo, non indica necessariamente un problema con il thread chiamante.</span><span class="sxs-lookup"><span data-stu-id="fb557-320">If a <xref:System.Threading.SemaphoreFullException> is thrown by the <xref:System.Threading.Semaphore.Release%2A> method, it does not necessarily indicate a problem with the calling thread.</span></span> <span data-ttu-id="fb557-321">Tale thread uscite dal semaforo più volte di viene immesso potrebbe essere causato da un errore di programmazione in un altro thread.</span><span class="sxs-lookup"><span data-stu-id="fb557-321">A programming error in another thread might have caused that thread to exit the semaphore more times than it entered.</span></span>  
  
 <span data-ttu-id="fb557-322">Se l'oggetto corrente <xref:System.Threading.Semaphore> oggetto rappresenta un semaforo di sistema denominato, l'utente deve disporre <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> diritti e il semaforo deve essere aperto con <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> diritti.</span><span class="sxs-lookup"><span data-stu-id="fb557-322">If the current <xref:System.Threading.Semaphore> object represents a named system semaphore, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb557-323">Esempio di codice seguente crea un semaforo con un conteggio massimo di tre e un conteggio iniziale pari a zero.</span><span class="sxs-lookup"><span data-stu-id="fb557-323">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="fb557-324">Nell'esempio viene avviato cinque thread, tra cui bloccare l'attesa per il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-324">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="fb557-325">Il thread principale utilizza i <xref:System.Threading.Semaphore.Release%28System.Int32%29> overload del metodo per aumentare il conteggio del semaforo al valore massimo, consentendo a tre thread di accedere al semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-325">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="fb557-326">Ogni thread Usa la <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> metodo per attendere un secondo, per simulare il funzionamento e quindi chiama il <xref:System.Threading.Semaphore.Release> overload del metodo per rilasciare il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-326">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span>  
  
 <span data-ttu-id="fb557-327">Ogni volta che viene rilasciato il semaforo, viene visualizzato il conteggio del semaforo precedente.</span><span class="sxs-lookup"><span data-stu-id="fb557-327">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="fb557-328">Utilizzo del semaforo traccia i messaggi della console.</span><span class="sxs-lookup"><span data-stu-id="fb557-328">Console messages track semaphore use.</span></span> <span data-ttu-id="fb557-329">L'intervallo di lavoro simulato viene aumentato leggermente per ogni thread, per rendere più facile da leggere l'output.</span><span class="sxs-lookup"><span data-stu-id="fb557-329">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.SemaphoreFullException">
          <span data-ttu-id="fb557-330">The semaphore count is already at the maximum value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-330">The semaphore count is already at the maximum value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fb557-331">A Win32 error occurred with a named semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-331">A Win32 error occurred with a named semaphore.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="fb557-332">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-332">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span>
          </span>
          <span data-ttu-id="fb557-333">-or-  The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-333">-or-  The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release (int releaseCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release(int32 releaseCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.Release(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Release (releaseCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release(int releaseCount);" />
      <MemberSignature Language="F#" Value="member this.Release : int -&gt; int" Usage="semaphore.Release releaseCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="releaseCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="releaseCount">
          <span data-ttu-id="fb557-334">The number of times to exit the semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-334">The number of times to exit the semaphore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb557-335">Exits the semaphore a specified number of times and returns the previous count.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-335">Exits the semaphore a specified number of times and returns the previous count.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fb557-336">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-336">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb557-337">Se un thread è stato attivato il semaforo più volte, overload di questo metodo consente il conteggio del semaforo intero deve essere ripristinato con un'unica chiamata.</span><span class="sxs-lookup"><span data-stu-id="fb557-337">If a thread has entered the semaphore multiple times, this method overload allows the entire semaphore count to be restored with one call.</span></span>  
  
 <span data-ttu-id="fb557-338">Se un <xref:System.Threading.SemaphoreFullException> viene generata dal <xref:System.Threading.Semaphore.Release%2A> metodo, non indica necessariamente un problema con il thread chiamante.</span><span class="sxs-lookup"><span data-stu-id="fb557-338">If a <xref:System.Threading.SemaphoreFullException> is thrown by the <xref:System.Threading.Semaphore.Release%2A> method, it does not necessarily indicate a problem with the calling thread.</span></span> <span data-ttu-id="fb557-339">Tale thread uscite dal semaforo più volte di viene immesso potrebbe essere causato da un errore di programmazione in un altro thread.</span><span class="sxs-lookup"><span data-stu-id="fb557-339">A programming error in another thread might have caused that thread to exit the semaphore more times than it entered.</span></span>  
  
 <span data-ttu-id="fb557-340">Se l'oggetto corrente <xref:System.Threading.Semaphore> oggetto rappresenta un semaforo di sistema denominato, l'utente deve disporre <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> diritti e il semaforo deve essere aperto con <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> diritti.</span><span class="sxs-lookup"><span data-stu-id="fb557-340">If the current <xref:System.Threading.Semaphore> object represents a named system semaphore, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb557-341">Esempio di codice seguente crea un semaforo con un conteggio massimo di tre e un conteggio iniziale pari a zero.</span><span class="sxs-lookup"><span data-stu-id="fb557-341">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="fb557-342">Nell'esempio viene avviato cinque thread, tra cui bloccare l'attesa per il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-342">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="fb557-343">Il thread principale utilizza i <xref:System.Threading.Semaphore.Release%28System.Int32%29> overload del metodo per aumentare il conteggio del semaforo al valore massimo, consentendo a tre thread di accedere al semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-343">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="fb557-344">Ogni thread Usa la <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> metodo per attendere un secondo, per simulare il funzionamento e quindi chiama il <xref:System.Threading.Semaphore.Release> overload del metodo per rilasciare il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-344">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span>  
  
 <span data-ttu-id="fb557-345">Ogni volta che viene rilasciato il semaforo, viene visualizzato il conteggio del semaforo precedente.</span><span class="sxs-lookup"><span data-stu-id="fb557-345">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="fb557-346">Utilizzo del semaforo traccia i messaggi della console.</span><span class="sxs-lookup"><span data-stu-id="fb557-346">Console messages track semaphore use.</span></span> <span data-ttu-id="fb557-347">L'intervallo di lavoro simulato viene aumentato leggermente per ogni thread, per rendere più facile da leggere l'output.</span><span class="sxs-lookup"><span data-stu-id="fb557-347">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fb557-348">
            <paramref name="releaseCount" /> is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-348">
              <paramref name="releaseCount" /> is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.SemaphoreFullException">
          <span data-ttu-id="fb557-349">The semaphore count is already at the maximum value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-349">The semaphore count is already at the maximum value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fb557-350">A Win32 error occurred with a named semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-350">A Win32 error occurred with a named semaphore.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="fb557-351">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-351">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span>
          </span>
          <span data-ttu-id="fb557-352">-or-  The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-352">-or-  The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::SemaphoreSecurity ^ semaphoreSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.SemaphoreSecurity -&gt; unit" Usage="semaphore.SetAccessControl semaphoreSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semaphoreSecurity" Type="System.Security.AccessControl.SemaphoreSecurity" />
      </Parameters>
      <Docs>
        <param name="semaphoreSecurity">
          <span data-ttu-id="fb557-353">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-353">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb557-354">Sets the access control security for a named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-354">Sets the access control security for a named system semaphore.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb557-355">È possibile impostare la sicurezza del controllo di accesso solo su <xref:System.Threading.Semaphore> gli oggetti che rappresentano i semafori di sistema denominato.</span><span class="sxs-lookup"><span data-stu-id="fb557-355">You can set access control security only on <xref:System.Threading.Semaphore> objects that represent named system semaphores.</span></span>  
  
 <span data-ttu-id="fb557-356">L'utente deve disporre <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> diritti per chiamare questo metodo e il semaforo devono essere aperto con <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> diritti.</span><span class="sxs-lookup"><span data-stu-id="fb557-356">The user must have <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> rights to call this method, and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb557-357">Esempio di codice seguente viene illustrato il comportamento tra processi di un semaforo denominato con sicurezza del controllo di accesso.</span><span class="sxs-lookup"><span data-stu-id="fb557-357">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="fb557-358">Nell'esempio viene utilizzato il <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> overload del metodo per verificare l'esistenza di un semaforo denominato.</span><span class="sxs-lookup"><span data-stu-id="fb557-358">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="fb557-359">Se il semaforo non esiste, viene creato con un conteggio massimo di due e con sicurezza del controllo di accesso che nega l'utente corrente il diritto di utilizzare il semaforo ma concede il diritto di leggere e modificare le autorizzazioni per il semaforo.</span><span class="sxs-lookup"><span data-stu-id="fb557-359">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="fb557-360">Se si esegue l'esempio compilato da due finestre di comando, la seconda copia genererà un'eccezione di violazione di accesso alla chiamata al <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="fb557-360">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="fb557-361">L'eccezione viene intercettata e nell'esempio viene utilizzato il <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> overload del metodo per aprire il semaforo con i diritti necessari per leggere e modificare le autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="fb557-361">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="fb557-362">Dopo la modifica delle autorizzazioni, utilizzando il <xref:System.Threading.Semaphore.SetAccessControl%2A> metodo, il semaforo viene aperto con i diritti necessari per immettere e rilasciare.</span><span class="sxs-lookup"><span data-stu-id="fb557-362">After the permissions are changed, using the <xref:System.Threading.Semaphore.SetAccessControl%2A> method, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="fb557-363">Se si esegue l'esempio compilato da una terza finestra di comando, viene eseguito con le nuove autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="fb557-363">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb557-364">
            <paramref name="semaphoreSecurity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-364">
              <paramref name="semaphoreSecurity" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="fb557-365">The user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-365">The user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span>
          </span>
          <span data-ttu-id="fb557-366">-or-  The semaphore was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-366">-or-  The semaphore was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fb557-367">The current <see cref="T:System.Threading.Semaphore" /> object does not represent a named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-367">The current <see cref="T:System.Threading.Semaphore" /> object does not represent a named system semaphore.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryOpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fb557-368">Opens a specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-368">Opens a specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, out System.Threading.Semaphore result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, [out] class System.Threading.Semaphore&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, ByRef result As Semaphore) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, [Runtime::InteropServices::Out] System::Threading::Semaphore ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string *  -&gt; bool" Usage="System.Threading.Semaphore.TryOpenExisting (name, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="result" Type="System.Threading.Semaphore&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fb557-369">The name of the system semaphore to open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-369">The name of the system semaphore to open.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="fb557-370">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-370">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span>
          </span>
          <span data-ttu-id="fb557-371">This parameter is treated as uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-371">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb557-372">Opens the specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-372">Opens the specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fb557-373">
            <see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-373">
              <see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb557-374">Se il semaforo denominato non esiste, questo metodo non crearlo.</span><span class="sxs-lookup"><span data-stu-id="fb557-374">If the named semaphore does not exist, this method does not create it.</span></span> <span data-ttu-id="fb557-375">Per creare il semaforo di sistema quando non esiste già, utilizzare uno del <xref:System.Threading.Semaphore.%23ctor%2A> costruttori che dispone di un `name` parametro.</span><span class="sxs-lookup"><span data-stu-id="fb557-375">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="fb557-376">Se non si è certi se esiste già un semaforo denominato, utilizzare questo overload del metodo anziché il <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> overload del metodo che genera un'eccezione se il semaforo non esiste.</span><span class="sxs-lookup"><span data-stu-id="fb557-376">If you are uncertain whether a named semaphore exists, use this method overload instead of the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload, which throws an exception if the semaphore does not exist.</span></span>  
  
 <span data-ttu-id="fb557-377">Overload di questo metodo è equivalente alla chiamata di <xref:System.Threading.Semaphore.TryOpenExisting%2A> overload del metodo e specificando <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> e <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> diritti, combinati tramite l'operazione OR bit per bit.</span><span class="sxs-lookup"><span data-stu-id="fb557-377">This method overload is equivalent to calling the <xref:System.Threading.Semaphore.TryOpenExisting%2A> method overload and specifying <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span> <span data-ttu-id="fb557-378">Specifica il <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag consente a un thread di accedere al semaforo e specificando il <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag consente a un thread chiamare il <xref:System.Threading.Semaphore.Release%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="fb557-378">Specifying the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag allows a thread to enter the semaphore, and specifying the   <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fb557-379">
            <paramref name="name" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-379">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="fb557-380">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-380">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb557-381">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-381">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fb557-382">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-382">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="fb557-383">The named semaphore exists, but the user does not have the security access required to use it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-383">The named semaphore exists, but the user does not have the security access required to use it.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, System.Security.AccessControl.SemaphoreRights rights, out System.Threading.Semaphore result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, valuetype System.Security.AccessControl.SemaphoreRights rights, [out] class System.Threading.Semaphore&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Security.AccessControl.SemaphoreRights,System.Threading.Semaphore@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, rights As SemaphoreRights, ByRef result As Semaphore) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, System::Security::AccessControl::SemaphoreRights rights, [Runtime::InteropServices::Out] System::Threading::Semaphore ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string * System.Security.AccessControl.SemaphoreRights *  -&gt; bool" Usage="System.Threading.Semaphore.TryOpenExisting (name, rights, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Security.AccessControl.SemaphoreRights" />
        <Parameter Name="result" Type="System.Threading.Semaphore&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fb557-384">The name of the system semaphore to open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-384">The name of the system semaphore to open.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="fb557-385">A bitwise combination of the enumeration values that represent the desired security access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-385">A bitwise combination of the enumeration values that represent the desired security access.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="fb557-386">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-386">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span>
          </span>
          <span data-ttu-id="fb557-387">This parameter is treated as uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-387">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb557-388">Opens the specified named semaphore, if it already exists, with the desired security access, and returns a value that indicates whether the operation succeeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-388">Opens the specified named semaphore, if it already exists, with the desired security access, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fb557-389">
            <see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-389">
              <see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb557-390">Se il semaforo denominato non esiste, questo metodo non crearlo.</span><span class="sxs-lookup"><span data-stu-id="fb557-390">If the named semaphore does not exist, this method does not create it.</span></span> <span data-ttu-id="fb557-391">Per creare il semaforo di sistema quando non esiste già, utilizzare uno del <xref:System.Threading.Semaphore.%23ctor%2A> costruttori che dispone di un `name` parametro.</span><span class="sxs-lookup"><span data-stu-id="fb557-391">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="fb557-392">Se non si è certi se esiste già un semaforo denominato, utilizzare questo overload del metodo anziché il <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> overload del metodo che genera un'eccezione se il semaforo non esiste.</span><span class="sxs-lookup"><span data-stu-id="fb557-392">If you are uncertain whether a named semaphore exists, use this method overload instead of the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload, which throws an exception if the semaphore does not exist.</span></span>  
  
 <span data-ttu-id="fb557-393">Il `rights` parametro deve includere il <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag per consentire ai thread di accedere al semaforo e il <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag per consentire ai thread di chiamare il <xref:System.Threading.Semaphore.Release%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="fb557-393">The `rights` parameter must include the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag to allow threads to enter the semaphore, and the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="fb557-394">Più chiamate al metodo che utilizzano lo stesso valore per `name` non necessariamente restituire lo stesso <xref:System.Threading.Semaphore> dell'oggetto, anche se gli oggetti sono restituiti rappresentano lo stesso semaforo di sistema.</span><span class="sxs-lookup"><span data-stu-id="fb557-394">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fb557-395">
            <paramref name="name" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-395">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="fb557-396">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-396">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb557-397">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-397">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fb557-398">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-398">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="fb557-399">The named semaphore exists, but the user does not have the security access required to use it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb557-399">The named semaphore exists, but the user does not have the security access required to use it.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>