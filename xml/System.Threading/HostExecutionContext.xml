<Type Name="HostExecutionContext" FullName="System.Threading.HostExecutionContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf76fde971f1588ef6a03ba344f9a7f11c3806c9" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37609209" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HostExecutionContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostExecutionContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.HostExecutionContext" />
  <TypeSignature Language="VB.NET" Value="Public Class HostExecutionContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostExecutionContext : IDisposable" />
  <TypeSignature Language="F#" Value="type HostExecutionContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ffdc3-101">Incapsula e propaga il contesto di esecuzione host fra i thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ffdc3-101">Encapsulates and propagates the host execution context across threads.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffdc3-102">Il <xref:System.Threading.HostExecutionContext> fa parte di una maggiore <xref:System.Threading.ExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-102">The <xref:System.Threading.HostExecutionContext> is part of a larger <xref:System.Threading.ExecutionContext>.</span></span> <span data-ttu-id="ffdc3-103">Il contesto dell'host viene eseguita la migrazione o viene trasmesso, con il contesto di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-103">The host context migrates, or flows, with the execution context.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ffdc3-104">Inizializza una nuova istanza della classe <see cref="T:System.Threading.HostExecutionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffdc3-104">Initializes a new instance of the <see cref="T:System.Threading.HostExecutionContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostExecutionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostExecutionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ffdc3-105">Inizializza una nuova istanza della classe <see cref="T:System.Threading.HostExecutionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffdc3-105">Initializes a new instance of the <see cref="T:System.Threading.HostExecutionContext" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffdc3-106">Il costruttore predefinito crea un contesto di esecuzione host il cui <xref:System.Threading.HostExecutionContext.State%2A> valore della proprietà è `null`.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-106">The default constructor creates a host execution context whose <xref:System.Threading.HostExecutionContext.State%2A> property value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostExecutionContext (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContext.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostExecutionContext(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Threading.HostExecutionContext : obj -&gt; System.Threading.HostExecutionContext" Usage="new System.Threading.HostExecutionContext state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="ffdc3-107">Oggetto che rappresenta lo stato del contesto di esecuzione dell'host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffdc3-107">An object representing the host execution context state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ffdc3-108">Inizializza una nuova istanza della classe <see cref="T:System.Threading.HostExecutionContext" /> con lo stato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffdc3-108">Initializes a new instance of the <see cref="T:System.Threading.HostExecutionContext" /> class using the specified state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffdc3-109">Il <xref:System.Threading.HostExecutionContext> è incluso con il <xref:System.Threading.ExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-109">The <xref:System.Threading.HostExecutionContext> is included with the <xref:System.Threading.ExecutionContext>.</span></span> <span data-ttu-id="ffdc3-110">Il `state` rappresenta un handle safe che contiene il `IUnknown` puntatore per l'host.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-110">The `state` represents a safe handle containing the `IUnknown` pointer for the host.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.HostExecutionContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCopy () As HostExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::HostExecutionContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="abstract member CreateCopy : unit -&gt; System.Threading.HostExecutionContext&#xA;override this.CreateCopy : unit -&gt; System.Threading.HostExecutionContext" Usage="hostExecutionContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ffdc3-111">Crea una copia del contesto di esecuzione dell'host corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffdc3-111">Creates a copy of the current host execution context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ffdc3-112">Oggetto <see cref="T:System.Threading.HostExecutionContext" /> che rappresenta il contesto dell'host per il thread corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffdc3-112">A <see cref="T:System.Threading.HostExecutionContext" /> object representing the host context for the current thread.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffdc3-113">La copia può essere utilizzata come parametro a un <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A?displayProperty=nameWithType> chiamata al metodo.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-113">The copy can be used as the parameter to a <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A?displayProperty=nameWithType> method call.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ffdc3-114">Rilascia le risorse usate dall'istanza corrente della classe <see cref="T:System.Threading.HostExecutionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffdc3-114">Releases resources used by the current instance of the <see cref="T:System.Threading.HostExecutionContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="hostExecutionContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ffdc3-115">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Threading.HostExecutionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffdc3-115">Releases all resources used by the current instance of the <see cref="T:System.Threading.HostExecutionContext" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffdc3-116">Chiamare il metodo `Dispose` dopo aver terminato di utilizzare l'oggetto <xref:System.Threading.HostExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-116">Call `Dispose` when you are finished using the <xref:System.Threading.HostExecutionContext>.</span></span> <span data-ttu-id="ffdc3-117">Il metodo `Dispose` lascia l'oggetto <xref:System.Threading.HostExecutionContext> in una condizione di inutilizzabilità.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-117">The `Dispose` method leaves the <xref:System.Threading.HostExecutionContext> in an unusable state.</span></span> <span data-ttu-id="ffdc3-118">Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti per il <xref:System.Threading.HostExecutionContext> in modo che il garbage collector di recuperare la memoria che il <xref:System.Threading.HostExecutionContext> occupata.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-118">After calling `Dispose`, you must release all references to the <xref:System.Threading.HostExecutionContext> so the garbage collector can reclaim the memory that the <xref:System.Threading.HostExecutionContext> was occupying.</span></span>  
  
 <span data-ttu-id="ffdc3-119">Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementa un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="ffdc3-119">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ffdc3-120">Chiamare sempre il metodo `Dispose` prima di rilasciare l'ultimo riferimento a <xref:System.Threading.HostExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-120">Always call `Dispose` before you release your last reference to the <xref:System.Threading.HostExecutionContext>.</span></span> <span data-ttu-id="ffdc3-121">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Threading.HostExecutionContext> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-121">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.HostExecutionContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="hostExecutionContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ffdc3-122">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffdc3-122">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ffdc3-123">Quando ne viene eseguito l'override in una classe derivata, libera le risorse non gestite usate da <see cref="T:System.Threading.WaitHandle" /> ed eventualmente di liberare le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffdc3-123">When overridden in a derived class, releases the unmanaged resources used by the <see cref="T:System.Threading.WaitHandle" />, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffdc3-124">Questo metodo viene chiamato dal <xref:System.Threading.HostExecutionContext.Dispose> overload del metodo e il finalizzatore.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-124">This method is called by the <xref:System.Threading.HostExecutionContext.Dispose> method overload and the finalizer.</span></span> <span data-ttu-id="ffdc3-125"><xref:System.Threading.HostExecutionContext.Dispose> richiama tale metodo protetto con il `disposing` parametro è impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-125"><xref:System.Threading.HostExecutionContext.Dispose> invokes this protected method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="ffdc3-126">Il finalizzatore chiama questo metodo con `disposing` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-126">The finalizer invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="ffdc3-127">Se il parametro `disposing` è `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <xref:System.Threading.HostExecutionContext> fa riferimento.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-127">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Threading.HostExecutionContext> references.</span></span> <span data-ttu-id="ffdc3-128">Il metodo richiama il metodo `Dispose` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-128">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 <span data-ttu-id="ffdc3-129">Questo metodo può essere chiamato più volte da altri oggetti.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-129">This method can be called multiple times by other objects.</span></span> <span data-ttu-id="ffdc3-130">Quando si esegue l'override di questo metodo, prestare attenzione a non fare riferimento agli oggetti che sono stati eliminati in una chiamata precedente.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-130">When overriding this method, be careful not to reference objects that have been previously disposed in an earlier call.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="protected internal object State { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object State" />
      <MemberSignature Language="DocId" Value="P:System.Threading.HostExecutionContext.State" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property State As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Object ^ State { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.State : obj with get, set" Usage="System.Threading.HostExecutionContext.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ffdc3-131">Ottiene o imposta lo stato del contesto di esecuzione dell'host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffdc3-131">Gets or sets the state of the host execution context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ffdc3-132">Oggetto che rappresenta lo stato del contesto di esecuzione dell'host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffdc3-132">An object representing the host execution context state.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffdc3-133">Il <xref:System.Threading.HostExecutionContext.State%2A> valore della proprietà rappresenta un handle safe che contiene il `IUnknown` puntatore per l'host.</span><span class="sxs-lookup"><span data-stu-id="ffdc3-133">The <xref:System.Threading.HostExecutionContext.State%2A> property value represents a safe handle containing the `IUnknown` pointer for the host.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>