<Type Name="CancellationTokenRegistration" FullName="System.Threading.CancellationTokenRegistration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="982d0d2026625938b0ec933187f23b2df99d3bb2" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46647568" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CancellationTokenRegistration : IDisposable, IEquatable&lt;System.Threading.CancellationTokenRegistration&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CancellationTokenRegistration extends System.ValueType implements class System.IDisposable, class System.IEquatable`1&lt;valuetype System.Threading.CancellationTokenRegistration&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.CancellationTokenRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Structure CancellationTokenRegistration&#xA;Implements IDisposable, IEquatable(Of CancellationTokenRegistration)" />
  <TypeSignature Language="C++ CLI" Value="public value class CancellationTokenRegistration : IDisposable, IEquatable&lt;System::Threading::CancellationTokenRegistration&gt;" />
  <TypeSignature Language="F#" Value="type CancellationTokenRegistration = struct&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Threading.CancellationTokenRegistration&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cd7c5-101">Rappresenta un delegato di callback registrato con <see cref="T:System.Threading.CancellationToken" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cd7c5-101">Represents a callback delegate that has been registered with a <see cref="T:System.Threading.CancellationToken" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7c5-102">Il callback viene chiamato quando il token viene annullato.</span><span class="sxs-lookup"><span data-stu-id="cd7c5-102">The callback is called when the token is canceled.</span></span> <span data-ttu-id="cd7c5-103">Per annullare la registrazione di un callback, eliminare l'istanza di registrazione corrispondente.</span><span class="sxs-lookup"><span data-stu-id="cd7c5-103">To unregister a callback, dispose the corresponding Registration instance.</span></span> <span data-ttu-id="cd7c5-104">Per altre informazioni ed esempi di codice, vedere [annullamento in thread gestiti](~/docs/standard/threading/cancellation-in-managed-threads.md).</span><span class="sxs-lookup"><span data-stu-id="cd7c5-104">For more information and code examples see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="cd7c5-105">Tutti i membri pubblici e protetti della <see cref="T:System.Threading.CancellationTokenRegistration" /> sono thread-safe e possono essere usati contemporaneamente da più thread, ad eccezione di Dispose, che deve essere utilizzato quando tutte le altre operazioni su di <see cref="T:System.Threading.CancellationTokenRegistration" /> completati.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cd7c5-105">All public and protected members of <see cref="T:System.Threading.CancellationTokenRegistration" /> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <see cref="T:System.Threading.CancellationTokenRegistration" /> have completed.</span>
      </span>
    </threadsafe>
    <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
      <span data-ttu-id="cd7c5-106">Annullamento</span>
      <span class="sxs-lookup">
        <span data-stu-id="cd7c5-106">Cancellation</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
      <span data-ttu-id="cd7c5-107">Annullamento delle attività</span>
      <span class="sxs-lookup">
        <span data-stu-id="cd7c5-107">Task Cancellation</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/8838dd75-18ed-4b8b-b322-cd4531faac64">
      <span data-ttu-id="cd7c5-108">Procedura: registrare i callback per le richieste di annullamento</span>
      <span class="sxs-lookup">
        <span data-stu-id="cd7c5-108">How to: Register Callbacks for Cancellation Requests</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cancellationTokenRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cd7c5-109">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Threading.CancellationTokenRegistration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-109">Releases all resources used by the current instance of the <see cref="T:System.Threading.CancellationTokenRegistration" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7c5-110">Chiamare il metodo `Dispose` dopo aver terminato di utilizzare l'oggetto <xref:System.Threading.CancellationTokenRegistration>.</span><span class="sxs-lookup"><span data-stu-id="cd7c5-110">Call `Dispose` when you are finished using the <xref:System.Threading.CancellationTokenRegistration>.</span></span> <span data-ttu-id="cd7c5-111">Il metodo `Dispose` lascia l'oggetto <xref:System.Threading.CancellationTokenRegistration> in una condizione di inutilizzabilità.</span><span class="sxs-lookup"><span data-stu-id="cd7c5-111">The `Dispose` method leaves the <xref:System.Threading.CancellationTokenRegistration> in an unusable state.</span></span> <span data-ttu-id="cd7c5-112">Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti per il <xref:System.Threading.CancellationTokenRegistration> in modo che il garbage collector di recuperare la memoria che il <xref:System.Threading.CancellationTokenRegistration> occupata.</span><span class="sxs-lookup"><span data-stu-id="cd7c5-112">After calling `Dispose`, you must release all references to the <xref:System.Threading.CancellationTokenRegistration> so the garbage collector can reclaim the memory that the <xref:System.Threading.CancellationTokenRegistration> was occupying.</span></span>  
  
 <span data-ttu-id="cd7c5-113">Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementa un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="cd7c5-113">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cd7c5-114">Chiamare sempre il metodo `Dispose` prima di rilasciare l'ultimo riferimento a <xref:System.Threading.CancellationTokenRegistration>.</span><span class="sxs-lookup"><span data-stu-id="cd7c5-114">Always call `Dispose` before you release your last reference to the <xref:System.Threading.CancellationTokenRegistration>.</span></span> <span data-ttu-id="cd7c5-115">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Threading.CancellationTokenRegistration> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="cd7c5-115">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CancellationTokenRegistration> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/8838dd75-18ed-4b8b-b322-cd4531faac64">
          <span data-ttu-id="cd7c5-116">Procedura: registrare i callback per le richieste di annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-116">How to: Register Callbacks for Cancellation Requests</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cd7c5-117">Determina se l'istanza di <see cref="T:System.Threading.CancellationTokenRegistration" /> corrente è uguale all'oggetto <see cref="T:System.Threading.CancellationTokenRegistration" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-117">Determines whether the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance is equal to the specified <see cref="T:System.Threading.CancellationTokenRegistration" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cancellationTokenRegistration.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="cd7c5-118">L'altro oggetto con cui confrontare questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-118">The other object to which to compare this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd7c5-119">Determina se l'istanza di <see cref="T:System.Threading.CancellationTokenRegistration" /> corrente è uguale all'oggetto <see cref="T:System.Threading.CancellationTokenRegistration" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-119">Determines whether the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance is equal to the specified <see cref="T:System.Threading.CancellationTokenRegistration" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd7c5-120">True, se questa istanza e <paramref name="obj" /> sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-120">True, if both this and <paramref name="obj" /> are equal.</span>
          </span>
          <span data-ttu-id="cd7c5-121">In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-121">False, otherwise.</span>
          </span>
          <span data-ttu-id="cd7c5-122">Due istanze di <see cref="T:System.Threading.CancellationTokenRegistration" /> sono uguali se entrambe si riferiscono all'output di una sola chiamata allo stesso metodo Register di <see cref="T:System.Threading.CancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-122">Two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are equal if they both refer to the output of a single call to the same Register method of a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="cd7c5-123">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-123">Cancellation</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="cd7c5-124">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-124">Task Cancellation</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8838dd75-18ed-4b8b-b322-cd4531faac64">
          <span data-ttu-id="cd7c5-125">Procedura: registrare i callback per le richieste di annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-125">How to: Register Callbacks for Cancellation Requests</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.CancellationTokenRegistration other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Threading.CancellationTokenRegistration other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CancellationTokenRegistration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Threading::CancellationTokenRegistration other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Threading.CancellationTokenRegistration -&gt; bool" Usage="cancellationTokenRegistration.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Threading.CancellationTokenRegistration" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="cd7c5-126">Altro oggetto <see cref="T:System.Threading.CancellationTokenRegistration" /> con cui confrontare questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-126">The other <see cref="T:System.Threading.CancellationTokenRegistration" /> to which to compare this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd7c5-127">Determina se l'istanza di <see cref="T:System.Threading.CancellationTokenRegistration" /> corrente è uguale all'oggetto <see cref="T:System.Threading.CancellationTokenRegistration" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-127">Determines whether the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance is equal to the specified <see cref="T:System.Threading.CancellationTokenRegistration" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd7c5-128">True, se questa istanza e <paramref name="other" /> sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-128">True, if both this and <paramref name="other" /> are equal.</span>
          </span>
          <span data-ttu-id="cd7c5-129">In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-129">False, otherwise.</span>
          </span>
          <span data-ttu-id="cd7c5-130">Due istanze di <see cref="T:System.Threading.CancellationTokenRegistration" /> sono uguali se entrambe si riferiscono all'output di una sola chiamata allo stesso metodo Register di <see cref="T:System.Threading.CancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-130">Two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are equal if they both refer to the output of a single call to the same Register method of a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="cd7c5-131">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-131">Cancellation</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="cd7c5-132">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-132">Task Cancellation</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8838dd75-18ed-4b8b-b322-cd4531faac64">
          <span data-ttu-id="cd7c5-133">Procedura: registrare i callback per le richieste di annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-133">How to: Register Callbacks for Cancellation Requests</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cancellationTokenRegistration.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cd7c5-134">Viene usato come funzione hash per un oggetto <see cref="T:System.Threading.CancellationTokenRegistration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-134">Serves as a hash function for a <see cref="T:System.Threading.CancellationTokenRegistration" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd7c5-135">Codice hash per l'istanza di <see cref="T:System.Threading.CancellationTokenRegistration" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-135">A hash code for the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="cd7c5-136">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-136">Cancellation</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="cd7c5-137">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-137">Task Cancellation</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8838dd75-18ed-4b8b-b322-cd4531faac64">
          <span data-ttu-id="cd7c5-138">Procedura: registrare i callback per le richieste di annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-138">How to: Register Callbacks for Cancellation Requests</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.CancellationTokenRegistration left, System.Threading.CancellationTokenRegistration right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.CancellationTokenRegistration left, valuetype System.Threading.CancellationTokenRegistration right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CancellationTokenRegistration, right As CancellationTokenRegistration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::CancellationTokenRegistration left, System::Threading::CancellationTokenRegistration right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Threading.CancellationTokenRegistration * System.Threading.CancellationTokenRegistration -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.CancellationTokenRegistration" />
        <Parameter Name="right" Type="System.Threading.CancellationTokenRegistration" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="cd7c5-139">Prima istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-139">The first instance.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="cd7c5-140">Seconda istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-140">The second instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd7c5-141">Determina se due istanze di <see cref="T:System.Threading.CancellationTokenRegistration" /> sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-141">Determines whether two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd7c5-142">True se le istanze sono uguali; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-142">True if the instances are equal; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="cd7c5-143">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-143">Cancellation</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="cd7c5-144">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-144">Task Cancellation</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8838dd75-18ed-4b8b-b322-cd4531faac64">
          <span data-ttu-id="cd7c5-145">Procedura: registrare i callback per le richieste di annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-145">How to: Register Callbacks for Cancellation Requests</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.CancellationTokenRegistration left, System.Threading.CancellationTokenRegistration right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.CancellationTokenRegistration left, valuetype System.Threading.CancellationTokenRegistration right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CancellationTokenRegistration, right As CancellationTokenRegistration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::CancellationTokenRegistration left, System::Threading::CancellationTokenRegistration right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Threading.CancellationTokenRegistration * System.Threading.CancellationTokenRegistration -&gt; bool" Usage="System.Threading.CancellationTokenRegistration.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.CancellationTokenRegistration" />
        <Parameter Name="right" Type="System.Threading.CancellationTokenRegistration" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="cd7c5-146">Prima istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-146">The first instance.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="cd7c5-147">Seconda istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-147">The second instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd7c5-148">Determina se due istanze di <see cref="T:System.Threading.CancellationTokenRegistration" /> non sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-148">Determines whether two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd7c5-149">True se le istanze non sono uguali; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-149">True if the instances are not equal; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="cd7c5-150">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-150">Cancellation</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="cd7c5-151">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-151">Task Cancellation</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8838dd75-18ed-4b8b-b322-cd4531faac64">
          <span data-ttu-id="cd7c5-152">Procedura: registrare i callback per le richieste di annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd7c5-152">How to: Register Callbacks for Cancellation Requests</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken Token" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationTokenRegistration.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken Token { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : System.Threading.CancellationToken" Usage="System.Threading.CancellationTokenRegistration.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>