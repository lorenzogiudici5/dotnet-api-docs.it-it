<Type Name="ParameterizedThreadStart" FullName="System.Threading.ParameterizedThreadStart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7e9809df31d945522ec0d059c85cdd015cbce79" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36606270" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ParameterizedThreadStart(object obj);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParameterizedThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ParameterizedThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ParameterizedThreadStart(obj As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ParameterizedThreadStart(System::Object ^ obj);" />
  <TypeSignature Language="F#" Value="type ParameterizedThreadStart = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="obj" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="obj">Oggetto che contiene i dati per la routine del thread.</param>
    <summary>Rappresenta il metodo eseguito in un oggetto <see cref="T:System.Threading.Thread" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene creato un thread gestito, il metodo che viene eseguita sul thread è rappresentato da:  
  
-   Un <xref:System.Threading.ThreadStart> delegato che viene passato per il <xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=nameWithType> costruttore.  Qualsiasi metodo che non ha parametri e restituisce `void` in c# o un `Sub` routine in Visual Basic può rappresentare il delegato.  
  
-   Un <xref:System.Threading.ParameterizedThreadStart> delegato che viene passato per il <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29?displayProperty=nameWithType> costruttore. Qualsiasi metodo che presenta un singolo parametro di tipo <xref:System.Object> e che restituisce void in c# o una routine Sub in Visual Basic può rappresentare il delegato.  
  
 Il thread non viene avviato l'esecuzione finché la <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> metodo viene chiamato. Il <xref:System.Threading.ThreadStart> o <xref:System.Threading.ParameterizedThreadStart> delegato viene richiamato sul thread e l'esecuzione in cui inizia la prima riga del metodo rappresentato dal delegato. Nel caso del <xref:System.Threading.ParameterizedThreadStart> delegare, l'oggetto passato per il <xref:System.Threading.Thread.Start%28System.Object%29> viene passato al delegato.  
  
> [!NOTE]
>  Gli utenti di Visual Basic e c# è possono omettere il <xref:System.Threading.ThreadStart> o <xref:System.Threading.ParameterizedThreadStart> costruttore di delegato durante la creazione di un thread. In Visual Basic, usare il `AddressOf` operatore quando si passa il metodo per il <xref:System.Threading.Thread.%23ctor%2A> costruttore, ad esempio `Dim t As New Thread(AddressOf ThreadProc)`. Nel linguaggio c#, è sufficiente specificare il nome della routine del thread. Il compilatore seleziona il costruttore di delegato corretto.  
  
> [!NOTE]
>  Quando si crea un <xref:System.Threading.ParameterizedThreadStart> delegato per un metodo di istanza in C++, il primo parametro del costruttore è la variabile di istanza. Per un metodo statico, il primo parametro del costruttore è zero. Per un metodo statico, il costruttore di delegato richiede un solo parametro: l'indirizzo del metodo di callback, qualificato dal nome della classe.  
  
 Il <xref:System.Threading.ParameterizedThreadStart> delegato e il <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> overload del metodo semplificano passare dati a una procedura thread, ma questa tecnica non è indipendente dai tipi perché qualsiasi oggetto può essere passato a <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType>. Un modo più efficiente per passare dati a una procedura thread è inserire entrambi i campi dati e la procedura del thread in un oggetto di lavoro. Per altre informazioni, vedere [creazione di thread e passaggio di dati in fase di avvio](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).  
  
 Il <xref:System.Threading.ParameterizedThreadStart> delegato supporta solo un singolo parametro. È possibile passare più elementi di dati per il <xref:System.Threading.ParameterizedThreadStart> apportando tale parametro di uno dei seguenti:  
  
-   Una matrice.  
  
-   Un tipo di raccolta, se tutti gli elementi dati sono dello stesso tipo.  
  
-   Digitare una tupla, ad esempio <xref:System.Tuple%602> o <xref:System.Tuple%604>.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare un <xref:System.Threading.ParameterizedThreadStart> delegato per eseguire un metodo statico e un metodo di istanza. Il primo <xref:System.Threading.ParameterizedThreadStart> delegato è rappresentato da statica `DoWork` metodo e il secondo è rappresentato dall'istanza `DoMoreWork` metodo. Entrambi i metodi di corrispondano di <xref:System.Threading.ParameterizedThreadStart> firma del delegato; vale a dire, dispongono di un singolo parametro di tipo <xref:System.Object> e non restituisce alcun valore.  
  
> [!NOTE]
>  I compilatori Visual Basic e c# deducono il <xref:System.Threading.ParameterizedThreadStart> delegare dalle firme del `DoWork` e `DoMoreWork` metodi e chiamare il costruttore corretto. Pertanto, non è disponibile alcuna chiamata esplicita al costruttore nel codice.  
  
 [!code-cpp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CS/source.cs#1)]
 [!code-vb[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
  </Docs>
</Type>