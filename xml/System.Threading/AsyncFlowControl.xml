<Type Name="AsyncFlowControl" FullName="System.Threading.AsyncFlowControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6dae693cd1ac3ea4d8fb159e78d5e7190097d98" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30528545" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct AsyncFlowControl : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AsyncFlowControl extends System.ValueType implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.AsyncFlowControl" />
  <TypeSignature Language="VB.NET" Value="Public Structure AsyncFlowControl&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public value class AsyncFlowControl : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8b2cb-101">Fornisce la funzionalità per ripristinare la migrazione, o flusso, del contesto di esecuzione fra thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b2cb-101">Provides the functionality to restore the migration, or flow, of the execution context between threads.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b2cb-102">Un contesto di esecuzione contiene tutte le informazioni relative all'esecuzione di un thread logico.</span><span class="sxs-lookup"><span data-stu-id="8b2cb-102">An execution context contains all execution-related information for a logical thread.</span></span> <span data-ttu-id="8b2cb-103">Per impedire il flusso del contesto di esecuzione di altri thread, è possibile utilizzare il <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> metodo, che restituisce un <xref:System.Threading.AsyncFlowControl> struttura.</span><span class="sxs-lookup"><span data-stu-id="8b2cb-103">The flow of the execution context to other threads can be prevented by using the <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> method, which returns an <xref:System.Threading.AsyncFlowControl> structure.</span></span> <span data-ttu-id="8b2cb-104">Il <xref:System.Threading.AsyncFlowControl.Undo%2A> metodo dell'oggetto restituito <xref:System.Threading.AsyncFlowControl> struttura può essere utilizzata per annullare la soppressione del flusso.</span><span class="sxs-lookup"><span data-stu-id="8b2cb-104">The <xref:System.Threading.AsyncFlowControl.Undo%2A> method of the returned <xref:System.Threading.AsyncFlowControl> structure can be used to undo the flow suppression.</span></span> <span data-ttu-id="8b2cb-105">Il <xref:System.Threading.AsyncFlowControl> struttura deve essere utilizzata nello stesso thread in cui è stato creato.</span><span class="sxs-lookup"><span data-stu-id="8b2cb-105">The <xref:System.Threading.AsyncFlowControl> structure must be used on the same thread on which it was created.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b2cb-106">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Threading.AsyncFlowControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-106">Releases all resources used by the current instance of the <see cref="T:System.Threading.AsyncFlowControl" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b2cb-107">Chiamare il metodo `Dispose` dopo aver terminato di utilizzare l'oggetto <xref:System.Threading.AsyncFlowControl>.</span><span class="sxs-lookup"><span data-stu-id="8b2cb-107">Call `Dispose` when you are finished using the <xref:System.Threading.AsyncFlowControl>.</span></span> <span data-ttu-id="8b2cb-108">Il metodo `Dispose` lascia l'oggetto <xref:System.Threading.AsyncFlowControl> in una condizione di inutilizzabilità.</span><span class="sxs-lookup"><span data-stu-id="8b2cb-108">The `Dispose` method leaves the <xref:System.Threading.AsyncFlowControl> in an unusable state.</span></span> <span data-ttu-id="8b2cb-109">Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti al <xref:System.Threading.AsyncFlowControl> in modo che il garbage collector può recuperare la memoria che di <xref:System.Threading.AsyncFlowControl> occupata.</span><span class="sxs-lookup"><span data-stu-id="8b2cb-109">After calling `Dispose`, you must release all references to the <xref:System.Threading.AsyncFlowControl> so the garbage collector can reclaim the memory that the <xref:System.Threading.AsyncFlowControl> was occupying.</span></span>  
  
 <span data-ttu-id="8b2cb-110">Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="8b2cb-110">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b2cb-111">Chiamare sempre il metodo `Dispose` prima di rilasciare l'ultimo riferimento a <xref:System.Threading.AsyncFlowControl>.</span><span class="sxs-lookup"><span data-stu-id="8b2cb-111">Always call `Dispose` before you release your last reference to the <xref:System.Threading.AsyncFlowControl>.</span></span> <span data-ttu-id="8b2cb-112">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Threading.AsyncFlowControl> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="8b2cb-112">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.AsyncFlowControl> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b2cb-113">La struttura <see cref="T:System.Threading.AsyncFlowControl" /> non viene utilizzata sul thread in cui è stata creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-113">The <see cref="T:System.Threading.AsyncFlowControl" /> structure is not used on the thread where it was created.</span>
          </span>
          <span data-ttu-id="8b2cb-114">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-114">-or-</span>
          </span>
          <span data-ttu-id="8b2cb-115">La struttura <see cref="T:System.Threading.AsyncFlowControl" /> è già stata utilizzata per chiamare il metodo <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> o <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-115">The <see cref="T:System.Threading.AsyncFlowControl" /> structure has already been used to call <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> or <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b2cb-116">Determina se due istanze sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-116">Determines whether two instances are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8b2cb-117">Oggetto da confrontare con la struttura corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-117">An object to compare with the current structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b2cb-118">Determina se l'oggetto specificato è uguale alla struttura <see cref="T:System.Threading.AsyncFlowControl" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-118">Determines whether the specified object is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b2cb-119">
            <see langword="true" /> se <paramref name="obj" /> è una struttura <see cref="T:System.Threading.AsyncFlowControl" /> ed è uguale alla struttura <see cref="T:System.Threading.AsyncFlowControl" /> corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-119">
              <see langword="true" /> if <paramref name="obj" /> is an <see cref="T:System.Threading.AsyncFlowControl" /> structure and is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.AsyncFlowControl obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Threading.AsyncFlowControl obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As AsyncFlowControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Threading::AsyncFlowControl obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Threading.AsyncFlowControl" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8b2cb-120">Struttura <see cref="T:System.Threading.AsyncFlowControl" /> da confrontare con la struttura corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-120">An <see cref="T:System.Threading.AsyncFlowControl" /> structure to compare with the current structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b2cb-121">Determina se la struttura <see cref="T:System.Threading.AsyncFlowControl" /> specificata è uguale alla struttura <see cref="T:System.Threading.AsyncFlowControl" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-121">Determines whether the specified <see cref="T:System.Threading.AsyncFlowControl" /> structure is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b2cb-122">
            <see langword="true" /> se <paramref name="obj" /> è uguale alla struttura <see cref="T:System.Threading.AsyncFlowControl" /> corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-122">
              <see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b2cb-123">Ottiene un codice hash per la struttura <see cref="T:System.Threading.AsyncFlowControl" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-123">Gets a hash code for the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b2cb-124">Codice hash per la struttura <see cref="T:System.Threading.AsyncFlowControl" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-124">A hash code for the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.AsyncFlowControl a, valuetype System.Threading.AsyncFlowControl b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As AsyncFlowControl, b As AsyncFlowControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::AsyncFlowControl a, System::Threading::AsyncFlowControl b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Threading.AsyncFlowControl" />
        <Parameter Name="b" Type="System.Threading.AsyncFlowControl" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="8b2cb-125">Struttura <see cref="T:System.Threading.AsyncFlowControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-125">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="8b2cb-126">Struttura <see cref="T:System.Threading.AsyncFlowControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-126">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b2cb-127">Confronta due strutture <see cref="T:System.Threading.AsyncFlowControl" /> per stabilire se sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-127">Compares two <see cref="T:System.Threading.AsyncFlowControl" /> structures to determine whether they are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b2cb-128">
            <see langword="true" /> se le due strutture sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-128">
              <see langword="true" /> if the two structures are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8b2cb-129">Il metodo equivalente per l'operatore è <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8b2cb-129">The equivalent method for this operator is <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.AsyncFlowControl a, valuetype System.Threading.AsyncFlowControl b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As AsyncFlowControl, b As AsyncFlowControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::AsyncFlowControl a, System::Threading::AsyncFlowControl b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Threading.AsyncFlowControl" />
        <Parameter Name="b" Type="System.Threading.AsyncFlowControl" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="8b2cb-130">Struttura <see cref="T:System.Threading.AsyncFlowControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-130">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="8b2cb-131">Struttura <see cref="T:System.Threading.AsyncFlowControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-131">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b2cb-132">Confronta due strutture <see cref="T:System.Threading.AsyncFlowControl" /> per stabilire se sono diverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-132">Compares two <see cref="T:System.Threading.AsyncFlowControl" /> structures to determine whether they are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b2cb-133">
            <see langword="true" /> se le strutture non sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-133">
              <see langword="true" /> if the structures are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8b2cb-134">Il metodo equivalente per l'operatore è <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8b2cb-134">The equivalent method for this operator is <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b2cb-135">Ripristina il flusso del contesto di esecuzione tra i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-135">Restores the flow of the execution context between threads.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b2cb-136">Il <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Threading.AsyncFlowControl> struttura utilizzata per ripristinare il flusso.</span><span class="sxs-lookup"><span data-stu-id="8b2cb-136">The <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> method returns an <xref:System.Threading.AsyncFlowControl> structure that is used to restore the flow.</span></span>  
  
 <span data-ttu-id="8b2cb-137">Il <xref:System.Threading.AsyncFlowControl.Undo%2A> metodo deve essere chiamato solo per il <xref:System.Threading.AsyncFlowControl> struttura restituita dall'oggetto associato <xref:System.Threading.ExecutionContext.SuppressFlow%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="8b2cb-137">The <xref:System.Threading.AsyncFlowControl.Undo%2A> method must be called only on the <xref:System.Threading.AsyncFlowControl> structure returned by its associated <xref:System.Threading.ExecutionContext.SuppressFlow%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b2cb-138">La struttura <see cref="T:System.Threading.AsyncFlowControl" /> non viene utilizzata sul thread in cui è stata creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-138">The <see cref="T:System.Threading.AsyncFlowControl" /> structure is not used on the thread where it was created.</span>
          </span>
          <span data-ttu-id="8b2cb-139">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-139">-or-</span>
          </span>
          <span data-ttu-id="8b2cb-140">La struttura <see cref="T:System.Threading.AsyncFlowControl" /> è già stata utilizzata per chiamare il metodo <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> o <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b2cb-140">The <see cref="T:System.Threading.AsyncFlowControl" /> structure has already been used to call <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> or <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>