<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SemaphoreFullException.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5096d1c8bde9d947309b86d79d946baa395a19dd8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">096d1c8bde9d947309b86d79d946baa395a19dd8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.SemaphoreFullException">
          <source>The exception that is thrown when the <ph id="ph1">&lt;see cref="Overload:System.Threading.Semaphore.Release" /&gt;</ph> method is called on a semaphore whose count is already at the maximum.</source>
          <target state="translated">Eccezione generata quando il metodo <ph id="ph1">&lt;see cref="Overload:System.Threading.Semaphore.Release" /&gt;</ph> viene chiamato su un semaforo il cui conteggio ha già raggiunto il valore massimo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>The count on a semaphore is decremented each time a thread enters the semaphore, and incremented when a thread releases the semaphore.</source>
          <target state="translated">Il numero su un semaforo viene decrementato ogni volta che un thread accede al semaforo e incrementato quando un thread rilascia il semaforo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>When the count is zero, subsequent requests block until other threads release the semaphore.</source>
          <target state="translated">Quando il conteggio è zero, le richieste successive bloccata fino a quando non altri thread rilasciano il semaforo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created.</source>
          <target state="translated">Quando tutti i thread hanno rilasciato il semaforo, il numero viene raggiunto il valore massimo specificato quando è stato creato il semaforo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>If a programming error causes a thread to call the <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A?displayProperty=nameWithType&gt;</ph> method at this point, a <ph id="ph2">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> is thrown.</source>
          <target state="translated">Se un thread chiama a causa di un errore di programmazione il <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A?displayProperty=nameWithType&gt;</ph> metodo a questo punto, un <ph id="ph2">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> class does not enforce thread identity on calls to the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Threading.Semaphore.Release%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> identità thread alle chiamate a non applicare la classe di <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph3">&lt;xref:System.Threading.Semaphore.Release%2A?displayProperty=nameWithType&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>It is not necessary for the same thread that called <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> to call <ph id="ph2">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph>.</source>
          <target state="translated">Non è necessario per lo stesso thread che ha chiamato <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> chiamare <ph id="ph2">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source><ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> does not necessarily indicate a problem with the code where the exception occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> non indica necessariamente un problema con il codice in cui si è verificata l'eccezione.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>Consider the following scenario: Thread A and thread B enter a semaphore that has a maximum count of two.</source>
          <target state="translated">Si consideri lo scenario seguente: Thread A e B accedano a un semaforo con un numero massimo di due.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>A programming error in thread B causes it to call <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph> twice, so that the count on the semaphore is full.</source>
          <target state="translated">Un errore di programmazione nel thread B fa sì che la chiamata a <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph> due volte, in modo che il conteggio del semaforo è completo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>As a result, when thread A eventually calls <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph>, a <ph id="ph2">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> is thrown.</source>
          <target state="translated">Di conseguenza, quando il thread chiama <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>For a list of initial property values for an instance of the <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> class, see the <ph id="ph2">&lt;xref:System.Threading.SemaphoreFullException.%23ctor&gt;</ph> constructor.</source>
          <target state="translated">Per un elenco dei valori iniziali delle proprietà di un'istanza della classe <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph>, vedere il costruttore <ph id="ph2">&lt;xref:System.Threading.SemaphoreFullException.%23ctor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>The following code example shows how a programming error in one thread can lead to a <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> in another thread: Two threads enter a semaphore.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come un errore di programmazione in un thread può comportare un <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> in un altro thread: due thread un semaforo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>The second thread releases the semaphore twice, while the first thread is still executing its task.</source>
          <target state="translated">Il secondo thread rilascia il semaforo due volte, mentre il primo thread è ancora in esecuzione l'attività.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>When the first thread finishes and releases the semaphore, the semaphore count is already full and an exception is thrown.</source>
          <target state="translated">Quando il primo thread termina e rilascia il semaforo, il conteggio del semaforo è completo e viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Threading.SemaphoreFullException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> class with default values.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> con i valori predefiniti.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Adding the given count to the semaphore would cause it to exceed its maximum count."</source>
          <target state="translated">Questo costruttore inizializza la <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> proprietà della nuova istanza di un messaggio fornito dal sistema che descrive l'errore, ad esempio "Aggiunta del conteggio specificato al semaforo verrebbe al superamento del limite massimo."</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Questo messaggio prende in considerazione le impostazioni cultura correnti del sistema.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>The following table shows the initial property values for an instance of the <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> class.</source>
          <target state="translated">Nella tabella riportata di seguito sono illustrati i valori iniziali delle proprietà per un'istanza della classe <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>Property</source>
          <target state="translated">Proprietà</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>Value</source>
          <target state="translated">Valore</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>The system-supplied error message string.</source>
          <target state="translated">La stringa di messaggio di errore fornito dal sistema.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> con un messaggio di errore specificato.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is a text string intended to inform the user about the exception.</source>
          <target state="translated">Il contenuto di <ph id="ph1">`message`</ph> è una stringa di testo per informare l'utente sull'eccezione.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of the <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> class initialized with this constructor.</source>
          <target state="translated">Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza del <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> classe inizializzata con questo costruttore.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Proprietà</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Valore</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> che contiene i dati di oggetto serializzati relativi all'eccezione generata.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains contextual information about the source or destination.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> contenente le informazioni contestuali sull'origine o sulla destinazione.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> con dati serializzati.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Questo costruttore viene chiamato durante la deserializzazione per ricostituire l'oggetto eccezione trasmesso su un flusso.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>serializzazione XML e SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Eccezione che ha determinato l'eccezione corrente.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Se il parametro <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> non è <ph id="ph1">&lt;see langword="null" /&gt;</ph>, l'eccezione corrente viene generata in un blocco <ph id="ph2">&lt;see langword="catch" /&gt;</ph> in cui viene gestita l'eccezione interna.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Un'eccezione generata come risultato diretto di un'eccezione precedente deve includere un riferimento all'eccezione precedente nella proprietà <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> restituisce lo stesso valore passato al costruttore oppure <ph id="ph2">`null`</ph> nel caso in cui la proprietà <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> non fornisca il valore di eccezione interna al costruttore.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>