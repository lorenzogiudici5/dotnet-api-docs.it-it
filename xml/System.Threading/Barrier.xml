<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Barrier.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac548531a8658006e7834fae9bbf6c23d5474a09270.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48531a8658006e7834fae9bbf6c23d5474a09270</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.Barrier">
          <source>Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.</source>
          <target state="translated">Consente a più attività di funzionare in modo cooperativo in un algoritmo in parallelo tramite più fasi.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Barrier">
          <source>A group of tasks cooperate by moving through a series of phases, where each in the group signals it has arrived at the <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph> in a given phase and implicitly waits for all others to arrive.</source>
          <target state="translated">Un gruppo di attività cooperano per spostarsi all'interno di una serie di fasi, in cui ogni gruppo segnala che è arrivata al <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph> in una determinata fase e in modo implicito in attesa di arrivo di tutte le altre.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Barrier">
          <source>The same <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph> can be used for multiple phases.</source>
          <target state="translated">Lo stesso <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph> può essere utilizzato per più fasi.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Barrier">
          <source>The following example shows how to use a barrier:</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare una barriera:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Barrier">
          <source>All public and protected members of <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <ph id="ph2">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> have completed.</source>
          <target state="translated">Tutti i membri pubblici e protetti di <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> sono thread-safe e possono essere utilizzate contemporaneamente da più thread, fatta eccezione per Dispose, che deve essere utilizzato quando tutte le altre operazioni sul <ph id="ph2">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> completato.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Threading.Barrier">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32)">
          <source>The number of participating threads.</source>
          <target state="translated">Numero di thread che partecipano.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> is less than 0 or greater than 32,767.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> è minore di 0 o maggiore di 32.767.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source>The number of participating threads.</source>
          <target state="translated">Numero di thread che partecipano.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> to be executed after each phase.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> da eseguire dopo ogni fase.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source>null (Nothing in Visual Basic) may be passed to indicate no action is taken.</source>
          <target state="translated">null (Nothing in Visual Basic) può essere passato per non indicare che non viene intrapresa alcuna azione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source>The <ph id="ph1">`postPhaseAction`</ph> delegate will be executed after all participants have arrived at the barrier in one phase.</source>
          <target state="translated">Il <ph id="ph1">`postPhaseAction`</ph> delegato verrà eseguito dopo che tutti i partecipanti sono arrivati alla barriera in un'unica fase.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source>The participants will not be released to the next phase until the postPhaseAction delegate has completed execution.</source>
          <target state="translated">Non verranno rilasciati i partecipanti alla fase successiva fino a quando il delegato postPhaseAction non ha completato l'esecuzione.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source><ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> is less than 0 or greater than 32,767.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> è minore di 0 o maggiore di 32.767.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipant">
          <source>Notifies the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> that there will be an additional participant.</source>
          <target state="translated">Notifica all'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> che sarà presente un partecipante aggiuntivo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipant">
          <source>The phase number of the barrier in which the new participants will first participate.</source>
          <target state="translated">Numero di fase della barriera in corrispondenza di cui parteciperanno inizialmente i nuovi partecipanti.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.AddParticipant">
          <source>If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</source>
          <target state="translated">Se un'azione post-fase attualmente in esecuzione la barriera, questa chiamata viene bloccata fino a quando non viene completata l'azione di post-fase e la barriera è stata spostata alla fase successiva.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipant">
          <source>The current instance has already been disposed.</source>
          <target state="translated">L'istanza corrente è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipant">
          <source>Adding a participant would cause the barrier's participant count to exceed 32,767.</source>
          <target state="translated">L'aggiunta di un partecipante provocherebbe il superamento del conteggio del partecipante della barriera di 32.767.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipant">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipant">
          <source>The method was invoked from within a post-phase action.</source>
          <target state="translated">Il metodo è stato richiamato dall'interno di un'azione post-fase.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>The number of additional participants to add to the barrier.</source>
          <target state="translated">Numero di partecipanti aggiuntivi da aggiungere alla barriera.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>Notifies the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> that there will be additional participants.</source>
          <target state="translated">Notifica all'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> che saranno presenti partecipanti aggiuntivi.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>The phase number of the barrier in which the new participants will first participate.</source>
          <target state="translated">Numero di fase della barriera in corrispondenza di cui parteciperanno inizialmente i nuovi partecipanti.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</source>
          <target state="translated">Se un'azione post-fase attualmente in esecuzione la barriera, questa chiamata viene bloccata fino a quando non viene completata l'azione di post-fase e la barriera è stata spostata alla fase successiva.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">L'istanza corrente è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> è minore di 0.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>Adding <ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> participants would cause the barrier's participant count to exceed 32,767.</source>
          <target state="translated">L'aggiunta di partecipanti <ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> provocherebbe il superamento del conteggio del partecipante della barriera di 32.767.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>The method was invoked from within a post-phase action.</source>
          <target state="translated">Il metodo è stato richiamato dall'interno di un'azione post-fase.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Threading.Barrier.CurrentPhaseNumber">
          <source>Gets the number of the barrier's current phase.</source>
          <target state="translated">Ottiene il numero di fase corrente della barriera.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Barrier.CurrentPhaseNumber">
          <source>Returns the number of the barrier's current phase.</source>
          <target state="translated">Restituisce il numero di fase corrente della barriera.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Threading.Barrier">
          <source>Releases resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> class.</source>
          <target state="translated">Rilascia le risorse usate dall'istanza corrente della classe <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> class.</source>
          <target state="translated">Rilascia tutte le risorse usate dall'istanza corrente della classe <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph>.</source>
          <target state="translated">Chiamare il metodo <ph id="ph1">`Dispose`</ph> dopo aver terminato di utilizzare l'oggetto <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph> in an unusable state.</source>
          <target state="translated">Il metodo <ph id="ph1">`Dispose`</ph> lascia l'oggetto <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph> in una condizione di inutilizzabilità.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Threading.Barrier&gt;</ph> was occupying.</source>
          <target state="translated">Dopo la chiamata <ph id="ph1">`Dispose`</ph>, è necessario rilasciare tutti i riferimenti al <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph> in modo che il garbage collector può recuperare la memoria che di <ph id="ph3">&lt;xref:System.Threading.Barrier&gt;</ph> occupata.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementazione di un metodo Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph>.</source>
          <target state="translated">Chiamare sempre il metodo <ph id="ph1">`Dispose`</ph> prima di rilasciare l'ultimo riferimento a <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph> dell'oggetto <ph id="ph2">`Finalize`</ph> non viene richiamato dal Garbage Collector.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.Dispose">
          <source>The method was invoked from within a post-phase action.</source>
          <target state="translated">Il metodo è stato richiamato dall'interno di un'azione post-fase.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.Dispose(System.Boolean)">
          <source>true to release both managed and unmanaged resources; false to release only unmanaged resources.</source>
          <target state="translated">True per rilasciare sia le risorse gestite sia quelle non gestite; false per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph>, and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate dall'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> e, facoltativamente, le risorse gestite.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose(System.Boolean)">
          <source>Unlike most of the members of <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph>, Dispose is not thread-safe and may not be used concurrently with other members of this instance.</source>
          <target state="translated">A differenza la maggior parte dei membri di <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph>, Dispose non è thread-safe e non può essere utilizzato contemporaneamente ad altri membri di questa istanza.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Threading.Barrier.ParticipantCount">
          <source>Gets the total number of participants in the barrier.</source>
          <target state="translated">Ottiene il numero totale di partecipanti nella barriera.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Barrier.ParticipantCount">
          <source>Returns the total number of participants in the barrier.</source>
          <target state="translated">Restituisce il numero totale di partecipanti nella barriera.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Threading.Barrier.ParticipantsRemaining">
          <source>Gets the number of participants in the barrier that haven’t yet signaled in the current phase.</source>
          <target state="translated">Ottiene il numero di partecipanti nella barriera che non hanno ancora eseguito la segnalazione nella fase corrente.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Barrier.ParticipantsRemaining">
          <source>Returns the number of participants in the barrier that haven’t yet signaled in the current phase.</source>
          <target state="translated">Restituisce il numero di partecipanti nella barriera che non hanno ancora eseguito la segnalazione nella fase corrente.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Barrier.ParticipantsRemaining">
          <source>This could be 0 during a post-phase action delegate execution or if the ParticipantCount is 0.</source>
          <target state="translated">Questo errore può essere 0 durante l'esecuzione di un delegato di azione post-fase o se ParticipantCount è 0.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipant">
          <source>Notifies the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> that there will be one less participant.</source>
          <target state="translated">Notifica all'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> che sarà presente un partecipante in meno.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipant">
          <source>The current instance has already been disposed.</source>
          <target state="translated">L'istanza corrente è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipant">
          <source>The barrier already has 0 participants.</source>
          <target state="translated">La barriera dispone già di 0 partecipanti.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipant">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipant">
          <source>The method was invoked from within a post-phase action.</source>
          <target state="translated">Il metodo è stato richiamato dall'interno di un'azione post-fase.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>The number of additional participants to remove from the barrier.</source>
          <target state="translated">Numero di partecipanti aggiuntivi da rimuovere dalla barriera.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>Notifies the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> that there will be fewer participants.</source>
          <target state="translated">Notifica all'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> che saranno presenti meno partecipanti.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>If <ph id="ph1">`participantCount`</ph> participants are already waiting on the barrier, this removal fulfills the barrier, the post phase action is executed and all of the participants are woken as if this participant being removed had successfully reached the barrier.</source>
          <target state="translated">Se <ph id="ph1">`participantCount`</ph> partecipanti sono già in attesa la barriera, questa rimozione soddisfa la barriera, viene eseguita l'azione di post-fase e tutti i partecipanti sono riattivati come se il partecipante viene rimosso correttamente ha raggiunto la barriera.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">L'istanza corrente è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>The total participant count is less than the specified <ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph></source>
          <target state="translated">Il conteggio totale dei partecipanti è minore del <ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> specificato</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>The barrier already has 0 participants.</source>
          <target state="translated">La barriera dispone già di 0 partecipanti.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>The method was invoked from within a post-phase action.</source>
          <target state="translated">Il metodo è stato richiamato dall'interno di un'azione post-fase.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>current participant count is less than the specified participantCount</source>
          <target state="translated">il conteggio del partecipante corrente è minore del conteggio del partecipante specificato</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="T:System.Threading.Barrier">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</source>
          <target state="translated">Segnala che un partecipante ha raggiunto la barriera e attende che venga raggiunta anche da tutti gli altri partecipanti.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</source>
          <target state="translated">Segnala che un partecipante ha raggiunto la barriera e attende che venga raggiunta anche da tutti gli altri partecipanti.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait">
          <source>The current instance has already been disposed.</source>
          <target state="translated">L'istanza corrente è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait">
          <source>The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</source>
          <target state="translated">Il metodo viene richiamato dall'interno di un'azione post-fase, la barriera dispone attualmente di 0 partecipanti o la barriera viene segnalata da più thread registrati come partecipanti.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait">
          <source>If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</source>
          <target state="translated">Se un'eccezione viene generata da un'azione post-fase di una Barriera dopo che tutti thread che partecipano hanno chiamato SignalAndWait, l'eccezione verrà sottoposta a wrapping in un BarrierPostPhaseException e sarà generata su tutti i thread che partecipano.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>(-1) to wait indefinitely.</source>
          <target state="translated">Numero di millisecondi di attesa oppure <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) per un'attesa indefinita.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout.</source>
          <target state="translated">Segnala che un partecipante ha raggiunto la barriera e attende che venga raggiunta anche da tutti gli altri partecipanti, utilizzando un Signed Integer a 32 bit per misurare il timeout.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source>if all participants reached the barrier within the specified time; otherwise false.</source>
          <target state="translated">true se tutti i partecipanti raggiungono la barriera entro il tempo specificato; in caso contrario, false.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">L'istanza corrente è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> è un numero negativo diverso da -1, che rappresenta un timeout infinito.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source>The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</source>
          <target state="translated">Il metodo viene richiamato dall'interno di un'azione post-fase, la barriera dispone attualmente di 0 partecipanti o la barriera viene segnalata da più thread registrati come partecipanti.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source>If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</source>
          <target state="translated">Se un'eccezione viene generata da un'azione post-fase di una Barriera dopo che tutti thread che partecipano hanno chiamato SignalAndWait, l'eccezione verrà sottoposta a wrapping in un BarrierPostPhaseException e sarà generata su tutti i thread che partecipano.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to observe.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> da osservare.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier, while observing a cancellation token.</source>
          <target state="translated">Segnala che un partecipante ha raggiunto la barriera e attende che venga raggiunta anche da tutti gli altri partecipanti, al contempo osservando un token di annullamento.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> è stato annullato.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">L'istanza corrente è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
          <source>The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</source>
          <target state="translated">Il metodo viene richiamato dall'interno di un'azione post-fase, la barriera dispone attualmente di 0 partecipanti o la barriera viene segnalata da più thread registrati come partecipanti.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> che rappresenta il numero di millisecondi di attesa oppure <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> che rappresenta -1 millisecondi per un'attesa indefinita.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> object to measure the time interval.</source>
          <target state="translated">Segnala che un partecipante ha raggiunto la barriera e attende che venga raggiunta anche da tutti gli altri partecipanti, utilizzando un oggetto <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> per misurare l'intervallo di tempo.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
          <source>true if all other participants reached the barrier; otherwise, false.</source>
          <target state="translated">true se tutti gli altri partecipanti hanno raggiunto la barriera. In caso contrario, false.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">L'istanza corrente è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è un numero negativo diverso da -1 millisecondi, che rappresenta un timeout infinito, oppure è più grande di 32.767.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
          <source>The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</source>
          <target state="translated">Il metodo viene richiamato dall'interno di un'azione post-fase, la barriera dispone attualmente di 0 partecipanti o la barriera viene segnalata da più thread registrati come partecipanti.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>(-1) to wait indefinitely.</source>
          <target state="translated">Numero di millisecondi di attesa oppure <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) per un'attesa indefinita.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to observe.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> da osservare.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout, while observing a cancellation token.</source>
          <target state="translated">Segnala che un partecipante ha raggiunto la barriera e attende che venga raggiunta anche da tutti gli altri partecipanti, utilizzando un Signed Integer a 32 bit per misurare il timeout, al contempo osservando un token di annullamento.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>if all participants reached the barrier within the specified time; otherwise false</source>
          <target state="translated">true se tutti i partecipanti raggiungono la barriera entro il tempo specificato; in caso contrario, false.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">`cancellationToken`</ph> was canceled before the signal took effect, then an <ph id="ph2">&lt;xref:System.OperationCanceledException&gt;</ph> is thrown and the <ph id="ph3">&lt;xref:System.Threading.Barrier.ParticipantsRemaining%2A&gt;</ph> value is not decreased.</source>
          <target state="translated">Se il <ph id="ph1">`cancellationToken`</ph> è stata annullata prima che il segnale effetto, quindi un <ph id="ph2">&lt;xref:System.OperationCanceledException&gt;</ph> viene generata e <ph id="ph3">&lt;xref:System.Threading.Barrier.ParticipantsRemaining%2A&gt;</ph> valore non viene ridotto.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">`cancellationToken`</ph> is not canceled or is canceled after the signal takes effect then <ph id="ph2">&lt;xref:System.Threading.Barrier.ParticipantsRemaining%2A&gt;</ph> is decreased and no <ph id="ph3">&lt;xref:System.OperationCanceledException&gt;</ph> is thrown.</source>
          <target state="translated">Se il <ph id="ph1">`cancellationToken`</ph> non viene annullata o viene annullata dopo il segnale diventa effettivo <ph id="ph2">&lt;xref:System.Threading.Barrier.ParticipantsRemaining%2A&gt;</ph> viene ridotta e non <ph id="ph3">&lt;xref:System.OperationCanceledException&gt;</ph> viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> è stato annullato.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">L'istanza corrente è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> è un numero negativo diverso da -1, che rappresenta un timeout infinito.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</source>
          <target state="translated">Il metodo viene richiamato dall'interno di un'azione post-fase, la barriera dispone attualmente di 0 partecipanti o la barriera viene segnalata da più thread registrati come partecipanti.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> che rappresenta il numero di millisecondi di attesa oppure <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> che rappresenta -1 millisecondi per un'attesa indefinita.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to observe.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> da osservare.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> object to measure the time interval, while observing a cancellation token.</source>
          <target state="translated">Segnala che un partecipante ha raggiunto la barriera e attende che venga raggiunta anche da tutti gli altri partecipanti, utilizzando un oggetto <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> per misurare l'intervallo di tempo, al contempo osservando un token di annullamento.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>true if all other participants reached the barrier; otherwise, false.</source>
          <target state="translated">true se tutti gli altri partecipanti hanno raggiunto la barriera. In caso contrario, false.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> è stato annullato.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">L'istanza corrente è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è un numero negativo diverso da -1 millisecondi, che rappresenta un timeout infinito.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</source>
          <target state="translated">Il metodo viene richiamato dall'interno di un'azione post-fase, la barriera dispone attualmente di 0 partecipanti o la barriera viene segnalata da più thread registrati come partecipanti.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>