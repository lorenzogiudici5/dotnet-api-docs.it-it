<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b3440ac2a814ac3b46ed007085faf8975b8c5cc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36605652" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">
      <span data-ttu-id="29405-101">Oggetto contenente informazioni che devono essere usate dal metodo di callback.</span>
      <span class="sxs-lookup">
        <span data-stu-id="29405-101">An object containing information to be used by the callback method.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="29405-102">Rappresenta un metodo di callback che deve essere eseguito da un thread del pool di thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="29405-102">Represents a callback method to be executed by a thread pool thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29405-103"><xref:System.Threading.WaitCallback> rappresenta un metodo di callback che si desidera eseguire in un <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="29405-103"><xref:System.Threading.WaitCallback> represents a callback method that you want to execute on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="29405-104">Creare il delegato passando il metodo di callback per la <xref:System.Threading.WaitCallback> costruttore.</span><span class="sxs-lookup"><span data-stu-id="29405-104">Create the delegate by passing your callback method to the <xref:System.Threading.WaitCallback> constructor.</span></span> <span data-ttu-id="29405-105">Il metodo deve avere la firma illustrata di seguito.</span><span class="sxs-lookup"><span data-stu-id="29405-105">Your method must have the signature shown here.</span></span>  
  
 <span data-ttu-id="29405-106">Accoda l'attività per l'esecuzione, passando il <xref:System.Threading.WaitCallback> delegare <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="29405-106">Queue your task for execution by passing the <xref:System.Threading.WaitCallback> delegate to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="29405-107">Il metodo di callback viene eseguito quando un pool di thread diventa disponibile.</span><span class="sxs-lookup"><span data-stu-id="29405-107">Your callback method executes when a thread pool thread becomes available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29405-108">Gli utenti di Visual Basic è possono omettere il <xref:System.Threading.WaitCallback> costruttore e utilizzare semplicemente la `AddressOf` operatore quando si passa il metodo di callback da <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="29405-108">Visual Basic users can omit the <xref:System.Threading.WaitCallback> constructor, and simply use the `AddressOf` operator when passing the callback method to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span></span> <span data-ttu-id="29405-109">Visual Basic chiama automaticamente il costruttore di delegato corretto.</span><span class="sxs-lookup"><span data-stu-id="29405-109">Visual Basic automatically calls the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="29405-110">Se si desidera passare le informazioni per il metodo di callback, creare un oggetto che contiene le informazioni necessarie e passarlo a <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> quando si accoda l'attività per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="29405-110">If you want to pass information to your callback method, create an object that contains the necessary information and pass it to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> when you queue your task for execution.</span></span> <span data-ttu-id="29405-111">Ogni volta che viene eseguito il metodo di callback, la `state` parametro contiene questo oggetto.</span><span class="sxs-lookup"><span data-stu-id="29405-111">Each time your callback method executes, the `state` parameter contains this object.</span></span>  
  
 <span data-ttu-id="29405-112">Per ulteriori informazioni sull'utilizzo di callback per sincronizzare i thread del pool, vedere [il Pool di Thread gestiti](~/docs/standard/threading/the-managed-thread-pool.md).</span><span class="sxs-lookup"><span data-stu-id="29405-112">For more information about using callbacks to synchronize thread pool threads, see [The Managed Thread Pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29405-113">Questa sezione sono riportati due esempi.</span><span class="sxs-lookup"><span data-stu-id="29405-113">This section contains two examples.</span></span> <span data-ttu-id="29405-114">Nel primo esempio viene illustrato come è possibile accodare un'attività semplice per l'esecuzione dal pool di thread.</span><span class="sxs-lookup"><span data-stu-id="29405-114">The first example demonstrates how you can queue a simple task for execution by the thread pool.</span></span>  
  
 <span data-ttu-id="29405-115">Nel secondo esempio viene illustrato come è possibile accodare un'attività e passare informazioni a esso.</span><span class="sxs-lookup"><span data-stu-id="29405-115">The second example demonstrates how you can queue a task and pass information to it.</span></span>  
  
 <span data-ttu-id="29405-116">**Esempio 1**</span><span class="sxs-lookup"><span data-stu-id="29405-116">**Example 1**</span></span>  
  
 <span data-ttu-id="29405-117">In questo esempio viene illustrato come utilizzare il <xref:System.Threading.WaitCallback> delegato per accodare un'attività per l'esecuzione dal pool di thread.</span><span class="sxs-lookup"><span data-stu-id="29405-117">This example shows how to use the <xref:System.Threading.WaitCallback> delegate to queue a task for execution by the thread pool.</span></span> <span data-ttu-id="29405-118">Nell'esempio di codice viene utilizzata la <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> overload del metodo per accodare un'attività, che è rappresentato da un <xref:System.Threading.WaitCallback> che esegue il wrapping il `ThreadProc` metodo da eseguire quando un thread diventa disponibile.</span><span class="sxs-lookup"><span data-stu-id="29405-118">The code example uses the <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> method overload to queue a task, which is represented by a <xref:System.Threading.WaitCallback> that wraps the `ThreadProc` method, to execute when a thread becomes available.</span></span> <span data-ttu-id="29405-119">Nessuna informazione di attività viene fornita con questo overload.</span><span class="sxs-lookup"><span data-stu-id="29405-119">No task information is supplied with this overload.</span></span> <span data-ttu-id="29405-120">Pertanto, le informazioni che sono disponibile per il `ThreadProc` metodo è limitato all'oggetto a cui appartiene il metodo.</span><span class="sxs-lookup"><span data-stu-id="29405-120">Therefore, the information that is available to the `ThreadProc` method is limited to the object the method belongs to.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/VB/source.vb#1)]  
  
 <span data-ttu-id="29405-121">**Esempio 2**</span><span class="sxs-lookup"><span data-stu-id="29405-121">**Example 2**</span></span>  
  
 <span data-ttu-id="29405-122">In questo esempio viene illustrato come creare un oggetto che contiene informazioni sull'attività.</span><span class="sxs-lookup"><span data-stu-id="29405-122">This example shows how to create an object that contains task information.</span></span> <span data-ttu-id="29405-123">Viene inoltre illustrato come passare tale oggetto a un'attività che viene accodata per l'esecuzione dal pool di thread.</span><span class="sxs-lookup"><span data-stu-id="29405-123">It also demonstrates how to pass that object to a task that is queued for execution by the thread pool.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>