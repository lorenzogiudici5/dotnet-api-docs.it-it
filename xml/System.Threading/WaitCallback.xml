<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b3440ac2a814ac3b46ed007085faf8975b8c5cc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36605652" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">Oggetto contenente informazioni che devono essere usate dal metodo di callback.</param>
    <summary>Rappresenta un metodo di callback che deve essere eseguito da un thread del pool di thread.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.WaitCallback> rappresenta un metodo di callback che si desidera eseguire in un <xref:System.Threading.ThreadPool> thread. Creare il delegato passando il metodo di callback per la <xref:System.Threading.WaitCallback> costruttore. Il metodo deve avere la firma illustrata di seguito.  
  
 Accoda l'attività per l'esecuzione, passando il <xref:System.Threading.WaitCallback> delegare <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>. Il metodo di callback viene eseguito quando un pool di thread diventa disponibile.  
  
> [!NOTE]
>  Gli utenti di Visual Basic è possono omettere il <xref:System.Threading.WaitCallback> costruttore e utilizzare semplicemente la `AddressOf` operatore quando si passa il metodo di callback da <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>. Visual Basic chiama automaticamente il costruttore di delegato corretto.  
  
 Se si desidera passare le informazioni per il metodo di callback, creare un oggetto che contiene le informazioni necessarie e passarlo a <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> quando si accoda l'attività per l'esecuzione. Ogni volta che viene eseguito il metodo di callback, la `state` parametro contiene questo oggetto.  
  
 Per ulteriori informazioni sull'utilizzo di callback per sincronizzare i thread del pool, vedere [il Pool di Thread gestiti](~/docs/standard/threading/the-managed-thread-pool.md).  
  
   
  
## Examples  
 Questa sezione sono riportati due esempi. Nel primo esempio viene illustrato come è possibile accodare un'attività semplice per l'esecuzione dal pool di thread.  
  
 Nel secondo esempio viene illustrato come è possibile accodare un'attività e passare informazioni a esso.  
  
 **Esempio 1**  
  
 In questo esempio viene illustrato come utilizzare il <xref:System.Threading.WaitCallback> delegato per accodare un'attività per l'esecuzione dal pool di thread. Nell'esempio di codice viene utilizzata la <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> overload del metodo per accodare un'attività, che è rappresentato da un <xref:System.Threading.WaitCallback> che esegue il wrapping il `ThreadProc` metodo da eseguire quando un thread diventa disponibile. Nessuna informazione di attività viene fornita con questo overload. Pertanto, le informazioni che sono disponibile per il `ThreadProc` metodo è limitato all'oggetto a cui appartiene il metodo.  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/VB/source.vb#1)]  
  
 **Esempio 2**  
  
 In questo esempio viene illustrato come creare un oggetto che contiene informazioni sull'attività. Viene inoltre illustrato come passare tale oggetto a un'attività che viene accodata per l'esecuzione dal pool di thread.  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>