<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SynchronizationContext.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c20592a4a6979435e8a6a981ffd30ce0e7e25f1c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c20592a4a6979435e8a6a981ffd30ce0e7e25f1c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.SynchronizationContext">
          <source>Provides the basic functionality for propagating a synchronization context in various synchronization models.</source>
          <target state="translated">Fornisce la funzionalità di base per propagare un contesto di sincronizzazione in vari modelli di sincronizzazione.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SynchronizationContext">
          <source>The <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> class is a base class that provides a free-threaded context with no synchronization.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> classe è una classe di base che fornisce un contesto a thread libero con alcuna sincronizzazione.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SynchronizationContext">
          <source>The purpose of the synchronization model implemented by this class is to allow the internal asynchronous/synchronous operations of the common language runtime to behave properly with different synchronization models.</source>
          <target state="translated">Lo scopo del modello di sincronizzazione implementato da questa classe è quello di consentire alle operazioni asincrone/sincrone interne di Common Language Runtime di comportarsi in modo appropriato con modelli di sincronizzazione diversi.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SynchronizationContext">
          <source>This model also simplifies some of the requirements that managed applications have had to follow in order to work correctly under different synchronization environments.</source>
          <target state="translated">Questo modello semplifica anche alcuni dei requisiti gestiti applicazioni dovevano soddisfare per poter funzionare correttamente in ambienti di sincronizzazione diversi.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SynchronizationContext">
          <source>Providers of synchronization models can extend this class and provide their own implementations for these methods.</source>
          <target state="translated">Provider di modelli di sincronizzazione è possibile estendere questa classe e fornire le proprie implementazioni di questi metodi.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SynchronizationContext">
          <source>For more information about synchronization contexts, see the article <bpt id="p1">[</bpt>It's All About the SynchronizationContext<ept id="p1">](http://msdn.microsoft.com/magazine/gg598924.aspx)</ept> in the MSDN Magazine.</source>
          <target state="translated">Per ulteriori informazioni sui contesti di sincronizzazione, vedere l'articolo <bpt id="p1">[</bpt>è tutte su SynchronizationContext il<ept id="p1">](http://msdn.microsoft.com/magazine/gg598924.aspx)</ept> in MSDN Magazine.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SynchronizationContext">
          <source>Inheritors must have <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>.</source>
          <target state="translated">Devono avere gli eredi <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph> e <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> class.</source>
          <target state="translated">Crea una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.#ctor">
          <source>The default constructor performs no parameter initialization.</source>
          <target state="translated">Il costruttore predefinito non esegue un'inizializzazione alcun parametro.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.#ctor">
          <source>Inheritors must have <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>.</source>
          <target state="translated">Devono avere gli eredi <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph> e <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.CreateCopy">
          <source>When overridden in a derived class, creates a copy of the synchronization context.</source>
          <target state="translated">Quando ne viene eseguito l'override in una classe derivata, crea una copia del contesto di sincronizzazione.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.CreateCopy">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> object.</source>
          <target state="translated">Nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.CreateCopy">
          <source>The default implementation returns an empty <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> object.</source>
          <target state="translated">L'implementazione predefinita restituisce un oggetto vuoto <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Threading.SynchronizationContext.Current">
          <source>Gets the synchronization context for the current thread.</source>
          <target state="translated">Ottiene il contesto di sincronizzazione per il thread corrente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.SynchronizationContext.Current">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> object representing the current synchronization context.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> che rappresenta il contesto di sincronizzazione corrente.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.SynchronizationContext.Current">
          <source>This property is useful for propagating a synchronization context from one thread to another.</source>
          <target state="translated">Questa proprietà è utile per propagare un contesto di sincronizzazione da un thread a altro.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.IsWaitNotificationRequired">
          <source>Determines if wait notification is required.</source>
          <target state="translated">Determina se è necessaria la notifica dell'attesa.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.IsWaitNotificationRequired">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if wait notification is required; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se è richiesta la notifica dell'attesa; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.OperationCompleted">
          <source>When overridden in a derived class, responds to the notification that an operation has completed.</source>
          <target state="translated">Quando ne viene eseguito l'override in una classe derivata, risponde alla notifica di completamento di un'operazione.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.OperationCompleted">
          <source>The default implementation contains no code.</source>
          <target state="translated">L'implementazione predefinita non contiene codice.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.OperationCompleted">
          <source>You can optionally override this method to provide code that executes when an operation is complete.</source>
          <target state="translated">È facoltativamente possibile eseguire l'override di questo metodo per fornire codice che viene eseguito quando un'operazione è stata completata.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.OperationStarted">
          <source>When overridden in a derived class, responds to the notification that an operation has started.</source>
          <target state="translated">Quando ne viene eseguito l'override in una classe derivata, risponde alla notifica di avvio di un'operazione.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.OperationStarted">
          <source>The default implementation contains no code.</source>
          <target state="translated">L'implementazione predefinita non contiene codice.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.OperationStarted">
          <source>You can optionally override this method to provide code that executes when an operation starts.</source>
          <target state="translated">È facoltativamente possibile eseguire l'override di questo metodo per fornire codice che viene eseguito quando viene avviata un'operazione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.SendOrPostCallback" /&gt;</ph> delegate to call.</source>
          <target state="translated">Delegato di <ph id="ph1">&lt;see cref="T:System.Threading.SendOrPostCallback" /&gt;</ph> da chiamare.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
          <source>The object passed to the delegate.</source>
          <target state="translated">Oggetto passato al delegato.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
          <source>When overridden in a derived class, dispatches an asynchronous message to a synchronization context.</source>
          <target state="translated">Quando ne viene eseguito l'override in una classe derivata, invia un messaggio asincrono a un contesto di sincronizzazione.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Post%2A&gt;</ph> method starts an asynchronous request to post a message.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Post%2A&gt;</ph> metodo avvia una richiesta asincrona per inviare un messaggio.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.SendOrPostCallback" /&gt;</ph> delegate to call.</source>
          <target state="translated">Delegato di <ph id="ph1">&lt;see cref="T:System.Threading.SendOrPostCallback" /&gt;</ph> da chiamare.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
          <source>The object passed to the delegate.</source>
          <target state="translated">Oggetto passato al delegato.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
          <source>When overridden in a derived class, dispatches a synchronous message to a synchronization context.</source>
          <target state="translated">Quando ne viene eseguito l'override in una classe derivata, invia un messaggio sincrono a un contesto di sincronizzazione.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Send%2A&gt;</ph> method starts a synchronous request to send a message.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Send%2A&gt;</ph> metodo avvia una richiesta sincrona per inviare un messaggio.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
          <source>The method was called in a Windows Store app.</source>
          <target state="translated">Il metodo è stato chiamato in un'App Windows Store.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
          <source>The implementation of <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> for Windows Store apps does not support the <ph id="ph2">&lt;see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">L'implementazione di <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> per le applicazioni Windows Store non supporta il metodo <ph id="ph2">&lt;see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> object to be set.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> da impostare.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)">
          <source>Sets the current synchronization context.</source>
          <target state="translated">Imposta il contesto di sincronizzazione corrente.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">richiede l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.SetWaitNotificationRequired">
          <source>Sets notification that wait notification is required and prepares the callback method so it can be called more reliably when a wait occurs.</source>
          <target state="translated">Imposta la notifica che indica che è richiesta la notifica di attesa e prepara il metodo di callback in modo che possa essere chiamato in modo più affidabile in caso di attesa.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that contains the native operating system handles.</source>
          <target state="translated">Matrice di tipo <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> contenente gli handle nativi del sistema operativo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to wait for all handles; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to wait for any handle.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per attendere tutti gli handle; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per attendere un handle qualsiasi.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">Numero di millisecondi di attesa oppure <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) per un'attesa indefinita.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>Waits for any or all the elements in the specified array to receive a signal.</source>
          <target state="translated">Attende che uno qualsiasi o tutti gli elementi della matrice specificata ricevano un segnale.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>The array index of the object that satisfied the wait.</source>
          <target state="translated">Indice della matrice dell'oggetto che ha soddisfatto l'attesa.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> method calls the external declaration <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> to perform the wait activity.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> metodo chiama la dichiarazione esterna <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> per eseguire l'attività di attesa.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>Override the <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> method to change the wait behavior for the synchronization context.</source>
          <target state="translated">Eseguire l'override di <ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> metodo per modificare il comportamento di attesa per il contesto di sincronizzazione.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="waitHandles" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="waitHandles" /&gt;</ph> è null.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">richiede l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that contains the native operating system handles.</source>
          <target state="translated">Matrice di tipo <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> contenente gli handle nativi del sistema operativo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to wait for all handles;  <ph id="ph2">&lt;see langword="false" /&gt;</ph> to wait for any handle.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per attendere tutti gli handle; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per attendere un handle qualsiasi.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">Numero di millisecondi di attesa oppure <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) per un'attesa indefinita.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source>Helper function that waits for any or all the elements in the specified array to receive a signal.</source>
          <target state="translated">Funzione di supporto che attende che uno qualsiasi o tutti gli elementi della matrice specificata ricevano un segnale.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source>The array index of the object that satisfied the wait.</source>
          <target state="translated">Indice della matrice dell'oggetto che ha soddisfatto l'attesa.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> is a declaration for an unmanaged external helper function.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> è una dichiarazione di una funzione di supporto esterna non gestita.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> method to wait for a signal for the specified operating system handles.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> viene chiamato dal <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> metodo per attendere un segnale per l'handle del sistema operativo specificato.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">richiede l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>