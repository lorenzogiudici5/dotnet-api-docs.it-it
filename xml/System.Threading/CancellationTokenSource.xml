<Type Name="CancellationTokenSource" FullName="System.Threading.CancellationTokenSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6eb9b604f17039a1cdce3672195d63b2ea1bdc2c" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51917724" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CancellationTokenSource : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CancellationTokenSource extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.CancellationTokenSource" />
  <TypeSignature Language="VB.NET" Value="Public Class CancellationTokenSource&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CancellationTokenSource : IDisposable" />
  <TypeSignature Language="F#" Value="type CancellationTokenSource = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="23158-101">Segnala a un oggetto <see cref="T:System.Threading.CancellationToken" /> che deve essere annullato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="23158-101">Signals to a <see cref="T:System.Threading.CancellationToken" /> that it should be canceled.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23158-102">A partire dal [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], .NET Framework Usa un modello unificato per l'annullamento cooperativo di operazioni sincrone asincrone o con esecuzione prolungata che sono necessari due oggetti:</span><span class="sxs-lookup"><span data-stu-id="23158-102">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the .NET Framework uses a unified model for cooperative cancellation of asynchronous or long-running synchronous operations that involves two objects:</span></span>  
  
-   <span data-ttu-id="23158-103">Oggetto <xref:System.Threading.CancellationTokenSource> oggetto che fornisce un token di annullamento tramite relativi <xref:System.Threading.CancellationTokenSource.Token%2A> proprietà e invia un annullamento del messaggio chiamando relativo <xref:System.Threading.CancellationTokenSource.Cancel%2A> o <xref:System.Threading.CancellationTokenSource.CancelAfter%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="23158-103">A <xref:System.Threading.CancellationTokenSource> object, which provides a cancellation token through its <xref:System.Threading.CancellationTokenSource.Token%2A> property and sends a cancellation message by calling its <xref:System.Threading.CancellationTokenSource.Cancel%2A> or <xref:System.Threading.CancellationTokenSource.CancelAfter%2A> method.</span></span>  
  
-   <span data-ttu-id="23158-104">Oggetto <xref:System.Threading.CancellationToken> oggetto, che indica se viene richiesto l'annullamento.</span><span class="sxs-lookup"><span data-stu-id="23158-104">A <xref:System.Threading.CancellationToken> object, which indicates whether cancellation is requested.</span></span>  
  
 <span data-ttu-id="23158-105">Il criterio generale per implementare il modello di annullamento cooperativo è il seguente:</span><span class="sxs-lookup"><span data-stu-id="23158-105">The general pattern for implementing the cooperative cancellation model is:</span></span>  
  
-   <span data-ttu-id="23158-106">Creare un'istanza di un oggetto <xref:System.Threading.CancellationTokenSource>, che gestisce e invia la notifica di annullamento ai singoli token di annullamento.</span><span class="sxs-lookup"><span data-stu-id="23158-106">Instantiate a <xref:System.Threading.CancellationTokenSource> object, which manages and sends cancellation notification to the individual cancellation tokens.</span></span>  
  
-   <span data-ttu-id="23158-107">Passare il token restituito dalla proprietà <xref:System.Threading.CancellationTokenSource.Token%2A?displayProperty=nameWithType> a ogni attività o thread in attesa di annullamento.</span><span class="sxs-lookup"><span data-stu-id="23158-107">Pass the token returned by the <xref:System.Threading.CancellationTokenSource.Token%2A?displayProperty=nameWithType> property to each task or thread that listens for cancellation.</span></span>  
  
-   <span data-ttu-id="23158-108">Chiamare il <xref:System.Threading.CancellationToken.IsCancellationRequested%2A?displayProperty=nameWithType> metodo dalle operazioni che ricevono il token di annullamento.</span><span class="sxs-lookup"><span data-stu-id="23158-108">Call the <xref:System.Threading.CancellationToken.IsCancellationRequested%2A?displayProperty=nameWithType> method from operations that receive the cancellation token.</span></span> <span data-ttu-id="23158-109">Fornire un meccanismo per ogni attività o thread per rispondere a una richiesta di annullamento.</span><span class="sxs-lookup"><span data-stu-id="23158-109">Provide a mechanism for each task or thread to respond to a cancellation request.</span></span> <span data-ttu-id="23158-110">Se si sceglie di annullare un'operazione ed esattamente come si procede, varia a seconda della logica dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="23158-110">Whether you choose to cancel an operation, and exactly how you do it, depends on your application logic.</span></span>  
  
-   <span data-ttu-id="23158-111">Chiamare il metodo <xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType> per fornire la notifica di annullamento.</span><span class="sxs-lookup"><span data-stu-id="23158-111">Call the <xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType> method to provide notification of cancellation.</span></span> <span data-ttu-id="23158-112">Consente di impostare il <xref:System.Threading.CancellationToken.IsCancellationRequested%2A?displayProperty=nameWithType> proprietà di ogni copia del token di annullamento `true`.</span><span class="sxs-lookup"><span data-stu-id="23158-112">This sets the <xref:System.Threading.CancellationToken.IsCancellationRequested%2A?displayProperty=nameWithType> property on every copy of the cancellation token to `true`.</span></span>  
  
-   <span data-ttu-id="23158-113">Chiamare il <xref:System.Threading.CancellationTokenSource.Dispose%2A> metodo dopo averli completati con la <xref:System.Threading.CancellationTokenSource> oggetto.</span><span class="sxs-lookup"><span data-stu-id="23158-113">Call the <xref:System.Threading.CancellationTokenSource.Dispose%2A> method when you are finished with the <xref:System.Threading.CancellationTokenSource> object.</span></span>  
  
 <span data-ttu-id="23158-114">Per altre informazioni, vedere [Annullamento in thread gestiti](~/docs/standard/threading/cancellation-in-managed-threads.md).</span><span class="sxs-lookup"><span data-stu-id="23158-114">For more information, see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="23158-115">Questo tipo implementa la <xref:System.IDisposable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="23158-115">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="23158-116">Dopo aver utilizzando un'istanza del tipo, è necessario eliminarlo direttamente o indirettamente.</span><span class="sxs-lookup"><span data-stu-id="23158-116">When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="23158-117">Per eliminare il tipo direttamente, chiamare relativi <xref:System.IDisposable.Dispose%2A> metodo in un `try` / `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="23158-117">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="23158-118">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="23158-118">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="23158-119">Per altre informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="23158-119">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23158-120">L'esempio seguente usa un generatore di numeri casuali per emulare un'applicazione di raccolta dati che legge i valori integrali 10 da undici vari strumenti.</span><span class="sxs-lookup"><span data-stu-id="23158-120">The following example uses a random number generator to emulate a data collection application that reads 10 integral values from eleven different instruments.</span></span> <span data-ttu-id="23158-121">Un valore pari a zero indica che la misura non è riuscita per uno strumento, nel qual caso l'operazione deve essere annullata e non indicano complessivo deve essere calcolate.</span><span class="sxs-lookup"><span data-stu-id="23158-121">A value of zero indicates that the measurement has failed for one instrument, in which case the operation should be cancelled and no overall mean should be computed.</span></span>  
  
 <span data-ttu-id="23158-122">Per gestire l'annullamento possibili dell'operazione, l'esempio crea un'istanza di un <xref:System.Threading.CancellationTokenSource> oggetto che genera un token di annullamento che viene passato a un <xref:System.Threading.Tasks.TaskFactory> oggetto.</span><span class="sxs-lookup"><span data-stu-id="23158-122">To handle the possible cancellation of the operation, the example instantiates a <xref:System.Threading.CancellationTokenSource> object that generates a cancellation token which is passed to a <xref:System.Threading.Tasks.TaskFactory> object.</span></span> <span data-ttu-id="23158-123">Il <xref:System.Threading.Tasks.TaskFactory> oggetto a sua volta inoltra il token di annullamento per ognuna delle attività di responsabile per la raccolta di letture per uno strumento specifico.</span><span class="sxs-lookup"><span data-stu-id="23158-123">The <xref:System.Threading.Tasks.TaskFactory> object in turn passes the cancellation token to each of the tasks responsible for collecting readings for a particular instrument.</span></span> <span data-ttu-id="23158-124">Il <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%60%602%28System.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2CSystem.Func%7BSystem.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2C%60%601%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> metodo viene chiamato per verificare che la media viene calcolata solo dopo che tutte le letture sono state raccolte correttamente.</span><span class="sxs-lookup"><span data-stu-id="23158-124">The <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%60%602%28System.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2CSystem.Func%7BSystem.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2C%60%601%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> method is called to ensure that the mean is computed only after all readings have been gathered successfully.</span></span> <span data-ttu-id="23158-125">Se è un'attività non perché è stata annullata, la chiamata al <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A?displayProperty=nameWithType> metodo genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="23158-125">If a task has not because it has been cancelled, the call to the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A?displayProperty=nameWithType> method throws an exception.</span></span>  
  
 [!code-csharp[System.Threading.CancellationTokenSource.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.cancellationtokensource.class/cs/cancel1.cs#1)]
 [!code-vb[System.Threading.CancellationTokenSource.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.cancellationtokensource.class/vb/cancel1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="23158-126">Tutti i membri pubblici e protetti della <see cref="T:System.Threading.CancellationTokenSource" /> sono thread-safe e possono essere utilizzati contemporaneamente da più thread, ad eccezione di <see cref="M:System.Threading.CancellationTokenSource.Dispose" />, che deve essere usata solo quando tutte le altre operazioni su di <see cref="T:System.Threading.CancellationTokenSource" /> oggetto completati.</span>
      <span class="sxs-lookup">
        <span data-stu-id="23158-126">All public and protected members of <see cref="T:System.Threading.CancellationTokenSource" /> are thread-safe and may be used concurrently from multiple threads, with the exception of <see cref="M:System.Threading.CancellationTokenSource.Dispose" />, which must only be used when all other operations on the <see cref="T:System.Threading.CancellationTokenSource" /> object have completed.</span>
      </span>
    </threadsafe>
    <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
      <span data-ttu-id="23158-127">Annullamento</span>
      <span class="sxs-lookup">
        <span data-stu-id="23158-127">Cancellation</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
      <span data-ttu-id="23158-128">Annullamento delle attività</span>
      <span class="sxs-lookup">
        <span data-stu-id="23158-128">Task Cancellation</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="23158-129">Inizializza <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-129">Initializes the <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CancellationTokenSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CancellationTokenSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="23158-130">Inizializza una nuova istanza della classe <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-130">Initializes a new instance of the <see cref="T:System.Threading.CancellationTokenSource" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="23158-131">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-131">Cancellation</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="23158-132">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-132">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CancellationTokenSource (int millisecondsDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 millisecondsDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenSource.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (millisecondsDelay As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CancellationTokenSource(int millisecondsDelay);" />
      <MemberSignature Language="F#" Value="new System.Threading.CancellationTokenSource : int -&gt; System.Threading.CancellationTokenSource" Usage="new System.Threading.CancellationTokenSource millisecondsDelay" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="millisecondsDelay" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsDelay">
          <span data-ttu-id="23158-133">Intervallo di tempo di attesa, in millisecondi, prima dell'annullamento dell'oggetto <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-133">The time interval in milliseconds to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23158-134">Inizializza una nuova istanza della classe <see cref="T:System.Threading.CancellationTokenSource" /> che verrà annullata dopo il ritardo specificato in millisecondi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-134">Initializes a new instance of the <see cref="T:System.Threading.CancellationTokenSource" /> class that will be canceled after the specified delay in milliseconds.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23158-135">Il conto alla rovescia per la `millisecondsDelay` viene avviato durante la chiamata al costruttore.</span><span class="sxs-lookup"><span data-stu-id="23158-135">The countdown for the `millisecondsDelay` starts during the call to the constructor.</span></span>  <span data-ttu-id="23158-136">Quando la `millisecondsDelay` scade, l'oggetto costruito <xref:System.Threading.CancellationTokenSource> viene annullato (se è non stato annullato già).</span><span class="sxs-lookup"><span data-stu-id="23158-136">When the `millisecondsDelay` expires, the constructed <xref:System.Threading.CancellationTokenSource> is canceled (if it has not been canceled already).</span></span>  
  
 <span data-ttu-id="23158-137">Le chiamate successive a <xref:System.Threading.CancellationTokenSource.CancelAfter%2A> reimposterà il `millisecondsDelay` per l'oggetto costruito <xref:System.Threading.CancellationTokenSource>, se non è già stata annullata.</span><span class="sxs-lookup"><span data-stu-id="23158-137">Subsequent calls to <xref:System.Threading.CancellationTokenSource.CancelAfter%2A> will reset the `millisecondsDelay` for the constructed <xref:System.Threading.CancellationTokenSource>, if it has not been canceled already.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="23158-138">
            <paramref name="millisecondsDelay" /> è minore di -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-138">
              <paramref name="millisecondsDelay" /> is less than -1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CancellationTokenSource (TimeSpan delay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan delay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenSource.#ctor(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (delay As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CancellationTokenSource(TimeSpan delay);" />
      <MemberSignature Language="F#" Value="new System.Threading.CancellationTokenSource : TimeSpan -&gt; System.Threading.CancellationTokenSource" Usage="new System.Threading.CancellationTokenSource delay" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="delay" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="delay">
          <span data-ttu-id="23158-139">Intervallo di tempo di attesa prima dell'annullamento dell'oggetto <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-139">The time interval to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23158-140">Inizializza una nuova istanza della classe <see cref="T:System.Threading.CancellationTokenSource" /> che verrà annullata dopo l'intervallo di tempo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-140">Initializes a new instance of the <see cref="T:System.Threading.CancellationTokenSource" /> class that will be canceled after the specified time span.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23158-141">Il conto alla rovescia per il ritardo di avvio durante la chiamata al costruttore.</span><span class="sxs-lookup"><span data-stu-id="23158-141">The countdown for the delay starts during the call to the constructor.</span></span> <span data-ttu-id="23158-142">Quando il ritardo scade, l'oggetto costruito <xref:System.Threading.CancellationTokenSource> viene annullata, se non è già stata annullata.</span><span class="sxs-lookup"><span data-stu-id="23158-142">When the delay expires, the constructed <xref:System.Threading.CancellationTokenSource> is canceled, if it has not been canceled already.</span></span>  
  
 <span data-ttu-id="23158-143">Le chiamate successive a <xref:System.Threading.CancellationTokenSource.CancelAfter%2A> reimposterà il ritardo per l'oggetto costruito <xref:System.Threading.CancellationTokenSource>, se non è già stata annullata.</span><span class="sxs-lookup"><span data-stu-id="23158-143">Subsequent calls to <xref:System.Threading.CancellationTokenSource.CancelAfter%2A> will reset the delay for the constructed <xref:System.Threading.CancellationTokenSource>, if it has not been canceled already.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="23158-144">
            <paramref name="delay" />
            <see langword="." />
            <see cref="P:System.TimeSpan.TotalMilliseconds" /> è minore di -1 o maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-144">
              <paramref name="delay" />
              <see langword="." />
              <see cref="P:System.TimeSpan.TotalMilliseconds" /> is less than -1 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="  &#xA;            T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="23158-145">
            <paramref name="delay" />
            <see langword="." />
            <see cref="P:System.TimeSpan.TotalMilliseconds" /> è minore di -1 o maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-145">
              <paramref name="delay" />
              <see langword="." />
              <see cref="P:System.TimeSpan.TotalMilliseconds" /> is less than -1 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cancel">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="23158-146">Comunica una richiesta di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-146">Communicates a request for cancellation.</span>
          </span>
        </summary>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="23158-147">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-147">Cancellation</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="23158-148">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-148">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenSource.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="cancellationTokenSource.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="23158-149">Comunica una richiesta di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-149">Communicates a request for cancellation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23158-150">L'oggetto associato <xref:System.Threading.CancellationToken> riceverà una notifica dell'annullamento e passerà a uno stato in cui <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> restituisce true.</span><span class="sxs-lookup"><span data-stu-id="23158-150">The associated <xref:System.Threading.CancellationToken> will be notified of the cancellation and will transition to a state where <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> returns true.</span></span>  
  
 <span data-ttu-id="23158-151">Eventuali operazioni annullabili o un callback registrato con il <xref:System.Threading.CancellationToken> verrà eseguito.</span><span class="sxs-lookup"><span data-stu-id="23158-151">Any callbacks or cancelable operations registered with the <xref:System.Threading.CancellationToken> will be executed.</span></span>  
  
 <span data-ttu-id="23158-152">È consigliabile che operazioni annullabili e i callback registrato con <xref:System.Threading.CancellationToken> non generano eccezioni.</span><span class="sxs-lookup"><span data-stu-id="23158-152">We recommend that cancelable operations and callbacks registered with <xref:System.Threading.CancellationToken> not throw exceptions.</span></span> 
 
 <span data-ttu-id="23158-153">Questo overload di annullamento aggregherà le eccezioni generate in un <xref:System.AggregateException>, in modo che un callback che genera un'eccezione non impedirà l'esecuzione di altri callback registrato.</span><span class="sxs-lookup"><span data-stu-id="23158-153">This overload of Cancel will aggregate any exceptions thrown into an <xref:System.AggregateException>, such that one callback throwing an exception will not prevent other registered callbacks from being executed.</span></span> 
   
  
## Examples  
 <span data-ttu-id="23158-154">L'esempio seguente usa un generatore di numeri casuali per emulare un'applicazione di raccolta dati che legge i valori integrali 10 da undici vari strumenti.</span><span class="sxs-lookup"><span data-stu-id="23158-154">The following example uses a random number generator to emulate a data collection application that reads 10 integral values from eleven different instruments.</span></span> <span data-ttu-id="23158-155">Un valore pari a zero indica che la misura non è riuscita per uno strumento, nel qual caso l'operazione deve essere annullata e non indicano complessivo deve essere calcolate.</span><span class="sxs-lookup"><span data-stu-id="23158-155">A value of zero indicates that the measurement has failed for one instrument, in which case the operation should be cancelled and no overall mean should be computed.</span></span>  
  
 <span data-ttu-id="23158-156">Per gestire l'annullamento possibili dell'operazione, l'esempio crea un'istanza di un <xref:System.Threading.CancellationTokenSource> oggetto che genera un token di annullamento che viene passato a un <xref:System.Threading.Tasks.TaskFactory> oggetto.</span><span class="sxs-lookup"><span data-stu-id="23158-156">To handle the possible cancellation of the operation, the example instantiates a <xref:System.Threading.CancellationTokenSource> object that generates a cancellation token which is passed to a <xref:System.Threading.Tasks.TaskFactory> object.</span></span> <span data-ttu-id="23158-157">Il <xref:System.Threading.Tasks.TaskFactory> oggetto a sua volta inoltra il token di annullamento per ognuna delle attività di responsabile per la raccolta di letture per uno strumento specifico.</span><span class="sxs-lookup"><span data-stu-id="23158-157">The <xref:System.Threading.Tasks.TaskFactory> object in turn passes the cancellation token to each of the tasks responsible for collecting readings for a particular instrument.</span></span> <span data-ttu-id="23158-158">Il <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%60%602%28System.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2CSystem.Func%7BSystem.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2C%60%601%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> metodo viene chiamato per verificare che la media viene calcolata solo dopo che tutte le letture sono state raccolte correttamente.</span><span class="sxs-lookup"><span data-stu-id="23158-158">The <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%60%602%28System.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2CSystem.Func%7BSystem.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2C%60%601%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> method is called to ensure that the mean is computed only after all readings have been gathered successfully.</span></span> <span data-ttu-id="23158-159">Se è un'attività non perché è stata annullata, la chiamata al <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A?displayProperty=nameWithType> metodo genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="23158-159">If a task has not because it has been cancelled, the call to the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A?displayProperty=nameWithType> method throws an exception.</span></span>  
  
 [!code-csharp[System.Threading.CancellationTokenSource.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.cancellationtokensource.class/cs/cancel1.cs#1)]
 [!code-vb[System.Threading.CancellationTokenSource.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.cancellationtokensource.class/vb/cancel1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="23158-160">Questo oggetto <see cref="T:System.Threading.CancellationTokenSource" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-160">This <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="23158-161">Eccezione di aggregazione che contiene tutte le eccezioni generate dai callback registrati sull'oggetto <see cref="T:System.Threading.CancellationToken" /> associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-161">An aggregate exception containing all the exceptions thrown by the registered callbacks on the associated <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="23158-162">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-162">Cancellation</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="23158-163">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-163">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel (bool throwOnFirstException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel(bool throwOnFirstException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenSource.Cancel(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel (throwOnFirstException As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel(bool throwOnFirstException);" />
      <MemberSignature Language="F#" Value="member this.Cancel : bool -&gt; unit" Usage="cancellationTokenSource.Cancel throwOnFirstException" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="throwOnFirstException" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="throwOnFirstException">
          <span data-ttu-id="23158-164">
            <see langword="true" /> se le eccezioni devono essere propagate immediatamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-164">
              <see langword="true" /> if exceptions should immediately propagate; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23158-165">Passa una richiesta di annullamento e specifica se i callback restanti e le operazioni annullabili devono essere elaborati se si verifica un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-165">Communicates a request for cancellation, and specifies whether remaining callbacks and cancelable operations should be processed if an exception occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23158-166">L'oggetto associato <xref:System.Threading.CancellationToken> riceverà una notifica dell'annullamento e passerà a uno stato in cui <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="23158-166">The associated <xref:System.Threading.CancellationToken> will be notified of the cancellation and will transition to a state where <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> returns `true`.</span></span>  
  
 <span data-ttu-id="23158-167">Eventuali operazioni annullabili o un callback registrato con il <xref:System.Threading.CancellationToken> verrà eseguito.</span><span class="sxs-lookup"><span data-stu-id="23158-167">Any callbacks or cancelable operations registered with the <xref:System.Threading.CancellationToken> will be executed.</span></span> <span data-ttu-id="23158-168">Callback verranno eseguiti in modo sincrono in ordine LIFO.</span><span class="sxs-lookup"><span data-stu-id="23158-168">Callbacks will be executed synchronously in LIFO order.</span></span> 
  
 <span data-ttu-id="23158-169">È consigliabile che operazioni annullabili e i callback registrato con <xref:System.Threading.CancellationToken> non generano eccezioni.</span><span class="sxs-lookup"><span data-stu-id="23158-169">We recommend that cancelable operations and callbacks registered with <xref:System.Threading.CancellationToken> not throw exceptions.</span></span> 
  
 <span data-ttu-id="23158-170">Se `throwOnFirstException` viene `true`, un'eccezione verrà immediatamente propagata dalla chiamata a <xref:System.Threading.CancellationTokenSource.Cancel%2A>, impedendo il callback restanti e le operazioni annullabili dall'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="23158-170">If `throwOnFirstException` is `true`, an exception will immediately propagate out of the call to <xref:System.Threading.CancellationTokenSource.Cancel%2A>, preventing the remaining callbacks and cancelable operations from being processed.</span></span>  
  
 <span data-ttu-id="23158-171">Se `throwOnFirstException` viene `false`, questo overload aggregherà le eccezioni generate in un <xref:System.AggregateException>, in modo che un callback che genera un'eccezione non impedirà l'esecuzione di altri callback registrato.</span><span class="sxs-lookup"><span data-stu-id="23158-171">If `throwOnFirstException` is `false`, this overload will aggregate any exceptions thrown into an <xref:System.AggregateException>, such that one callback throwing an exception will not prevent other registered callbacks from being executed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="23158-172">Questo oggetto <see cref="T:System.Threading.CancellationTokenSource" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-172">This <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="23158-173">Eccezione di aggregazione che contiene tutte le eccezioni generate dai callback registrati sull'oggetto <see cref="T:System.Threading.CancellationToken" /> associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-173">An aggregate exception containing all the exceptions thrown by the registered callbacks on the associated <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="23158-174">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-174">Cancellation</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="23158-175">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-175">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CancelAfter">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="23158-176">Pianifica un'operazione di annullamento su questo oggetto <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-176">Schedules a cancel operation on this <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CancelAfter">
      <MemberSignature Language="C#" Value="public void CancelAfter (int millisecondsDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAfter(int32 millisecondsDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenSource.CancelAfter(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAfter (millisecondsDelay As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAfter(int millisecondsDelay);" />
      <MemberSignature Language="F#" Value="member this.CancelAfter : int -&gt; unit" Usage="cancellationTokenSource.CancelAfter millisecondsDelay" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsDelay" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsDelay">
          <span data-ttu-id="23158-177">Intervallo di tempo da attendere prima di annullare questo oggetto <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-177">The time span to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23158-178">Programma un'operazione di annullamento in questo oggetto <see cref="T:System.Threading.CancellationTokenSource" /> dopo il numero di millisecondi specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-178">Schedules a cancel operation on this <see cref="T:System.Threading.CancellationTokenSource" /> after the specified number of milliseconds.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23158-179">Il conto alla rovescia per la `millisecondsDelay` viene avviato durante la chiamata.</span><span class="sxs-lookup"><span data-stu-id="23158-179">The countdown for the `millisecondsDelay` starts during this call.</span></span> <span data-ttu-id="23158-180">Quando la `millisecondsDelay` scade, ciò <xref:System.Threading.CancellationTokenSource> viene annullata, se non è già stata annullata.</span><span class="sxs-lookup"><span data-stu-id="23158-180">When the `millisecondsDelay` expires, this <xref:System.Threading.CancellationTokenSource> is canceled, if it has not been canceled already.</span></span>  
  
 <span data-ttu-id="23158-181">Le chiamate successive a CancelAfter reimposterà il `millisecondsDelay` per questo <xref:System.Threading.CancellationTokenSource>, se non è già stata annullata.</span><span class="sxs-lookup"><span data-stu-id="23158-181">Subsequent calls to CancelAfter will reset the `millisecondsDelay` for this <xref:System.Threading.CancellationTokenSource>, if it has not been canceled already.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="23158-182">Eccezione generata quando questo <see cref="T:System.Threading.CancellationTokenSource" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-182">The exception thrown when this <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="23158-183">Eccezione generata quando <paramref name="millisecondsDelay" /> è inferiore a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-183">The exception thrown when <paramref name="millisecondsDelay" /> is less than -1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelAfter">
      <MemberSignature Language="C#" Value="public void CancelAfter (TimeSpan delay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAfter(valuetype System.TimeSpan delay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAfter (delay As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAfter(TimeSpan delay);" />
      <MemberSignature Language="F#" Value="member this.CancelAfter : TimeSpan -&gt; unit" Usage="cancellationTokenSource.CancelAfter delay" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delay" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="delay">
          <span data-ttu-id="23158-184">Intervallo di tempo da attendere prima di annullare questo oggetto <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-184">The time span to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23158-185">Pianifica un'operazione di annullamento su questo oggetto <see cref="T:System.Threading.CancellationTokenSource" /> dopo l'intervallo di tempo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-185">Schedules a cancel operation on this <see cref="T:System.Threading.CancellationTokenSource" /> after the specified time span.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="23158-186">Eccezione generata quando questo <see cref="T:System.Threading.CancellationTokenSource" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-186">The exception thrown when this <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="23158-187">Eccezione generata quando <paramref name="delay" /> è minore di -1 o maggiore di Int32.MaxValue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-187">The exception that is thrown when <paramref name="delay" /> is less than -1 or greater than Int32.MaxValue.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateLinkedTokenSource">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="23158-188">Crea un oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che sarà in stato annullato quando uno dei token di origine si troverà in stato annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-188">Creates a <see cref="T:System.Threading.CancellationTokenSource" /> that will be in the canceled state when any of the source tokens are in the canceled state.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateLinkedTokenSource">
      <MemberSignature Language="C#" Value="public static System.Threading.CancellationTokenSource CreateLinkedTokenSource (params System.Threading.CancellationToken[] tokens);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.CancellationTokenSource CreateLinkedTokenSource(valuetype System.Threading.CancellationToken[] tokens) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateLinkedTokenSource (ParamArray tokens As CancellationToken()) As CancellationTokenSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::CancellationTokenSource ^ CreateLinkedTokenSource(... cli::array &lt;System::Threading::CancellationToken&gt; ^ tokens);" />
      <MemberSignature Language="F#" Value="static member CreateLinkedTokenSource : System.Threading.CancellationToken[] -&gt; System.Threading.CancellationTokenSource" Usage="System.Threading.CancellationTokenSource.CreateLinkedTokenSource tokens" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationTokenSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokens" Type="System.Threading.CancellationToken[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="tokens">
          <span data-ttu-id="23158-189">Matrice contenente le istanze del token di annullamento da osservare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-189">An array that contains the cancellation token instances to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23158-190">Crea un oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che sarà nello stato annullato quando uno dei token di origine nella matrice specificata si troverà nello stato annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-190">Creates a <see cref="T:System.Threading.CancellationTokenSource" /> that will be in the canceled state when any of the source tokens in the specified array are in the canceled state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="23158-191">Oggetto <see cref="T:System.Threading.CancellationTokenSource" /> collegato ai token di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-191">A <see cref="T:System.Threading.CancellationTokenSource" /> that is linked to the source tokens.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="23158-192">Un oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato a uno dei token di origine è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-192">A <see cref="T:System.Threading.CancellationTokenSource" /> associated with one of the source tokens has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="23158-193">
            <paramref name="tokens" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-193">
              <paramref name="tokens" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="23158-194">
            <paramref name="tokens" /> è vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-194">
              <paramref name="tokens" /> is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="23158-195">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-195">Cancellation</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="23158-196">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-196">Task Cancellation</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f4f3804-2ed7-41b4-a97a-6e32b93f6e05">
          <span data-ttu-id="23158-197">Procedura: Ascolto di più richieste di annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-197">How to: Listen for Multiple Cancellation Requests</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CreateLinkedTokenSource">
      <MemberSignature Language="C#" Value="public static System.Threading.CancellationTokenSource CreateLinkedTokenSource (System.Threading.CancellationToken token1, System.Threading.CancellationToken token2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.CancellationTokenSource CreateLinkedTokenSource(valuetype System.Threading.CancellationToken token1, valuetype System.Threading.CancellationToken token2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateLinkedTokenSource (token1 As CancellationToken, token2 As CancellationToken) As CancellationTokenSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::CancellationTokenSource ^ CreateLinkedTokenSource(System::Threading::CancellationToken token1, System::Threading::CancellationToken token2);" />
      <MemberSignature Language="F#" Value="static member CreateLinkedTokenSource : System.Threading.CancellationToken * System.Threading.CancellationToken -&gt; System.Threading.CancellationTokenSource" Usage="System.Threading.CancellationTokenSource.CreateLinkedTokenSource (token1, token2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationTokenSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token1" Type="System.Threading.CancellationToken" />
        <Parameter Name="token2" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="token1">
          <span data-ttu-id="23158-198">Primo token di annullamento da osservare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-198">The first cancellation token to observe.</span>
          </span>
        </param>
        <param name="token2">
          <span data-ttu-id="23158-199">Secondo token di annullamento da osservare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-199">The second cancellation token to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23158-200">Crea un oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che sarà in stato annullato quando uno dei token di origine si troverà in stato annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-200">Creates a <see cref="T:System.Threading.CancellationTokenSource" /> that will be in the canceled state when any of the source tokens are in the canceled state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="23158-201">Oggetto <see cref="T:System.Threading.CancellationTokenSource" /> collegato ai token di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-201">A <see cref="T:System.Threading.CancellationTokenSource" /> that is linked to the source tokens.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="23158-202">Un oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato a uno dei token di origine è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-202">A <see cref="T:System.Threading.CancellationTokenSource" /> associated with one of the source tokens has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="23158-203">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-203">Cancellation</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="23158-204">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-204">Task Cancellation</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f4f3804-2ed7-41b4-a97a-6e32b93f6e05">
          <span data-ttu-id="23158-205">Procedura: Ascolto di più richieste di annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-205">How to: Listen for Multiple Cancellation Requests</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="23158-206">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-206">Releases all resources used by the current instance of the <see cref="T:System.Threading.CancellationTokenSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cancellationTokenSource.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="23158-207">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-207">Releases all resources used by the current instance of the <see cref="T:System.Threading.CancellationTokenSource" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23158-208">Chiamare il metodo `Dispose` dopo aver terminato di utilizzare l'oggetto <xref:System.Threading.CancellationTokenSource>.</span><span class="sxs-lookup"><span data-stu-id="23158-208">Call `Dispose` when you are finished using the <xref:System.Threading.CancellationTokenSource>.</span></span> <span data-ttu-id="23158-209">Il metodo `Dispose` lascia l'oggetto <xref:System.Threading.CancellationTokenSource> in una condizione di inutilizzabilità.</span><span class="sxs-lookup"><span data-stu-id="23158-209">The `Dispose` method leaves the <xref:System.Threading.CancellationTokenSource> in an unusable state.</span></span> <span data-ttu-id="23158-210">Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti per il <xref:System.Threading.CancellationTokenSource> in modo che il garbage collector di recuperare la memoria che il <xref:System.Threading.CancellationTokenSource> occupata.</span><span class="sxs-lookup"><span data-stu-id="23158-210">After calling `Dispose`, you must release all references to the <xref:System.Threading.CancellationTokenSource> so the garbage collector can reclaim the memory that the <xref:System.Threading.CancellationTokenSource> was occupying.</span></span>  
  
 <span data-ttu-id="23158-211">Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementa un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="23158-211">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="23158-212">Chiamare sempre il metodo `Dispose` prima di rilasciare l'ultimo riferimento a <xref:System.Threading.CancellationTokenSource>.</span><span class="sxs-lookup"><span data-stu-id="23158-212">Always call `Dispose` before you release your last reference to the <xref:System.Threading.CancellationTokenSource>.</span></span> <span data-ttu-id="23158-213">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Threading.CancellationTokenSource> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="23158-213">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CancellationTokenSource> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cancellationTokenSource.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="23158-214">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-214">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23158-215">Rilascia le risorse non gestite usate dalla classe <see cref="T:System.Threading.CancellationTokenSource" /> e facoltativamente le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-215">Releases the unmanaged resources used by the <see cref="T:System.Threading.CancellationTokenSource" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancellationRequested">
      <MemberSignature Language="C#" Value="public bool IsCancellationRequested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancellationRequested" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationTokenSource.IsCancellationRequested" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCancellationRequested As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancellationRequested { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCancellationRequested : bool" Usage="System.Threading.CancellationTokenSource.IsCancellationRequested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="23158-216">Ottiene un valore che indica se per <see cref="T:System.Threading.CancellationTokenSource" /> è stato richiesto l'annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-216">Gets whether cancellation has been requested for this <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="23158-217">
            <see langword="true" /> se per <see cref="T:System.Threading.CancellationTokenSource" /> è stato richiesto l'annullamento; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-217">
              <see langword="true" /> if cancellation has been requested for this <see cref="T:System.Threading.CancellationTokenSource" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23158-218">Questa proprietà indica se è stato richiesto l'annullamento per questa origine del token, ad esempio a causa di una chiamata al relativo <xref:System.Threading.CancellationTokenSource.Cancel%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="23158-218">This property indicates whether cancellation has been requested for this token source, such as due to a call to its <xref:System.Threading.CancellationTokenSource.Cancel%2A> method.</span></span>  
  
 <span data-ttu-id="23158-219">Se questa proprietà restituisce `true`, garantisce solo che è stato richiesto l'annullamento.</span><span class="sxs-lookup"><span data-stu-id="23158-219">If this property returns `true`, it only guarantees that cancellation has been requested.</span></span> <span data-ttu-id="23158-220">Ciò non garantisce che ogni gestore registrato con il token corrispondente ha terminato l'esecuzione, né che le richieste di annullamento hanno terminato la propagazione a tutti i gestori registrati.</span><span class="sxs-lookup"><span data-stu-id="23158-220">It does not guarantee that every handler registered with the corresponding token has finished executing, nor that cancellation requests have finished propagating to all registered handlers.</span></span> <span data-ttu-id="23158-221">Un'ulteriore sincronizzazione potrebbe essere necessaria, in particolare nelle situazioni in cui gli oggetti correlati vengono annullati contemporaneamente.</span><span class="sxs-lookup"><span data-stu-id="23158-221">Additional synchronization may be required, particularly in situations where related objects are being canceled concurrently.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="23158-222">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-222">Cancellation</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="23158-223">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-223">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken Token" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationTokenSource.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken Token { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : System.Threading.CancellationToken" Usage="System.Threading.CancellationTokenSource.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="23158-224">Ottiene l'oggetto <see cref="T:System.Threading.CancellationToken" /> associato a questo oggetto <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-224">Gets the <see cref="T:System.Threading.CancellationToken" /> associated with this <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="23158-225">Oggetto <see cref="T:System.Threading.CancellationToken" /> associato a questo oggetto <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-225">The <see cref="T:System.Threading.CancellationToken" /> associated with this <see cref="T:System.Threading.CancellationTokenSource" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="23158-226">L'origine del token è stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-226">The token source has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="23158-227">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-227">Cancellation</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="23158-228">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="23158-228">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>