<Type Name="ResXResourceWriter" FullName="System.Resources.ResXResourceWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95d41af26b49036a5af2deeb6e9c6325bc02166f" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52251519" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResXResourceWriter : IDisposable, System.Resources.IResourceWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResXResourceWriter extends System.Object implements class System.IDisposable, class System.Resources.IResourceWriter" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResXResourceWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class ResXResourceWriter&#xA;Implements IDisposable, IResourceWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResXResourceWriter : IDisposable, System::Resources::IResourceWriter" />
  <TypeSignature Language="F#" Value="type ResXResourceWriter = class&#xA;    interface IResourceWriter&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Resources.IResourceWriter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Scrive le risorse in un file di risorse XML (resx) o in un flusso di output.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResXResourceWriter> scrive le risorse in formato XML. Per scrivere un file di risorse binario, usare <xref:System.Resources.ResourceWriter>.  
  
 Le risorse vengono specificate come coppie nome/valore tramite il <xref:System.Resources.ResXResourceWriter.AddResource%2A> (metodo). I nomi delle risorse sono tra maiuscole e minuscole quando viene utilizzato per ricerche; ma per supportare gli strumenti di creazione più facilmente e consentire l'eliminazione dei bug, <xref:System.Resources.ResXResourceWriter> non consente nomi che differiscono solo per un file resx.  
  
 Per creare un file resx, creare un <xref:System.Resources.ResXResourceWriter> con un nome file univoco, chiamare <xref:System.Resources.ResXResourceWriter.AddResource%2A> almeno una volta, chiama <xref:System.Resources.ResXResourceWriter.Generate%2A> per scrivere nel file di risorse disco e quindi chiamare <xref:System.Resources.ResXResourceWriter.Close%2A> per chiudere il file. La chiamata <xref:System.Resources.ResXResourceWriter.Close%2A> verrà implicitamente <xref:System.Resources.ResXResourceWriter.Generate%2A> il file se necessario.  
  
 Le risorse non vengono necessariamente scritti nello stesso ordine che sono stati aggiunti.  
  
 Per altre informazioni sul formato di un file resx, vedere [utilizzo di file a livello di codice con estensione resx](~/docs/framework/resources/working-with-resx-files-programmatically.md).  
  
> [!NOTE]
>  Questa classe contiene una richiesta di collegamento e una richiesta di ereditarietà a livello di classe che si applica a tutti i membri. Oggetto <xref:System.Security.SecurityException> viene generata quando il chiamante immediato o la classe derivata non dispone dell'autorizzazione di attendibilità.  
  
   
  
## Examples  
 L'esempio seguente crea un file con estensione resx denominato `CarResources.resx` che archivia sei stringhe, un'icona e due oggetti definiti dall'applicazione (due `Automobile` oggetti). Si noti che la classe `Automobile`, che viene definita e di cui viene creata un'istanza nell'esempio, è contrassegnata con l'attributo <xref:System.SerializableAttribute>.  
  
 [!code-csharp[conceptual.resources.resx#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.resx/cs/create1.cs#1)]
 [!code-vb[conceptual.resources.resx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.resx/vb/create1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per un'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per un'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
    <related type="Article" href="https://msdn.microsoft.com/library/168f941a-2b84-43f8-933f-cf4a8548d824">Uso dei file RESX a livello di codice</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceWriter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceWriter(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceWriter : System.IO.Stream -&gt; System.Resources.ResXResourceWriter" Usage="new System.Resources.ResXResourceWriter stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Flusso di output.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceWriter" /> che scrive le risorse nell'oggetto di flusso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Resources.ResXResourceWriter.Close%2A> metodo chiude il flusso specificato come parametro. Per scrivere la risorsa al flusso senza chiudere i flussi, è necessario usare il <xref:System.Resources.ResXResourceWriter.Generate%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per un'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per un'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceWriter (System.IO.TextWriter textWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceWriter(System::IO::TextWriter ^ textWriter);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceWriter : System.IO.TextWriter -&gt; System.Resources.ResXResourceWriter" Usage="new System.Resources.ResXResourceWriter textWriter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="textWriter">Oggetto <see cref="T:System.IO.TextWriter" /> cui inviare l'output.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceWriter" /> che scrive nell'oggetto <see cref="T:System.IO.TextWriter" /> specificato.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per un'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per un'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceWriter (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceWriter(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceWriter : string -&gt; System.Resources.ResXResourceWriter" Usage="new System.Resources.ResXResourceWriter fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Nome file di output.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceWriter" /> che scrive le risorse nel file specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore crea `filename` se non esiste e viene sovrascritto se avviene. Se `filename` include un percorso di directory, deve esistere il percorso completo o il costruttore genera un <xref:System.IO.DirectoryNotFoundException> eccezione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">La directory specificata in <paramref name="filename" /> non esiste.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per un'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per un'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceWriter (System.IO.Stream stream, Func&lt;Type,string&gt; typeNameConverter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Func`2&lt;class System.Type, string&gt; typeNameConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceWriter(System::IO::Stream ^ stream, Func&lt;Type ^, System::String ^&gt; ^ typeNameConverter);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceWriter : System.IO.Stream * Func&lt;Type, string&gt; -&gt; System.Resources.ResXResourceWriter" Usage="new System.Resources.ResXResourceWriter (stream, typeNameConverter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="typeNameConverter" Type="System.Func&lt;System.Type,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="stream">Flusso a cui inviare l'output.</param>
        <param name="typeNameConverter">Delegato usato per le versioni precedenti di .NET Framework.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceWriter" /> che scrive le risorse in un oggetto di flusso specificato e imposta un delegato convertitore. Questo delegato consente la scrittura di assembly di risorse per le versioni di .NET Framework antecedenti a [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] usando nomi di assembly completi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Studio e MSBuild di utilizzare questo costruttore quando si creano risorse per un'applicazione destinate alle versioni di .NET Framework antecedenti il [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceWriter (System.IO.TextWriter textWriter, Func&lt;Type,string&gt; typeNameConverter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter, class System.Func`2&lt;class System.Type, string&gt; typeNameConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceWriter(System::IO::TextWriter ^ textWriter, Func&lt;Type ^, System::String ^&gt; ^ typeNameConverter);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceWriter : System.IO.TextWriter * Func&lt;Type, string&gt; -&gt; System.Resources.ResXResourceWriter" Usage="new System.Resources.ResXResourceWriter (textWriter, typeNameConverter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="typeNameConverter" Type="System.Func&lt;System.Type,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="textWriter">Oggetto a cui inviare l'output.</param>
        <param name="typeNameConverter">Delegato usato per le versioni precedenti di .NET Framework.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceWriter" /> che scrive le risorse in un oggetto <see cref="T:System.IO.TextWriter" /> specificato e imposta un delegato che consente la scrittura di assembly di risorse per le versioni di .NET Framework antecedenti a [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] usando nomi di assembly completi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Studio e MSBuild di utilizzare questo costruttore quando si creano risorse per un'applicazione destinate alle versioni di .NET Framework antecedenti il [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceWriter (string fileName, Func&lt;Type,string&gt; typeNameConverter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Func`2&lt;class System.Type, string&gt; typeNameConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, typeNameConverter As Func(Of Type, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceWriter(System::String ^ fileName, Func&lt;Type ^, System::String ^&gt; ^ typeNameConverter);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceWriter : string * Func&lt;Type, string&gt; -&gt; System.Resources.ResXResourceWriter" Usage="new System.Resources.ResXResourceWriter (fileName, typeNameConverter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="typeNameConverter" Type="System.Func&lt;System.Type,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="fileName">File a cui inviare l'output.</param>
        <param name="typeNameConverter">Delegato usato per le versioni precedenti di .NET Framework.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceWriter" /> che scrive le risorse in un file specificato e imposta un delegato che consente la scrittura di assembly di risorse per le versioni di .NET Framework antecedenti a [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] usando nomi di assembly completi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Studio e MSBuild di utilizzare questo costruttore quando si creano risorse per un'applicazione destinate alle versioni di .NET Framework antecedenti il [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)].  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">La directory specificata in <paramref name="filename" /> non esiste.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAlias">
      <MemberSignature Language="C#" Value="public virtual void AddAlias (string aliasName, System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAlias(string aliasName, class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAlias(System::String ^ aliasName, System::Reflection::AssemblyName ^ assemblyName);" />
      <MemberSignature Language="F#" Value="abstract member AddAlias : string * System.Reflection.AssemblyName -&gt; unit&#xA;override this.AddAlias : string * System.Reflection.AssemblyName -&gt; unit" Usage="resXResourceWriter.AddAlias (aliasName, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aliasName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="aliasName">Nome dell'alias.</param>
        <param name="assemblyName">Il nome dell'assembly rappresentato da <paramref name="aliasName" />.</param>
        <summary>Aggiunge l'alias specificato all'elenco di alias.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Risorse i cui valori provengono da un assembly con alias vengono aggiunte automaticamente all'elenco degli alias. La risorsa non viene scritto fino a <xref:System.Resources.ResXResourceWriter.Generate%2A> viene chiamato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyName" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge all'elenco di risorse da scrivere le proprietà in fase di progettazione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddMetadata">
      <MemberSignature Language="C#" Value="public void AddMetadata (string name, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMetadata(string name, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMetadata (name As String, value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMetadata(System::String ^ name, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddMetadata : string * byte[] -&gt; unit" Usage="resXResourceWriter.AddMetadata (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name">Nome di una proprietà.</param>
        <param name="value">Matrice di byte contenente il valore della proprietà da aggiungere.</param>
        <summary>Aggiunge all'elenco di risorse da scrivere una proprietà in fase di progettazione il cui valore è specificato come matrice di byte.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La risorsa specificata dal parametro <paramref name="name" /> è già stata aggiunta.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMetadata">
      <MemberSignature Language="C#" Value="public void AddMetadata (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMetadata(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMetadata (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMetadata(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddMetadata : string * obj -&gt; unit" Usage="resXResourceWriter.AddMetadata (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nome di una proprietà.</param>
        <param name="value">Oggetto che rappresenta il valore della proprietà da aggiungere.</param>
        <summary>Aggiunge all'elenco di risorse da scrivere una proprietà in fase di progettazione il cui valore è specificato come oggetto.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La risorsa specificata dal parametro <paramref name="name" /> è già stata aggiunta.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMetadata">
      <MemberSignature Language="C#" Value="public void AddMetadata (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMetadata(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMetadata (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMetadata(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddMetadata : string * string -&gt; unit" Usage="resXResourceWriter.AddMetadata (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome di una proprietà.</param>
        <param name="value">Stringa che rappresenta il valore della proprietà da aggiungere.</param>
        <summary>Aggiunge all'elenco di risorse da scrivere una proprietà in fase di progettazione il cui valore è specificato come stringa.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La risorsa specificata dalla proprietà <paramref name="name" /> è già stata aggiunta.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddResource">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge una risorsa all'elenco di risorse da scrivere.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (System.Resources.ResXDataNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResource(class System.Resources.ResXDataNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.AddResource(System.Resources.ResXDataNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (node As ResXDataNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResource(System::Resources::ResXDataNode ^ node);" />
      <MemberSignature Language="F#" Value="member this.AddResource : System.Resources.ResXDataNode -&gt; unit" Usage="resXResourceWriter.AddResource node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Resources.ResXDataNode" />
      </Parameters>
      <Docs>
        <param name="node">Oggetto <see cref="T:System.Resources.ResXDataNode" /> contenente una coppia nome/valore di risorsa.</param>
        <summary>Aggiunge all'elenco di risorse da scrivere una risorsa denominata specificata in un oggetto <see cref="T:System.Resources.ResXDataNode" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * byte[] -&gt; unit&#xA;override this.AddResource : string * byte[] -&gt; unit" Usage="resXResourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name">Nome della risorsa.</param>
        <param name="value">Valore della risorsa da aggiungere come matrice di interi senza segno a 8 bit.</param>
        <summary>Aggiunge all'elenco di risorse da scrivere una risorsa denominata specificata come matrice di byte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La risorsa non viene scritto fino a <xref:System.Resources.ResXResourceWriter.Generate%2A> viene chiamato.  
  
 La risorsa è serializzata e archiviata in un formato binario.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * obj -&gt; unit&#xA;override this.AddResource : string * obj -&gt; unit" Usage="resXResourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nome della risorsa.</param>
        <param name="value">Valore della risorsa.</param>
        <summary>Aggiunge all'elenco di risorse da scrivere una risorsa denominata specificata come oggetto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La risorsa non viene scritto fino a <xref:System.Resources.ResXResourceWriter.Generate%2A> viene chiamato. La risorsa che è stato aggiunto deve essere serializzabile.  
  
 Se la risorsa da aggiungere è una stringa, che viene scritto come stringa. in caso contrario, la risorsa è serializzata e archiviata in un formato binario.  
  
   
  
## Examples  
 L'esempio seguente crea un file con estensione resx denominato `CarResources.resx` che archivia sei stringhe, un'icona e due oggetti definiti dall'applicazione (due `Automobile` oggetti). Per archiviare l'icona e il `Automobile` oggetti, chiama il <xref:System.Resources.ResXResourceWriter.AddResource%28System.String%2CSystem.Object%29> (metodo). Si noti che la classe `Automobile`, che viene definita e di cui viene creata un'istanza nell'esempio, è contrassegnata con l'attributo <xref:System.SerializableAttribute>.  
  
 [!code-csharp[conceptual.resources.resx#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.resx/cs/create1.cs#1)]
 [!code-vb[conceptual.resources.resx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.resx/vb/create1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * string -&gt; unit&#xA;override this.AddResource : string * string -&gt; unit" Usage="resXResourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome della risorsa.</param>
        <param name="value">Valore della risorsa.</param>
        <summary>Aggiunge una risorsa di stringa alle risorse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La risorsa non viene scritto fino a <xref:System.Resources.ResXResourceWriter.Generate%2A> viene chiamato.  
  
   
  
## Examples  
 L'esempio seguente crea un file con estensione resx denominato `CarResources.resx` che archivia sei stringhe, un'icona e due oggetti definiti dall'applicazione (due `Automobile` oggetti). Per archiviare le stringhe, chiama il <xref:System.Resources.ResXResourceWriter.AddResource%28System.String%2CSystem.String%29> (metodo).  
  
 [!code-csharp[conceptual.resources.resx#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.resx/cs/create1.cs#1)]
 [!code-vb[conceptual.resources.resx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.resx/vb/create1.vb#1)]  
  
 Si noti che la classe `Automobile`, che viene definita e di cui viene creata un'istanza nell'esempio, è contrassegnata con l'attributo <xref:System.SerializableAttribute>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePath">
      <MemberSignature Language="C#" Value="public string BasePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BasePath" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXResourceWriter.BasePath" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BasePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BasePath : string with get, set" Usage="System.Resources.ResXResourceWriter.BasePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il percorso di base per il percorso file relativo specificato in un oggetto <see cref="T:System.Resources.ResXFileRef" />.</summary>
        <value>Percorso che, se anteposto al percorso file relativo specificato in un oggetto <see cref="T:System.Resources.ResXFileRef" />, produce un percorso assoluto a un file di risorsa XML.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BinSerializedObjectMimeType">
      <MemberSignature Language="C#" Value="public static readonly string BinSerializedObjectMimeType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string BinSerializedObjectMimeType" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResXResourceWriter.BinSerializedObjectMimeType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BinSerializedObjectMimeType As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ BinSerializedObjectMimeType;" />
      <MemberSignature Language="F#" Value=" staticval mutable BinSerializedObjectMimeType : string" Usage="System.Resources.ResXResourceWriter.BinSerializedObjectMimeType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica il tipo di contenuto predefinito per un oggetto binario. Questo campo è di sola lettura.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ByteArraySerializedObjectMimeType">
      <MemberSignature Language="C#" Value="public static readonly string ByteArraySerializedObjectMimeType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ByteArraySerializedObjectMimeType" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResXResourceWriter.ByteArraySerializedObjectMimeType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ByteArraySerializedObjectMimeType As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ByteArraySerializedObjectMimeType;" />
      <MemberSignature Language="F#" Value=" staticval mutable ByteArraySerializedObjectMimeType : string" Usage="System.Resources.ResXResourceWriter.ByteArraySerializedObjectMimeType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica il tipo di contenuto predefinito per un oggetto matrice di byte. Questo campo è di sola lettura.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resXResourceWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate da <see cref="T:System.Resources.ResXResourceWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo è l'equivalente della chiamata al metodo <xref:System.Resources.ResXResourceWriter.Dispose%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSerializedObjectMimeType">
      <MemberSignature Language="C#" Value="public static readonly string DefaultSerializedObjectMimeType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultSerializedObjectMimeType" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResXResourceWriter.DefaultSerializedObjectMimeType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultSerializedObjectMimeType As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultSerializedObjectMimeType;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultSerializedObjectMimeType : string" Usage="System.Resources.ResXResourceWriter.DefaultSerializedObjectMimeType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica il tipo di contenuto predefinito per un oggetto. Questo campo è di sola lettura.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rilascia le risorse usate da <see cref="T:System.Resources.ResXResourceWriter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resXResourceWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate da <see cref="T:System.Resources.ResXResourceWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResXResourceWriter.Dispose%2A> chiamate al metodo il <xref:System.Resources.ResXResourceWriter.Generate%2A> metodo, se necessario, prima di rilasciare le risorse gestite e sistema.  
  
 La chiamata <xref:System.Resources.ResXResourceWriter.Dispose%2A> consente le risorse di sistema utilizzate dal <xref:System.Resources.ResXResourceWriter> riallocazione per altri scopi. Per altre informazioni sulle <xref:System.Resources.ResXResourceWriter.Dispose%2A>, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="resXResourceWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
        <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Resources.ResXResourceWriter" /> e, facoltativamente, le risorse gestite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResXResourceWriter.Dispose%2A> chiamate al metodo il <xref:System.Resources.ResXResourceWriter.Generate%2A> metodo, se necessario, prima di rilasciare le risorse gestite e sistema.  
  
 Questo metodo viene chiamato da parte del pubblico <xref:System.Resources.ResXResourceWriter.Dispose%2A> metodo e <xref:System.Object.Finalize%2A> (metodo). `Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.  
  
 Se il parametro `disposing` è `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <xref:System.Resources.ResXResourceWriter> fa riferimento. Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Il metodo 
            <see langword="Dispose" /> può essere chiamato più volte da altri oggetti. In caso di override di <see langword="Dispose(Boolean)" />, non fare riferimento a oggetti già eliminati in una chiamata precedente a <see langword="Dispose" />. Per altre informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
Per altre informazioni sulle <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere e.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ResXResourceWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ResXResourceWriter ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="resXResourceWriter.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Questo metodo esegue l'override del metodo <see cref="M:System.Object.Finalize" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public void Generate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Generate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceWriter.Generate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Generate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Generate();" />
      <MemberSignature Language="F#" Value="abstract member Generate : unit -&gt; unit&#xA;override this.Generate : unit -&gt; unit" Usage="resXResourceWriter.Generate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scrive tutte le risorse aggiunte dal metodo <see cref="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])" /> nel flusso o nel file di output.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResXResourceWriter.Generate%2A> metodo scrive le risorse in un flusso o il file di output. Se si desidera scrivere le risorse anche più vicino nel file di output o nel flusso, chiamare il <xref:System.Resources.ResXResourceWriter.Close%2A> (metodo).  
  
 Il <xref:System.Resources.ResXResourceWriter.Generate%2A> metodo può essere chiamato una sola volta. Dopo la chiamata di <xref:System.Resources.ResXResourceWriter.Generate%2A> metodo, tutte le <xref:System.Resources.IResourceWriter> metodi diversi da <xref:System.Resources.ResXResourceWriter.Close%2A> genererà un'eccezione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La risorsa è già stata salvata.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResMimeType">
      <MemberSignature Language="C#" Value="public static readonly string ResMimeType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ResMimeType" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResXResourceWriter.ResMimeType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResMimeType As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ResMimeType;" />
      <MemberSignature Language="F#" Value=" staticval mutable ResMimeType : string" Usage="System.Resources.ResXResourceWriter.ResMimeType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica il tipo di contenuto di una risorsa XML. Questo campo è di sola lettura.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceSchema">
      <MemberSignature Language="C#" Value="public static readonly string ResourceSchema;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ResourceSchema" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResXResourceWriter.ResourceSchema" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceSchema As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ResourceSchema;" />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceSchema : string" Usage="System.Resources.ResXResourceWriter.ResourceSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica lo schema da usare durante la scrittura del file XML. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lo schema fornisce informazioni dettagliate su come codificare le risorse in base al tipo di risorse da scrivere.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapSerializedObjectMimeType">
      <MemberSignature Language="C#" Value="public static readonly string SoapSerializedObjectMimeType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SoapSerializedObjectMimeType" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResXResourceWriter.SoapSerializedObjectMimeType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SoapSerializedObjectMimeType As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SoapSerializedObjectMimeType;" />
      <MemberSignature Language="F#" Value=" staticval mutable SoapSerializedObjectMimeType : string" Usage="System.Resources.ResXResourceWriter.SoapSerializedObjectMimeType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica il tipo di contenuto di un oggetto SOAP. Questo campo è di sola lettura.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public static readonly string Version;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Version" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResXResourceWriter.Version" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Version As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Version;" />
      <MemberSignature Language="F#" Value=" staticval mutable Version : string" Usage="System.Resources.ResXResourceWriter.Version" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica la versione dello schema a cui è conforme l'output XML. Questo campo è di sola lettura.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>