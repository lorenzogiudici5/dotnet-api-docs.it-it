<Type Name="ResXResourceReader" FullName="System.Resources.ResXResourceReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30db360eb3d74b3d80be421c67d52ca654a87bbb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30480405" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResXResourceReader : IDisposable, System.Collections.IEnumerable, System.Resources.IResourceReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResXResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResXResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public Class ResXResourceReader&#xA;Implements IDisposable, IEnumerable, IResourceReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResXResourceReader : IDisposable, System::Collections::IEnumerable, System::Resources::IResourceReader" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Enumera i flussi e i file di risorse XML (resx) e legge le coppie di nomi e valori delle risorse sequenziali.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResXResourceReader> classe fornisce un'implementazione predefinita del <xref:System.Resources.IResourceReader> interfaccia che legge le risorse in formato XML. Per leggere le informazioni sulle risorse da un formato di risorsa binaria, utilizzare la <xref:System.Resources.ResourceReader> classe.  
  
 Utilizzare il <xref:System.Resources.ResXResourceReader> classe per enumerare le risorse in file con estensione resx attraversando l'enumeratore di dizionario (<xref:System.Collections.IDictionaryEnumerator>) restituito dal <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> metodo. Chiamare i metodi forniti da <xref:System.Collections.IDictionaryEnumerator> per passare alla risorsa successiva e leggere il nome e il valore di ogni risorsa nel file con estensione resx.  
  
> [!NOTE]
>  La <xref:System.Resources.ResXResourceReader> classe fornisce due enumeratori. Il <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Collections.IDictionaryEnumerator> dell'oggetto; è consigliabile utilizzare questo metodo per enumerare le risorse. Il <xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> metodo è un'implementazione esplicita dell'interfaccia che restituisce un <xref:System.Collections.IEnumerator> dell'oggetto; non è consigliabile l'uso.  
  
 L'esempio seguente usa il <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> per ottenere un <xref:System.Collections.IDictionaryEnumerator> oggetto utilizzato per enumerare le risorse in un file con estensione resx. L'esempio include una `CreateResourceFile` routine che crea il file di risorse necessari.  
  
 [!code-csharp[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader1.cs#1)]
 [!code-vb[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader1.vb#1)]  
  
 Se il <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> proprietà `true`, il valore della <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> proprietà è un <xref:System.Resources.ResXDataNode> oggetto anziché il valore della risorsa. In questo modo il commento dell'elemento di una risorsa disponibile il <xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=nameWithType> proprietà. L'esempio seguente imposta il <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> proprietà `true` ed enumera le risorse in un file con estensione resx,  
  
 [!code-csharp[System.Resources.ResXResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader2.cs#2)]
 [!code-vb[System.Resources.ResXResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader2.vb#2)]  
  
 Se <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> è `true`, <xref:System.Resources.ResXDataNode> gli elementi dell'enumerazione possono essere:  
  
-   Risorse denominate insieme ai relativi dati. In questo caso, il <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType> proprietà `null`.  
  
-   Risorse insieme al nome del file che contiene i dati di risorse denominate. In questo caso, il <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType> proprietà restituisce un <xref:System.Resources.ResXFileRef> oggetto che fornisce informazioni sulle risorse, inclusi il nome del file. Se vengono utilizzati i nomi di file relativo, è necessario impostare sempre la <xref:System.Resources.ResXResourceReader.BasePath%2A> proprietà per fornire un punto di riferimento per il percorso relativo del file.  
  
 Se si desidera recuperare risorse denominate da un file con estensione resx, anziché durante l'enumerazione delle relative risorse, è possibile creare un'istanza di un <xref:System.Resources.ResXResourceSet> oggetto e chiamare il relativo `GetString` e `GetObject` metodi.  
  
> [!NOTE]
>  La <xref:System.Resources.ResXResourceReader> classe contiene una richiesta di collegamento e una richiesta di ereditarietà a livello di classe che si applica a tutti i membri. Oggetto <xref:System.Security.SecurityException> quando il chiamante immediato o la classe derivata non dispone dell'autorizzazione di attendibilità totale, viene generata un'eccezione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Resources.ResXResourceReader> per scorrere le risorse in un file con estensione resx. Prima di tutto, il <xref:System.Resources.ResXResourceReader> `rsxr` viene creato per il file `items.resx`. Successivamente, il <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> metodo viene utilizzato per creare un <xref:System.Collections.IDictionaryEnumerator> per scorrere le risorse e visualizzare il contenuto nella console.  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/resxresourcereader.cpp#1)]
 [!code-csharp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/resxresourcereader.cs#1)]
 [!code-vb[System.Resources.ResxresourceReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/resxresourcereader.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per l'attendibilità totale per gli eredi. Questa classe non può essere ereditata da codice parzialmente attendibile.</permission>
    <altmember cref="T:System.Resources.ResXResourceWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Flusso di input che contiene le risorse.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceReader" /> per il flusso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Resources.ResXResourceReader.Dispose%2A> e <xref:System.Resources.ResXResourceReader.Close%2A> metodi non chiudono il flusso specificato in questo costruttore.  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per l'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::TextReader ^ reader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">Flusso di input di testo che contiene le risorse.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceReader" /> per l'oggetto <see cref="T:System.IO.TextReader" /> specificato.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per l'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Percorso file di risorse da leggere.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceReader" /> per il file di risorse specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente crea una nuova istanza di <xref:System.Resources.ResXResourceReader> scorre le risorse del file di classe per il file specificato e visualizza il contenuto nella console.  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/resxresourcereader.cpp#1)]
 [!code-csharp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/resxresourcereader.cs#1)]
 [!code-vb[System.Resources.ResxresourceReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/resxresourcereader.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per l'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.Stream stream, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::Stream ^ stream, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="stream">Flusso di input che contiene le risorse.</param>
        <param name="typeResolver">Oggetto che risolve i nomi dei tipi specificati in una risorsa.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceReader" /> usando un flusso di input e un servizio di risoluzione del tipo.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per l'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.Stream stream, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::Stream ^ stream, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" />
      </Parameters>
      <Docs>
        <param name="stream">Flusso di input che contiene le risorse.</param>
        <param name="assemblyNames">Matrice di oggetti <see cref="T:System.Reflection.AssemblyName" /> che specifica uno o più assembly. Gli assembly vengono usati per risolvere il nome di un tipo nella risorsa in un tipo effettivo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceReader" /> usando un flusso e una matrice di nomi di assembly.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per l'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.TextReader reader, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader reader, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader, typeResolver As ITypeResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::TextReader ^ reader, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="reader">Lettore del flusso di testo che contiene le risorse.</param>
        <param name="typeResolver">Oggetto che risolve i nomi dei tipi specificati in una risorsa.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceReader" /> usando un lettore del flusso di testo e un servizio di risoluzione del tipo.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per l'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.TextReader reader, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader reader, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader, assemblyNames As AssemblyName())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::TextReader ^ reader, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" />
      </Parameters>
      <Docs>
        <param name="reader">Oggetto usato per la lettura delle risorse da un flusso di testo.</param>
        <param name="assemblyNames">Matrice di oggetti <see cref="T:System.Reflection.AssemblyName" /> che specifica uno o più assembly. Gli assembly vengono usati per risolvere il nome di un tipo nella risorsa in un tipo effettivo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceReader" /> usando un oggetto <see cref="T:System.IO.TextReader" /> e una matrice di nomi di assembly.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per l'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (string fileName, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, typeResolver As ITypeResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::String ^ fileName, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="fileName">Nome di un file di risorse XML che contiene le risorse.</param>
        <param name="typeResolver">Oggetto che risolve i nomi dei tipi specificati in una risorsa.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceReader" /> usando un nome file e un servizio di risoluzione del tipo.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per l'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (string fileName, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, assemblyNames As AssemblyName())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::String ^ fileName, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" />
      </Parameters>
      <Docs>
        <param name="fileName">Nome di un file di risorse XML che contiene le risorse.</param>
        <param name="assemblyNames">Matrice di oggetti <see cref="T:System.Reflection.AssemblyName" /> che specifica uno o più assembly. Gli assembly vengono usati per risolvere il nome di un tipo nella risorsa in un tipo effettivo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResXResourceReader" /> usando un nome file di risorse XML e una matrice di nomi di assembly.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per l'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName="BasePath">
      <MemberSignature Language="C#" Value="public string BasePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BasePath" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXResourceReader.BasePath" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BasePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il percorso di base per il percorso file relativo specificato in un oggetto <see cref="T:System.Resources.ResXFileRef" />.</summary>
        <value>Percorso che, se anteposto al percorso file relativo specificato in un oggetto <see cref="T:System.Resources.ResXFileRef" />, produce un percorso assoluto di un file di risorse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResXResourceReader.BasePath%2A> proprietà viene utilizzata per risolvere i riferimenti di percorso relativo del file che vengono assegnati al <xref:System.Resources.ResXFileRef.FileName%2A> proprietà <xref:System.Resources.ResXFileRef> oggetti.  Per impostazione predefinita, il relativo valore è <xref:System.String.Empty?displayProperty=nameWithType>, e i riferimenti di percorso relativo del file vengono risolti in relazione alla directory corrente restituita dal <xref:System.Environment.CurrentDirectory%2A?displayProperty=nameWithType> proprietà. Prima di iniziare l'enumerazione delle risorse, è necessario impostare questa proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un file di risorse XML che contiene le immagini dei due elenchi dog, crea anche una risorsa stringa che specifica l'applicazione che ha creato la risorsa. <xref:System.Resources.ResXFileRef> gli oggetti vengono utilizzati per archiviare il percorso per le immagini anziché di archiviare le immagini binarie nel file di risorse. Nell'esempio viene impostata la <xref:System.Resources.ResXResourceReader.BasePath%2A> proprietà in modo che i relativi percorsi di file nei nomi dei file delle immagini vengono interpretati come sottodirectory di una directory denominata c:\Data\\.  
  
 [!code-csharp[System.Resources.ResXResourceReader.BasePath#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.basepath/cs/basepathex1.cs#1)]
 [!code-vb[System.Resources.ResXResourceReader.BasePath#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.basepath/vb/basepathex1.vb#1)]  
  
 Si noti che è necessario aggiungere un riferimento a System.Drawing.dll per compilare il progetto completata. Nell'esempio si presuppone inoltre che le immagini necessarie esistano in una directory denominata C:\data\images\\.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">In un'operazione di impostazione non è possibile specificare un valore poiché il file di risorse XML è stato già acceduto ed è in uso.</exception>
        <altmember cref="M:System.Resources.ResXResourceReader.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate da <see cref="T:System.Resources.ResXResourceReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Resources.ResXResourceReader.Close%2A> consente le risorse usate dal <xref:System.Resources.ResXResourceReader> riallocazione per altri scopi. Per ulteriori informazioni su <xref:System.Resources.ResXResourceReader.Close%2A>, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md).  
  
   
  
## Examples  
 Nell'esempio seguente vengono visualizzate le risorse di un file nella console e quindi utilizza il <xref:System.Resources.ResXResourceReader.Close%2A> metodo per arrestare il lettore e per rendere le risorse disponibili per altri processi.  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/resxresourcereader.cpp#1)]
 [!code-csharp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/resxresourcereader.cs#1)]
 [!code-vb[System.Resources.ResxresourceReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/resxresourcereader.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
        <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Resources.ResXResourceReader" /> e, facoltativamente, le risorse gestite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere chiamato da uno di <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> metodo o <xref:System.Object.Finalize%2A?displayProperty=nameWithType> metodo. <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> richiama il metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A> richiama il metodo con `disposing` impostato su `false`.  
  
 Se il parametro `disposing` è `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <xref:System.Resources.ResXResourceReader> fa riferimento. Il metodo richiama il metodo `Dispose` di ciascun oggetto cui viene fatto riferimento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            Il metodo <see langword="Dispose" /> può essere chiamato più volte da altri oggetti. In caso di override di <see langword="Dispose(Boolean)" />, non fare riferimento a oggetti già eliminati in una chiamata precedente a <see langword="Dispose" />. Per ulteriori informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 Per ulteriori informazioni su <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere e.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ResXResourceReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ResXResourceReader ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Questo metodo esegue l'override del metodo <see cref="M:System.Object.Finalize" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromFileContents">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un nuovo oggetto <see cref="T:System.Resources.ResXResourceReader" /> e lo inizializza per la lettura di una stringa il cui contenuto è nel formato di file di risorse XML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromFileContents">
      <MemberSignature Language="C#" Value="public static System.Resources.ResXResourceReader FromFileContents (string fileContents);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResXResourceReader FromFileContents(string fileContents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.FromFileContents(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileContents (fileContents As String) As ResXResourceReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResXResourceReader ^ FromFileContents(System::String ^ fileContents);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResXResourceReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileContents">Stringa che contiene le informazioni formattate per la risorsa XML.</param>
        <summary>Crea un nuovo oggetto <see cref="T:System.Resources.ResXResourceReader" /> e lo inizializza per la lettura di una stringa il cui contenuto è nel formato di file di risorse XML.</summary>
        <returns>Oggetto che legge le risorse dalla stringa <paramref name="fileContents" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per l'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName="FromFileContents">
      <MemberSignature Language="C#" Value="public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResXResourceReader FromFileContents(string fileContents, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileContents (fileContents As String, typeResolver As ITypeResolutionService) As ResXResourceReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResXResourceReader ^ FromFileContents(System::String ^ fileContents, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResXResourceReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.String" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="fileContents">Stringa che contiene le informazioni formattate per la risorsa XML.</param>
        <param name="typeResolver">Oggetto che risolve i nomi dei tipi specificati in una risorsa.</param>
        <summary>Crea un nuovo oggetto <see cref="T:System.Resources.ResXResourceReader" /> e lo inizializza per la lettura di una stringa il cui contenuto è nel formato di file di risorse XML e per l'uso di un oggetto <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> per la risoluzione dei nomi di tipi specificati in una risorsa.</summary>
        <returns>Oggetto che legge le risorse dalla stringa <paramref name="fileContents" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per l'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName="FromFileContents">
      <MemberSignature Language="C#" Value="public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResXResourceReader FromFileContents(string fileContents, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileContents (fileContents As String, assemblyNames As AssemblyName()) As ResXResourceReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResXResourceReader ^ FromFileContents(System::String ^ fileContents, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResXResourceReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.String" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" />
      </Parameters>
      <Docs>
        <param name="fileContents">Stringa il cui contenuto è nel formato di file di risorse XML.</param>
        <param name="assemblyNames">Matrice di oggetti <see cref="T:System.Reflection.AssemblyName" /> che specifica uno o più assembly. Gli assembly vengono usati per risolvere il nome di un tipo nella risorsa in un tipo effettivo.</param>
        <summary>Crea un nuovo oggetto <see cref="T:System.Resources.ResXResourceReader" /> e lo inizializza per la lettura di una stringa il cui contenuto è nel formato di file di risorse XML e per l'uso di una matrice di oggetti <see cref="T:System.Reflection.AssemblyName" /> per la risoluzione dei nomi di tipi specificati in una risorsa.</summary>
        <returns>Oggetto che legge le risorse dalla stringa <paramref name="fileContents" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">per l'attendibilità totale per gli eredi. Questo membro non può essere ereditato da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un enumeratore per l'oggetto <see cref="T:System.Resources.ResXResourceReader" /> corrente.</summary>
        <returns>Enumeratore per l'oggetto <see cref="T:System.Resources.ResourceReader" /> corretto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> che consente di recuperare le coppie nome/valore nel flusso di risorse (resx) XML o stringa associato all'oggetto corrente <xref:System.Resources.ResXResourceReader> oggetto. Tuttavia, se il <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> è impostata su `true` prima di chiamare <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>, vengono recuperati gli elementi di risorsa come <xref:System.Resources.ResXDataNode> oggetti. In questo caso, tutti i nodi di risorsa vengono restituiti indipendentemente dal tipo.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> per ottenere un <xref:System.Collections.IDictionaryEnumerator> oggetto utilizzato per enumerare le risorse in un file con estensione resx. L'esempio include una `CreateResourceFile` routine che crea il file di risorse necessari.  
  
 [!code-csharp[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader1.cs#1)]
 [!code-vb[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetMetadataEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetMetadataEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.GetMetadataEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetMetadataEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornisce un enumeratore di dizionario in grado di recuperare le proprietà in fase di progettazione dal flusso o dal file di risorse XML corrente.</summary>
        <returns>Enumeratore per i metadati in una risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le risorse vengono archiviate come coppie nome/valore in un file di risorse o di un flusso. Proprietà Design-time, ovvero metadati, vengono archiviate nel file di risorse o flusso insieme alle risorse di dati di runtime. Il <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A> metodo fornisce un <xref:System.Collections.IDictionaryEnumerator> oggetto che può recuperare i metadati dal file di risorsa o al flusso associato all'oggetto corrente <xref:System.Resources.ResXResourceReader> oggetto. Tuttavia, se il <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> è impostata su `true` prima di chiamare <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A>, viene recuperato alcun nodo di risorsa.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A> metodo per scorrere le risorse di metadati in un file di risorse XML. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> proprietà.  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/useresxdatanodes.cpp#4)]
 [!code-csharp[System.Resources.ResxresourceReader Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/useresxdatanodes.cs#4)]
 [!code-vb[System.Resources.ResxresourceReader Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/useresxdatanodes.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un enumeratore per l'oggetto <see cref="T:System.Resources.ResXResourceReader" /> corrente. Per una descrizione di questo membro, vedere il metodo <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
        <returns>Enumeratore in grado di scorrere le coppie nome/valore nella stringa o nel flusso di risorse XML (resx) associato all'oggetto <see cref="T:System.Resources.ResXResourceReader" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Resources.ResXResourceReader> a un'interfaccia <xref:System.Collections.IEnumerable>. Per enumerare le risorse in un file con estensione resx, si consiglia di chiamare il <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType> (metodo) e quindi chiamare il `MoveNext` metodo sull'oggetto restituito <xref:System.Collections.IDictionaryEnumerator> oggetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Resources.ResXResourceReader" /> e, facoltativamente, le risorse gestite. Per una descrizione di questo membro, vedere il metodo <see cref="M:System.IDisposable.Dispose" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Resources.ResXResourceReader> a un'interfaccia <xref:System.IDisposable>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Resources.ResXResourceReader.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="UseResXDataNodes">
      <MemberSignature Language="C#" Value="public bool UseResXDataNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseResXDataNodes" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXResourceReader.UseResXDataNodes" />
      <MemberSignature Language="VB.NET" Value="Public Property UseResXDataNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseResXDataNodes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se gli oggetti <see cref="T:System.Resources.ResXDataNode" /> vengono restituiti durante la lettura del flusso o del file di risorse XML corrente.</summary>
        <value>
          <see langword="true" /> se vengono recuperati i nodi dati della risorsa; <see langword="false" /> se vengono ignorati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile impostare il <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> proprietà prima di iniziare l'enumerazione delle risorse. Per impostazione predefinita, il relativo valore è `false`.  
  
   
  
## Examples  
 Nell'esempio seguente enumera e visualizza gli elementi di risorsa in un file XML. Inizialmente, <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> è impostato su `false` per mostrare gli elementi di dati e metadati che si verificano nel file di risorse. La seconda enumerazione dispone di <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> impostato su `true` in modo che gli elementi di dati di risorsa vengono restituiti come <xref:System.Resources.ResXDataNode> oggetti.  
  
 [!code-cpp[System.Resources.ResXResourceReader Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/useresxdatanodes.cpp#2)]
 [!code-csharp[System.Resources.ResXResourceReader Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/useresxdatanodes.cs#2)]
 [!code-vb[System.Resources.ResXResourceReader Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/useresxdatanodes.vb#2)]  
  
 Il file di risorse XML utilizzato dall'esempio contiene un nodo di dati e un nodo di metadati. Per utilizzare il file XML con l'esempio precedente, copiare il testo seguente e salvarlo in un file denominato Resource1.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<root>  
  <resheader name="resmimetype">  
    <value>text/microsoft-resx</value>  
  </resheader>  
  <resheader name="version">  
    <value>2.0</value>  
  </resheader>  
  <resheader name="reader">  
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0,  
           Culture=neutral, PublicKeyToken=b77a5c561934e089  
    </value>  
  </resheader>  
  <resheader name="writer">  
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0,  
           Culture=neutral, PublicKeyToken=b77a5c561934e089  
    </value>  
  </resheader>  
  <data name="DataSample" xml:space="preserve">  
    <value>Sample DATA value</value>  
  </data>  
  <metadata name="MetadataSample">  
    <value>Sample METADATA value</value>  
  </metadata>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">In un'operazione di impostazione, l'enumeratore del file o del flusso di risorse è già aperto.</exception>
      </Docs>
    </Member>
  </Members>
</Type>