<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ResourceReader.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5682738b4136d074223cbe025a9380b3cca9bc1d0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">682738b4136d074223cbe025a9380b3cca9bc1d0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceReader">
          <source>Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</source>
          <target state="translated">Enumera le risorse in un file di risorse (.resources) binario leggendo le coppie nome/valore delle risorse sequenziali.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceReader">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept>: Calling methods in this class with untrusted data is a security risk.</source>
          <target state="translated"><bpt id="p1">**</bpt>Nota sulla sicurezza<ept id="p1">**</ept>: la chiamata di metodi in questa classe con dati non attendibili costituisce un rischio per la sicurezza.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceReader">
          <source>Call the methods in the class only with trusted data.</source>
          <target state="translated">Chiamare i metodi della classe solo con dati attendibili.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceReader">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere la pagina relativa ai <bpt id="p1">[</bpt>rischi per la sicurezza correlati a dati non attendibili<ept id="p1">](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> class provides a standard implementation of the <ph id="ph2">&lt;xref:System.Resources.IResourceReader&gt;</ph> interface.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> classe fornisce un'implementazione standard del <ph id="ph2">&lt;xref:System.Resources.IResourceReader&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>A <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> instance represents either a standalone .resources file or a .resources file that is embedded in an assembly.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> istanza rappresenta un file con estensione resources autonomo o un file con estensione resources incorporato in un assembly.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>It is used to enumerate the resources in a .resources file and retrieve its name/value pairs.</source>
          <target state="translated">Consente di enumerare le risorse in un file. Resources e recuperare il relativo coppie nome/valore.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>It differs from the <ph id="ph1">&lt;xref:System.Resources.ResourceManager&gt;</ph> class, which is used to retrieve specified named resources from a .resources file that is embedded in an assembly.</source>
          <target state="translated">Si differenzia dal <ph id="ph1">&lt;xref:System.Resources.ResourceManager&gt;</ph> (classe), che viene utilizzato per recuperare risorse denominate specificate da un file con estensione resources incorporato in un assembly.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceManager&gt;</ph> class is used to retrieve resources whose names are known in advance, whereas the <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> class is useful for retrieving resources whose number or precise names are not known at compile time.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Resources.ResourceManager&gt;</ph> classe viene utilizzata per recuperare le risorse i cui nomi sono noti in anticipo, mentre la <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> classe è utile per il recupero delle risorse il cui numero o i nomi esatti non sono noti in fase di compilazione.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>For example, an application may use a resources file to store configuration information that is organized into sections and items in a section, where the number of sections or items in a section is not known in advance.</source>
          <target state="translated">Ad esempio, un'applicazione può utilizzare un file di risorse per archiviare le informazioni di configurazione che sono organizzate in sezioni e gli elementi in una sezione, in cui il numero di sezioni o gli elementi in una sezione non è noto in anticipo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Resources can then be named generically (such as <ph id="ph1">`Section1`</ph>, <ph id="ph2">`Section1Item1`</ph>, <ph id="ph3">`Section1Item2`</ph>, and so on) and retrieved by using a <ph id="ph4">&lt;xref:System.Resources.ResourceReader&gt;</ph> object.</source>
          <target state="translated">Le risorse possono quindi essere denominate in modo generico (ad esempio <ph id="ph1">`Section1`</ph>, <ph id="ph2">`Section1Item1`</ph>, <ph id="ph3">`Section1Item2`</ph>e così via) e recuperati usando un <ph id="ph4">&lt;xref:System.Resources.ResourceReader&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Questo tipo implementa il <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Per eliminare direttamente il tipo, chiamare il relativo <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> metodo in un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> blocco.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio <ph id="ph1">`using`</ph> in C# o <ph id="ph2">`Using`</ph> in Visual Basic.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Per ulteriori informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> argomento relativo all'interfaccia.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>For more information about using the <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> class, see the following sections:</source>
          <target state="translated">Per ulteriori informazioni sull'utilizzo di <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> classe, vedere le sezioni seguenti:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source><bpt id="p1">[</bpt>Instantiating a ResourceReader object<ept id="p1">](#instantiate)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Creazione di un oggetto ResourceReader<ept id="p1">](#instantiate)</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source><bpt id="p1">[</bpt>Enumerating a ResourceReader object's resources<ept id="p1">](#enumerate)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Enumerazione delle risorse dell'oggetto ResourceReader<ept id="p1">](#enumerate)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source><bpt id="p1">[</bpt>Retrieving resources by using IDictionaryEnumerator properties<ept id="p1">](#idictionaryenumerator)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Recupero di risorse utilizzando le proprietà per IDictionaryEnumerator<ept id="p1">](#idictionaryenumerator)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source><bpt id="p1">[</bpt>Retrieving resources by name with GetResourceData<ept id="p1">](#getresourcedata)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Il recupero delle risorse in base al nome con GetResourceData<ept id="p1">](#getresourcedata)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Instantiating a ResourceReader Object</source>
          <target state="translated">Creazione di un oggetto ResourceReader</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>A .resources file is a binary file that has been compiled from either a text file or an XML .resx file by <bpt id="p1">[</bpt>Resgen.exe (Resource File Generator)<ept id="p1">](~/docs/framework/tools/resgen-exe-resource-file-generator.md)</ept>.</source>
          <target state="translated">Un file. Resources è un file binario compilato da un file di testo o un file XML con estensione resx <bpt id="p1">[</bpt>Resgen.exe (Generatore di File di risorse)<ept id="p1">](~/docs/framework/tools/resgen-exe-resource-file-generator.md)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>A <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> object can represent either a standalone .resources file or a .resources file that has been embedded in an assembly.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> oggetto può rappresentare un file con estensione resources autonomo o un file con estensione resources incorporato in un assembly.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> object that reads from a standalone .resources file, use the <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> class constructor with either an input stream or a string that contains the .resources file name.</source>
          <target state="translated">Per creare un'istanza di un <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> che legge da un file. resources autonomi, utilizzare il <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> costruttore di classe con un flusso di input o una stringa che contiene il nome del file. Resources.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The following example illustrates both approaches.</source>
          <target state="translated">L'esempio seguente illustra entrambi gli approcci.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The first instantiates a <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> object that represents a .resources file named <ph id="ph2">`Resources1.resources`</ph> by using its file name.</source>
          <target state="translated">Il primo crea un <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> oggetto che rappresenta un file con estensione resources denominato <ph id="ph2">`Resources1.resources`</ph> utilizzando il nome di file.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The second instantiates a <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> object that represents a .resources file named <ph id="ph2">`Resources2.resources`</ph> by using a stream created from the file.</source>
          <target state="translated">Il secondo crea un <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> oggetto che rappresenta un file con estensione resources denominato <ph id="ph2">`Resources2.resources`</ph> utilizzando un flusso creato dal file.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>To create a <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> object that represents an embedded .resources file, instantiate an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object from the assembly in which the .resources file is embedded.</source>
          <target state="translated">Per creare un <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> creare un'istanza di oggetto che rappresenta un file con estensione resources incorporati, un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> oggetto dall'assembly in cui è incorporato il file. Resources.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Its <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object that can be passed to the <ph id="ph3">&lt;xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29&gt;</ph> constructor.</source>
          <target state="translated">Il relativo <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType&gt;</ph> metodo restituisce un <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> oggetto che può essere passato al <ph id="ph3">&lt;xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> object that represents an embedded .resources file.</source>
          <target state="translated">Nell'esempio seguente viene creata un'istanza di un <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> oggetto che rappresenta un file con estensione resources incorporati.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Enumerating a ResourceReader Object's Resources</source>
          <target state="translated">Enumerazione delle risorse dell'oggetto ResourceReader</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>To enumerate the resources in a .resources file, you call the <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetEnumerator%2A&gt;</ph> method, which returns an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">Per enumerare le risorse in un file. Resources, chiamare il <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetEnumerator%2A&gt;</ph> metodo, che restituisce un <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>You call the <ph id="ph1">`IDictionaryEnumerator.MoveNext`</ph> method to move from one resource to the next.</source>
          <target state="translated">Chiamare il <ph id="ph1">`IDictionaryEnumerator.MoveNext`</ph> metodo per passare da una risorsa a quello successivo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The method returns <ph id="ph1">`false`</ph> when all the resources in the .resources file have been enumerated.</source>
          <target state="translated">Il metodo restituisce <ph id="ph1">`false`</ph> quando sono state enumerate tutte le risorse nel file. Resources.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Although the <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface and the <ph id="ph3">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method, the <ph id="ph4">&lt;xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method does not provide the <ph id="ph5">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">Anche se il <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> classe implementa il <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interfaccia e <ph id="ph3">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> (metodo), il <ph id="ph4">&lt;xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> metodo non fornisce il <ph id="ph5">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> implementazione.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method  returns an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> interface object that provides access to each resource's name/value pair.</source>
          <target state="translated">Al contrario, il <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> metodo restituisce un <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> oggetto dell'interfaccia che fornisce l'accesso a una coppia nome/valore di ogni risorsa.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>You can retrieve the individual resources in the collection in two ways:</source>
          <target state="translated">È possibile recuperare le singole risorse nella raccolta in due modi:</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>You can iterate each resource in the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType&gt;</ph> collection and use <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType&gt;</ph> properties to retrieve the resource name and value.</source>
          <target state="translated">È possibile eseguire l'iterazione di ogni risorsa di <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType&gt;</ph> raccolta e utilizzo <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType&gt;</ph> proprietà per recuperare il nome della risorsa e il valore.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>We recommend this technique when all the resources are of the same type, or you know the data type of each resource.</source>
          <target state="translated">Si consiglia di questa tecnica quando tutte le risorse sono dello stesso tipo oppure si conosce il tipo di dati di ogni risorsa.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>You can retrieve the name of each resource when you iterate the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType&gt;</ph> collection and call the <ph id="ph2">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph> method to retrieve the resource's data.</source>
          <target state="translated">Quando esegue un'iterazione, è possibile recuperare il nome di ogni risorsa di <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType&gt;</ph> insieme e chiamare il <ph id="ph2">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph> metodo per recuperare i dati della risorsa.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>We recommend this approach when you do not know the data type of each resource or if the previous approach throws exceptions.</source>
          <target state="translated">Questo approccio è consigliato quando non si conosce il tipo di dati di ogni risorsa o se l'approccio precedente genera eccezioni.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Retrieving Resources by Using IDictionaryEnumerator Properties</source>
          <target state="translated">Recupero di risorse utilizzando le proprietà per IDictionaryEnumerator</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The first method of enumerating the resources in a .resources file involves directly retrieving each resource's name/value pair.</source>
          <target state="translated">Il primo metodo di enumerazione di risorse in un file con estensione resources richiede direttamente il recupero di coppia nome/valore di ogni risorsa.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>After you call the <ph id="ph1">`IDictionaryEnumerator.MoveNext`</ph> method to move to each resource in the collection, you can retrieve the resource name from the <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> property and the resource data from the <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Dopo aver chiamato il <ph id="ph1">`IDictionaryEnumerator.MoveNext`</ph> il nome del metodo per spostare a ogni risorsa della raccolta, è possibile recuperare la risorsa dal <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> proprietà e i dati delle risorse dal <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The following example shows how to retrieve the name and value of each resource in a .resources file by using the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come recuperare il nome e il valore di ogni risorsa in un file. Resources con il <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>To run the example, create the following text file named ApplicationResources.txt to define string resources.</source>
          <target state="translated">Per eseguire l'esempio, creare il seguente file di testo denominato ApplicationResources.txt per definire risorse di tipo stringa.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>You can then convert the text resource file to a binary file named ApplicationResources.resources by using the following command:</source>
          <target state="translated">È quindi possibile convertire il file di risorse di testo in un file binario denominato ApplicationResources.resources utilizzando il comando seguente:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source><bpt id="p1">**</bpt>resgen ApplicationResources.txt<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>resgen ApplicationResources.txt<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The following example then uses the <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> class to enumerate each resource in the standalone binary .resources file and to display its key name and corresponding value.</source>
          <target state="translated">L'esempio seguente usa quindi la <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> classe per enumerare ogni risorsa nel file con estensione resources binari autonoma e per visualizzare il nome della chiave e valore corrispondente.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The attempt to retrieve resource data from the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> property can throw the following exceptions:</source>
          <target state="translated">Il tentativo di recuperare i dati di risorsa di <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> proprietà può generare le eccezioni seguenti:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>A <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> if the data is not in the expected format.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> se i dati non sono nel formato previsto.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>A <ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph> if the assembly that contains the type to which the data belongs cannot be found.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph> se l'assembly che contiene il tipo a cui appartengono i dati non viene trovato.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>A <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> if the type to which the data belongs cannot be cannot be found.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> se non può essere il tipo a cui appartengono i dati non viene trovata.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Typically, these exceptions are thrown if the .resources file has been modified manually, if the assembly in which a type is defined has either not been included with an application or has been inadvertently deleted, or if the assembly is an older version that predates a type.</source>
          <target state="translated">In genere, vengono generate queste eccezioni se il file. Resources è stato modificato manualmente, se l'assembly in cui è definito un tipo ha non è stato incluso in un'applicazione oppure è stato eliminato accidentalmente, o se l'assembly è una versione precedente alla data un tipo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>If one of these exceptions is thrown, you can retrieve resources by enumerating each resource and calling the <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph> method, as the following section shows.</source>
          <target state="translated">Se viene generata una di queste eccezioni, è possibile recuperare le risorse enumerando ogni risorsa e chiamando il <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph> metodo, come illustrato nella sezione seguente.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>This approach provides you with some information about the data type that the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> property attempted to return.</source>
          <target state="translated">Questo approccio fornisce informazioni sui dati digitato che il <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> ha tentato di proprietà da restituire.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Retrieving Resources by Name with GetResourceData</source>
          <target state="translated">Il recupero delle risorse in base al nome con GetResourceData</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The second approach to enumerating resources in a .resources file also involves navigating through the resources in the file by calling the <ph id="ph1">`IDictionaryEnumerator.MoveNext`</ph> method.</source>
          <target state="translated">Il secondo approccio per l'enumerazione di risorse in un file con estensione resources prevede anche di spostarsi tra le risorse nel file chiamando il <ph id="ph1">`IDictionaryEnumerator.MoveNext`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>For each resource, you retrieve the resource's name from the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> property, which is then passed to the <ph id="ph2">&lt;xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29&gt;</ph> method to retrieve the resource's data.</source>
          <target state="translated">Per ogni risorsa, recuperare il nome della risorsa dal <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> proprietà, che viene quindi passato al <ph id="ph2">&lt;xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29&gt;</ph> metodo per recuperare i dati della risorsa.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>This is returned as a byte array in the <ph id="ph1">`resourceData`</ph> argument.</source>
          <target state="translated">Viene restituito come una matrice di byte nel <ph id="ph1">`resourceData`</ph> argomento.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>This approach is more awkward than retrieving the resource name and value from the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> properties, because it returns the actual bytes that form the resource value.</source>
          <target state="translated">Questo approccio è più complesse rispetto a recuperare il nome della risorsa e il valore di <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> proprietà, perché restituisce i byte effettivi che formano il valore della risorsa.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>However, if the attempt to retrieve the resource throws an exception, the <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph> method can help identify the source of the exception by supplying information about the resource's data type.</source>
          <target state="translated">Tuttavia, se il tentativo di recuperare la risorsa genera un'eccezione, il <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph> metodo consente di identificare l'origine dell'eccezione fornendo informazioni sul tipo di dati della risorsa.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>For more information about the string that indicates the resource's data type, see <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni sulla stringa che indica il tipo di dati della risorsa, vedere <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The following example illustrates how to use this approach to retrieve resources and to handle any exceptions that are thrown.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare questo approccio per recuperare le risorse e per gestire le eccezioni generate.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>It programmatically creates a binary .resources file that contains four strings, one Boolean, one integer, one bitmap, and one custom <ph id="ph1">`DateTimeTZI`</ph> object.</source>
          <target state="translated">A livello di codice crea un file. Resources binario che contiene quattro stringhe, un valore booleano, un valore integer, una bitmap e uno personalizzato <ph id="ph1">`DateTimeTZI`</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>To run the example, do the following:</source>
          <target state="translated">Per eseguire l'esempio, eseguire le operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Create an assembly named Library.dll that contains the <ph id="ph1">`DateTimeTZI`</ph> structure.</source>
          <target state="translated">Creare un assembly denominato DLL che contiene il <ph id="ph1">`DateTimeTZI`</ph> struttura.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The following is the source code for the assembly.</source>
          <target state="translated">Di seguito è riportato il codice sorgente per l'assembly.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Compile the source code in C# by using the following command:</source>
          <target state="translated">Compilare il codice sorgente in c# utilizzando il comando seguente:</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Or, you can compile it in Visual Basic by using the following command:</source>
          <target state="translated">In alternativa, è possibile compilare in Visual Basic usando il comando seguente:</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Compile and execute the following source code, which creates a .resources file named ContactResources.resources.</source>
          <target state="translated">Compilare ed eseguire il seguente codice sorgente, che consente di creare un file. resources denominato ContactResources.resources.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>The source code file is named CreateResources.cs.</source>
          <target state="translated">File di codice sorgente è denominato CreateResources.cs.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>You can compile it in C# by using the following command:</source>
          <target state="translated">È possibile compilare in c# utilizzando il comando seguente:</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Or, you can compile it in Visual Basic by using the following command:</source>
          <target state="translated">In alternativa, è possibile compilare in Visual Basic usando il comando seguente:</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Compile and run the following code to enumerate the resources in the ContactResources.resources file.</source>
          <target state="translated">Compilare ed eseguire il codice seguente per enumerare le risorse nel file ContactResources.resources.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>After modifying the source code (for example, by deliberately throwing a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> at the end of the <ph id="ph2">`try`</ph> block) or renaming the Library.dll assembly so that it is unavailable at runtime, you can run the example to see how calls to <ph id="ph3">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph> enable you to retrieve or recreate some resource information.</source>
          <target state="translated">Dopo aver modificato il codice sorgente (ad esempio, generando deliberatamente un <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> alla fine del <ph id="ph2">`try`</ph> blocco) o rinominare l'assembly DLL in modo che non è disponibile in fase di esecuzione, è possibile eseguire l'esempio per visualizzare come chiamate a <ph id="ph3">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph> Consente di recuperare o ricreare alcune informazioni sulle risorse.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceReader">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Using an instance of this object with untrusted data is a security risk.</source>
          <target state="translated">L'utilizzo di un'istanza di tale oggetto con i dati non attendibili implica un rischio per la sicurezza.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>Use this object only with trusted data.</source>
          <target state="translated">Questo oggetto può essere utilizzato solo con dati attendibili.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceReader">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>la convalida dei dati<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>The input stream for reading resources.</source>
          <target state="translated">Il flusso di input per la lettura delle risorse.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> class for the specified stream.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> per il flusso specificato.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29&gt;</ph> constructor instantiates a <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> object that retrieves resources either from a standalone .resources file or from a .resources file that is embedded in an assembly.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29&gt;</ph> costruttore crea un <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> oggetto che recupera le risorse da un file. resources autonomi o da un file. Resources file che è incorporato in un assembly.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>To read from a standalone .resources file, instantiate a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object and pass it to the <ph id="ph2">&lt;xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29&gt;</ph> constructor.</source>
          <target state="translated">Per leggere da un file. resources autonomi, creare un'istanza di un <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> dell'oggetto e passarlo al <ph id="ph2">&lt;xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>To read from an embedded .resources file, call the <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType&gt;</ph> method with the case-sensitive name of the .resources file, and pass the returned <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object to the <ph id="ph3">&lt;xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29&gt;</ph> constructor.</source>
          <target state="translated">Per leggere da un file con estensione resources incorporati, chiamare il <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType&gt;</ph> metodo con il nome del file. Resources e passare l'oggetto restituito distinzione maiuscole/minuscole <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> dell'oggetto per il <ph id="ph3">&lt;xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>Using an instance of this object with untrusted data is a security risk.</source>
          <target state="translated">L'utilizzo di un'istanza di tale oggetto con i dati non attendibili implica un rischio per la sicurezza.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>Use this object only with trusted data.</source>
          <target state="translated">Questo oggetto può essere utilizzato solo con dati attendibili.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>la convalida dei dati<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>The example in this section uses the following .txt file named <ph id="ph1">`PatientForm.txt`</ph> to define the resources used by an application.</source>
          <target state="translated">Nell'esempio riportato in questa sezione viene utilizzato il seguente file con estensione txt denominato <ph id="ph1">`PatientForm.txt`</ph> per definire le risorse usate da un'applicazione.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>You can compile the .txt file into a .resources file by issuing the following command:</source>
          <target state="translated">È possibile compilare il file con estensione txt in un file. Resources eseguendo il comando seguente:</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source><bpt id="p1">**</bpt>resgen PatientForm.txt<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>resgen PatientForm.txt<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>The following example assumes that the resource file is embedded in the assembly that contains the application's executable code.</source>
          <target state="translated">Nell'esempio seguente si presuppone che il file di risorse è incorporato nell'assembly contenente codice eseguibile dell'applicazione.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>It retrieves a resource file named <ph id="ph1">`PatientForm.resources`</ph> from the currently executing assemblies and displays the name and value of each of its resources.</source>
          <target state="translated">Recupera un file di risorse denominato <ph id="ph1">`PatientForm.resources`</ph> dagli assembly attualmente in esecuzione e visualizza il nome e il valore di ciascuna delle relative risorse.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>If the C# example is named <ph id="ph1">`Example.cs`</ph>, you can compile it by using the following command:</source>
          <target state="translated">Se l'esempio c# è denominato <ph id="ph1">`Example.cs`</ph>, è possibile compilarlo utilizzando il comando seguente:</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source><bpt id="p1">**</bpt>csc Example.cs /res:PatientForm.resources<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>csc Example.cs /res:PatientForm.resources<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>If the Visual Basic example is named <ph id="ph1">`Example.vb`</ph>, you can compile it by using the following command:</source>
          <target state="translated">Se l'esempio di Visual Basic denominato <ph id="ph1">`Example.vb`</ph>, è possibile compilarlo utilizzando il comando seguente:</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source><bpt id="p1">**</bpt>vbc Example.vb /res:PatientForm.resources<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>vbc example. vb /res:PatientForm.resources<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> parameter is not readable.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> non è leggibile.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>An I/O error has occurred while accessing <ph id="ph1">&lt;paramref name="stream" /&gt;</ph>.</source>
          <target state="translated">Si è verificato un errore di I/O durante l'accesso al parametro <ph id="ph1">&lt;paramref name="stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>for providing serialization services.</source>
          <target state="translated">per fornire servizi di serializzazione.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Azione di sicurezza: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">richiede l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>The path and name of the resource file to read.</source>
          <target state="translated">Percorso e nome del file di risorse da leggere.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source><bpt id="p1">&lt;c&gt;</bpt>filename<ept id="p1">&lt;/c&gt;</ept> is not case-sensitive.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>filename<ept id="p1">&lt;/c&gt;</ept> non è soggetto alla distinzione tra maiuscole e minuscole.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> class for the specified named resource file.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> per il file di risorse denominato specificato.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceReader.%23ctor%28System.String%29&gt;</ph> constructor instantiates a <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> object that retrieves resources from a standalone .resources file.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Resources.ResourceReader.%23ctor%28System.String%29&gt;</ph> costruttore crea un <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> oggetto che recupera le risorse da un file. resources autonomi.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>To retrieve resources from an embedded .resources file, use the <ph id="ph1">&lt;xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29&gt;</ph> constructor.</source>
          <target state="translated">Per recuperare le risorse da un file con estensione resources incorporati, utilizzare il <ph id="ph1">&lt;xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>Using an instance of this object with untrusted data is a security risk.</source>
          <target state="translated">L'utilizzo di un'istanza di tale oggetto con i dati non attendibili implica un rischio per la sicurezza.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>Use this object only with trusted data.</source>
          <target state="translated">Questo oggetto può essere utilizzato solo con dati attendibili.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>la convalida dei dati<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>The example in this section uses the following .txt file named <ph id="ph1">`PatientForm.txt`</ph> to define the resources used by an application.</source>
          <target state="translated">Nell'esempio riportato in questa sezione viene utilizzato il seguente file con estensione txt denominato <ph id="ph1">`PatientForm.txt`</ph> per definire le risorse usate da un'applicazione.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>You can compile this .txt file into a .resources file by issuing the following command:</source>
          <target state="translated">È possibile compilare questo file con estensione txt in un file. Resources eseguendo il comando seguente:</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source><bpt id="p1">**</bpt>resgen PatientForm.txt<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>resgen PatientForm.txt<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>The following example enumerates the resources in <ph id="ph1">`PatientForm.resources`</ph> and displays the name and value of each.</source>
          <target state="translated">Nell'esempio seguente enumera le risorse in <ph id="ph1">`PatientForm.resources`</ph> e visualizza il nome e il valore di ogni.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>The file cannot be found.</source>
          <target state="translated">Impossibile trovare il file.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>An I/O error has occurred.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>The resource file has an invalid format.</source>
          <target state="translated">Il formato del file di risorse non è valido.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.#ctor(System.String)">
          <source>For example, the length of the file may be zero.</source>
          <target state="translated">Ad esempio, la lunghezza del file potrebbe essere zero.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.Close">
          <source>Releases all operating system resources associated with this <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> object.</source>
          <target state="translated">Rilascia tutte le risorse del sistema operativo associate a questo oggetto <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.Close">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceReader.Close%2A&gt;</ph> can be safely called multiple times.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceReader.Close%2A&gt;</ph> può essere tranquillamente chiamato più volte.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.Close">
          <source>The following example moves through a file's resources and displays all the key/value pairs it finds.</source>
          <target state="translated">Nell'esempio seguente viene spostata all'interno delle risorse di un file e consente di visualizzare tutte le coppie chiave/valore che viene trovato.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.Close">
          <source>The code then uses the <ph id="ph1">&lt;xref:System.Resources.ResourceReader.Close%2A&gt;</ph> method to shut down the <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> and to release all resources used by it.</source>
          <target state="translated">Il codice Usa quindi il <ph id="ph1">&lt;xref:System.Resources.ResourceReader.Close%2A&gt;</ph> metodo per chiudere la <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> e per rilasciare tutte le risorse usate dal componente.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> class.</source>
          <target state="translated">Rilascia tutte le risorse usate dall'istanza corrente della classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.Dispose">
          <source>When you are finished using this instance of <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph>, call <ph id="ph2">&lt;xref:System.Resources.ResourceReader.Dispose%2A&gt;</ph> to release all resources used by this instance.</source>
          <target state="translated">Dopo aver terminato di utilizzare questa istanza di <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph>, chiamare <ph id="ph2">&lt;xref:System.Resources.ResourceReader.Dispose%2A&gt;</ph> per rilasciare tutte le risorse usate da questa istanza.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.Dispose">
          <source>You should eliminate further references to this <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.</source>
          <target state="translated">È consigliabile eliminare altri riferimenti a questo <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> in modo che il garbage collector di recuperare la memoria dell'istanza anziché mantenendolo alive per la finalizzazione dell'istanza.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.Dispose">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceReader.Dispose%2A&gt;</ph> calls the private Dispose(Boolean) method, which contains the code to release managed and unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceReader.Dispose%2A&gt;</ph> chiama il metodo Dispose (Boolean) privato, che contiene il codice per rilasciare le risorse gestite e non gestite.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>implementazione di un metodo Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>Returns an enumerator for this <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> object.</source>
          <target state="translated">Restituisce un enumeratore per questo oggetto <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>An enumerator for this <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> object.</source>
          <target state="translated">Enumeratore per questo oggetto <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>Typically, you enumerate resources by calling the <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetEnumerator%2A&gt;</ph> method and then repeatedly calling the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method on the returned <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object until the method returns <ph id="ph4">`false`</ph>.</source>
          <target state="translated">In genere, enumerare le risorse chiamando il <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetEnumerator%2A&gt;</ph> (metodo) e quindi chiamare ripetutamente il <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> metodo sull'oggetto restituito <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> oggetto finché il metodo restituisce <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>The resource name is available from the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> property; its value from the <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Il nome della risorsa è disponibile il <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> proprietà; il valore di <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>The example illustrates how to enumerate resources in this way.</source>
          <target state="translated">Nell'esempio viene illustrato come enumerare le risorse in questo modo.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>The implementation of the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> property by the <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> class can throw the following exceptions:</source>
          <target state="translated">L'implementazione del <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> proprietà mediante la <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> classe può generare le eccezioni seguenti:</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>The assembly that contains the type to which the data belongs cannot be found.</source>
          <target state="translated">Impossibile trovare l'assembly che contiene il tipo a cui appartengono i dati.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>The data is not in the expected format.</source>
          <target state="translated">I dati non sono nel formato previsto.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>The type to which the data belongs cannot be found.</source>
          <target state="translated">Impossibile trovare il tipo a cui appartengono i dati.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>You can handle the exception by calling the <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph> method to retrieve information about the data type and the byte array assigned to the named resource.</source>
          <target state="translated">È possibile gestire l'eccezione chiamando il <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph> metodo per recuperare informazioni sul tipo di dati e la matrice di byte assegnato per la risorsa indicata.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>For more information, see the "Retrieving Resources by Name with GetResourceData" section in the <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> class topic.</source>
          <target state="translated">Per ulteriori informazioni, vedere la sezione "Recupero di risorse dal nome con GetResourceData" il <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> argomento relativo alla classe.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> class includes two methods that return enumerators.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> classe include due metodi che restituiscono gli enumeratori.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetEnumerator%2A&gt;</ph> method returns an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> interface object and is the recommended method to call when enumerating resources.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetEnumerator%2A&gt;</ph> metodo restituisce un <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> oggetto di interfaccia e il metodo consigliato da chiamare quando l'enumerazione risorse.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>The example in this section uses the following .txt file named <ph id="ph1">`PatientForm.txt`</ph> to define the resources used by an application.</source>
          <target state="translated">Nell'esempio riportato in questa sezione viene utilizzato il seguente file con estensione txt denominato <ph id="ph1">`PatientForm.txt`</ph> per definire le risorse usate da un'applicazione.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>You can compile the .txt file into a .resources file by issuing the following command:</source>
          <target state="translated">È possibile compilare il file con estensione txt in un file. Resources eseguendo il comando seguente:</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source><bpt id="p1">**</bpt>resgen PatientForm.txt<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>resgen PatientForm.txt<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>The following example enumerates the resources in <ph id="ph1">`PatientForm.resources`</ph> and displays the name and value of each.</source>
          <target state="translated">Nell'esempio seguente enumera le risorse in <ph id="ph1">`PatientForm.resources`</ph> e visualizza il nome e il valore di ogni.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetEnumerator">
          <source>The reader has been closed or disposed, and cannot be accessed.</source>
          <target state="translated">Il lettore è stato chiuso o eliminato e non è possibile accedervi.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>The name of a resource.</source>
          <target state="translated">Nome di una risorsa.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>When this method returns, contains a string that represents the type name of the retrieved resource.</source>
          <target state="translated">Quando termina, questo metodo contiene una stringa che rappresenta il nome del tipo della risorsa recuperata.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Questo parametro viene passato non inizializzato.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>When this method returns, contains a byte array that is the binary representation of the retrieved type.</source>
          <target state="translated">Al termine dell'esecuzione questo metodo contiene una matrice di byte costituita dalla rappresentazione binaria del tipo recuperato.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Questo parametro viene passato non inizializzato.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>Retrieves the type name and data of a named resource from an open resource file or stream.</source>
          <target state="translated">Recupera il nome del tipo e i dati di una risorsa denominata da un file di risorse o da un flusso aperto.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph> method retrieves the value of a named resource as a byte array.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</ph> metodo recupera il valore di una risorsa denominata come una matrice di byte.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>It is typically used when the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> property throws an exception when it tries to retrieve the value of a resource.</source>
          <target state="translated">È in genere utilizzato quando il <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> proprietà genera un'eccezione durante il tentativo di recuperare il valore di una risorsa.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source><ph id="ph1">`resourceType`</ph> is a string that represents the data type of the resource.</source>
          <target state="translated"><ph id="ph1">`resourceType`</ph> è una stringa che rappresenta il tipo di dati della risorsa.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>It can be any of the following values:</source>
          <target state="translated">Può essere uno dei valori seguenti:</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>The string representation of a <ph id="ph1">`ResourceTypeCode`</ph> enumeration member that indicates the data type of the resource.</source>
          <target state="translated">Rappresentazione di stringa di un <ph id="ph1">`ResourceTypeCode`</ph> membro di enumerazione che indica il tipo di dati della risorsa.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source><ph id="ph1">`ResourceTypeCode`</ph> is a private enumeration that is used by .to indicate that a special binary format is used to store one of 19 common data types.</source>
          <target state="translated"><ph id="ph1">`ResourceTypeCode`</ph> è un'enumerazione privata che viene utilizzata da .to indicare che un particolare formato binario viene utilizzato per archiviare uno dei tipi di dati comuni 19.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>These include the .NET Framework primitive data types (<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Char&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.Double&gt;</ph>, <ph id="ph6">&lt;xref:System.Int16&gt;</ph>, <ph id="ph7">&lt;xref:System.Int32&gt;</ph>, <ph id="ph8">&lt;xref:System.Int64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, <ph id="ph10">&lt;xref:System.SByte&gt;</ph>, <ph id="ph11">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph12">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph13">&lt;xref:System.UInt64&gt;</ph>), as well as <ph id="ph14">&lt;xref:System.String&gt;</ph>, <ph id="ph15">&lt;xref:System.DateTime&gt;</ph>, and <ph id="ph16">&lt;xref:System.TimeSpan&gt;</ph>, In addition, the <ph id="ph17">`ResourceTypeCode`</ph> enumeration includes the values shown in the following table.</source>
          <target state="translated">Questi includono i tipi di dati primitivi di .NET Framework (<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Char&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.Double&gt;</ph>, <ph id="ph6">&lt;xref:System.Int16&gt;</ph>, <ph id="ph7">&lt;xref:System.Int32&gt;</ph>, <ph id="ph8">&lt;xref:System.Int64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, <ph id="ph10">&lt;xref:System.SByte&gt;</ph>, <ph id="ph11">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph12">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph13">&lt;xref:System.UInt64&gt;</ph>), nonché <ph id="ph14">&lt;xref:System.String&gt;</ph>, <ph id="ph15">&lt;xref:System.DateTime&gt;</ph>, e <ph id="ph16">&lt;xref:System.TimeSpan&gt;</ph>, inoltre, il <ph id="ph17">`ResourceTypeCode`</ph> enumerazione include i valori mostrati nella tabella seguente.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>ResourceTypeCode value</source>
          <target state="translated">Valore ResourceTypeCode</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>Description</source>
          <target state="translated">Descrizione</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>The data is a byte array.</source>
          <target state="translated">I dati sono una matrice di byte.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>This data type commonly results from the call to the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Del tipo di dati in genere risultati della chiamata per il <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>The data is a null reference.</source>
          <target state="translated">I dati sono un riferimento null.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>This data type commonly results from the call to the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph> method with an object whose value is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Del tipo di dati in genere risultati della chiamata per il <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph> metodo con un oggetto il cui valore è <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>The data is stored in a stream.</source>
          <target state="translated">I dati vengono archiviati in un flusso.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>This data type commonly results from the call to the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Del tipo di dati in genere risultati della chiamata per il <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>Assuming that <ph id="ph1">`resourceData`</ph> has not been corrupted, it can usually be converted from a byte array back to its original value by calling a <ph id="ph2">&lt;xref:System.BitConverter&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.BinaryReader&gt;</ph> method.</source>
          <target state="translated">Supponendo che <ph id="ph1">`resourceData`</ph> non è stato danneggiato, è possibile in genere convertirlo da una matrice di byte al valore originale chiamando un <ph id="ph2">&lt;xref:System.BitConverter&gt;</ph> o <ph id="ph3">&lt;xref:System.IO.BinaryReader&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>A string that contains the fully qualified name of the type whose serialized data is assigned to the <ph id="ph1">`resourceData`</ph> argument (for example, <ph id="ph2">`System.String`</ph>).</source>
          <target state="translated">Stringa che contiene il nome completo del tipo i cui dati serializzati vengono assegnati al <ph id="ph1">`resourceData`</ph> argomento (ad esempio, <ph id="ph2">`System.String`</ph>).</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</source>
          <target state="translated">Inoltre, per i tipi che non fanno parte della libreria di classi .NET Framework, la stringa include il nome, versione, impostazioni cultura e la chiave pubblica dell'assembly che contiene il tipo.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>For example, the following string indicates that the serialized data represents an instance of the <ph id="ph1">`Person`</ph> type in the <ph id="ph2">`Extensions`</ph> namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</source>
          <target state="translated">Ad esempio, la stringa seguente indica che i dati serializzati rappresentano un'istanza del <ph id="ph1">`Person`</ph> digitare il <ph id="ph2">`Extensions`</ph> dello spazio dei nomi, disponibile nella versione 1.0 di un assembly denominato utilità che dispone di alcuna chiave pubblica e impostazioni cultura non definite.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>Assuming that <ph id="ph1">`resourceData`</ph> has not been corrupted and that the source type is available, <ph id="ph2">`resourceData`</ph> can be converted from a byte array back to its original value by converting the byte array to a <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> object and passing the stream to the <ph id="ph4">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Supponendo che <ph id="ph1">`resourceData`</ph> non è stato danneggiato e che il tipo di origine sia disponibile, <ph id="ph2">`resourceData`</ph> può essere convertito da una matrice di byte al valore originale mediante la conversione di matrice di byte da un <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> oggetto e il passaggio nel flusso di <ph id="ph4">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType&gt;</ph>metodo.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>The string used to describe the data type in the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType&gt;</ph> method call.</source>
          <target state="translated">La stringa utilizzata per descrivere il tipo di dati di <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType&gt;</ph> chiamata al metodo.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source><ph id="ph1">&lt;paramref name="resourceName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="resourceName" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source><ph id="ph1">&lt;paramref name="resourceName" /&gt;</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="resourceName" /&gt;</ph> non esiste.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source><ph id="ph1">&lt;paramref name="resourceName" /&gt;</ph> has an invalid type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="resourceName" /&gt;</ph> non dispone di un tipo valido.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>The retrieved resource data is corrupt.</source>
          <target state="translated">I dati delle risorse recuperati sono danneggiati.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> object is not initialized, probably because it is closed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> corrente non è inizializzato, probabilmente perché è chiuso.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator for this <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> object.</source>
          <target state="translated">Restituisce un enumeratore per questo oggetto <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator for this <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> object.</source>
          <target state="translated">Enumeratore per questo oggetto <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> è un'implementazione esplicita dell'interfaccia.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>The recommended approach to enumerating the resources in a .resources file is to call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L'approccio consigliato per l'enumerazione delle risorse in un file con estensione resources consiste nel chiamare il <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> metodo il <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> oggetto restituito dal <ph id="ph3">&lt;xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>The reader has already been closed and cannot be accessed.</source>
          <target state="translated">Il lettore è già stato chiuso e non è quindi possibile accedervi.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>