<Type Name="ResourceReader" FullName="System.Resources.ResourceReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f2814539bf76d998ae0f4c7bdb789f22102804ce" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52602191" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ResourceReader : System.Resources.IResourceReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceReader&#xA;Implements IResourceReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceReader sealed : System::Resources::IResourceReader" />
  <TypeSignature Language="F#" Value="type ResourceReader = class&#xA;    interface IResourceReader&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Reader</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="aa09b-101">Enumera le risorse in un file di risorse (.resources) binario leggendo le coppie nome/valore delle risorse sequenziali.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aa09b-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="aa09b-102">Il <xref:System.Resources.ResourceReader> classe fornisce un'implementazione standard del <xref:System.Resources.IResourceReader> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="aa09b-102">The <xref:System.Resources.ResourceReader> class provides a standard implementation of the <xref:System.Resources.IResourceReader> interface.</span></span> <span data-ttu-id="aa09b-103">Oggetto <xref:System.Resources.ResourceReader> istanza rappresenta un file con estensione resources autonomo o un file con estensione resources incorporato in un assembly.</span><span class="sxs-lookup"><span data-stu-id="aa09b-103">A <xref:System.Resources.ResourceReader> instance represents either a standalone .resources file or a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="aa09b-104">Viene utilizzato per enumerare le risorse in un file con estensione resources e recuperare le coppie nome/valore.</span><span class="sxs-lookup"><span data-stu-id="aa09b-104">It is used to enumerate the resources in a .resources file and retrieve its name/value pairs.</span></span> <span data-ttu-id="aa09b-105">Si differenzia dal <xref:System.Resources.ResourceManager> classe, che viene usato per recuperare risorse denominate specificate da un file con estensione resources incorporato in un assembly.</span><span class="sxs-lookup"><span data-stu-id="aa09b-105">It differs from the <xref:System.Resources.ResourceManager> class, which is used to retrieve specified named resources from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="aa09b-106">Il <xref:System.Resources.ResourceManager> classe viene utilizzata per recuperare le risorse i cui nomi sono noti in anticipo, mentre il <xref:System.Resources.ResourceReader> classe è utile per il recupero di risorse il cui numero o i nomi esatti non sono noti in fase di compilazione.</span><span class="sxs-lookup"><span data-stu-id="aa09b-106">The <xref:System.Resources.ResourceManager> class is used to retrieve resources whose names are known in advance, whereas the <xref:System.Resources.ResourceReader> class is useful for retrieving resources whose number or precise names are not known at compile time.</span></span> <span data-ttu-id="aa09b-107">Ad esempio, un'applicazione può usare un file di risorse per archiviare le informazioni di configurazione sono organizzate in sezioni e gli elementi in una sezione, in cui il numero di elementi in una sezione o sezioni non è noto in anticipo.</span><span class="sxs-lookup"><span data-stu-id="aa09b-107">For example, an application may use a resources file to store configuration information that is organized into sections and items in a section, where the number of sections or items in a section is not known in advance.</span></span> <span data-ttu-id="aa09b-108">Le risorse possono quindi essere denominate in modo generico (ad esempio `Section1`, `Section1Item1`, `Section1Item2`e così via) e recuperati utilizzando un <xref:System.Resources.ResourceReader> oggetto.</span><span class="sxs-lookup"><span data-stu-id="aa09b-108">Resources can then be named generically (such as `Section1`, `Section1Item1`, `Section1Item2`, and so on) and retrieved by using a <xref:System.Resources.ResourceReader> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="aa09b-109">Questo tipo implementa la <xref:System.IDisposable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="aa09b-109">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="aa09b-110">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</span><span class="sxs-lookup"><span data-stu-id="aa09b-110">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="aa09b-111">Per eliminare il tipo direttamente, chiamare relativi <xref:System.IDisposable.Dispose%2A> metodo in un `try` / `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="aa09b-111">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="aa09b-112">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="aa09b-112">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="aa09b-113">Per altre informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="aa09b-113">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="aa09b-114">Per altre informazioni sull'uso di <xref:System.Resources.ResourceReader> di classi, vedere le sezioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="aa09b-114">For more information about using the <xref:System.Resources.ResourceReader> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="aa09b-115">Creare un'istanza di un oggetto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="aa09b-115">Instantiating a ResourceReader object</span></span>](#instantiate)  
  
-   [<span data-ttu-id="aa09b-116">L'enumerazione delle risorse dell'oggetto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="aa09b-116">Enumerating a ResourceReader object's resources</span></span>](#enumerate)  
  
    -   [<span data-ttu-id="aa09b-117">Recupero di risorse usando le proprietà IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="aa09b-117">Retrieving resources by using IDictionaryEnumerator properties</span></span>](#idictionaryenumerator)  
  
    -   [<span data-ttu-id="aa09b-118">Il recupero delle risorse in base al nome con GetResourceData</span><span class="sxs-lookup"><span data-stu-id="aa09b-118">Retrieving resources by name with GetResourceData</span></span>](#getresourcedata)  
  
<a name="instantiate"></a>   
## <a name="instantiating-a-resourcereader-object"></a><span data-ttu-id="aa09b-119">Creare un'istanza di un oggetto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="aa09b-119">Instantiating a ResourceReader Object</span></span>  
 <span data-ttu-id="aa09b-120">Un file con estensione resources è un file binario compilato da un file di testo o un file XML con estensione resx [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span><span class="sxs-lookup"><span data-stu-id="aa09b-120">A .resources file is a binary file that has been compiled from either a text file or an XML .resx file by [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span></span> <span data-ttu-id="aa09b-121">Oggetto <xref:System.Resources.ResourceReader> oggetto può rappresentare un file con estensione resources autonomo o un file con estensione resources incorporato in un assembly.</span><span class="sxs-lookup"><span data-stu-id="aa09b-121">A <xref:System.Resources.ResourceReader> object can represent either a standalone .resources file or a .resources file that has been embedded in an assembly.</span></span>  
  
 <span data-ttu-id="aa09b-122">Creare un'istanza di un <xref:System.Resources.ResourceReader> dell'oggetto che legge da un file. resources autonomi, usare il <xref:System.Resources.ResourceReader> costruttore di classe con un flusso di input o una stringa che contiene il nome del file con estensione resources.</span><span class="sxs-lookup"><span data-stu-id="aa09b-122">To instantiate a <xref:System.Resources.ResourceReader> object that reads from a standalone .resources file, use the <xref:System.Resources.ResourceReader> class constructor with either an input stream or a string that contains the .resources file name.</span></span> <span data-ttu-id="aa09b-123">L'esempio seguente illustra entrambi gli approcci.</span><span class="sxs-lookup"><span data-stu-id="aa09b-123">The following example illustrates both approaches.</span></span> <span data-ttu-id="aa09b-124">Il primo crea un <xref:System.Resources.ResourceReader> oggetto che rappresenta un file con estensione resources denominato `Resources1.resources` utilizzando il nome di file.</span><span class="sxs-lookup"><span data-stu-id="aa09b-124">The first instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources1.resources` by using its file name.</span></span> <span data-ttu-id="aa09b-125">Il secondo crea un <xref:System.Resources.ResourceReader> oggetto che rappresenta un file con estensione resources denominato `Resources2.resources` usando un flusso creato dal file.</span><span class="sxs-lookup"><span data-stu-id="aa09b-125">The second instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources2.resources` by using a stream created from the file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#2)]  
  
 <span data-ttu-id="aa09b-126">Per creare un <xref:System.Resources.ResourceReader> creare un'istanza di oggetto che rappresenta un file con estensione resources incorporato, un <xref:System.Reflection.Assembly> oggetto dall'assembly in cui è incorporato il file con estensione resources.</span><span class="sxs-lookup"><span data-stu-id="aa09b-126">To create a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file, instantiate an <xref:System.Reflection.Assembly> object from the assembly in which the .resources file is embedded.</span></span> <span data-ttu-id="aa09b-127">Relativi <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.IO.Stream> oggetto che può essere passato al <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="aa09b-127">Its <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method returns a <xref:System.IO.Stream> object that can be passed to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="aa09b-128">Nell'esempio seguente crea un <xref:System.Resources.ResourceReader> oggetto che rappresenta un file con estensione resources incorporato.</span><span class="sxs-lookup"><span data-stu-id="aa09b-128">The following example instantiates a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#3)]
 [!code-vb[System.Resources.ResourceReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#3)]  
  
<a name="enumerate"></a>   
## <a name="enumerating-a-resourcereader-objects-resources"></a><span data-ttu-id="aa09b-129">L'enumerazione delle risorse dell'oggetto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="aa09b-129">Enumerating a ResourceReader Object's Resources</span></span>  
 <span data-ttu-id="aa09b-130">Per enumerare le risorse in un file con estensione resources, si chiama il <xref:System.Resources.ResourceReader.GetEnumerator%2A> metodo, che restituisce un <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> oggetto.</span><span class="sxs-lookup"><span data-stu-id="aa09b-130">To enumerate the resources in a .resources file, you call the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method, which returns an <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="aa09b-131">Si chiama il `IDictionaryEnumerator.MoveNext` metodo per passare da una risorsa a quella successiva.</span><span class="sxs-lookup"><span data-stu-id="aa09b-131">You call the `IDictionaryEnumerator.MoveNext` method to move from one resource to the next.</span></span> <span data-ttu-id="aa09b-132">Il metodo restituisce `false` quando tutte le risorse nel file con estensione resources sono state enumerate.</span><span class="sxs-lookup"><span data-stu-id="aa09b-132">The method returns `false` when all the resources in the .resources file have been enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa09b-133">Anche se il <xref:System.Resources.ResourceReader> classe implementa le <xref:System.Collections.IEnumerable> interfaccia e il <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> metodo, il <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> metodo non fornisce il <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementazione.</span><span class="sxs-lookup"><span data-stu-id="aa09b-133">Although the <xref:System.Resources.ResourceReader> class implements the <xref:System.Collections.IEnumerable> interface and the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> method, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method does not provide the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="aa09b-134">Al contrario, il <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> metodo restituisce un <xref:System.Collections.IDictionaryEnumerator> oggetto di interfaccia che consente di accedere alla coppia nome/valore di ogni risorsa.</span><span class="sxs-lookup"><span data-stu-id="aa09b-134">Instead, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method  returns an <xref:System.Collections.IDictionaryEnumerator> interface object that provides access to each resource's name/value pair.</span></span>  
  
 <span data-ttu-id="aa09b-135">È possibile recuperare le singole risorse nella raccolta in due modi:</span><span class="sxs-lookup"><span data-stu-id="aa09b-135">You can retrieve the individual resources in the collection in two ways:</span></span>  
  
-   <span data-ttu-id="aa09b-136">È possibile eseguire l'iterazione di ogni risorsa nel <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> raccolta e utilizzo <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> proprietà da recuperare il nome della risorsa e il valore.</span><span class="sxs-lookup"><span data-stu-id="aa09b-136">You can iterate each resource in the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and use <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> properties to retrieve the resource name and value.</span></span> <span data-ttu-id="aa09b-137">Questa tecnica è consigliabile quando tutte le risorse sono dello stesso tipo oppure si conosce il tipo di dati di ogni risorsa.</span><span class="sxs-lookup"><span data-stu-id="aa09b-137">We recommend this technique when all the resources are of the same type, or you know the data type of each resource.</span></span>  
  
-   <span data-ttu-id="aa09b-138">È possibile recuperare il nome di ogni risorsa quando esegue un'iterazione di <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> raccolta e chiamare il <xref:System.Resources.ResourceReader.GetResourceData%2A> metodo per recuperare i dati della risorsa.</span><span class="sxs-lookup"><span data-stu-id="aa09b-138">You can retrieve the name of each resource when you iterate the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and call the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve the resource's data.</span></span> <span data-ttu-id="aa09b-139">Questo approccio è consigliato quando non si conosce il tipo di dati di ogni risorsa o se l'approccio precedente genera eccezioni.</span><span class="sxs-lookup"><span data-stu-id="aa09b-139">We recommend this approach when you do not know the data type of each resource or if the previous approach throws exceptions.</span></span>  
  
<a name="idictionaryenumerator"></a>   
### <a name="retrieving-resources-by-using-idictionaryenumerator-properties"></a><span data-ttu-id="aa09b-140">Recupero di risorse usando le proprietà IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="aa09b-140">Retrieving Resources by Using IDictionaryEnumerator Properties</span></span>  
 <span data-ttu-id="aa09b-141">Il primo metodo di enumerare le risorse in un file con estensione resources richiede direttamente il recupero di coppia nome/valore di ogni risorsa.</span><span class="sxs-lookup"><span data-stu-id="aa09b-141">The first method of enumerating the resources in a .resources file involves directly retrieving each resource's name/value pair.</span></span> <span data-ttu-id="aa09b-142">Dopo aver chiamato il `IDictionaryEnumerator.MoveNext` nome del metodo per spostare a ogni risorsa della raccolta, è possibile recuperare la risorsa dal <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> proprietà e i dati delle risorse dal <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="aa09b-142">After you call the `IDictionaryEnumerator.MoveNext` method to move to each resource in the collection, you can retrieve the resource name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property and the resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="aa09b-143">Nell'esempio seguente viene illustrato come recuperare il nome e il valore di ogni risorsa in un file con estensione resources utilizzando il <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> e <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="aa09b-143">The following example shows how to retrieve the name and value of each resource in a .resources file by using the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="aa09b-144">Per eseguire l'esempio, creare il seguente file di testo denominato ApplicationResources.txt per definire risorse di tipo stringa.</span><span class="sxs-lookup"><span data-stu-id="aa09b-144">To run the example, create the following text file named ApplicationResources.txt to define string resources.</span></span>  
  
```  
Title="Contact Information"  
Label1="First Name:"  
Label2="Middle Name:"  
Label3="Last Name:"  
Label4="SSN:"  
Label5="Street Address:"  
Label6="City:"  
Label7="State:"  
Label8="Zip Code:"  
Label9="Home Phone:"  
Label10="Business Phone:"  
Label11="Mobile Phone:"  
Label12="Other Phone:"  
Label13="Fax:"  
Label14="Email Address:"  
Label15="Alternate Email Address:"  
```  
  
 <span data-ttu-id="aa09b-145">È possibile convertire il file di risorse di testo in un file binario denominato ApplicationResources.resources usando il comando seguente:</span><span class="sxs-lookup"><span data-stu-id="aa09b-145">You can then convert the text resource file to a binary file named ApplicationResources.resources by using the following command:</span></span>  
  
 <span data-ttu-id="aa09b-146">**Resgen ApplicationResources.txt**</span><span class="sxs-lookup"><span data-stu-id="aa09b-146">**resgen ApplicationResources.txt**</span></span>  
  
 <span data-ttu-id="aa09b-147">L'esempio seguente usa quindi il <xref:System.Resources.ResourceReader> classe per enumerare ogni risorsa nel file binari. resources autonomi e per visualizzare il nome della chiave e il valore corrispondente.</span><span class="sxs-lookup"><span data-stu-id="aa09b-147">The following example then uses the <xref:System.Resources.ResourceReader> class to enumerate each resource in the standalone binary .resources file and to display its key name and corresponding value.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/class1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/class1.vb#1)]  
  
 <span data-ttu-id="aa09b-148">Il tentativo di recuperare i dati di risorse di <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> proprietà possono essere generate le eccezioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="aa09b-148">The attempt to retrieve resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property can throw the following exceptions:</span></span>  
  
-   <span data-ttu-id="aa09b-149">Oggetto <xref:System.FormatException> se i dati non sono nel formato previsto.</span><span class="sxs-lookup"><span data-stu-id="aa09b-149">A <xref:System.FormatException> if the data is not in the expected format.</span></span>  
  
-   <span data-ttu-id="aa09b-150">Oggetto <xref:System.IO.FileNotFoundException> se non è possibile trovare l'assembly che contiene il tipo a cui appartengono i dati.</span><span class="sxs-lookup"><span data-stu-id="aa09b-150">A <xref:System.IO.FileNotFoundException> if the assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <span data-ttu-id="aa09b-151">Oggetto <xref:System.TypeLoadException> se non può essere il tipo a cui appartengono i dati non è stata trovata.</span><span class="sxs-lookup"><span data-stu-id="aa09b-151">A <xref:System.TypeLoadException> if the type to which the data belongs cannot be cannot be found.</span></span>  
  
 <span data-ttu-id="aa09b-152">In genere, vengono generate queste eccezioni se il file con estensione resources è stato modificato manualmente, se è non è stato incluso in un'applicazione, l'assembly in cui è definito un tipo oppure è stata eliminata involontariamente o se l'assembly è una versione precedente che è precedente alla data un tipo.</span><span class="sxs-lookup"><span data-stu-id="aa09b-152">Typically, these exceptions are thrown if the .resources file has been modified manually, if the assembly in which a type is defined has either not been included with an application or has been inadvertently deleted, or if the assembly is an older version that predates a type.</span></span> <span data-ttu-id="aa09b-153">Se viene generata una di queste eccezioni, è possibile recuperare le risorse mediante l'enumerazione di ogni risorsa e la chiamata di <xref:System.Resources.ResourceReader.GetResourceData%2A> (metodo), come illustrato nella sezione seguente.</span><span class="sxs-lookup"><span data-stu-id="aa09b-153">If one of these exceptions is thrown, you can retrieve resources by enumerating each resource and calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method, as the following section shows.</span></span> <span data-ttu-id="aa09b-154">Questo approccio offre alcune informazioni sui dati di tipo che il <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> ha tentato di proprietà da restituire.</span><span class="sxs-lookup"><span data-stu-id="aa09b-154">This approach provides you with some information about the data type that the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property attempted to return.</span></span>  
  
<a name="getresourcedata"></a>   
### <a name="retrieving-resources-by-name-with-getresourcedata"></a><span data-ttu-id="aa09b-155">Il recupero delle risorse in base al nome con GetResourceData</span><span class="sxs-lookup"><span data-stu-id="aa09b-155">Retrieving Resources by Name with GetResourceData</span></span>  
 <span data-ttu-id="aa09b-156">Il secondo approccio per l'enumerazione delle risorse in un file con estensione resources prevede anche esplorare le risorse nel file chiamando la `IDictionaryEnumerator.MoveNext` (metodo).</span><span class="sxs-lookup"><span data-stu-id="aa09b-156">The second approach to enumerating resources in a .resources file also involves navigating through the resources in the file by calling the `IDictionaryEnumerator.MoveNext` method.</span></span> <span data-ttu-id="aa09b-157">Per ogni risorsa, si recupera il nome della risorsa dal <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> proprietà, che viene quindi passato al <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> metodo per recuperare i dati della risorsa.</span><span class="sxs-lookup"><span data-stu-id="aa09b-157">For each resource, you retrieve the resource's name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property, which is then passed to the <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> method to retrieve the resource's data.</span></span> <span data-ttu-id="aa09b-158">Viene restituito come matrice di byte nel `resourceData` argomento.</span><span class="sxs-lookup"><span data-stu-id="aa09b-158">This is returned as a byte array in the `resourceData` argument.</span></span>  
  
 <span data-ttu-id="aa09b-159">Questo approccio è più complesse rispetto al recupero il nome della risorsa e il valore dal <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> e <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> proprietà, perché restituisce i byte effettivi che costituiscono il valore della risorsa.</span><span class="sxs-lookup"><span data-stu-id="aa09b-159">This approach is more awkward than retrieving the resource name and value from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties, because it returns the actual bytes that form the resource value.</span></span> <span data-ttu-id="aa09b-160">Tuttavia, se il tentativo di recuperare la risorsa genera un'eccezione, il <xref:System.Resources.ResourceReader.GetResourceData%2A> metodo consentono di identificare l'origine dell'eccezione fornendo informazioni sul tipo di dati della risorsa.</span><span class="sxs-lookup"><span data-stu-id="aa09b-160">However, if the attempt to retrieve the resource throws an exception, the <xref:System.Resources.ResourceReader.GetResourceData%2A> method can help identify the source of the exception by supplying information about the resource's data type.</span></span> <span data-ttu-id="aa09b-161">Per altre informazioni sulla stringa che indica il tipo di dati della risorsa, vedere <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa09b-161">For more information about the string that indicates the resource's data type, see <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span></span>  
  
 <span data-ttu-id="aa09b-162">L'esempio seguente illustra come usare questo approccio per recuperare le risorse e per gestire le eccezioni generate.</span><span class="sxs-lookup"><span data-stu-id="aa09b-162">The following example illustrates how to use this approach to retrieve resources and to handle any exceptions that are thrown.</span></span> <span data-ttu-id="aa09b-163">A livello di codice crea un file. Resources binario che contiene quattro stringhe, un valore booleano, un numero intero, una singola bitmap e uno personalizzato `DateTimeTZI` oggetto.</span><span class="sxs-lookup"><span data-stu-id="aa09b-163">It programmatically creates a binary .resources file that contains four strings, one Boolean, one integer, one bitmap, and one custom `DateTimeTZI` object.</span></span> <span data-ttu-id="aa09b-164">Per eseguire l'esempio, eseguire le operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="aa09b-164">To run the example, do the following:</span></span>  
  
1.  <span data-ttu-id="aa09b-165">Creare un assembly denominato Library. dll che contiene il `DateTimeTZI` struttura.</span><span class="sxs-lookup"><span data-stu-id="aa09b-165">Create an assembly named Library.dll that contains the `DateTimeTZI` structure.</span></span> <span data-ttu-id="aa09b-166">Di seguito è riportato il codice sorgente per l'assembly.</span><span class="sxs-lookup"><span data-stu-id="aa09b-166">The following is the source code for the assembly.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/library.cs#4)]
     [!code-vb[System.Resources.ResourceReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/library.vb#4)]  
  
     <span data-ttu-id="aa09b-167">Compilare il codice sorgente in c# usando il comando seguente:</span><span class="sxs-lookup"><span data-stu-id="aa09b-167">Compile the source code in C# by using the following command:</span></span>  
  
    ```  
    csc /t:library library.cs  
    ```  
  
     <span data-ttu-id="aa09b-168">In alternativa, è possibile compilarlo in Visual Basic usando il comando seguente:</span><span class="sxs-lookup"><span data-stu-id="aa09b-168">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc library.vb /t:library  
    ```  
  
2.  <span data-ttu-id="aa09b-169">Compilare ed eseguire il seguente codice sorgente, che crea un file con estensione resources denominato ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="aa09b-169">Compile and execute the following source code, which creates a .resources file named ContactResources.resources.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/createresourceex1.cs#5)]
     [!code-vb[System.Resources.ResourceReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/createresourceex1.vb#5)]  
  
     <span data-ttu-id="aa09b-170">File del codice sorgente è denominato CreateResources.cs.</span><span class="sxs-lookup"><span data-stu-id="aa09b-170">The source code file is named CreateResources.cs.</span></span> <span data-ttu-id="aa09b-171">È possibile compilare in c# usando il comando seguente:</span><span class="sxs-lookup"><span data-stu-id="aa09b-171">You can compile it in C# by using the following command:</span></span>  
  
    ```  
    csc CreateResources.cs /r:library.dll  
    ```  
  
     <span data-ttu-id="aa09b-172">In alternativa, è possibile compilarlo in Visual Basic usando il comando seguente:</span><span class="sxs-lookup"><span data-stu-id="aa09b-172">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc CreateResources.vb /r:library.dll  
    ```  
  
3.  <span data-ttu-id="aa09b-173">Compilare ed eseguire il codice seguente per enumerare le risorse nel file ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="aa09b-173">Compile and run the following code to enumerate the resources in the ContactResources.resources file.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/readresourceex1.cs#6)]
     [!code-vb[System.Resources.ResourceReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/readresourceex1.vb#6)]  
  
     <span data-ttu-id="aa09b-174">Dopo aver modificato il codice sorgente (ad esempio, generando deliberatamente una <xref:System.FormatException> alla fine del `try` blocco) o rinominare l'assembly DLL in modo che non è disponibile in fase di esecuzione, è possibile eseguire l'esempio per vedere come le chiamate a <xref:System.Resources.ResourceReader.GetResourceData%2A> consentono di recuperare o la ricreazione di alcune informazioni sulle risorse.</span><span class="sxs-lookup"><span data-stu-id="aa09b-174">After modifying the source code (for example, by deliberately throwing a <xref:System.FormatException> at the end of the `try` block) or renaming the Library.dll assembly so that it is unavailable at runtime, you can run the example to see how calls to <xref:System.Resources.ResourceReader.GetResourceData%2A> enable you to retrieve or recreate some resource information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aa09b-175">Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResourceReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-175">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="aa09b-176">[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)].</span><span class="sxs-lookup"><span data-stu-id="aa09b-176">[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)].</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : System.IO.Stream -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="aa09b-177">Il flusso di input per la lettura delle risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-177">The input stream for reading resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa09b-178">Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResourceReader" /> per il flusso specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa09b-179">Il <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> costruttore crea un <xref:System.Resources.ResourceReader> oggetto che recupera le risorse da un file. resources autonomi o da un file. Resources del file che è incorporato in un assembly.</span><span class="sxs-lookup"><span data-stu-id="aa09b-179">The <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources either from a standalone .resources file or from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="aa09b-180">Per leggere da un file. resources autonomi, creare un'istanza di un <xref:System.IO.Stream> dell'oggetto e passarlo al <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="aa09b-180">To read from a standalone .resources file, instantiate a <xref:System.IO.Stream> object and pass it to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="aa09b-181">Per leggere da un file con estensione resources incorporato, chiamare il <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> metodo con il nome del file con estensione resources e passare l'oggetto restituito distinzione maiuscole/minuscole <xref:System.IO.Stream> dell'oggetto per il <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="aa09b-181">To read from an embedded .resources file, call the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method with the case-sensitive name of the .resources file, and pass the returned <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]
  
## Examples  
 <span data-ttu-id="aa09b-182">L'esempio in questa sezione Usa il file con estensione txt seguente denominato `PatientForm.txt` per definire le risorse usate da un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="aa09b-182">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="aa09b-183">È possibile compilare il file con estensione txt in un file con estensione RESOURCES eseguendo il comando seguente:</span><span class="sxs-lookup"><span data-stu-id="aa09b-183">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="aa09b-184">**resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="aa09b-184">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="aa09b-185">Nell'esempio seguente si presuppone che il file di risorse è incorporato nell'assembly che contiene il codice eseguibile dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="aa09b-185">The following example assumes that the resource file is embedded in the assembly that contains the application's executable code.</span></span> <span data-ttu-id="aa09b-186">Recupera un file di risorse denominato `PatientForm.resources` dagli assembly attualmente in esecuzione e visualizza il nome e il valore di ognuna delle relative risorse.</span><span class="sxs-lookup"><span data-stu-id="aa09b-186">It retrieves a resource file named `PatientForm.resources` from the currently executing assemblies and displays the name and value of each of its resources.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream1.vb#1)]  
  
 <span data-ttu-id="aa09b-187">Se nell'esempio c# è denominato `Example.cs`, è possibile compilarla usando il comando seguente:</span><span class="sxs-lookup"><span data-stu-id="aa09b-187">If the C# example is named `Example.cs`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="aa09b-188">**csc Example.cs /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="aa09b-188">**csc Example.cs /res:PatientForm.resources**</span></span>  
  
 <span data-ttu-id="aa09b-189">Se l'esempio di Visual Basic è denominato `Example.vb`, è possibile compilarla usando il comando seguente:</span><span class="sxs-lookup"><span data-stu-id="aa09b-189">If the Visual Basic example is named `Example.vb`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="aa09b-190">**vbc example. vb /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="aa09b-190">**vbc Example.vb /res:PatientForm.resources**</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aa09b-191">Il parametro <paramref name="stream" /> non è leggibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-191">The <paramref name="stream" /> parameter is not readable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa09b-192">Il valore del parametro <paramref name="stream" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-192">The <paramref name="stream" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="aa09b-193">Si è verificato un errore di I/O durante l'accesso al parametro <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-193">An I/O error has occurred while accessing <paramref name="stream" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aa09b-194">per fornire servizi di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-194">for providing serialization services.</span>
          </span>
          <span data-ttu-id="aa09b-195">Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-195">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="aa09b-196">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-196">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="aa09b-197">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-197">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="aa09b-198">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-198">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : string -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="aa09b-199">Percorso e nome del file di risorse da leggere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-199">The path and name of the resource file to read.</span>
          </span>
          <span data-ttu-id="aa09b-200">
            <c>filename</c> non è soggetto alla distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-200">
              <c>filename</c> is not case-sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa09b-201">Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResourceReader" /> per il file di risorse denominato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-201">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa09b-202">Il <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> costruttore crea un <xref:System.Resources.ResourceReader> oggetto che recupera le risorse da un file. resources autonomi.</span><span class="sxs-lookup"><span data-stu-id="aa09b-202">The <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources from a standalone .resources file.</span></span> <span data-ttu-id="aa09b-203">Per recuperare le risorse da un file con estensione resources incorporato, usare il <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="aa09b-203">To retrieve resources from an embedded .resources file, use the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

## Examples  
 <span data-ttu-id="aa09b-204">L'esempio in questa sezione Usa il file con estensione txt seguente denominato `PatientForm.txt` per definire le risorse usate da un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="aa09b-204">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="aa09b-205">È possibile compilare questo file con estensione txt in un file con estensione RESOURCES eseguendo il comando seguente:</span><span class="sxs-lookup"><span data-stu-id="aa09b-205">You can compile this .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="aa09b-206">**resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="aa09b-206">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="aa09b-207">Nell'esempio seguente enumera le risorse in `PatientForm.resources` e visualizza il nome e il valore della ognuno.</span><span class="sxs-lookup"><span data-stu-id="aa09b-207">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa09b-208">Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-208">The <paramref name="fileName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="aa09b-209">Impossibile trovare il file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-209">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="aa09b-210">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-210">An I/O error has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="aa09b-211">Il formato del file di risorse non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-211">The resource file has an invalid format.</span>
          </span>
          <span data-ttu-id="aa09b-212">Ad esempio, la lunghezza del file potrebbe essere zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-212">For example, the length of the file may be zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa09b-213">Rilascia tutte le risorse del sistema operativo associate a questo oggetto <see cref="T:System.Resources.ResourceReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-213">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa09b-214"><xref:System.Resources.ResourceReader.Close%2A> può essere chiamato in modo sicuro più volte.</span><span class="sxs-lookup"><span data-stu-id="aa09b-214"><xref:System.Resources.ResourceReader.Close%2A> can be safely called multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa09b-215">Nell'esempio seguente viene convogliato attraverso le risorse del file e Visualizza tutte le coppie chiave/valore che viene trovato.</span><span class="sxs-lookup"><span data-stu-id="aa09b-215">The following example moves through a file's resources and displays all the key/value pairs it finds.</span></span> <span data-ttu-id="aa09b-216">Il codice Usa quindi il <xref:System.Resources.ResourceReader.Close%2A> metodo per arrestare il <xref:System.Resources.ResourceReader> e per rilasciare tutte le risorse usate dalla funzione.</span><span class="sxs-lookup"><span data-stu-id="aa09b-216">The code then uses the <xref:System.Resources.ResourceReader.Close%2A> method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>  
  
 [!code-cpp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa09b-217">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Resources.ResourceReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-217">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa09b-218">Quando si desidera più utilizzare questa istanza di <xref:System.Resources.ResourceReader>, chiamare <xref:System.Resources.ResourceReader.Dispose%2A> per rilasciare tutte le risorse usate da questa istanza.</span><span class="sxs-lookup"><span data-stu-id="aa09b-218">When you are finished using this instance of <xref:System.Resources.ResourceReader>, call <xref:System.Resources.ResourceReader.Dispose%2A> to release all resources used by this instance.</span></span> <span data-ttu-id="aa09b-219">È consigliabile eliminare ulteriori riferimenti al <xref:System.Resources.ResourceReader> in modo che il garbage collector di recuperare la memoria dell'istanza anziché mantenendola alive per la finalizzazione dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="aa09b-219">You should eliminate further references to this <xref:System.Resources.ResourceReader> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.</span></span>  
  
 <span data-ttu-id="aa09b-220"><xref:System.Resources.ResourceReader.Dispose%2A> chiama il metodo Dispose (Boolean) privato, che contiene il codice per rilasciare le risorse gestite e non gestite.</span><span class="sxs-lookup"><span data-stu-id="aa09b-220"><xref:System.Resources.ResourceReader.Dispose%2A> calls the private Dispose(Boolean) method, which contains the code to release managed and unmanaged resources.</span></span> <span data-ttu-id="aa09b-221">Per altre informazioni, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="aa09b-221">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resourceReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa09b-222">Restituisce un enumeratore per questo oggetto <see cref="T:System.Resources.ResourceReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-222">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa09b-223">Enumeratore per questo oggetto <see cref="T:System.Resources.ResourceReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-223">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa09b-224">In genere, enumerare le risorse chiamando il <xref:System.Resources.ResourceReader.GetEnumerator%2A> metodo e quindi chiamare ripetutamente il <xref:System.Collections.IEnumerator.MoveNext%2A> metodo sull'oggetto restituito <xref:System.Collections.IDictionaryEnumerator> dell'oggetto fino a quando il metodo restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="aa09b-224">Typically, you enumerate resources by calling the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method and then repeatedly calling the <xref:System.Collections.IEnumerator.MoveNext%2A> method on the returned <xref:System.Collections.IDictionaryEnumerator> object until the method returns `false`.</span></span> <span data-ttu-id="aa09b-225">Il nome della risorsa è disponibile il <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> proprietà; il suo valore dal <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="aa09b-225">The resource name is available from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property; its value from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="aa09b-226">Nell'esempio viene illustrato come enumerare le risorse in questo modo.</span><span class="sxs-lookup"><span data-stu-id="aa09b-226">The example illustrates how to enumerate resources in this way.</span></span>  
  
 <span data-ttu-id="aa09b-227">L'implementazione del <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> proprietà mediante il <xref:System.Resources.ResourceReader> classe possono essere generate le eccezioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="aa09b-227">The implementation of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property by the <xref:System.Resources.ResourceReader> class can throw the following exceptions:</span></span>  
  
-   <xref:System.IO.FileNotFoundException>  
  
     <span data-ttu-id="aa09b-228">Impossibile trovare l'assembly che contiene il tipo a cui appartengono i dati.</span><span class="sxs-lookup"><span data-stu-id="aa09b-228">The assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <xref:System.FormatException>  
  
     <span data-ttu-id="aa09b-229">I dati non sono nel formato previsto.</span><span class="sxs-lookup"><span data-stu-id="aa09b-229">The data is not in the expected format.</span></span>  
  
-   <xref:System.TypeLoadException>  
  
     <span data-ttu-id="aa09b-230">Impossibile trovare il tipo a cui appartengono i dati.</span><span class="sxs-lookup"><span data-stu-id="aa09b-230">The type to which the data belongs cannot be found.</span></span>  
  
 <span data-ttu-id="aa09b-231">È possibile gestire l'eccezione chiamando il <xref:System.Resources.ResourceReader.GetResourceData%2A> metodo per recuperare informazioni sul tipo di dati e la matrice di byte assegnato per la risorsa indicata.</span><span class="sxs-lookup"><span data-stu-id="aa09b-231">You can handle the exception by calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve information about the data type and the byte array assigned to the named resource.</span></span> <span data-ttu-id="aa09b-232">Per altre informazioni, vedere la sezione "Recupero di risorse dal nome con GetResourceData" nel <xref:System.Resources.ResourceReader> argomento relativo alla classe.</span><span class="sxs-lookup"><span data-stu-id="aa09b-232">For more information, see the "Retrieving Resources by Name with GetResourceData" section in the <xref:System.Resources.ResourceReader> class topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="aa09b-233">Il <xref:System.Resources.ResourceReader> classe include due metodi che restituiscono gli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="aa09b-233">The <xref:System.Resources.ResourceReader> class includes two methods that return enumerators.</span></span> <span data-ttu-id="aa09b-234">Il <xref:System.Resources.ResourceReader.GetEnumerator%2A> metodo restituisce un <xref:System.Collections.IDictionaryEnumerator> oggetto di interfaccia ed è il metodo consigliato da chiamare quando l'enumerazione delle risorse.</span><span class="sxs-lookup"><span data-stu-id="aa09b-234">The <xref:System.Resources.ResourceReader.GetEnumerator%2A> method returns an <xref:System.Collections.IDictionaryEnumerator> interface object and is the recommended method to call when enumerating resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa09b-235">L'esempio in questa sezione Usa il file con estensione txt seguente denominato `PatientForm.txt` per definire le risorse usate da un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="aa09b-235">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="aa09b-236">È possibile compilare il file con estensione txt in un file con estensione RESOURCES eseguendo il comando seguente:</span><span class="sxs-lookup"><span data-stu-id="aa09b-236">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="aa09b-237">**resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="aa09b-237">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="aa09b-238">Nell'esempio seguente enumera le risorse in `PatientForm.resources` e visualizza il nome e il valore della ognuno.</span><span class="sxs-lookup"><span data-stu-id="aa09b-238">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aa09b-239">Il lettore è stato chiuso o eliminato e non è possibile accedervi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-239">The reader has been closed or disposed, and cannot be accessed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceData">
      <MemberSignature Language="C#" Value="public void GetResourceData (string resourceName, out string resourceType, out byte[] resourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetResourceData(string resourceName, [out] string&amp; resourceType, [out] unsigned int8[]&amp; resourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetResourceData (resourceName As String, ByRef resourceType As String, ByRef resourceData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetResourceData(System::String ^ resourceName, [Runtime::InteropServices::Out] System::String ^ % resourceType, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % resourceData);" />
      <MemberSignature Language="F#" Value="member this.GetResourceData : string *  *  -&gt; unit" Usage="resourceReader.GetResourceData (resourceName, resourceType, resourceData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" RefType="out" />
        <Parameter Name="resourceData" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="aa09b-240">Nome di una risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-240">The name of a resource.</span>
          </span>
        </param>
        <param name="resourceType">
          <span data-ttu-id="aa09b-241">Quando termina, questo metodo contiene una stringa che rappresenta il nome del tipo della risorsa recuperata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-241">When this method returns, contains a string that represents the type name of the retrieved resource.</span>
          </span>
          <span data-ttu-id="aa09b-242">Questo parametro viene passato non inizializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-242">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="resourceData">
          <span data-ttu-id="aa09b-243">Al termine dell'esecuzione questo metodo contiene una matrice di byte costituita dalla rappresentazione binaria del tipo recuperato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-243">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span>
          </span>
          <span data-ttu-id="aa09b-244">Questo parametro viene passato non inizializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-244">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa09b-245">Recupera il nome del tipo e i dati di una risorsa denominata da un file di risorse o da un flusso aperto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-245">Retrieves the type name and data of a named resource from an open resource file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa09b-246">Il <xref:System.Resources.ResourceReader.GetResourceData%2A> metodo recupera il valore di una risorsa denominata come matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="aa09b-246">The <xref:System.Resources.ResourceReader.GetResourceData%2A> method retrieves the value of a named resource as a byte array.</span></span> <span data-ttu-id="aa09b-247">Si tratta in genere usata quando il <xref:System.Collections.IDictionaryEnumerator.Value%2A> proprietà genera un'eccezione quando tenta di recuperare il valore di una risorsa.</span><span class="sxs-lookup"><span data-stu-id="aa09b-247">It is typically used when the <xref:System.Collections.IDictionaryEnumerator.Value%2A> property throws an exception when it tries to retrieve the value of a resource.</span></span>  
  
 <span data-ttu-id="aa09b-248">`resourceType` è una stringa che rappresenta il tipo di dati della risorsa.</span><span class="sxs-lookup"><span data-stu-id="aa09b-248">`resourceType` is a string that represents the data type of the resource.</span></span> <span data-ttu-id="aa09b-249">Può essere uno dei valori seguenti:</span><span class="sxs-lookup"><span data-stu-id="aa09b-249">It can be any of the following values:</span></span>  
  
-   <span data-ttu-id="aa09b-250">Rappresentazione di stringa di un `ResourceTypeCode` membro di enumerazione che indica il tipo di dati della risorsa.</span><span class="sxs-lookup"><span data-stu-id="aa09b-250">The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource.</span></span> <span data-ttu-id="aa09b-251">`ResourceTypeCode` è un'enumerazione privata utilizzato da essere indicare che un particolare formato binario viene utilizzato per archiviare uno dei tipi di dati comuni 19.</span><span class="sxs-lookup"><span data-stu-id="aa09b-251">`ResourceTypeCode` is a private enumeration that is used by .to indicate that a special binary format is used to store one of 19 common data types.</span></span> <span data-ttu-id="aa09b-252">Sono inclusi i tipi di dati primitivi di .NET Framework (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), nonché <xref:System.String>, <xref:System.DateTime>, e <xref:System.TimeSpan>, inoltre, il `ResourceTypeCode` enumerazione include i valori mostrati nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="aa09b-252">These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>, In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.</span></span>  
  
    |<span data-ttu-id="aa09b-253">Valore ResourceTypeCode</span><span class="sxs-lookup"><span data-stu-id="aa09b-253">ResourceTypeCode value</span></span>|<span data-ttu-id="aa09b-254">Descrizione</span><span class="sxs-lookup"><span data-stu-id="aa09b-254">Description</span></span>|  
    |----------------------------|-----------------|  
    |`ResourceTypeCode.ByteArray`|<span data-ttu-id="aa09b-255">I dati sono una matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="aa09b-255">The data is a byte array.</span></span> <span data-ttu-id="aa09b-256">Questo tipo di dati comunemente risultati della chiamata al <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="aa09b-256">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> method.</span></span>|  
    |`ResourceTypeCode.Null`|<span data-ttu-id="aa09b-257">I dati sono un riferimento null.</span><span class="sxs-lookup"><span data-stu-id="aa09b-257">The data is a null reference.</span></span> <span data-ttu-id="aa09b-258">Questo tipo di dati comunemente risultati della chiamata per il <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> metodo con un oggetto il cui valore è `null`.</span><span class="sxs-lookup"><span data-stu-id="aa09b-258">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> method with an object whose value is `null`.</span></span>|  
    |`ResourceTypeCode.Stream`|<span data-ttu-id="aa09b-259">I dati vengono archiviati in un flusso.</span><span class="sxs-lookup"><span data-stu-id="aa09b-259">The data is stored in a stream.</span></span> <span data-ttu-id="aa09b-260">Questo tipo di dati comunemente risultati della chiamata per il <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> o <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="aa09b-260">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> or <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> method.</span></span>|  
  
     <span data-ttu-id="aa09b-261">Presupponendo che `resourceData` non è stato danneggiato, può in genere essere convertito da una matrice di byte relativo valore originale chiamando un <xref:System.BitConverter> o <xref:System.IO.BinaryReader> (metodo).</span><span class="sxs-lookup"><span data-stu-id="aa09b-261">Assuming that `resourceData` has not been corrupted, it can usually be converted from a byte array back to its original value by calling a <xref:System.BitConverter> or <xref:System.IO.BinaryReader> method.</span></span>  
  
-   <span data-ttu-id="aa09b-262">Stringa che contiene il nome completo del tipo di cui i dati serializzati verranno assegnati le `resourceData` argomento (ad esempio, `System.String`).</span><span class="sxs-lookup"><span data-stu-id="aa09b-262">A string that contains the fully qualified name of the type whose serialized data is assigned to the `resourceData` argument (for example, `System.String`).</span></span> <span data-ttu-id="aa09b-263">Inoltre, per i tipi che non fanno parte della libreria di classi .NET Framework, la stringa include il nome, versione, impostazioni cultura e la chiave pubblica dell'assembly che contiene il tipo.</span><span class="sxs-lookup"><span data-stu-id="aa09b-263">In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</span></span> <span data-ttu-id="aa09b-264">Ad esempio, la stringa seguente indica che i dati serializzati rappresentano un'istanza del `Person` digitare il `Extensions` dello spazio dei nomi, disponibile nella versione 1.0 di un assembly denominato utilità che dispone di alcuna chiave pubblica e non impostazioni cultura definite.</span><span class="sxs-lookup"><span data-stu-id="aa09b-264">For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</span></span>  
  
     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  
  
     <span data-ttu-id="aa09b-265">Presupponendo che `resourceData` non sia stato danneggiato e che sia disponibile, il tipo di origine `resourceData` può essere convertito da una matrice di byte relativo valore originale convertendo la matrice di byte da un <xref:System.IO.Stream> oggetto e passando il flusso per il <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>metodo.</span><span class="sxs-lookup"><span data-stu-id="aa09b-265">Assuming that `resourceData` has not been corrupted and that the source type is available, `resourceData` can be converted from a byte array back to its original value by converting the byte array to a <xref:System.IO.Stream> object and passing the stream to the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="aa09b-266">La stringa utilizzata per descrivere il tipo di dati di <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> chiamata al metodo.</span><span class="sxs-lookup"><span data-stu-id="aa09b-266">The string used to describe the data type in the <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa09b-267">
            <paramref name="resourceName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-267">
              <paramref name="resourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aa09b-268">
            <paramref name="resourceName" /> non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-268">
              <paramref name="resourceName" /> does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="aa09b-269">
            <paramref name="resourceName" /> non dispone di un tipo valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-269">
              <paramref name="resourceName" /> has an invalid type.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="aa09b-270">I dati delle risorse recuperati sono danneggiati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-270">The retrieved resource data is corrupt.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aa09b-271">L'oggetto <see cref="T:System.Resources.ResourceReader" /> corrente non è inizializzato, probabilmente perché è chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-271">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa09b-272">Restituisce un enumeratore per questo oggetto <see cref="T:System.Resources.ResourceReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-272">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa09b-273">Enumeratore per questo oggetto <see cref="T:System.Resources.ResourceReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-273">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa09b-274"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> è un'implementazione esplicita dell'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="aa09b-274"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> is an explicit interface implementation.</span></span> <span data-ttu-id="aa09b-275">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Resources.ResourceReader> a un'interfaccia <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="aa09b-275">It can be used only when the <xref:System.Resources.ResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="aa09b-276">L'approccio consigliato per enumerare le risorse in un file con estensione resources consiste nel chiamare il <xref:System.Collections.IEnumerator.MoveNext%2A> metodo per il <xref:System.Collections.IDictionaryEnumerator> oggetto restituito dal <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="aa09b-276">The recommended approach to enumerating the resources in a .resources file is to call the <xref:System.Collections.IEnumerator.MoveNext%2A> method of the <xref:System.Collections.IDictionaryEnumerator> object returned by the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aa09b-277">Il lettore è già stato chiuso e non è quindi possibile accedervi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-277">The reader has already been closed and cannot be accessed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa09b-278">Rilascia le risorse usate da <see cref="T:System.Resources.ResourceReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa09b-278">Releases the resources used by the <see cref="T:System.Resources.ResourceReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="aa09b-279">La chiamata a Dispose consente le risorse usate dal <xref:System.Resources.ResourceReader> riallocazione per altri scopi.</span><span class="sxs-lookup"><span data-stu-id="aa09b-279">Calling Dispose allows the resources used by the <xref:System.Resources.ResourceReader> to be reallocated for other purposes.</span></span> <span data-ttu-id="aa09b-280">Per altre informazioni sul metodo Dispose, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="aa09b-280">For more information about Dispose, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>

## Examples  
<span data-ttu-id="aa09b-281">Esempio di codice seguente viene convogliato attraverso le risorse del file e Visualizza tutte le coppie chiave/valore che viene trovato.</span><span class="sxs-lookup"><span data-stu-id="aa09b-281">The following code example moves through a file's resources and prints out all the key/value pairs it finds.</span></span> <span data-ttu-id="aa09b-282">Il codice Usa quindi metodo theIDisposable.Dispose per arrestare il <xref:System.Resources.ResourceReader> e per rilasciare tutte le risorse usate dalla funzione.</span><span class="sxs-lookup"><span data-stu-id="aa09b-282">The code then uses theIDisposable.Dispose method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>

```vb
Imports System
Imports System.Resources
Imports System.Collections

Public Class ReadResources

    Public Shared Sub Main(args() As String)
        ' Create a resource reader for items.resources 
        ' and get an enumerator to iterate through the file. 
        Dim reader As IResourceReader = New ResourceReader("items.resources")
        Dim en As IDictionaryEnumerator = reader.GetEnumerator()

        ' Iterate through the file, printing the key and value pairs. 
        While en.MoveNext()
            Console.WriteLine()
            Console.WriteLine("Name: {0}", en.Key)
            Console.WriteLine("Value: {0}", en.Value)
        End While 

        ' Clean up all resources associated with the reader. 
        ' Calling Dispose is equivalent to calling Close.
        reader.Dispose()
    End Sub 

End Class
```

```csharp
using System;
using System.Resources;
using System.Collections;

public class ReadResources 
{
    public static void Main(string[] args) 
    {
        // Create a resource reader for items.resources 
        // and get an enumerator to iterate through the file.
        IResourceReader reader = new ResourceReader("items.resources");
        IDictionaryEnumerator en = reader.GetEnumerator();

        // Iterate through the file, printing the key/value pairs. 
        while (en.MoveNext()) 
        {
            Console.WriteLine();
            Console.WriteLine("Name: {0}", en.Key);
            Console.WriteLine("Value: {0}", en.Value);
        }

        // Clean up all resources associated with the reader. 
        // Calling Dispose is equivalent to calling Close.
        reader.Dispose();
    }
}
```

```cpp
using namespace System;
using namespace System::Resources;
using namespace System::Collections;
int main()
{
   array<String^>^args = Environment::GetCommandLineArgs();

   // Create a resource reader for items.resources 
   // and get an enumerator to iterate through the file.
   IResourceReader^ reader = gcnew ResourceReader( "items.resources" );
   IDictionaryEnumerator^ en = reader->GetEnumerator();

   // Iterate through the file, printing the key/value pairs. 
   while ( en->MoveNext() )
   {
      Console::WriteLine();
      Console::WriteLine( "Name: {0}", en->Key );
      Console::WriteLine( "Value: {0}", en->Value );
   }

   // Clean up all resources associated with the reader. 
   // Calling the destructor is equivalent to calling Close.
   reader->~IResourceReader();
}
```

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>