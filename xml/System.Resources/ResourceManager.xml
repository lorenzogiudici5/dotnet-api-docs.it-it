<Type Name="ResourceManager" FullName="System.Resources.ResourceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d360ec383cc88bbedd3b843cc401e63603d52e6d" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52202275" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResourceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ResourceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceManager" />
  <TypeSignature Language="F#" Value="type ResourceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netcore-2.2">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un gestore delle risorse che offre un comodo accesso a risorse specifiche delle impostazioni cultura in fase di esecuzione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 Il <xref:System.Resources.ResourceManager> classe recupera le risorse da un file binario con estensione resources incorporato in un assembly o da un file. resources autonomi. Se sia stata localizzata in un'app e le risorse localizzate sono state distribuite nel [gli assembly satellite](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md), ricerca le risorse specifiche delle impostazioni cultura, consente di fallback delle risorse quando una risorsa localizzata non esiste e supporta risorse serializzazione.  
  
 Per altre informazioni sulla creazione e la gestione delle risorse nelle App desktop e [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, vedere le sezioni seguenti:  
  
-   [App desktop](#desktop)  
  
    -   [Creazione di risorse](#creating_resources)  
  
    -   [Creare un'istanza di un oggetto ResourceManager](#instantiating)  
  
    -   [ResourceManager e le risorse specifiche delle impostazioni cultura](#CultureSpecific)  
  
    -   [Recupero di risorse](#retrieving)  
  
    -   [Gestione delle eccezioni di MissingSatelliteAssemblyException e MissingManifestResourceException](#exception)  
  
    -   [Controllo delle versioni delle risorse](#versioning)  
  
    -   [\<satelliteassemblies > nodo File di configurazione](#config)  
  
-   [App di Windows Store](#ws)  
  
<a name="desktop"></a>   
## <a name="desktop-apps"></a>App desktop  
 Per le app desktop, il <xref:System.Resources.ResourceManager> classe recupera le risorse dai file di risorse binario (con estensione resources). In genere, un compilatore di linguaggio o il [Assembly Linker (AL.exe)](~/docs/framework/tools/al-exe-assembly-linker.md) incorpora questi file di risorse in un assembly. È anche possibile usare una <xref:System.Resources.ResourceManager> oggetto per recuperare le risorse direttamente da un file con estensione resources incorporato in un assembly, non chiamando il <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> (metodo).  
  
> [!CAUTION]
>  Utilizzo di file. resources autonomi in un'app ASP.NET interrompe la distribuzione XCOPY, perché le risorse di rimangano bloccate fino a quando non vengono rilasciati in modo esplicito dal <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> (metodo). Se si desidera distribuire le risorse con le applicazioni ASP.NET, è necessario compilare i file con estensione resources in assembly satellite.  
  
 In un'app basata su risorse, un file con estensione resources contiene le risorse delle impostazioni cultura le cui risorse vengono utilizzate se non viene trovate alcun risorse specifiche delle impostazioni cultura predefinite. Ad esempio, se le impostazioni cultura predefinite di un'app sono inglese (en), le risorse di lingua inglese vengono utilizzate ogni volta che le risorse localizzate non è disponibile per una lingua specifica, ad esempio inglese (Stati Uniti) (en-US) o francese (Francia) (fr-FR). In genere, le risorse per le impostazioni cultura predefinite sono incorporate nell'assembly dell'app principale e le risorse per le altre impostazioni cultura localizzate vengono incorporate nell'assembly satellite. Gli assembly satellite contengono solo le risorse. Hanno lo stesso nome file radice come assembly principale e l'estensione. Resources. Per le app con assembly non sono registrati nella global assembly cache, gli assembly satellite vengono archiviati in una sottodirectory di app il cui nome corrisponde alle impostazioni cultura dell'assembly.  
  
<a name="creating_resources"></a>   
### <a name="creating-resources"></a>Creazione di risorse  
 Quando si sviluppa un'app basata su risorse, si archiviano informazioni sulle risorse in file di testo (file con estensione txt o. restext) o file XML (file con estensione resx). È quindi possibile compilare il file di testo o XML con il [Resource File Generator Resgen.exe](~/docs/framework/tools/resgen-exe-resource-file-generator.md) per creare un file. Resources binario. È quindi possibile incorporare il file con estensione resources risultante in un file eseguibile o una raccolta con un'opzione del compilatore, ad esempio `/resources` per i compilatori c# e Visual Basic, oppure è possibile incorporare in un assembly satellite usando il. Se si include un file. resx nel progetto di Visual Studio, Visual Studio gestisce la compilazione e l'incorporamento di predefinito e le risorse localizzate automaticamente come parte del processo di compilazione.  
  
 In teoria, è necessario creare le risorse per ogni lingua l'app supporta, o almeno per un subset significativo di ogni lingua. I nomi di file. Resources binario seguono la convenzione di denominazione *basename*. *cultureName*Resources, in cui *basename* è il nome dell'app o il nome di una classe, a seconda del livello di dettaglio desiderato. Il <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> proprietà viene utilizzata per determinare *cultureName*. Una risorsa per impostazioni cultura predefinite dell'app deve essere denominata *basename*. Resources.  
  
 Ad esempio, si supponga che un assembly sono presenti delle risorse in un file di risorse con il nome base MyResources. Questi file di risorse devono avere nomi, ad esempio MyResources. ja-JP. Resources per le impostazioni cultura di quelle (giapponesi Giappone), MyResources.de.resources per le impostazioni cultura tedesche, MyResources. zh-CHS. Resources per la lingua in cinese semplificata, e MyResources.fr-BE. Resources per le impostazioni cultura francese (Belgio). File di risorse predefinito deve essere denominato myResources. I file di risorse specifiche delle impostazioni cultura sono comunemente inclusi negli assembly satellite per ognuna delle impostazioni cultura. File di risorse predefinito debba essere incorporato nell'assembly principale dell'app.  
  
 Si noti che consente alle risorse di essere contrassegnato come privato, ma è consigliabile sempre contrassegnarli come pubblico in modo che siano accessibili da altri assembly. (Perché un assembly satellite non contiene codice, le risorse che sono contrassegnate come privati sono disponibili per l'app tramite qualsiasi meccanismo).  
  
 Per altre informazioni sulla creazione, creazione di pacchetti e distribuzione delle risorse, vedere gli articoli [Creating Resource Files](~/docs/framework/resources/creating-resource-files-for-desktop-apps.md), [creazione di assembly Satellite](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md), e [assemblaggio e distribuzione Risorse](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
<a name="instantiating"></a>   
### <a name="instantiating-a-resourcemanager-object"></a>Creare un'istanza di un oggetto ResourceManager  
 Crea un'istanza di un <xref:System.Resources.ResourceManager> oggetto che recupera le risorse da un file con estensione resources incorporato chiamando uno degli overload del costruttore di classe. Questo è strettamente collegato a un <xref:System.Resources.ResourceManager> oggetto con un file con estensione resources specifico e con tutte le proprietà associate localizzato il file con estensione resources in assembly satellite.  
  
 I due costruttori chiamati più di frequente sono:  
  
-   <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> Cerca le risorse in base a due tipi di informazioni che viene fornito: il nome base del file. Resources e l'assembly in cui si trova il file. Resources predefinito. Il nome di base include il nome dello spazio dei nomi e la radice del file con estensione resources, senza le impostazioni cultura o l'estensione. Si noti che i file con estensione resources compilati dalla riga di comando in genere non includono un nome dello spazio dei nomi, mentre i file con estensione resources creati nell'ambiente di Visual Studio. Ad esempio, se un file di risorse è denominato MyCompany.StringResources.resources e il <xref:System.Resources.ResourceManager> costruttore viene chiamato da un metodo statico denominato `Example.Main`, il codice seguente crea un'istanza un <xref:System.Resources.ResourceManager> oggetto che può recuperare le risorse da di. file di risorse:  
  
     [!code-csharp[Conceptual.Resources.Retrieving#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/ctor1.cs#1)]
     [!code-vb[Conceptual.Resources.Retrieving#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/ctor1.vb#1)]  
  
-   <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> Cerca risorse negli assembly satellite in base alle informazioni da un oggetto di tipo. Nome completo del tipo corrisponde al nome di base del file con estensione resources senza l'estensione del nome file. Nelle App desktop che vengono create tramite la progettazione di risorse di Visual Studio, Visual Studio crea una classe wrapper il cui nome completo è lo stesso nome radice del file con estensione resources. Ad esempio, se un file di risorse è denominato MyCompany.StringResources.resources e c'è una classe wrapper denominata `MyCompany.StringResources`, il codice seguente crea un <xref:System.Resources.ResourceManager> oggetto che può recuperare le risorse dal file con estensione resources:  
  
     [!code-csharp[Conceptual.Resources.Retrieving#2](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/ctor1.cs#2)]
     [!code-vb[Conceptual.Resources.Retrieving#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/ctor1.vb#2)]  
  
 Se non è possibile trovare le risorse appropriate, la chiamata al costruttore crea un oggetto valido <xref:System.Resources.ResourceManager> oggetto. Tuttavia, il tentativo di recuperare una risorsa genera un <xref:System.Resources.MissingManifestResourceException> eccezione. Per informazioni sulla gestione dell'eccezione, vedere la [MissingManifestResourceException la gestione e le eccezioni MissingSatelliteAssembly](#exception) sezione più avanti in questo articolo.  
  
 Nell'esempio seguente viene mostrato come creare un <xref:System.Resources.ResourceManager> oggetto. Contiene il codice sorgente per un eseguibile denominato ShowTime.exe. Include anche il seguente file di testo denominato Strings. txt che contiene un'unica risorsa stringa, `TimeHeader`:  
  
```  
TimeHeader=The current time is  
```  
  
 È possibile usare un file batch per generare il file di risorse e incorporarlo nel file eseguibile. Ecco il file batch per generare un file eseguibile tramite il compilatore c#:  
  
```  
  
resgen strings.txt  
csc ShowTime.cs /resource:strings.resources  
  
```  
  
 Per il compilatore Visual Basic, è possibile usare il seguente file batch:  
  
```  
  
resgen strings.txt  
vbc ShowTime.vb /resource:strings.resources  
  
```  
  
 [!code-csharp[System.Resources.ResourceManager.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showtime.cs#1)]
 [!code-vb[System.Resources.ResourceManager.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showtime.vb#1)]  
  
<a name="CultureSpecific"></a>   
### <a name="resourcemanager-and-culture-specific-resources"></a>ResourceManager e le risorse specifiche delle impostazioni cultura  
 Un'app localizzata richiede risorse da distribuire, come descritto nell'articolo [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md). Se gli assembly siano configurati correttamente, il gestore di risorse determina le risorse da recuperare in base al thread corrente <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> proprietà. (Anche tale proprietà restituisce impostazioni cultura dell'interfaccia utente del thread corrente.) Ad esempio, se un'app viene compilata con impostazione predefinita nell'assembly principale e con le risorse di lingua francese e russa in due assembly satellite, le risorse di lingua inglese e <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> è impostata su fr-FR, resource manager recupera il francese risorse.  
  
 È possibile impostare il <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> proprietà in modo esplicito o implicito. Determina il modo in cui viene impostata come la <xref:System.Resources.ResourceManager> oggetto recupera le risorse in base alla lingua:  
  
-   Se si imposta in modo esplicito il <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> proprietà per impostazioni cultura specifiche, sempre il gestore di risorse recupera le risorse per le impostazioni cultura, indipendentemente dalla lingua del browser o sistema operativo dell'utente. Si consideri un'app compilata con le risorse della lingua inglese predefinito e tre gli assembly satellite che contengono le risorse per inglese (Stati Uniti), francesi (Francia) e russe (Russia). Se il <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> è impostata su fr-FR, il <xref:System.Resources.ResourceManager> oggetto recupera sempre le risorse francesi (Francia), anche se il sistema operativo all'utente della lingua del sistema non è il francese. Assicurarsi che questo è il comportamento desiderato prima di impostare la proprietà in modo esplicito.  
  
     Nelle App ASP.NET, è necessario impostare il <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> proprietà in modo esplicito, perché è improbabile che l'impostazione nel server contrassegnerà le richieste client in ingresso. Un'app ASP.NET è possibile impostare il <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> lingua accettata proprietà in modo esplicito per il browser dell'utente.  
  
     Impostare in modo esplicito il <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> proprietà definisce le impostazioni cultura correnti dell'interfaccia utente per il thread. Non influisce sulle impostazioni cultura correnti dell'interfaccia utente di qualsiasi altro thread in un'app.  
  
-   È possibile impostare le impostazioni cultura dell'interfaccia utente di tutti i thread in un dominio dell'applicazione tramite l'assegnazione di un <xref:System.Globalization.CultureInfo> oggetto che rappresenta quelle impostazioni cultura per il metodo statico <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A?displayProperty=nameWithType> proprietà.  
  
-   Se non si imposta in modo esplicito le impostazioni cultura correnti dell'interfaccia utente e non si definisce impostazioni cultura predefinite per il dominio applicazione corrente, il <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> viene impostata in modo implicito per il Windows `GetUserDefaultUILanguage` (funzione). Questa funzione viene fornita per il Multilingual User Interface (MUI), che consente all'utente di impostare la lingua predefinita. Se la lingua dell'interfaccia utente non è impostata dall'utente, per impostazione predefinita al linguaggio sistema installato, ovvero la lingua risorse del sistema operativo.  
  
 L'esempio "Hello world" semplice seguente imposta le impostazioni cultura correnti dell'interfaccia utente in modo esplicito. Contiene risorse per tre lingue: inglese (Stati Uniti) o en-US, francesi (Francia) o fr-FR e russe (Russia) o ru-RU. In un file di testo denominato Greetings.txt sono contenute le risorse en-US:  
  
```  
HelloString=Hello world!  
```  
  
 In un file di testo denominato Greetings.fr sono contenute le risorse fr-FR-fr. txt:  
  
```  
HelloString=Salut tout le monde!  
```  
  
 In un file di testo denominato Greetings.ru sono contenute le risorse ru-RU-RU. txt:  
  
```  
HelloString=Всем привет!  
```  
  
 Ecco il codice sorgente per l'esempio (example. vb per la versione Visual Basic) o Example.cs per la versione c#:  
  
 [!code-csharp[Conceptual.Resources.CurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.currentculture/cs/example.cs#1)]
 [!code-vb[Conceptual.Resources.CurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.currentculture/vb/example.vb#1)]  
  
 Per compilare questo esempio, creare un file batch (bat) che contiene i comandi seguenti ed eseguirlo dal prompt dei comandi. Se si usa c#, specificare `csc` invece di `vbc` e `Example.cs` invece di `Example.vb`.  
  
```  
resgen Greetings.txt   
vbc Example.vb /resource:Greetings.resources  
  
resgen Greetings.fr-FR.txt  
Md fr-FR  
al /embed:Greetings.fr-FR.resources /culture:fr-FR /out:fr-FR\Example.resources.dll  
  
resgen Greetings.ru-RU.txt  
Md ru-RU  
al /embed:Greetings.ru-RU.resources /culture:ru-RU /out:ru-RU\Example.resources.dll  
```  
  
<a name="retrieving"></a>   
### <a name="retrieving-resources"></a>Recupero di risorse  
 Si chiama il <xref:System.Resources.ResourceManager.GetObject%28System.String%29> e <xref:System.Resources.ResourceManager.GetString%28System.String%29> metodi per accedere a una risorsa specifica. È inoltre possibile chiamare il <xref:System.Resources.ResourceManager.GetStream%28System.String%29> metodo per recuperare le risorse non di tipo stringa come matrice di byte. Per impostazione predefinita, in un'app che è localizzato delle risorse, questi metodi restituiscono la risorsa per la lingua determinata dalle impostazioni cultura correnti dell'interfaccia utente del thread che ha effettuato la chiamata. Vedere la sezione precedente [ResourceManager e le risorse specifiche delle impostazioni cultura](#CultureSpecific), per altre informazioni sulle modalità di definizione delle impostazioni cultura correnti dell'interfaccia utente di un thread. Se il gestore di risorse non è possibile trovare la risorsa per impostazioni cultura dell'interfaccia utente del thread corrente, Usa un processo di fallback per recuperare la risorsa specificata. Se il gestore di risorse non è possibile trovare tutte le risorse localizzate, Usa le risorse delle impostazioni cultura predefinite. Per altre informazioni sulle regole di fallback di risorse, vedere la sezione "Processo di Fallback delle risorse" dell'articolo [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
> [!NOTE]
>  Se il file con estensione resources specificato nel <xref:System.Resources.ResourceManager> costruttore di classe non può essere trovato, il tentativo di recuperare una risorsa genera una <xref:System.Resources.MissingManifestResourceException> o <xref:System.Resources.MissingSatelliteAssemblyException> eccezione. Per informazioni sulla gestione dell'eccezione, vedere la [MissingManifestResourceException gestisce e MissingManifestResourceException](#exception) sezione più avanti in questo argomento.  
  
 L'esempio seguente usa il <xref:System.Resources.ResourceManager.GetString%2A> metodo per recuperare le risorse specifiche delle impostazioni cultura. È costituito da risorse compilate dal file con estensione txt per l'inglese (en), francesi (Francia) fr-FR () e russe (Russia) (ru-RU) le impostazioni cultura. Nell'esempio viene modificato le impostazioni cultura correnti e impostazioni cultura correnti dell'interfaccia utente per inglese (Stati Uniti), francesi (Francia), russe (Russia) e svedese (Svezia). Chiama quindi il <xref:System.Resources.ResourceManager.GetString%2A> metodo per recuperare la stringa localizzata, visualizzata con il giorno corrente e il mese. Si noti che l'output visualizza la stringa localizzata appropriata tranne quando le impostazioni cultura correnti dell'interfaccia utente sono svedese (Svezia). Poiché le risorse di lingua svedese sono disponibili, l'app Usa invece le risorse delle impostazioni cultura predefinite, ovvero l'inglese.  
  
 L'esempio richiede i file di risorse basate su testo elencati nella tabella seguente. Ognuno ha un'unica risorsa stringa denominata `DateStart`.  
  
|culture|Nome file|Nome della risorsa|Valore della risorsa|  
|-------------|---------------|-------------------|--------------------|  
|it-IT|DateStrings.txt|`DateStart`|Oggi è|  
|fr-FR|DateStrings.fr-FR.txt|`DateStart`|Aujourd'hui, c'est le|  
|ru-RU|DateStrings.ru-RU.txt|`DateStart`|Сегодня|  
  
 Ecco il codice sorgente per l'esempio (ShowDate.vb per la versione Visual Basic) o ShowDate.cs per la versione c# del codice.  
  
 [!code-csharp[System.Resources.ResourceManager.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate.cs#2)]
 [!code-vb[System.Resources.ResourceManager.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate.vb#2)]  
  
 Per compilare questo esempio, creare un file batch che contiene i comandi seguenti ed eseguirlo dal prompt dei comandi. Se si usa c#, specificare `csc` invece di `vbc` e `showdate.cs` invece di `showdate.vb`.  
  
```  
  
resgen DateStrings.txt  
vbc showdate.vb /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
  
```  
  
 Esistono due modi per recuperare le risorse di una cultura diverse da quelle impostazioni cultura correnti dell'interfaccia utente:  
  
-   È possibile chiamare il <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>, <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29>, o <xref:System.Resources.ResourceManager.GetStream%28System.String%2CSystem.Globalization.CultureInfo%29> metodo per recuperare una risorsa per impostazioni cultura specifiche. Se una risorsa localizzata non viene trovata, il processo di fallback delle risorse di resource manager Usa per individuare una risorsa appropriata.  
  
-   È possibile chiamare il <xref:System.Resources.ResourceManager.GetResourceSet%2A> metodo per ottenere un <xref:System.Resources.ResourceSet> oggetto che rappresenta le risorse per impostazioni cultura specifiche. Nella chiamata al metodo, è possibile determinare se il gestore di risorse vengono cercate le impostazioni cultura padre se non è in grado di trovare le risorse localizzate, o se semplicemente esegue il fallback per le risorse delle impostazioni cultura predefinite. È quindi possibile usare il <xref:System.Resources.ResourceSet> metodi per accedere alle risorse (localizzate per le impostazioni cultura) in base al nome o per enumerare le risorse nel set.  
  
<a name="exception"></a>   
### <a name="handling-missingmanifestresourceexception-and-missingsatelliteassemblyexception-exceptions"></a>Gestione delle eccezioni di MissingSatelliteAssemblyException e MissingManifestResourceException  
 Se si tenta di recuperare una risorsa specifica, ma non è stato trovato il gestore di risorse che è stato definito alcun impostazioni cultura predefinite e risorse o non è possibile individuare le risorse della lingua predefinita, resource manager genera un <xref:System.Resources.MissingManifestResourceException> eccezioni se si si aspetta di trovare le risorse nell'assembly principale o un <xref:System.Resources.MissingSatelliteAssemblyException> se si prevede di trovare le risorse in un assembly satellite. Si noti che l'eccezione viene generata quando si chiama un metodo di recupero, ad esempio <xref:System.Resources.ResourceManager.GetString%2A> oppure <xref:System.Resources.ResourceManager.GetObject%2A>, e non quando crea un'istanza un <xref:System.Resources.ResourceManager> oggetto.  
  
 In genere viene generata l'eccezione nelle condizioni seguenti:  
  
-   L'assembly satellite o file di risorse appropriata non esiste. Se il gestore di risorse si aspetta che le risorse predefinite dell'app da incorporare nell'assembly dell'app principale, sono presenti. Se il <xref:System.Resources.NeutralResourcesLanguageAttribute> attributo indica che le risorse predefinite dell'app si trovano in un assembly satellite, che è Impossibile trovare l'assembly. Quando si compila l'app, assicurarsi che le risorse vengono incorporate nell'assembly principale o che l'assembly satellite necessario viene generato e viene denominato in modo appropriato. Il nome deve avere il formato *NomeApp*. resources che deve trovarsi in una directory denominata in base alle impostazioni cultura la cui risorse in esso contenute.  
  
-   L'app non ha un valore predefinito o alcune impostazioni cultura definite. Aggiungere il <xref:System.Resources.NeutralResourcesLanguageAttribute> attributo a un file di codice sorgente o il file di progetto informazioni file (VB per un'app Visual Basic) o AssemblyInfo.cs per un'app c#.  
  
-   Il `baseName` parametro il <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> costruttore non specifica il nome di un file con estensione resources. Il nome deve includere lo spazio dei nomi completo del file di risorse, ma non l'estensione del nome file. In genere, i file di risorse creati in Visual Studio includono spazi dei nomi, ma non i file di risorse che vengono creati e compilati al prompt dei comandi. È possibile determinare i nomi dei file con estensione resources incorporato compilando ed eseguendo l'utilità seguente. Si tratta di un'app console che accetta il nome di un assembly principale o un assembly satellite come parametro della riga di comando. Visualizza le stringhe che devono essere fornite come il `baseName` parametro in modo che resource manager possa identificare correttamente la risorsa.  
  
     [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
     [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
 Se si intende modificare le impostazioni cultura correnti dell'applicazione in modo esplicito, è consigliabile anche ricordare che il gestore di risorse recupera un set di risorse in base al valore della <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà e non il <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> proprietà. In genere, se si modifica un valore, è necessario modificare anche l'altro.  
  
<a name="versioning"></a>   
### <a name="resource-versioning"></a>Controllo delle versioni delle risorse  
 Poiché l'assembly principale che contiene le risorse predefinite dell'app è separato dall'assembly satellite dell'app, è possibile rilasciare una nuova versione dell'assembly principale senza ridistribuire gli assembly satellite. Si utilizza il <xref:System.Resources.SatelliteContractVersionAttribute> attributo da usare gli assembly satellite esistenti e indicare il gestore di risorse non di ridistribuirle con una nuova versione dell'assembly principale,  
  
 Per altre informazioni sul supporto di controllo delle versioni degli assembly satellite, vedere l'articolo [recupero di risorse](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md).  
  
<a name="config"></a>   
### <a name="satelliteassemblies-configuration-file-node"></a>\<satelliteassemblies > nodo File di configurazione  
 Per i file eseguibili che vengono distribuiti ed eseguiti da un sito Web (file) .exe HREF, il <xref:System.Resources.ResourceManager> oggetto potrebbe determinare la verifica degli assembly satellite tramite il web, che può influire negativamente sulle prestazioni dell'app. Per eliminare il problema di prestazioni, è possibile limitare l'individuazione tramite probe per gli assembly satellite che è stato distribuito con l'app. A tale scopo, si crea una `<satelliteassemblies>` nodo nel file di configurazione dell'app per specificare di aver distribuito un set specifico di impostazioni cultura per l'app e che il <xref:System.Resources.ResourceManager> oggetto non è consigliabile provare a verificare la presenza di eventuali impostazioni cultura che non è elencato nel nodo.  
  
> [!NOTE]
>  L'alternativa preferita per la creazione di un `<satelliteassemblies>` nodo consiste nell'usare il [del manifesto della distribuzione ClickOnce](https://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b) funzionalità.  
  
 Nel file di configurazione dell'app, creare una sezione simile alla seguente:  
  
```  
<?xml version ="1.0"?>  
<configuration>  
    <satelliteassemblies>  
        <assembly name="MainAssemblyName, Version=versionNumber, Culture=neutral, PublicKeyToken=null|yourPublicKeyToken">  
            <culture>cultureName1</culture>  
            <culture>cultureName2</culture>  
            <culture>cultureName3</culture>  
        </assembly>  
    </satelliteassemblies>  
</configuration>  
```  
  
 Modificare le informazioni di configurazione come segue:  
  
-   Specificare uno o più `<assembly>` nodi per ogni assembly principale che si distribuisce, in cui ogni nodo consente di specificare un nome completo dell'assembly. Specificare il nome dell'assembly principale anziché *MainAssemblyName*e specificare le `Version`, `PublicKeyToken`, e `Culture` valori corrispondenti dell'attributo all'assembly principale.  
  
     Per il `Version` attributo, specificare il numero di versione dell'assembly. Ad esempio, la prima versione dell'assembly potrebbe essere il numero di versione 1.0.0.0.  
  
     Per il `PublicKeyToken` dell'attributo, specificare la parola chiave `null` se non è stata effettuata l'assembly con nome sicuro o se l'assembly è firmato, specificare il token di chiave pubblica.  
  
     Per il `Culture` dell'attributo, specificare la parola chiave `neutral` designare l'assembly principale e causare il <xref:System.Resources.ResourceManager> per verificare la presenza solo per le lingue elencate nella classe di `<culture>` nodi.  
  
     Per altre informazioni sui nomi di assembly completo, vedere l'articolo [i nomi degli Assembly](~/docs/framework/app-domains/assembly-names.md). Per altre informazioni sugli assembly con nome sicuro, vedere l'articolo [creazione e assembly con nome sicuro](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).  
  
-   Specificare uno o più `<culture>` nodi con un nome di impostazioni cultura specifiche, ad esempio "fr-FR", o un nome di alcune impostazioni cultura, ad esempio "fr".  
  
 Se sono necessarie risorse per tutti gli assembly non elencati sotto la `<satelliteassemblies>` nodo, il <xref:System.Resources.ResourceManager> classe probe per le impostazioni cultura usando le regole di controllo standard.  
  
<a name="ws"></a>   
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>Applicazioni [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Anche se il <xref:System.Resources.ResourceManager> classe è supportata in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, si sconsiglia l'uso. Utilizzare questa classe solo quando si sviluppano [!INCLUDE[net_portable](~/includes/net-portable-md.md)] i progetti che possono essere usati con [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app. Per recuperare le risorse dal [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, usare il [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) classe.  
  
 Per la [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, il <xref:System.Resources.ResourceManager> classe recupera le risorse dai file di pacchetto risorse (PRI) dell'indice. Un singolo file PRI (file PRI pacchetto dell'applicazione) contiene le risorse per entrambe le impostazioni cultura predefinite ed eventuali impostazioni cultura localizzate. Utilizzare l'utilità MakePRI per creare un file PRI da uno o più file di risorse che sono in formato di risorsa (con estensione resw) XML. Per le risorse che sono inclusi in un progetto di Visual Studio, Visual Studio gestisce il processo di creazione e l'assemblaggio automaticamente il file PRI. È quindi possibile usare .NET Framework <xref:System.Resources.ResourceManager> classe per accedere alle risorse dell'app o della libreria.  
  
 È possibile creare un'istanza di un <xref:System.Resources.ResourceManager> dell'oggetto per un [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app nello stesso modo che per un'app desktop.  
  
 È quindi possibile accedere le risorse per una specifica impostazione cultura, passando il nome della risorsa da recuperare per il <xref:System.Resources.ResourceManager.GetString%28System.String%29> (metodo). Per impostazione predefinita, questo metodo restituisce la risorsa per la lingua determinata dalle impostazioni cultura correnti dell'interfaccia utente del thread che ha effettuato la chiamata. È inoltre possibile recuperare le risorse delle impostazioni cultura, passando il nome della risorsa e un <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura la cui risorsa da recuperare per il <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> (metodo). Se non è possibile trovare la risorsa per le impostazioni cultura dell'interfaccia utente correnti o le impostazioni cultura specificate, resource manager Usa un elenco di fallback della lingua dell'interfaccia utente per individuare una risorsa appropriata.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare di impostazioni cultura esplicite e le impostazioni cultura dell'interfaccia utente correnti implicita per ottenere risorse di tipo stringa da un assembly principale e un assembly satellite. Per altre informazioni, vedere la sezione "Directory posizioni per Satellite assembly non installato in the Global Assembly Cache" del [creazione di assembly Satellite](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) argomento.  
  
 Per eseguire questo esempio:  
  
1.  Nella directory dell'app, creare un file denominato rmc.txt che contiene le stringhe di risorsa seguenti:  
  
    ```  
  
    day=Friday  
    year=2006  
    holiday="Cinco de Mayo"  
  
    ```  
  
2.  Usare la [Resource File Generator](~/docs/framework/tools/resgen-exe-resource-file-generator.md) per generare il file di risorse rmc.resources dal file di input rmc.txt come indicato di seguito:  
  
    ```  
    resgen rmc.txt  
    ```  
  
3.  Creare una sottodirectory della directory dell'app e denominarla "es-MX". Si tratta del nome delle impostazioni cultura dell'assembly satellite che verrà creato nei passaggi successivi tre.  
  
4.  Creare un file denominato rmc.es-MX.txt nella directory es-MX che contiene le stringhe di risorsa seguenti:  
  
    ```  
  
    day=Viernes  
    year=2006  
    holiday="Cinco de Mayo"  
  
    ```  
  
5.  Usare la [Resource File Generator](~/docs/framework/tools/resgen-exe-resource-file-generator.md) per generare il file di risorse rmc.es MX.resources dal file di input rmc.es MX.txt come indicato di seguito:  
  
    ```  
    resgen rmc.es-MX.txt  
    ```  
  
6.  Si supponga che il nome del file per questo esempio rmc.vb o rmc.cs. Copiare il seguente codice sorgente in un file. Quindi, compilarlo e incorporare il file di risorse assembly principale, rmc.resources, nell'assembly eseguibile. Se si usa il compilatore Visual Basic, la sintassi è:  
  
    ```  
    vbc rmc.vb /resource:rmc.resources  
    ```  
  
     La sintassi corrispondente per il compilatore c# è:  
  
    ```  
    csc /resource:rmc.resources rmc.cs  
    ```  
  
7.  Usare la [Assembly Linker](~/docs/framework/tools/al-exe-assembly-linker.md) per creare un assembly satellite. Se il nome di base dell'app è rmc, il nome dell'assembly satellite deve essere rmc.resources.dll. L'assembly satellite deve essere creato nella directory es-MX. Se es-MX è la directory corrente, usare questo comando:  
  
    ```  
    al /embed:rmc.es-MX.resources /c:es-MX /out:rmc.resources.dll   
    ```  
  
8.  Eseguire rmc.exe per ottenere e visualizzare le stringhe di risorsa incorporata.  
  
 [!code-csharp[ResourceManager_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/ResourceManager_Class/cs/rmc.cs#1)]
 [!code-vb[ResourceManager_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourceManager_Class/vb/rmc.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Questo tipo è thread-safe.</threadsafe>
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
    <altmember cref="T:System.Resources.SatelliteContractVersionAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890">Risorse nelle applicazioni</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResourceManager" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResourceManager" /> con i valori predefiniti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore è utile solo se si scrive una classe che deriva dal <xref:System.Resources.ResourceManager> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (Type resourceSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type resourceSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceSource As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(Type ^ resourceSource);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : Type -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager resourceSource" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceSource" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="resourceSource">Tipo da cui il gestore delle risorse deriva tutte le informazioni per la ricerca dei file con estensione resources.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResourceManager" /> che ricerca le risorse negli assembly satellite in base alle informazioni derivate dall'oggetto di tipo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>App desktop  
 Nelle App desktop, Gestione risorse Usa i `resourceSource` parametro per caricare un file di risorse specifico, come indicato di seguito:  
  
-   Se il <xref:System.Resources.NeutralResourcesLanguageAttribute> attributo non viene utilizzato per indicare che le risorse delle impostazioni cultura predefinite si trovano in un assembly satellite, resource manager presuppone che il file di risorse per la lingua predefinita non viene trovato nello stesso assembly del tipo specificato per il `resourceSource` parametro.  
  
-   Resource manager presuppone che il file di risorse predefinito ha lo stesso nome di base del tipo specificato da di `resourceSource` parametro.  
  
-   Resource manager Usa il valore predefinito <xref:System.Resources.ResourceSet> classe per modificare il file di risorse.  
  
 Ad esempio, dato un tipo denominato MyCompany.MyProduct.MyType, Cerca il gestore di risorse per un file con estensione resources denominato MyCompany.MyProduct.MyType.resources nell'assembly che definisce MyType.  
  
 In Visual Studio, la finestra di progettazione risorse genera automaticamente il codice che definisce un `internal` (in c#) o `Friend` (in Visual Basic) classe il cui nome è lo stesso come il nome di base del file con estensione resources per le impostazioni cultura predefinite. Questo rende possibile creare un'istanza di un <xref:System.Resources.ResourceManager> dell'oggetto e associarlo con un particolare set di risorse tramite il recupero di un oggetto di tipo il cui nome corrisponde al nome della risorsa, in quanto, purché la classe è visibile al compilatore, le risorse devono essere come bene. Ad esempio, se un file con estensione resources denominato risorsa 1, l'istruzione seguente crea un'istanza di un <xref:System.Resources.ResourceManager> oggetto per gestire il file con estensione resources denominato risorsa 1:  
  
 [!code-csharp[System.Resources.ResourceManager.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/ctor1.cs#2)]  
  
 Se non si usa Visual Studio, è possibile creare una classe senza membri il cui spazio dei nomi e il nome è uguale a quello del file. Resources predefinito. Nell'esempio viene illustrata una situazione di questo tipo.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>Applicazioni [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Anche se il <xref:System.Resources.ResourceManager> classe è supportata in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, si sconsiglia l'uso. Utilizzare questa classe solo quando si sviluppano [!INCLUDE[net_portable](~/includes/net-portable-md.md)] i progetti che possono essere usati con [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app. Per recuperare le risorse dal [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, usare il [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) classe.  
  
 In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app <xref:System.Resources.ResourceManager> Usa il `resourceSource` parametro dedurre l'assembly, nome di base e lo spazio dei nomi in cui gli elementi delle risorse possono trovarsi all'interno di file indice (PRI) risorse del pacchetto dell'app. Ad esempio, dato un tipo denominato MyCompany.MyProduct.MyType definito in `MyAssembly`, Gestione risorse di Azure Cerca un set di risorse identificatore denominata MyAssembly e cerca un ambito MyCompany.MyProduct.MyType all'interno di tale set di risorse. Resource manager Cerca elementi di risorsa nel contesto predefinito (impostazioni cultura correnti, impostazione di contrasto elevato corrente e così via) all'interno di questo ambito.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> costruttore per creare un'istanza di un <xref:System.Resources.ResourceManager> oggetto. È costituito da risorse compilate dal file con estensione txt per l'inglese (en), francesi (Francia) fr-FR () e russe (Russia) (ru-RU) le impostazioni cultura. Nell'esempio viene modificato le impostazioni cultura correnti e impostazioni cultura correnti dell'interfaccia utente per inglese (Stati Uniti), francesi (Francia), russe (Russia) e svedese (Svezia). Chiama quindi il <xref:System.Resources.ResourceManager.GetString%28System.String%29> metodo per recuperare la stringa localizzata, che visualizza un messaggio di saluto che dipende da ora del giorno.  
  
 L'esempio richiede tre file di risorse basate su testo, come indicato nella tabella seguente. Ogni file include risorse stringa denominate `Morning`, `Afternoon`, e `Evening`.  
  
|culture|Nome file|Nome della risorsa|Valore della risorsa|  
|-------------|---------------|-------------------|--------------------|  
|it-IT|GreetingResources.txt|`Morning`|Buongiorno|  
|it-IT|GreetingResources.txt|`Afternoon`|Buon pomeriggio|  
|it-IT|GreetingResources.txt|`Evening`|Buona sera|  
|fr-FR|GreetingResources.fr-FR.txt|`Morning`|Bonjour|  
|fr-FR|GreetingResources.fr-FR.txt|`Afternoon`|Bonjour|  
|fr-FR|GreetingResources.fr-FR.txt|`Evening`|Bonsoir|  
|ru-RU|GreetingResources.ru-RU.txt|`Morning`|Доброе утро|  
|ru-RU|GreetingResources.ru-RU.txt|`Afternoon`|Добрый день|  
|ru-RU|GreetingResources.ru-RU.txt|`Evening`|Добрый вечер|  
  
 È possibile utilizzare il seguente file batch per compilare l'esempio di Visual Basic e creare un file eseguibile denominato Greet.exe. Per compilare con c#, modificare il nome del compilatore da `vbc` al `csc` e l'estensione di file da `.vb` a `.cs`.  
  
```  
  
resgen GreetingResources.txt  
vbc Greet.vb /resource: GreetingResources.resources  
  
md fr-FR  
resgen GreetingResources.fr-FR.txt  
al /out:fr-FR\Greet.resources.dll /culture:fr-FR /embed: GreetingResources.fr-FR.resources   
  
md ru-RU  
resgen GreetingResources.ru-RU.txt  
al /out:ru-RU\Greet.resources.dll /culture:ru-RU /embed: GreetingResources.ru-RU.resources  
  
```  
  
 Ecco il codice sorgente per l'esempio (ShowDate.vb per la versione Visual Basic) o ShowDate.cs per la versione c# del codice.  
  
 [!code-csharp[System.Resources.ResourceManager.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/greet.cs#3)]
 [!code-vb[System.Resources.ResourceManager.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/vb/greet.vb#3)]  
  
 Oltre a definire una classe app denominata `Example`, il codice sorgente definisce una classe interna, il cui nome `GreetingResources`, corrisponde al nome di base del file di risorse. Questo rende possibile creare un'istanza di correttamente una <xref:System.Resources.ResourceManager> chiamando il <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> costruttore.  
  
 Si noti che l'output visualizza localizzate appropriate in formato stringa tranne quando le impostazioni cultura correnti dell'interfaccia utente sono svedese (Svezia), nel qual caso si usa risorse di lingua inglese. Poiché le risorse di lingua svedese sono disponibili, l'app Usa le risorse le impostazioni cultura predefinite, come definito dal <xref:System.Resources.NeutralResourcesLanguageAttribute> , attributo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="resourceSource" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (string baseName, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseName, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(System::String ^ baseName, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : string * System.Reflection.Assembly -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager (baseName, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="baseName">Il nome radice del file di risorse senza l'estensione, ma con un nome completo dello spazio dei nomi. Il nome radice per il file di risorse denominato "MyApplication.MyResource.en-US.resources" è ad esempio "MyApplication.MyResource".</param>
        <param name="assembly">Assembly principale per le risorse.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResourceManager" /> che ricerca le risorse contenute nei file con il nome radice specificato nell'assembly fornito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>App desktop  
 Nelle App desktop, i file di risorse specifiche delle impostazioni cultura singoli devono essere contenuti in assembly satellite e file di risorse di impostazioni cultura predefinite deve essere contenuto nell'assembly principale. Un assembly satellite si presuppone che contenga le risorse per singole impostazioni cultura specificati nel manifesto dell'assembly e viene caricato in base alle esigenze.  
  
> [!NOTE]
>  Per recuperare le risorse dai file con estensione resources direttamente anziché recuperandoli dall'assembly, è necessario chiamare il <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> metodo invece creare un'istanza di un <xref:System.Resources.ResourceManager> oggetto.  
  
 Se il file di risorse identificato da `baseName` non è stata trovata nel `assembly`, il metodo crea un'istanza di un <xref:System.Resources.ResourceManager> oggetto, ma il tentativo di recuperare una risorsa specifica genera un'eccezione, in genere <xref:System.Resources.MissingManifestResourceException>. Per informazioni su come diagnosticare la causa dell'eccezione, vedere la sezione "Gestione di MissingManifestResourceException (eccezione)" del <xref:System.Resources.ResourceManager> argomento relativo alla classe.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>Applicazioni [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Anche se il <xref:System.Resources.ResourceManager> classe è supportata in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, si sconsiglia l'uso. Utilizzare questa classe solo quando si sviluppano [!INCLUDE[net_portable](~/includes/net-portable-md.md)] i progetti che possono essere usati con [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app. Per recuperare le risorse dal [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, usare il [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) classe.  
  
 Nelle [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, resource manager Usa il nome semplice del `assembly` parametro per cercare una corrispondenza risorsa impostato nel file di indice (PRI) risorse dell'app. Il `baseName` parametro viene usato per cercare un elemento di risorsa all'interno del set di risorse. Ad esempio, il nome radice per PortableLibrary1.Resource1.de-. Resources è PortableLibrary1.Resource1.  
  
   
  
## Examples  
 L'esempio seguente usa una semplice app "Hello World" localizzato per illustrare il <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> costruttore. Di seguito viene illustrato il contenuto di un file di testo denominato ExampleResources. Quando viene compilata l'app, la risorsa è incorporata nell'assembly dell'app principale.  
  
```  
Greeting=Hello  
```  
  
 Il file di testo può essere convertito in un file di risorse binario con i con il comando richiesto nel modo seguente:  
  
```  
resgen ExampleResources.txt  
```  
  
 Nell'esempio seguente fornisce il codice eseguibile che crea un'istanza di un <xref:System.Resources.ResourceManager> chiede all'utente di immettere un nome di oggetto e viene visualizzato un messaggio di saluto.  
  
 [!code-csharp[System.Resources.ResourceManager.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/example.cs#1)]
 [!code-vb[System.Resources.ResourceManager.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/vb/example.vb#1)]  
  
 Può essere compilato usando il comando seguente in Visual Basic:  
  
```  
vbc Example.vb /resource:ExampleResources.resources  
```  
  
 In alternativa, con il seguente comando nel linguaggio c#:  
  
```  
csc Example.cs /resource:ExampleResources.resources  
```  
  
 Si noti che l'esempio recupera un riferimento all'assembly che contiene il file di risorse mediante il passaggio di un tipo definito in tale assembly per il `typeof` funzione (in c#) o `GetType` funzione (in Visual Basic) e il recupero del valore del relativo <xref:System.Type.Assembly%2A?displayProperty=nameWithType>proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="baseName" /> o il parametro <paramref name="assembly" /> è <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Questo costruttore utilizza fornito dal sistema <see cref="T:System.Resources.ResourceSet" /> implementazione. Per usare un formato di file di risorse personalizzato, è necessario derivare il <see cref="T:System.Resources.ResourceSet" /> classe, eseguire l'override di <see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> e <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> metodi e passare il tipo del <see cref="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" /> costruttore. Usando un oggetto personalizzato <see cref="T:System.Resources.ResourceSet" /> può essere utile per il controllo risorsa criteri di memorizzazione nella cache o che supportano il proprio formato di file di risorse, ma in genere non è necessario.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (string baseName, System.Reflection.Assembly assembly, Type usingResourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseName, class System.Reflection.Assembly assembly, class System.Type usingResourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(System::String ^ baseName, System::Reflection::Assembly ^ assembly, Type ^ usingResourceSet);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : string * System.Reflection.Assembly * Type -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager (baseName, assembly, usingResourceSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="usingResourceSet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseName">Il nome radice del file di risorse senza l'estensione, ma con un nome completo dello spazio dei nomi. Il nome radice per il file di risorse denominato "MyApplication.MyResource.en-US.resources" è ad esempio "MyApplication.MyResource".</param>
        <param name="assembly">Assembly principale per le risorse.</param>
        <param name="usingResourceSet">Tipo dell'oggetto <see cref="T:System.Resources.ResourceSet" /> personalizzato da usare. Se è <see langword="null" />, viene usato l'oggetto <see cref="T:System.Resources.ResourceSet" /> di runtime predefinito.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Resources.ResourceManager" /> che usa una classe <see cref="T:System.Resources.ResourceSet" /> specificata per cercare le risorse contenute nei file con il nome radice specificato nell'assembly fornito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I file di risorse specifiche delle impostazioni cultura singoli devono essere contenuti in assembly satellite e file di risorse di impostazioni cultura predefinite deve essere contenuto nell'assembly principale. Un assembly satellite si presuppone che contenga le risorse per singole impostazioni cultura specificati nel manifesto dell'assembly e viene caricato in base alle esigenze.  
  
> [!NOTE]
>  Per recuperare le risorse dai file con estensione resources direttamente anziché recuperandoli dall'assembly, è necessario chiamare il <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> metodo invece creare un'istanza di un <xref:System.Resources.ResourceManager> oggetto.  
  
 Se il file di risorse identificato da `baseName` non è stata trovata nel `assembly`, il metodo crea un'istanza di un <xref:System.Resources.ResourceManager> oggetto, ma il tentativo di recuperare una risorsa specifica genera un'eccezione, in genere <xref:System.Resources.MissingManifestResourceException>. Per informazioni su come diagnosticare la causa dell'eccezione, vedere la sezione "Gestione di MissingManifestResourceException (eccezione)" del <xref:System.Resources.ResourceManager> argomento relativo alla classe.  
  
> [!NOTE]
>  Il `usingResourceSet` parametro viene usato per supportare il proprio formato di risorsa e generalmente è `null`. Questo comportamento è diverso dal costruttore che accetta un <xref:System.Type> solo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usingResourceset" /> non è una classe derivata di <see cref="T:System.Resources.ResourceSet" />.</exception>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="baseName" /> o il parametro <paramref name="assembly" /> è <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>Questo costruttore consente di specificare un <see cref="T:System.Resources.ResourceSet" /> implementazione. Se non si desidera uno specifico <see cref="T:System.Resources.ResourceSet" /> implementazione ma si desidera utilizzare un formato di file di risorse personalizzato, è necessario derivare il <see cref="T:System.Resources.ResourceSet" /> classe, eseguire l'override la <see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> e <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> metodi e passare il tipo per questo costruttore.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseName">
      <MemberSignature Language="C#" Value="public virtual string BaseName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseName" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.BaseName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseName : string" Usage="System.Resources.ResourceManager.BaseName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome radice dei file di risorse in cui l'oggetto <see cref="T:System.Resources.ResourceManager" /> ricerca le risorse.</summary>
        <value>Nome radice dei file di risorse in cui l'oggetto <see cref="T:System.Resources.ResourceManager" /> ricerca le risorse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResourceManager.BaseName%2A> proprietà riflette il nome completo dello spazio dei nomi e il nome di risorsa radice di un file di risorse, senza l'estensione del nome file o delle impostazioni cultura. Ad esempio, se il file di risorse predefinito di un'app è denominato `SampleApps.StringResources.resources`, il valore della <xref:System.Resources.ResourceManager.BaseName%2A> proprietà è "SampleApps.StringResources". Se il file di risorse predefinito di un'app è denominato `SampleApps.StringResources.en-US.resources` incorporata in un assembly satellite, il valore della <xref:System.Resources.ResourceManager.BaseName%2A> proprietà è ancora "SampleApps.StringResources".  
  
> [!IMPORTANT]
>  Il <xref:System.Resources.ResourceManager.BaseName%2A> valore della proprietà di un file di risorse che viene compilato ed embedded dalla riga di comando non include uno spazio dei nomi a meno che non si include in modo esplicito uno quando si compila il file. D'altra parte, il <xref:System.Resources.ResourceManager.BaseName%2A> valore della proprietà di un file di risorse che viene compilato e connessioni incorporato all'interno dell'ambiente di Visual Studio in genere includono il nome dello spazio dei nomi predefinito.  
  
 Il <xref:System.Resources.ResourceManager.BaseName%2A> valore della proprietà è lo stesso come la stringa passata al <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> oppure <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29> costruttore quando si crea un <xref:System.Resources.ResourceManager> istanza.  
  
   
  
## Examples  
 È possibile determinare i nomi dei file con estensione resources incorporato compilando ed eseguendo l'utilità seguente. Si tratta di un'app console che accetta il nome di un assembly principale o un assembly satellite come parametro della riga di comando. Visualizza le stringhe che devono essere fornite come le `baseName` parametro del <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> o <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29> costruttore in modo che resource manager possa identificare correttamente la risorsa.  
  
 [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
 [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseNameField">
      <MemberSignature Language="C#" Value="protected string BaseNameField;" />
      <MemberSignature Language="ILAsm" Value=".field family string BaseNameField" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.BaseNameField" />
      <MemberSignature Language="VB.NET" Value="Protected BaseNameField As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ BaseNameField;" />
      <MemberSignature Language="F#" Value="val mutable BaseNameField : string" Usage="System.Resources.ResourceManager.BaseNameField" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica il nome radice dei file di risorse in cui l'oggetto <see cref="T:System.Resources.ResourceManager" /> cerca le risorse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResourceManager.BaseNameField> campo è utile solo se si scrive una classe che deriva dal <xref:System.Resources.ResourceManager> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFileBasedResourceManager">
      <MemberSignature Language="C#" Value="public static System.Resources.ResourceManager CreateFileBasedResourceManager (string baseName, string resourceDir, Type usingResourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResourceManager CreateFileBasedResourceManager(string baseName, string resourceDir, class System.Type usingResourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFileBasedResourceManager (baseName As String, resourceDir As String, usingResourceSet As Type) As ResourceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResourceManager ^ CreateFileBasedResourceManager(System::String ^ baseName, System::String ^ resourceDir, Type ^ usingResourceSet);" />
      <MemberSignature Language="F#" Value="static member CreateFileBasedResourceManager : string * string * Type -&gt; System.Resources.ResourceManager" Usage="System.Resources.ResourceManager.CreateFileBasedResourceManager (baseName, resourceDir, usingResourceSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="resourceDir" Type="System.String" />
        <Parameter Name="usingResourceSet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseName">Nome radice delle risorse. Il nome radice per il file di risorse denominato "MyResource.en-US.resources" è ad esempio "MyResource".</param>
        <param name="resourceDir">Nome della directory nella quale ricercare le risorse. <paramref name="resourceDir" /> può essere un percorso assoluto o relativo dalla directory dell'applicazione.</param>
        <param name="usingResourceSet">Tipo dell'oggetto <see cref="T:System.Resources.ResourceSet" /> personalizzato da usare. Se è <see langword="null" />, viene usato l'oggetto <see cref="T:System.Resources.ResourceSet" /> di runtime predefinito.</param>
        <summary>Restituisce un oggetto <see cref="T:System.Resources.ResourceManager" /> che ricerca le risorse in una directory specifica invece che nel manifesto dell'assembly per le risorse.</summary>
        <returns>Nuova istanza di un gestore delle risorse che cerca le risorse nella directory specificata anziché nel manifesto dell'assembly.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo restituisce un gestore di risorse che consente di recuperare le risorse da un file con estensione resources non viene incorporato in un assembly. È possibile usare questo <xref:System.Resources.ResourceManager> oggetto per caricare le risorse per una pagina ASP.NET o per testare un <xref:System.Resources.ResourceSet> implementazione.  Per un esempio che recupera le risorse da un file. resources autonomi, vedere la [recupero di risorse](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md) articolo.  
  
 Questo metodo consente di specificare un <xref:System.Resources.ResourceSet> implementazione. Se non si desidera uno specifico <xref:System.Resources.ResourceSet> implementazione, ma si desidera utilizzare un formato di file di risorse personalizzato, è necessario derivare il <xref:System.Resources.ResourceSet> classe, eseguire l'override la <xref:System.Resources.ResourceSet.GetDefaultReader%2A> e <xref:System.Resources.ResourceSet.GetDefaultWriter%2A> metodi e passare il tipo per questo costruttore.  
  
> [!CAUTION]
>  Utilizzo di file. resources autonomi in un'app ASP.NET interrompe la distribuzione XCOPY, perché le risorse di rimangano bloccate fino a quando non vengono rilasciati in modo esplicito dal <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> (metodo). Se si desidera distribuire le risorse con le applicazioni ASP.NET, compilare i file con estensione resources in assembly satellite.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="baseName" /> o il parametro <paramref name="resourceDir" /> è <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="FallbackLocation">
      <MemberSignature Language="C#" Value="protected System.Resources.UltimateResourceFallbackLocation FallbackLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Resources.UltimateResourceFallbackLocation FallbackLocation" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.FallbackLocation" />
      <MemberSignature Language="VB.NET" Value="Protected Property FallbackLocation As UltimateResourceFallbackLocation" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Resources::UltimateResourceFallbackLocation FallbackLocation { System::Resources::UltimateResourceFallbackLocation get(); void set(System::Resources::UltimateResourceFallbackLocation value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackLocation : System.Resources.UltimateResourceFallbackLocation with get, set" Usage="System.Resources.ResourceManager.FallbackLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.UltimateResourceFallbackLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il percorso da cui recuperare le risorse di fallback predefinite.</summary>
        <value>Uno dei valori di enumerazione che specifica dove il gestore delle risorse può cercare le risorse di fallback.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResourceManager.FallbackLocation%2A> è utile solo se si scrive una classe che deriva dalla proprietà di <xref:System.Resources.ResourceManager> classe.  
  
 È possibile usare il <xref:System.Resources.NeutralResourcesLanguageAttribute> attributo per informare il gestore di risorse dove trovare le impostazioni cultura predefinite per un'app: nell'assembly principale (predefinita) o in un assembly satellite.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Resources.UltimateResourceFallbackLocation" />
        <altmember cref="T:System.Resources.NeutralResourcesLanguageAttribute" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Creazione del pacchetto e distribuzione delle risorse</related>
      </Docs>
    </Member>
    <Member MemberName="GetNeutralResourcesLanguage">
      <MemberSignature Language="C#" Value="protected static System.Globalization.CultureInfo GetNeutralResourcesLanguage (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Globalization.CultureInfo GetNeutralResourcesLanguage(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetNeutralResourcesLanguage (a As Assembly) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Globalization::CultureInfo ^ GetNeutralResourcesLanguage(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="static member GetNeutralResourcesLanguage : System.Reflection.Assembly -&gt; System.Globalization.CultureInfo" Usage="System.Resources.ResourceManager.GetNeutralResourcesLanguage a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">L'assembly per il quale restituire le informazioni specifiche delle impostazioni cultura.</param>
        <summary>Restituisce le informazioni specifiche delle impostazioni cultura per le risorse predefinite dell'assembly principale mediante il recupero del valore dell'attributo <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> su un assembly specificato.</summary>
        <returns>Impostazioni cultura dall'attributo <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" />, se presenti; in caso contrario, la lingua inglese.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce il valore della risorsa non di tipo stringa specificata per le impostazioni cultura correnti.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string -&gt; obj&#xA;override this.GetObject : string -&gt; obj" Usage="resourceManager.GetObject name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome della risorsa da ottenere.</param>
        <summary>Restituisce il valore della risorsa non di tipo stringa specificata.</summary>
        <returns>Valore della risorsa localizzata per le impostazioni cultura correnti del chiamante. Se un set di risorse appropriato esiste ma non è possibile trovare l'elemento <paramref name="name" />, il metodo restituisce <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResourceManager.GetObject%2A> metodo viene utilizzato per recuperare le risorse non di tipo stringa. Sono inclusi i valori che appartengono a tipi di dati primitivi, ad esempio <xref:System.Int32> o <xref:System.Double>, bitmap (ad esempio un <xref:System.Drawing.Bitmap?displayProperty=nameWithType> oggetto), o oggetti serializzati personalizzato. In genere, l'oggetto restituito deve essere eseguito il cast (in c#) o convertire (in Visual Basic) a un oggetto del tipo appropriato.  
  
 Viene localizzata la risorsa restituita per le impostazioni cultura dell'interfaccia utente del thread corrente, che viene definito per il <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà. Se la risorsa non è localizzata per le impostazioni cultura, il gestore di risorse utilizza le regole di fallback per caricare una risorsa appropriata. Se non viene trovato alcun set di risorse localizzate utilizzabili, il <xref:System.Resources.ResourceManager> esegue il fallback risorse della lingua predefinita. Se non viene trovata una set di risorse per le impostazioni cultura predefinite, il metodo genera un <xref:System.Resources.MissingManifestResourceException> eccezione o, se si prevede che il set di risorse possono risiedere in un assembly satellite, una <xref:System.Resources.MissingSatelliteAssemblyException> eccezione. Se il gestore di risorse è possibile caricare una risorsa appropriata impostata ma non è possibile trovare una risorsa denominata `name`, il metodo restituisce `null`.  
  
 Il <xref:System.Resources.ResourceManager.IgnoreCase%2A> proprietà determina se il confronto di `name` con i nomi delle risorse è tra maiuscole e minuscole (predefinito) o tra maiuscole e minuscole.  
  
> [!CAUTION]
>  Questo metodo può generare più eccezioni rispetto a quelle elencate. Questa situazione può verificarsi uno dei motivi è se un metodo che chiama questo metodo genera un'eccezione.  Ad esempio, un <xref:System.IO.FileLoadException> eccezione potrebbe essere generata se un errore durante la distribuzione o installazione di un assembly satellite, oppure un <xref:System.Runtime.Serialization.SerializationException> eccezione potrebbe essere generata se un tipo definito dall'utente genera un'eccezione definita dall'utente quando il tipo viene deserializzato.  
  
## <a name="performance-considerations"></a>Considerazioni sulle prestazioni  
 Se si chiama il <xref:System.Resources.ResourceManager.GetObject%2A> più volte con lo stesso metodo `name` parametro, non basarsi sul metodo che restituisce un riferimento allo stesso oggetto con ogni chiamata. Infatti il <xref:System.Resources.ResourceManager.GetObject%2A> metodo può restituire un riferimento a un oggetto risorsa esistente in una cache, o può ricaricare la risorsa e restituire un riferimento a un nuovo oggetto risorsa.  
  
   
  
## Examples  
 Nell'esempio seguente viene usato il metodo <xref:System.Resources.ResourceManager.GetObject%28System.String%29> per deserializzare un oggetto personalizzato. L'esempio include un file di codice sorgente denominato UIElements.cs (UIElements. Se si usa Visual Basic) che definisce la seguente struttura denominata `PersonTable`. Questa struttura deve essere usata da una procedura generale di visualizzazione della tabella che mostra i nomi localizzati delle colonne della tabella. Si noti che la struttura `PersonTable` è contrassegnata con l'attributo <xref:System.SerializableAttribute> .  
  
 [!code-csharp[Conceptual.Resources.Retrieving#6](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example.cs#6)]
 [!code-vb[Conceptual.Resources.Retrieving#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example.vb#6)]  
  
 Il codice seguente, proveniente da un file denominato CreateResources.cs (CreateResources.vb per Visual Basic), crea un file di risorse XML denominato UIResources.resx che memorizza un titolo di tabella e un oggetto `PersonTable` contenente le informazioni per un'app che viene localizzata per la lingua inglese.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#7](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example1.cs#7)]
 [!code-vb[Conceptual.Resources.Retrieving#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example.vb#7)]  
  
 Il codice seguente, contenuto in un file di codice sorgente denominato GetObject.cs (GetObject.vb), recupera quindi le risorse e le visualizza nella console.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#8](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example2.cs#8)]
 [!code-vb[Conceptual.Resources.Retrieving#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example2.vb#8)]  
  
 È possibile creare il file di risorse e gli assembly necessari ed eseguire l'app mediante il file batch seguente. È necessario usare l'opzione `/r` per fornire a Resgen.exe un riferimento a UIElements.dll in modo che possa accedere alle informazioni sulla struttura `PersonTable` . Se si usa C#, sostituire il nome del compilatore `vbc` con `csc`e l'estensione `.vb` con `.cs`.  
  
```  
  
vbc /t:library UIElements.vb  
vbc CreateResources.vb /r:UIElements.dll  
CreateResources  
  
resgen UIResources.resx  /r:UIElements.dll  
vbc GetObject.vb /r:UIElements.dll /resource:UIResources.resources  
  
GetObject.exe  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Non sono stati individuati set di risorse localizzati e non esistono risorse delle impostazioni cultura predefinite. Per informazioni su come gestire questa eccezione, vedere la sezione sulla gestione di MissingSatelliteAssemblyException e MissingManifestResourceException nell'argomento relativo alla classe <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Le risorse delle impostazioni cultura predefinite si trovano in un assembly satellite che non è stato trovato. Per informazioni su come gestire questa eccezione, vedere la sezione sulla gestione di MissingSatelliteAssemblyException e MissingManifestResourceException nell'argomento relativo alla classe <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="M:System.Resources.ResourceManager.GetStream(System.String)" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Creazione del pacchetto e distribuzione delle risorse</related>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string * System.Globalization.CultureInfo -&gt; obj&#xA;override this.GetObject : string * System.Globalization.CultureInfo -&gt; obj" Usage="resourceManager.GetObject (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name">Nome della risorsa da ottenere.</param>
        <param name="culture">Impostazioni cultura in base alle quali viene localizzata la risorsa. Se la risorsa non è localizzata per queste impostazioni cultura, il gestore delle risorse userà le regole di fallback per individuare una risorsa appropriata.  
  
Se questo valore è <see langword="null" />, viene ottenuto l'oggetto <see cref="T:System.Globalization.CultureInfo" /> usando la proprietà <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />.</param>
        <summary>Ottiene il valore della risorsa non di tipo stringa specificata localizzata per le impostazioni cultura specificate.</summary>
        <returns>Valore della risorsa, localizzata per le impostazioni cultura specificate. Se un set di risorse appropriato esiste ma non è possibile trovare l'elemento <paramref name="name" />, il metodo restituisce <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> metodo viene utilizzato per recuperare le risorse non di tipo stringa. Sono inclusi i valori che appartengono a tipi di dati primitivi, ad esempio <xref:System.Int32> o <xref:System.Double>, bitmap (ad esempio un <xref:System.Drawing.Bitmap?displayProperty=nameWithType> oggetto), o oggetti serializzati personalizzato. In genere, l'oggetto restituito deve essere eseguito il cast (in c#) o convertire (in Visual Basic) a un oggetto del tipo appropriato.  
  
 Viene localizzata la risorsa restituita per le impostazioni cultura specificato da `culture`, o per le impostazioni cultura specificato dal <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà se `culture` è `null`. Se la risorsa non è localizzata per le impostazioni cultura, il gestore di risorse utilizza le regole di fallback per caricare una risorsa appropriata. Se non viene trovato alcun set di risorse localizzate utilizzabili, risorse della lingua predefinita esegue il fallback di resource manager. Se non viene trovata una set di risorse per le impostazioni cultura predefinite, il metodo genera un <xref:System.Resources.MissingManifestResourceException> eccezione o, se si prevede che il set di risorse possono risiedere in un assembly satellite, una <xref:System.Resources.MissingSatelliteAssemblyException> eccezione. Se il gestore di risorse è possibile caricare una risorsa appropriata impostata ma non è possibile trovare una risorsa denominata `name`, il metodo restituisce `null`.  
  
 Il <xref:System.Resources.ResourceManager.IgnoreCase%2A> proprietà determina se il confronto di `name` con i nomi delle risorse è tra maiuscole e minuscole (predefinito) o tra maiuscole e minuscole.  
  
> [!CAUTION]
>  Questo metodo può generare più eccezioni rispetto a quelle elencate. Questa situazione può verificarsi uno dei motivi è se un metodo che chiama questo metodo genera un'eccezione.  Ad esempio, un <xref:System.IO.FileLoadException> eccezione potrebbe essere generata se un errore durante la distribuzione o installazione di un assembly satellite, oppure un <xref:System.Runtime.Serialization.SerializationException> eccezione potrebbe essere generata se un tipo definito dall'utente genera un'eccezione definita dall'utente quando il tipo viene deserializzato.  
  
## <a name="performance-considerations"></a>Considerazioni sulle prestazioni  
 Se si chiama il <xref:System.Resources.ResourceManager.GetObject%2A> più volte con lo stesso metodo `name` parametro, non basarsi sul metodo che restituisce un riferimento allo stesso oggetto con ogni chiamata. Infatti il <xref:System.Resources.ResourceManager.GetObject%2A> metodo può restituire un riferimento a un oggetto risorsa esistente in una cache, o può ricaricare la risorsa e restituire un riferimento a un nuovo oggetto risorsa.  
  
   
  
## Examples  
 Nell'esempio seguente viene usato il metodo <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> per deserializzare un oggetto personalizzato. L'esempio include un file di codice sorgente denominato NumberInfo.cs (NumberInfo.vb se si usa Visual Basic) che definisce la seguente struttura denominata `Numbers`. Questa struttura è destinata a essere utilizzato da una semplice app didattico che si intende insegnare lingua diversa dall'inglese pronuncia per il conteggio su dieci in lingua inglese. Si noti che il `Numbers` classe è contrassegnata con il <xref:System.SerializableAttribute> attributo.  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/numberinfo.cs#1)]
 [!code-vb[System.Resources.ResourceManager.GetObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/numberinfo.vb#1)]  
  
 Il seguente codice sorgente da un file denominato CreateResources.cs (CreateResources. vb per Visual Basic) Crea file di risorse XML per la lingua inglese predefinito, oltre che per le lingue francese, portoghese e russo.  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/createresources.cs#2)]
 [!code-vb[System.Resources.ResourceManager.GetObject#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/createresources.vb#2)]  
  
 Le risorse vengono usate dall'app seguenti, che imposta le impostazioni cultura dell'interfaccia utente correnti su francese (Francia), portoghese (Brasile) e russe (Russia). Chiama il <xref:System.Resources.ResourceManager.GetObject%28System.String%29> metodo per ottenere un `Numbers` oggetto che contiene numeri localizzati e il <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> metodo per ottenere un `Numbers` oggetto contenente i numeri in lingua inglese. Quindi Visualizza i numeri dispari usando le impostazioni cultura correnti dell'interfaccia utente e la lingua inglese. File del codice sorgente è denominato ShowNumbers.cs (ShowNumbers.vb).  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/shownumbers.cs#3)]
 [!code-vb[System.Resources.ResourceManager.GetObject#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/shownumbers.vb#3)]  
  
 È possibile utilizzare il seguente file batch per compilare ed eseguire la versione di Visual Basic dell'esempio. Se si usa c#, sostituire `vbc` con `csc`e sostituire il `.vb` estensione con `.cs`.  
  
```  
  
vbc /t:library NumberInfo.vb  
  
vbc CreateResources.vb /r:NumberInfo.dll  
CreateResources  
  
resgen NumberResources.resx /r:NumberInfo.dll  
  
resgen NumberResources.fr.resx /r:Numberinfo.dll  
Md fr  
al /embed:NumberResources.fr.resources /culture:fr /t:lib /out:fr\ShowNumbers.resources.dll  
  
resgen NumberResources.pt.resx  /r:Numberinfo.dll  
Md pt  
al /embed:NumberResources.pt.resources /culture:pt /t:lib /out:pt\ShowNumbers.resources.dll  
  
resgen NumberResources.ru.resx /r:Numberinfo.dll  
Md ru  
al /embed:NumberResources.ru.resources /culture:ru /t:lib /out:ru\ShowNumbers.resources.dll  
  
vbc ShowNumbers.vb /r:NumberInfo.dll /resource:NumberResources.resources  
ShowNumbers.exe  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Non sono stati individuati set di risorse utilizzabili e non esistono risorse delle impostazioni cultura predefinite. Per informazioni su come gestire questa eccezione, vedere la sezione sulla gestione di MissingSatelliteAssemblyException e MissingManifestResourceException nell'argomento relativo alla classe <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Le risorse delle impostazioni cultura predefinite si trovano in un assembly satellite che non è stato trovato. Per informazioni su come gestire questa eccezione, vedere la sezione sulla gestione di MissingSatelliteAssemblyException e MissingManifestResourceException nell'argomento relativo alla classe <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <threadsafe>Il <see cref="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" /> metodo è thread-safe.</threadsafe>
        <altmember cref="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Creazione del pacchetto e distribuzione delle risorse</related>
      </Docs>
    </Member>
    <Member MemberName="GetResourceFileName">
      <MemberSignature Language="C#" Value="protected virtual string GetResourceFileName (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetResourceFileName(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResourceFileName (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetResourceFileName(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetResourceFileName : System.Globalization.CultureInfo -&gt; string&#xA;override this.GetResourceFileName : System.Globalization.CultureInfo -&gt; string" Usage="resourceManager.GetResourceFileName culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">Oggetto Impostazioni cultura per il quale viene costruito un nome di file di risorse.</param>
        <summary>Genera il nome del file di risorse per l'oggetto <see cref="T:System.Globalization.CultureInfo" /> specificato.</summary>
        <returns>Nome che può essere usato per un file di risorse dell'oggetto <see cref="T:System.Globalization.CultureInfo" /> dato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResourceManager.GetResourceFileName%2A> metodo è utile solo se si scrive una classe che deriva dal <xref:System.Resources.ResourceManager> classe.  
  
 Questo metodo Usa il <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> proprietà come parte del nome del file per tutte le impostazioni cultura diverse dalla lingua inglese. Questo metodo non ha l'aspetto nel manifesto dell'assembly o touch il disco e viene utilizzato solo per costruire un nome di file di risorse (adatta per il passaggio dai <xref:System.Resources.ResourceReader> costruttore) o un nome di blob di risorsa di manifesto.  
  
 Una classe derivata può eseguire l'override di questo metodo per cercare un'estensione diversa, ad esempio ". File ResX", o uno schema di completamente diverso per la denominazione dei file di risorse. Si noti che il metodo può essere utilizzato per personalizzare il nome di un file di risorse all'interno di un assembly satellite e non per personalizzare il nome dell'assembly satellite.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/index.md">Globalizzazione e localizzazione di applicazioni .NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetResourceSet">
      <MemberSignature Language="C#" Value="public virtual System.Resources.ResourceSet GetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Resources.ResourceSet GetResourceSet(class System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceSet (culture As CultureInfo, createIfNotExists As Boolean, tryParents As Boolean) As ResourceSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Resources::ResourceSet ^ GetResourceSet(System::Globalization::CultureInfo ^ culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="F#" Value="abstract member GetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet&#xA;override this.GetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet" Usage="resourceManager.GetResourceSet (culture, createIfNotExists, tryParents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="createIfNotExists" Type="System.Boolean" />
        <Parameter Name="tryParents" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="culture">Impostazioni cultura di cui devono essere recuperate le risorse.</param>
        <param name="createIfNotExists">
          <see langword="true" /> per caricare il set di risorse, se non è stato ancora caricato, in caso contrario <see langword="false" />.</param>
        <param name="tryParents">
          <see langword="true" /> per usare il fallback delle risorse per caricare una risorsa appropriata se il set di risorse non è disponibile, <see langword="false" /> per ignorare il processo di fallback delle risorse.</param>
        <summary>Recupera il set di risorse per impostazioni cultura specifiche.</summary>
        <returns>Set di risorse per le impostazioni cultura specificate.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il set di risorse che viene restituito rappresenta le risorse localizzate per le impostazioni cultura specificate. Se le risorse non sono state localizzate per le impostazioni cultura e `tryParents` viene `true`, <xref:System.Resources.ResourceManager.GetResourceSet%2A> utilizza le regole di fallback di risorse per caricare una risorsa appropriata. Se `tryParents` viene `false` e non viene trovato un set di risorse specifiche delle impostazioni cultura, il metodo restituisce `null`. Per altre informazioni sulle fallback delle risorse, vedere la sezione "Il processo di Fallback risorsa" nel [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) articolo.  
  
   
  
## Examples  
 L'esempio seguente chiama il <xref:System.Resources.ResourceManager.GetResourceSet%2A> metodo per recuperare le risorse specifiche delle impostazioni cultura per le impostazioni cultura francese (Francia). Quindi enumera tutte le risorse nel set di risorse. Contiene il codice sorgente per un eseguibile denominato ShowNumbers.exe. Contiene inoltre il file di due testo seguenti che contengono i nomi dei numeri. Il primo, NumberResources.txt, contiene i nomi dei numeri compresi tra uno e dieci in lingua inglese:  
  
```  
  
one=one  
two=two  
three=three  
four=four  
five=five  
six=six  
seven=seven  
eight=eight  
nine=nine  
ten=ten  
  
```  
  
 Il secondo, NumberResources.fr-FR. txt, contiene i nomi dei numeri da uno a quattro in lingua francese:  
  
```  
  
one=un  
two=deux  
three=trois  
four=quatre  
  
```  
  
 È possibile utilizzare un file batch per generare i file di risorse, incorporare il file di risorse di lingua inglese nel file eseguibile e creare un assembly satellite per le risorse di lingua francese. Ecco il file batch per generare un file eseguibile tramite il compilatore Visual Basic:  
  
```  
  
resgen NumberResources.txt  
vbc shownumbers.vb /resource:NumberResources.resources  
  
md fr-FR  
resgen NumberResources.fr-FR.txt  
al /out:fr-FR\ShowNumbers.resources.dll /culture:fr-FR /embed:NumberResources.fr-FR.resources  
```  
  
 Per il compilatore c#, è possibile usare il seguente file batch:  
  
```  
  
resgen NumberResources.txt  
csc shownumbers.cs /resource:NumberResources.resources  
  
md fr-FR  
resgen NumberResources.fr-FR.txt  
al /out:fr-FR\ShowNumbers.resources.dll /culture:fr-FR /embed:NumberResources.fr-FR.resources  
  
```  
  
 [!code-csharp[System.Resources.ResourceManager.GetResourceSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getresourceset/cs/shownumbers.cs#1)]
 [!code-vb[System.Resources.ResourceManager.GetResourceSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getresourceset/vb/shownumbers.vb#1)]  
  
 Si noti che se si modifica il valore della `createIfNotExists` argomento per `false`, la chiamata al metodo restituisce `null`, dal momento che Resource Manager non è già caricato le risorse di lingua francese.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="culture" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <paramref name="tryParents" /> è <see langword="true" />, non sono stati individuati insiemi di risorse utilizzabili e non esistono risorse delle impostazioni cultura predefinite.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/index.md">Globalizzazione e localizzazione di applicazioni .NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteContractVersion">
      <MemberSignature Language="C#" Value="protected static Version GetSatelliteContractVersion (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Version GetSatelliteContractVersion(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetSatelliteContractVersion (a As Assembly) As Version" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Version ^ GetSatelliteContractVersion(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="static member GetSatelliteContractVersion : System.Reflection.Assembly -&gt; Version" Usage="System.Resources.ResourceManager.GetSatelliteContractVersion a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">Assembly per controllare l'attributo <see cref="T:System.Resources.SatelliteContractVersionAttribute" />.</param>
        <summary>Restituisce la versione specificata dall'attributo <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> nell'assembly specificato.</summary>
        <returns>Versione del contratto satellite dell'assembly dato oppure <see langword="null" /> se non sono state individuate versioni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sul controllo delle versioni di assembly satellite, vedere il <xref:System.Resources.SatelliteContractVersionAttribute> argomento di riferimento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.Version" /> individuato nel parametro <paramref name="a" /> dell'assembly non è valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="a" /> è <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="T:System.Resources.SatelliteContractVersionAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStream">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un oggetto di flusso di memoria non gestito da una risorsa specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.UnmanagedMemoryStream GetStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.UnmanagedMemoryStream GetStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (name As String) As UnmanagedMemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::UnmanagedMemoryStream ^ GetStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetStream : string -&gt; System.IO.UnmanagedMemoryStream" Usage="resourceManager.GetStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.UnmanagedMemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome di una risorsa.</param>
        <summary>Restituisce un oggetto di flusso di memoria non gestito dalla risorsa specificata.</summary>
        <returns>Oggetto non gestito del flusso di memoria che rappresenta una risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResourceManager.GetStream%2A> metodo accetta il nome di una risorsa che viene archiviato come un <xref:System.IO.MemoryStream> dell'oggetto, ottiene il valore della <xref:System.Object> risorsa e restituisce un <xref:System.IO.UnmanagedMemoryStream> oggetto. Richiede che si lavora direttamente con un flusso di byte, che viene convertita in un oggetto. Questo metodo è utile principalmente per motivi di prestazioni: recuperare una risorsa come un flusso di byte anziché un oggetto esplicito può migliorare le prestazioni.  
  
 Viene localizzata la risorsa restituita per le impostazioni cultura dell'interfaccia utente del thread corrente, che viene definito per il <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà. Se la risorsa non è localizzata per le impostazioni cultura, il gestore di risorse utilizza le regole di fallback per caricare una risorsa appropriata. Se non viene trovato alcun set di risorse localizzate utilizzabili, il <xref:System.Resources.ResourceManager> esegue il fallback risorse della lingua predefinita. Se non viene trovata una set di risorse per le impostazioni cultura predefinite, il metodo genera un <xref:System.Resources.MissingManifestResourceException> eccezione o, se si prevede che il set di risorse possono risiedere in un assembly satellite, una <xref:System.Resources.MissingSatelliteAssemblyException> eccezione. Se il gestore di risorse è possibile caricare una risorsa appropriata impostata ma non è possibile trovare una risorsa denominata `name`, il metodo restituisce `null`.  
  
 Il <xref:System.Resources.ResourceManager.IgnoreCase%2A> proprietà determina se il confronto di `name` con i nomi delle risorse è tra maiuscole e minuscole (predefinito) o tra maiuscole e minuscole.  
  
   
  
## Examples  
 Nell'esempio seguente viene usato il metodo <xref:System.Resources.ResourceManager.GetStream%28System.String%29> per recuperare una bitmap visualizzata nella finestra iniziale di apertura di un'app. I seguente codice sorgente da un file denominato CreateResources.cs (per c#) o CreateResources. vb (per Visual Basic) genera un file con estensione resx denominato AppResources.resx che contiene l'immagine serializzata. In questo caso, l'immagine viene caricata da un file denominato SplashScreen.jpg. È possibile modificare il nome per sostituire il file con un'immagine personalizzata.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#4](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/createresources.cs#4)]
 [!code-vb[Conceptual.Resources.Retrieving#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/createresources.vb#4)]  
  
 Nell'esempio di codice da un file denominato GetStream.cs (per c#) o GetStream.vb (per Visual Basic), quindi recupera la risorsa e visualizza l'immagine in un <xref:System.Windows.Forms.PictureBox?displayProperty=nameWithType> controllo.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#5](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/getstream.cs#5)]
 [!code-vb[Conceptual.Resources.Retrieving#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/getstream.vb#5)]  
  
 È possibile usare il file batch seguente per compilare l'esempio in C#. Per Visual Basic, modificare `csc` al `vbc`e modificare l'estensione di file del codice sorgente dal `.cs` a `.vb`...  
  
```  
  
csc CreateResources.cs  
CreateResources  
  
resgen AppResources.resx  
  
csc GetStream.cs /resource:AppResources.resources  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il valore della risorsa specificata non è un oggetto <see cref="T:System.IO.MemoryStream" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Non sono stati individuati set di risorse utilizzabili e non esistono risorse predefinite. Per informazioni su come gestire questa eccezione, vedere la sezione sulla gestione di MissingSatelliteAssemblyException e MissingManifestResourceException nell'argomento relativo alla classe <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Le risorse delle impostazioni cultura predefinite si trovano in un assembly satellite che non è stato trovato. Per informazioni su come gestire questa eccezione, vedere la sezione sulla gestione di MissingSatelliteAssemblyException e MissingManifestResourceException nell'argomento relativo alla classe <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.UnmanagedMemoryStream GetStream (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.UnmanagedMemoryStream GetStream(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (name As String, culture As CultureInfo) As UnmanagedMemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::UnmanagedMemoryStream ^ GetStream(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetStream : string * System.Globalization.CultureInfo -&gt; System.IO.UnmanagedMemoryStream" Usage="resourceManager.GetStream (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.UnmanagedMemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name">Nome di una risorsa.</param>
        <param name="culture">Oggetto che specifica le impostazioni cultura da usare per la ricerca della risorsa. Se <paramref name="culture" /> è <see langword="null" />, verranno usate le impostazioni cultura del thread corrente.</param>
        <summary>Restituisce un oggetto flusso di memoria non gestito dalla risorsa specificata usando le impostazioni cultura specificate.</summary>
        <returns>Oggetto non gestito del flusso di memoria che rappresenta una risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResourceManager.GetStream%2A> metodo accetta il nome di una risorsa che viene archiviato come un <xref:System.IO.MemoryStream> dell'oggetto, ottiene il valore della <xref:System.Object> risorsa e restituisce un <xref:System.IO.UnmanagedMemoryStream> oggetto. Richiede che si lavora direttamente con un flusso di byte, che viene convertita in un oggetto. Questo metodo è utile principalmente per motivi di prestazioni: recuperare una risorsa come un flusso di byte anziché un oggetto esplicito può migliorare le prestazioni.  
  
 Viene localizzata la risorsa restituita per le impostazioni cultura specificato da `culture`, o per le impostazioni cultura specificato dal <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà se `culture` è `null`. Se la risorsa non è localizzata per le impostazioni cultura, il gestore di risorse utilizza le regole di fallback per caricare una risorsa appropriata. Se non viene trovato alcun set di risorse localizzate utilizzabili, il <xref:System.Resources.ResourceManager> esegue il fallback risorse della lingua predefinita. Se non viene trovata una set di risorse per le impostazioni cultura predefinite, il metodo genera un <xref:System.Resources.MissingManifestResourceException> eccezione o, se si prevede che il set di risorse possono risiedere in un assembly satellite, una <xref:System.Resources.MissingSatelliteAssemblyException> eccezione. Se il gestore di risorse è possibile caricare una risorsa appropriata impostata ma non è possibile trovare una risorsa denominata `name`, il metodo restituisce `null`.  
  
 Il <xref:System.Resources.ResourceManager.IgnoreCase%2A> proprietà determina se il confronto di `name` con i nomi delle risorse è tra maiuscole e minuscole (predefinito) o tra maiuscole e minuscole.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il valore della risorsa specificata non è un oggetto <see cref="T:System.IO.MemoryStream" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Non sono stati individuati set di risorse utilizzabili e non esistono risorse predefinite. Per informazioni su come gestire questa eccezione, vedere la sezione sulla gestione di MissingSatelliteAssemblyException e MissingManifestResourceException nell'argomento relativo alla classe <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Le risorse delle impostazioni cultura predefinite si trovano in un assembly satellite che non è stato trovato. Per informazioni su come gestire questa eccezione, vedere la sezione sulla gestione di MissingSatelliteAssemblyException e MissingManifestResourceException nell'argomento relativo alla classe <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce la risorsa di tipo stringa specificata per le impostazioni cultura specificate o per le impostazioni cultura correnti dell'interfaccia utente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string -&gt; string&#xA;override this.GetString : string -&gt; string" Usage="resourceManager.GetString name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome della risorsa da recuperare.</param>
        <summary>Restituisce il valore della risorsa di tipo stringa specificata.</summary>
        <returns>Valore della risorsa localizzata per le impostazioni cultura correnti dell'interfaccia utente del chiamante oppure <see langword="null" /> se <paramref name="name" /> non viene trovato in un set di risorse.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>App desktop  
 Nelle App desktop, viene localizzata la risorsa restituita per le impostazioni cultura dell'interfaccia utente del thread corrente, come definito dal <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà. Se la risorsa non è stata localizzata per le impostazioni cultura, il gestore di risorse esegue il probe per una risorsa seguendo i passaggi descritti nella sezione "Processo di Fallback delle risorse" del [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) articolo. Se non viene trovato alcun set di risorse localizzate utilizzabili, risorse della lingua predefinita esegue il fallback di resource manager. Se il gestore di risorse non è possibile caricare il set di risorse della lingua predefinita, il metodo genera un <xref:System.Resources.MissingManifestResourceException> eccezione o, se si prevede che il set di risorse possono risiedere in un assembly satellite, una <xref:System.Resources.MissingSatelliteAssemblyException> eccezione. Se il gestore di risorse è possibile caricare una risorsa appropriata impostata ma non è possibile trovare una risorsa denominata `name`, il metodo restituisce `null`.  
  
 Il <xref:System.Resources.ResourceManager.IgnoreCase%2A> proprietà determina se il confronto di `name` con i nomi delle risorse è tra maiuscole e minuscole (predefinito) o tra maiuscole e minuscole.  
  
> [!CAUTION]
>  Questo metodo può generare più eccezioni rispetto a quelle elencate. Questa situazione può verificarsi uno dei motivi è se un metodo che chiama questo metodo genera un'eccezione.  Ad esempio, un <xref:System.IO.FileLoadException> eccezione potrebbe essere generata se un errore durante la distribuzione o installazione di un assembly satellite, oppure un <xref:System.Runtime.Serialization.SerializationException> eccezione potrebbe essere generata se un tipo definito dall'utente genera un'eccezione definita dall'utente quando il tipo viene deserializzato.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>Applicazioni [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Anche se il <xref:System.Resources.ResourceManager> classe è supportata in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, si sconsiglia l'uso. Utilizzare questa classe solo quando si sviluppano [!INCLUDE[net_portable](~/includes/net-portable-md.md)] i progetti che possono essere usati con [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app. Per recuperare le risorse dal [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, usare il [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) classe.  
  
 In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, il <xref:System.Resources.ResourceManager.GetString%28System.String%29> metodo restituisce il valore della `name` stringa di risorsa, localizzata per le impostazioni cultura dell'interfaccia utente corrente del chiamante. L'elenco delle impostazioni cultura deriva dall'elenco di lingue del sistema operativo preferito dell'interfaccia utente. Se il gestore di risorse non può essere uguale `name`, il metodo restituisce `null`.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Resources.ResourceManager.GetString%2A> metodo per recuperare le risorse specifiche delle impostazioni cultura. È costituito da risorse compilate dal file con estensione txt per l'inglese (en), francesi (Francia) fr-FR () e russe (Russia) (ru-RU) le impostazioni cultura. Nell'esempio viene modificato le impostazioni cultura correnti e impostazioni cultura correnti dell'interfaccia utente per inglese (Stati Uniti), francesi (Francia), russe (Russia) e svedese (Svezia). Chiama quindi il <xref:System.Resources.ResourceManager.GetString%2A> metodo per recuperare la stringa localizzata, visualizzata con il giorno corrente e il mese. Si noti che l'output visualizza la stringa localizzata appropriata tranne quando le impostazioni cultura correnti dell'interfaccia utente sono svedese (Svezia). Poiché le risorse di lingua svedese sono disponibili, l'app Usa invece le risorse delle impostazioni cultura predefinite, ovvero l'inglese. L'esempio richiede i file di risorse basate su testo elencati nella tabella seguente. Ognuno ha un'unica risorsa stringa denominata `DateStart`.  
  
|culture|Nome file|Nome della risorsa|Valore della risorsa|  
|-------------|---------------|-------------------|--------------------|  
|it-IT|DateStrings.txt|`DateStart`|Oggi è|  
|fr-FR|DateStrings.fr-FR.txt|`DateStart`|Aujourd'hui, c'est le|  
|ru-RU|DateStrings.ru-RU.txt|`DateStart`|Сегодня|  
  
 È possibile utilizzare il seguente file batch per compilare l'esempio c#. Per Visual Basic, sostituire `csc` con `vbc`e modificare l'estensione del file del codice sorgente da `.cs` a `.vb`.  
  
```  
resgen DateStrings.txt  
csc showdate.cs /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
```  
  
 Ecco il codice sorgente per l'esempio (ShowDate.vb per la versione Visual Basic) o ShowDate.cs per la versione di c#.  
  
 [!code-csharp[System.Resources.ResourceManager.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate.cs#2)]
 [!code-vb[System.Resources.ResourceManager.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il valore della risorsa specificata non è una stringa.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Non sono stati individuati set di risorse utilizzabili e non esistono risorse delle impostazioni cultura predefinite. Per informazioni su come gestire questa eccezione, vedere la sezione sulla gestione di MissingSatelliteAssemblyException e MissingManifestResourceException nell'argomento relativo alla classe <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Le risorse delle impostazioni cultura predefinite si trovano in un assembly satellite che non è stato trovato. Per informazioni su come gestire questa eccezione, vedere la sezione sulla gestione di MissingSatelliteAssemblyException e MissingManifestResourceException nell'argomento relativo alla classe <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <threadsafe>Il <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> metodo è thread-safe.</threadsafe>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Creazione del pacchetto e distribuzione delle risorse</related>
        <related type="Article" href="https://msdn.microsoft.com/library/eca16922-1c46-4f68-aefe-e7a12283641f">Durante il recupero delle risorse negli assembly Satellite</related>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String, culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string * System.Globalization.CultureInfo -&gt; string&#xA;override this.GetString : string * System.Globalization.CultureInfo -&gt; string" Usage="resourceManager.GetString (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name">Nome della risorsa da recuperare.</param>
        <param name="culture">Oggetto che rappresenta le impostazioni cultura per le quali viene localizzata la risorsa.</param>
        <summary>Restituisce il valore della risorsa di tipo stringa localizzata per le impostazioni cultura specificate.</summary>
        <returns>Valore della risorsa localizzata per le impostazioni cultura specificate oppure <see langword="null" /> se <paramref name="name" /> non viene trovato in un set di risorse.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>App desktop  
 Nelle App desktop, se `culture` viene `null`, il <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> metodo Usa le impostazioni cultura correnti dell'interfaccia utente ottenuta dal <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà.  
  
 Per le impostazioni cultura specificate da viene localizzata la risorsa che viene restituita il `culture` parametro. Se la risorsa non sia stata localizzata `culture`, i probe di gestione risorse per una risorsa seguendo i passaggi descritti nella sezione "Processo di Fallback delle risorse" del [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) argomento. Se non viene trovato alcun set di risorse utilizzabili, risorse della lingua predefinita esegue il fallback di resource manager. Se il gestore di risorse non è possibile caricare il set di risorse della lingua predefinita, il metodo genera un <xref:System.Resources.MissingManifestResourceException> eccezione o, se si prevede che il set di risorse possono risiedere in un assembly satellite, una <xref:System.Resources.MissingSatelliteAssemblyException> eccezione. Se il gestore di risorse è possibile caricare una risorsa appropriata impostata ma non è possibile trovare una risorsa denominata `name`, il metodo restituisce `null`.  
  
 Il <xref:System.Resources.ResourceManager.IgnoreCase%2A> proprietà determina se il confronto di `name` con i nomi delle risorse è tra maiuscole e minuscole (predefinito) o tra maiuscole e minuscole.  
  
> [!CAUTION]
>  Questo metodo può generare più eccezioni rispetto a quelle elencate. Questa situazione può verificarsi uno dei motivi è se un metodo che chiama questo metodo genera un'eccezione.  Ad esempio, un <xref:System.IO.FileLoadException> eccezione potrebbe essere generata se un errore durante la distribuzione o installazione di un assembly satellite, oppure un <xref:System.Runtime.Serialization.SerializationException> eccezione potrebbe essere generata se un tipo definito dall'utente genera un'eccezione definita dall'utente quando il tipo viene deserializzato.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>Applicazioni [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Anche se il <xref:System.Resources.ResourceManager> classe è supportata in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, si sconsiglia l'uso. Utilizzare questa classe solo quando si sviluppano [!INCLUDE[net_portable](~/includes/net-portable-md.md)] i progetti che possono essere usati con [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app. Per recuperare le risorse dal [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, usare il [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) classe.  
  
 In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] le app, il <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> metodo restituisce il valore della `name` stringa di risorsa, localizzata per le impostazioni cultura specificate dal `culture` parametro. Se non viene localizzata la risorsa di `culture` delle impostazioni cultura, la ricerca viene utilizzata l'intera [!INCLUDE[win8](~/includes/win8-md.md)] elenco di fallback del linguaggio e viene arrestato dopo una ricerca nelle impostazioni cultura predefinite. Se il gestore di risorse non può essere uguale `name`, il metodo restituisce `null`.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> metodo per recuperare le risorse specifiche delle impostazioni cultura. Impostazioni cultura predefinite dell'esempio sono l'inglese (en) e include gli assembly satellite per il francese (Francia) (fr-FR) e russe (Russia) (ru-RU) le impostazioni cultura. Nell'esempio viene modificato le impostazioni cultura correnti e impostazioni cultura correnti dell'interfaccia utente per russe (Russia) prima di chiamare <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>. Chiama quindi il <xref:System.Resources.ResourceManager.GetString%2A> metodo e il <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> metodo e passa <xref:System.Globalization.CultureInfo> gli oggetti che rappresentano le impostazioni cultura svedese (Svezia) e il francese (Francia) a ogni metodo. Nell'output, il mese e giorno del mese, nonché la stringa che precede essi vengono visualizzati in francese, perché il <xref:System.Resources.ResourceManager.GetString%2A> metodo è in grado di recuperare la risorsa di lingua francese. Tuttavia, quando le impostazioni cultura svedese (Svezia) viene utilizzata, il mese e giorno del mese vengono visualizzati in svedese, anche se la stringa che precede li in lingua inglese. Questo avviene perché Gestione risorse non è possibile trovare le risorse di lingua svedese localizzata, in modo che restituisca una risorsa per l'inglese come lingua predefinita invece.  
  
 L'esempio richiede i file di risorse basate su testo elencati nella tabella seguente. Ognuno ha un'unica risorsa stringa denominata `DateStart`.  
  
|culture|Nome file|Nome della risorsa|Valore della risorsa|  
|-------------|---------------|-------------------|--------------------|  
|it-IT|DateStrings.txt|`DateStart`|Oggi è|  
|fr-FR|DateStrings.fr-FR.txt|`DateStart`|Aujourd'hui, c'est le|  
|ru-RU|DateStrings.ru-RU.txt|`DateStart`|Сегодня|  
  
 È possibile utilizzare il seguente file batch per compilare l'esempio di Visual Basic. Per eseguire la compilazione in c#, modificare `vbc` al `csc`e modificare l'estensione di file del codice sorgente dal `.vb` a `.cs`.  
  
```  
resgen DateStrings.txt  
vbc showdate.vb /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
```  
  
 Ecco il codice sorgente per l'esempio (ShowDate.vb per la versione Visual Basic) o ShowDate.cs per la versione di c#.  
  
 [!code-csharp[System.Resources.ResourceManager.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate2.cs#3)]
 [!code-vb[System.Resources.ResourceManager.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il valore della risorsa specificata non è una stringa.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Non sono stati individuati set di risorse utilizzabili e non esistono risorse delle impostazioni cultura predefinite. Per informazioni su come gestire questa eccezione, vedere la sezione sulla gestione di MissingSatelliteAssemblyException e MissingManifestResourceException nell'argomento relativo alla classe <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Le risorse delle impostazioni cultura predefinite si trovano in un assembly satellite che non è stato trovato. Per informazioni su come gestire questa eccezione, vedere la sezione sulla gestione di MissingSatelliteAssemblyException e MissingManifestResourceException nell'argomento relativo alla classe <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <threadsafe>Il <see cref="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" /> metodo è thread-safe.</threadsafe>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Creazione del pacchetto e distribuzione delle risorse</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderVersionNumber">
      <MemberSignature Language="C#" Value="public static readonly int HeaderVersionNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 HeaderVersionNumber" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.HeaderVersionNumber" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderVersionNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int HeaderVersionNumber;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderVersionNumber : int" Usage="System.Resources.ResourceManager.HeaderVersionNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica la versione delle intestazioni dei file di risorse interpretabili e producibili dall'implementazione corrente di <see cref="T:System.Resources.ResourceManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="public virtual bool IgnoreCase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.IgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IgnoreCase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IgnoreCase { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreCase : bool with get, set" Usage="System.Resources.ResourceManager.IgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il gestore delle risorse consente la ricerca delle risorse senza distinzione tra maiuscole e minuscole nei metodi <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> e <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" />.</summary>
        <value>
          <see langword="true" /> per ignorare la distinzione tra maiuscole e minuscole durante la ricerca delle risorse; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il valore della <xref:System.Resources.ResourceManager.IgnoreCase%2A> è di proprietà `false`, una risorsa con il nome "Resource" non è equivalente alla risorsa il cui nome è "risorsa". Se <xref:System.Resources.ResourceManager.IgnoreCase%2A> è `true`, una risorsa con il nome "Resource" è equivalente alla risorsa il cui nome è "risorsa". Si noti tuttavia che, quando <xref:System.Resources.ResourceManager.IgnoreCase%2A> viene `true`, il <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType> e <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType> metodi eseguono confronti tra stringhe tra maiuscole e minuscole usando le impostazioni cultura invarianti. Il vantaggio è che i risultati dei confronti tra stringhe tra maiuscole e minuscole eseguite da questi metodi sono gli stessi in tutti i computer indipendentemente dalle impostazioni cultura. Lo svantaggio è che i risultati non sono coerenti con le regole di maiuscole e minuscole di tutte le impostazioni cultura.  
  
 Ad esempio, l'alfabeto turco contiene due versioni del carattere ricerca per categorie: uno con un punto e uno senza un punto. In turco, il carattere (Unicode 0049) si è considerato la versione maiuscola di un carattere diverso ı (0131 Unicode). Il carattere i (0069 Unicode) viene considerato la versione in lettere minuscole di un altro carattere i (0130 Unicode). In base a queste regole di maiuscole e minuscole, un confronto tra stringhe tra maiuscole e minuscole dei caratteri i (0069 Unicode) e ho (Unicode 0049) dovrebbe avere esito negativo per le impostazioni cultura "tr-TR" (turco di Turchia). Tuttavia, in quanto il confronto viene effettuato utilizzando le regole di maiuscole e minuscole delle impostazioni cultura invarianti, se <xref:System.Resources.ResourceManager.IgnoreCase%2A> è `true`, questo confronto ha esito positivo.  
  
> [!NOTE]
>  Per motivi di prestazioni, è consigliabile specificare sempre il caso corretto per i nomi di risorse. L'impostazione <xref:System.Resources.ResourceManager.IgnoreCase%2A> a `true` può causare un aumento significativo nel working set e una riduzione significativa delle prestazioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalGetResourceSet">
      <MemberSignature Language="C#" Value="protected virtual System.Resources.ResourceSet InternalGetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Resources.ResourceSet InternalGetResourceSet(class System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InternalGetResourceSet (culture As CultureInfo, createIfNotExists As Boolean, tryParents As Boolean) As ResourceSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Resources::ResourceSet ^ InternalGetResourceSet(System::Globalization::CultureInfo ^ culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="F#" Value="abstract member InternalGetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet&#xA;override this.InternalGetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet" Usage="resourceManager.InternalGetResourceSet (culture, createIfNotExists, tryParents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="createIfNotExists" Type="System.Boolean" />
        <Parameter Name="tryParents" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="culture">Oggetto Impostazioni cultura da cercare.</param>
        <param name="createIfNotExists">
          <see langword="true" /> per caricare il set di risorse, se non è stato ancora caricato, in caso contrario <see langword="false" />.</param>
        <param name="tryParents">
          <see langword="true" /> per verificare gli oggetti <see cref="T:System.Globalization.CultureInfo" /> padre se non è possibile caricare il set di risorse; in caso contrario, <see langword="false" />.</param>
        <summary>Fornisce l'implementazione per trovare un set di risorse.</summary>
        <returns>Set di risorse specificato.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException">L'assembly principale non contiene un file resources ed è necessario ricercare una risorsa.</exception>
        <exception cref="T:System.ExecutionEngineException">Si è verificato un errore interno in fase di esecuzione.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Non è stato possibile trovare l'assembly satellite associato a <paramref name="culture" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <block subset="none" type="overrides">
          <para>Questo metodo viene completato tutte le operazioni necessarie per trovare una risorsa impostata e può essere ricorsiva e rientrante. In altre parole, questo metodo può caricare un assembly e i trigger di un' <see cref="E:System.AppDomain.AssemblyLoad" /> evento, che quindi chiama nuovamente in un <see cref="T:System.Resources.ResourceManager" /> oggetto che non è stato inizializzato completamente. Per evitare ulteriori blocchi, questo metodo non è thread-safe. Il <see cref="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />, <see cref="M:System.Resources.ResourceManager.GetString(System.String)" />, e <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> metodi eseguono tutte la sincronizzazione necessaria.</para>
        </block>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/index.md">Globalizzazione e localizzazione di applicazioni .NET</related>
      </Docs>
    </Member>
    <Member MemberName="MagicNumber">
      <MemberSignature Language="C#" Value="public static readonly int MagicNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 MagicNumber" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.MagicNumber" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MagicNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int MagicNumber;" />
      <MemberSignature Language="F#" Value=" staticval mutable MagicNumber : int" Usage="System.Resources.ResourceManager.MagicNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene il numero usato per identificare i file di risorse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore è impostato su 0xBEEFCACE. I primi quattro byte del formato di file system predefinito contiene un intero con segno a 32 bit in formato little-endian (vedere <xref:System.Text.Encoding>).  
  
 Se il <xref:System.Resources.ResourceManager.MagicNumber> viene trovato, i byte successivo sarà un numero di versione per un <xref:System.Resources.ResourceManager> intestazione, seguite da un numero che indica il numero di byte deve essere ignorato per andare oltre questa intestazione. Il successivo numero indica la versione del <xref:System.Resources.ResourceManager> che ha creato l'intestazione, seguito da informazioni specifiche della versione.  
  
 Il numero di versione per l'implementazione corrente è uno. I byte successivi sono una stringa con prefisso di lunghezza che contiene il nome di un <xref:System.Resources.IResourceReader>, in grado di leggere il file.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainAssembly">
      <MemberSignature Language="C#" Value="protected System.Reflection.Assembly MainAssembly;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Reflection.Assembly MainAssembly" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.MainAssembly" />
      <MemberSignature Language="VB.NET" Value="Protected MainAssembly As Assembly " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Reflection::Assembly ^ MainAssembly;" />
      <MemberSignature Language="F#" Value="val mutable MainAssembly : System.Reflection.Assembly" Usage="System.Resources.ResourceManager.MainAssembly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica l'assembly principale che contiene le risorse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Resources.ResourceManager.MainAssembly> campo è utile solo se si scrive una classe che deriva dal <xref:System.Resources.ResourceManager> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllResources">
      <MemberSignature Language="C#" Value="public virtual void ReleaseAllResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseAllResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.ReleaseAllResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseAllResources ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseAllResources();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseAllResources : unit -&gt; unit&#xA;override this.ReleaseAllResources : unit -&gt; unit" Usage="resourceManager.ReleaseAllResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica al gestore delle risorse di chiamare il metodo <see cref="M:System.Resources.ResourceSet.Close" /> su tutti gli oggetti <see cref="T:System.Resources.ResourceSet" /> e di rilasciare tutte le risorse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo riduce il working set in un'app in esecuzione. Le ricerche di risorse future su questo <xref:System.Resources.ResourceManager> oggetto sarà più costosa la prima ricerca, in quanto il gestore di risorse dovrà eseguire ricerche e caricare di nuovo le risorse. Ciò può essere utile in alcuni scenari di threading complessi, in cui la creazione di un nuovo <xref:System.Resources.ResourceManager> oggetto è il comportamento appropriato.  
  
> [!NOTE]
>  A partire da .NET Framework versione 2.0, il <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> metodo non è thread-safe rispetto alle <xref:System.Resources.ResourceManager.GetObject%2A>, <xref:System.Resources.ResourceManager.GetString%2A>, e <xref:System.Resources.ResourceManager.GetStream%2A> operazioni. Il vantaggio di questa modifica è un miglioramento delle prestazioni per più thread che accedono alle risorse. Tuttavia, se si chiama il <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> metodo in uno dei thread e contemporaneamente viene acquisito una risorsa in un altro thread, l'operazione get può generare un <xref:System.ObjectDisposedException> eccezione.  
  
 È anche possibile usare questo metodo nelle situazioni in cui le istanze gestite per le risorse create da Gestione risorse corrente devono essere rilasciate in modo deterministico, senza tempi di attesa del gestore di risorse completamente escono dall'ambito e sottoposti a garbage collection.  
  
> [!NOTE]
>  Chiamare questo metodo non scarica gli assembly satellite. Per scaricare gli assembly satellite, usare il <xref:System.AppDomain.Unload%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ResourceSets">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable ResourceSets;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable ResourceSets" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.ResourceSets" />
      <MemberSignature Language="VB.NET" Value="Protected ResourceSets As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ ResourceSets;" />
      <MemberSignature Language="F#" Value="val mutable ResourceSets : System.Collections.Hashtable" Usage="System.Resources.ResourceManager.ResourceSets" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("call InternalGetResourceSet instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene un oggetto <see cref="T:System.Collections.Hashtable" /> che restituisce un mapping dalle impostazioni cultura agli oggetti <see cref="T:System.Resources.ResourceSet" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceSetType">
      <MemberSignature Language="C#" Value="public virtual Type ResourceSetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ResourceSetType" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.ResourceSetType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ResourceSetType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ResourceSetType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResourceSetType : Type" Usage="System.Resources.ResourceManager.ResourceSetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo di oggetto set di risorse usato dal gestore delle risorse per costruire un oggetto <see cref="T:System.Resources.ResourceSet" />.</summary>
        <value>Tipo di oggetto set di risorse usato dal gestore delle risorse per costruire un oggetto <see cref="T:System.Resources.ResourceSet" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>