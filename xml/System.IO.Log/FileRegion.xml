<Type Name="FileRegion" FullName="System.IO.Log.FileRegion">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a060b3e8bf8cf5eff816618c88c043998848cb5" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37759152" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileRegion" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileRegion extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.FileRegion" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileRegion" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileRegion sealed" />
  <TypeSignature Language="F#" Value="type FileRegion = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="192f0-101">Rappresenta una parte di un file da archiviare.</span>
      <span class="sxs-lookup">
        <span data-stu-id="192f0-101">Represents a region of a file to be archived.</span>
      </span>
      <span data-ttu-id="192f0-102">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="192f0-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="192f0-103">Un oggetto <xref:System.IO.Log.LogArchiveSnapshot> contiene le informazioni necessarie per generare un backup coerente dei dati in una classe <xref:System.IO.Log.LogStore>.</span><span class="sxs-lookup"><span data-stu-id="192f0-103">A <xref:System.IO.Log.LogArchiveSnapshot> object contains the information necessary to generate a consistent backup of the data in a <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="192f0-104">I dati effettivi sono contenuti nella raccolta enumerabile di oggetti <xref:System.IO.Log.FileRegion> restituita dalla proprietà <xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A>.</span><span class="sxs-lookup"><span data-stu-id="192f0-104">The actual data is contained in the enumerable collection of <xref:System.IO.Log.FileRegion> objects returned by the <xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A> property.</span></span> <span data-ttu-id="192f0-105">Ogni istanza <xref:System.IO.Log.FileRegion> rappresenta una sequenza di byte in un file che deve essere archiviato.</span><span class="sxs-lookup"><span data-stu-id="192f0-105">Each <xref:System.IO.Log.FileRegion> instance represents a sequence of bytes in a file that must be archived.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="192f0-106">Nell'esempio seguente viene illustrato come memorizzare un archivio di registri in XML usando le classi <xref:System.IO.Log.LogStore> e <xref:System.IO.Log.FileRegion>.</span><span class="sxs-lookup"><span data-stu-id="192f0-106">The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.</span></span>  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FileLength">
      <MemberSignature Language="C#" Value="public long FileLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 FileLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRegion.FileLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long FileLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.FileLength : int64" Usage="System.IO.Log.FileRegion.FileLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="192f0-107">Ottiene la lunghezza, in byte, del file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="192f0-107">Gets the length of the file in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="192f0-108">Lunghezza, in byte, del file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="192f0-108">The length of the file in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="192f0-109">Questa proprietà restituisce la lunghezza dell'intero file anziché quella di una singola parte del file.</span><span class="sxs-lookup"><span data-stu-id="192f0-109">This property returns the length of the entire file instead of that of a single region in the file.</span></span> <span data-ttu-id="192f0-110">La lunghezza della parte del file può essere individuata esaminando la proprietà <xref:System.IO.Log.LogStore.Length%2A> del flusso restituito dal metodo <xref:System.IO.Log.FileRegion.GetStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="192f0-110">The length of the region in the file can be found by examining the <xref:System.IO.Log.LogStore.Length%2A> property of the stream returned by the <xref:System.IO.Log.FileRegion.GetStream%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="192f0-111">Nell'esempio seguente viene illustrato come memorizzare un archivio di registri in XML usando le classi <xref:System.IO.Log.LogStore> e <xref:System.IO.Log.FileRegion>.</span><span class="sxs-lookup"><span data-stu-id="192f0-111">The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.</span></span>  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRegion.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.IO.Stream" Usage="fileRegion.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="192f0-112">Restituisce un flusso che può essere utilizzato per leggere i dati da archiviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="192f0-112">Returns a stream that can be used to read the data to be archived.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="192f0-113">Flusso che contiene i dati da archiviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="192f0-113">A stream that contains the data to be archived.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="192f0-114">Nell'esempio seguente viene illustrato come memorizzare un archivio di registri in XML usando le classi <xref:System.IO.Log.LogStore> e <xref:System.IO.Log.FileRegion>.</span><span class="sxs-lookup"><span data-stu-id="192f0-114">The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.</span></span>  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="192f0-115">Impossibile eseguire la richiesta a causa di un'eccezione I/O imprevista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="192f0-115">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="192f0-116">L'operazione non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="192f0-116">The operation is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="192f0-117">Il metodo è stato chiamato dopo l'eliminazione sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="192f0-117">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="192f0-118">Memoria insufficiente per continuare l'esecuzione del programma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="192f0-118">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="192f0-119">L'accesso per l'archivio dei registri specificato viene negato dal sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="192f0-119">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public long Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Offset" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRegion.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Offset { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int64" Usage="System.IO.Log.FileRegion.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="192f0-120">Ottiene l'offset nel file in cui iniziano i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="192f0-120">Gets the offset into the file where the data begins.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="192f0-121">Offset nel file in cui iniziano i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="192f0-121">The offset into the file where the data begins.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="192f0-122">Nell'esempio seguente viene illustrato come memorizzare un archivio di registri in XML usando le classi <xref:System.IO.Log.LogStore> e <xref:System.IO.Log.FileRegion>.</span><span class="sxs-lookup"><span data-stu-id="192f0-122">The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.</span></span>  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRegion.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.IO.Log.FileRegion.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="192f0-123">Ottiene il percorso completo del file che contiene questa parte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="192f0-123">Gets the fully qualified location of the file containing this region.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="192f0-124">Percorso completo del file che contiene questa parte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="192f0-124">The fully qualified location of the file containing this region.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="192f0-125">Nell'esempio seguente viene illustrato come memorizzare un archivio di registri in XML usando le classi <xref:System.IO.Log.LogStore> e <xref:System.IO.Log.FileRegion>.</span><span class="sxs-lookup"><span data-stu-id="192f0-125">The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.</span></span>  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>