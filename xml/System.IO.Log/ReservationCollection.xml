<Type Name="ReservationCollection" FullName="System.IO.Log.ReservationCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e0abb9e640cc995fa2b1c6aba3d4962d7a4114b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37759041" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ReservationCollection : System.Collections.Generic.ICollection&lt;long&gt;, System.Collections.Generic.IEnumerable&lt;long&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ReservationCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;int64&gt;, class System.Collections.Generic.IEnumerable`1&lt;int64&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.ReservationCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ReservationCollection&#xA;Implements ICollection(Of Long), IEnumerable(Of Long)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReservationCollection abstract : System::Collections::Generic::ICollection&lt;long&gt;, System::Collections::Generic::IEnumerable&lt;long&gt;" />
  <TypeSignature Language="F#" Value="type ReservationCollection = class&#xA;    interface ICollection&lt;int64&gt;&#xA;    interface seq&lt;int64&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="6e716-101">Gestisce la raccolta di prenotazioni dello spazio eseguite in una sequenza di record.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6e716-101">Manages the collection of space reservations made in a record sequence.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e716-102">Questa classe rappresenta un set di aree di prenotazione create in una sequenza di record.</span><span class="sxs-lookup"><span data-stu-id="6e716-102">This class represents a set of reservation areas that are made in a record sequence.</span></span> <span data-ttu-id="6e716-103">L'aggiunta di elementi alla raccolta comporta l'allocazione di nuove prenotazioni.</span><span class="sxs-lookup"><span data-stu-id="6e716-103">Adding items to the collection allocates new reservations.</span></span> <span data-ttu-id="6e716-104">La rimozione di elementi dalla raccolta comporta la liberazione di tali prenotazioni.</span><span class="sxs-lookup"><span data-stu-id="6e716-104">Removing items from the collection frees those reservations.</span></span>  
  
 <span data-ttu-id="6e716-105">Lo spazio viene riservato nel log dall'applicazione quando contiene dati che non possono essere scritti nel log immediatamente, ma che devono essere scritti in seguito.</span><span class="sxs-lookup"><span data-stu-id="6e716-105">An application reserves space in the log when it has data that is to be written to the log in the future, but cannot write it immediately.</span></span> <span data-ttu-id="6e716-106">Le prenotazioni costituiscono la garanzia che i dati verranno scritti nel log quando saranno disponibili per questa operazione.</span><span class="sxs-lookup"><span data-stu-id="6e716-106">Reservations provide a guarantee that the data can be written to the log when the data is available to be written.</span></span> <span data-ttu-id="6e716-107">In caso di utilizzo di log, per le applicazioni vengono spesso riservati uno o più record di log in un'area di marshalling.</span><span class="sxs-lookup"><span data-stu-id="6e716-107">When using logs, applications often reserve one or more log records in a marshalling area.</span></span> <span data-ttu-id="6e716-108">È necessario riservare i record prima di aggiungerli.</span><span class="sxs-lookup"><span data-stu-id="6e716-108">You must reserve records prior to appending them.</span></span>  
  
 <span data-ttu-id="6e716-109">Le prenotazioni possono essere utilizzate a garanzia che un'operazione possa essere completata prima che venga eseguito il commit dei dati, in caso contrario viene eseguito il rollback delle modifiche.</span><span class="sxs-lookup"><span data-stu-id="6e716-109">Reservations can be used to guarantee that an operation can be completed before the data is committed; otherwise, the changes are rolled back.</span></span> <span data-ttu-id="6e716-110">Possono inoltre essere utilizzate per registrare un'"azione di annullamento" nel log.</span><span class="sxs-lookup"><span data-stu-id="6e716-110">It can also be used to record an "undo action" in the log.</span></span> <span data-ttu-id="6e716-111">Durante un'operazione di rollback è necessario che il gestore di risorse transazionale sia in grado di ripristinare il proprio stato se viene interrotto durante l'operazione di rollback.</span><span class="sxs-lookup"><span data-stu-id="6e716-111">During a rollback operation, a transactional resource manager (RM) must be able to recover its state if the RM is interrupted during the rollback operation.</span></span> <span data-ttu-id="6e716-112">L'impiego di un'area di prenotazione consente al gestore di risorse di riservare spazio in un log prima che venga utilizzato.</span><span class="sxs-lookup"><span data-stu-id="6e716-112">By using a reservation area, an RM can reserve space in a log before it is used.</span></span>  
  
 <span data-ttu-id="6e716-113">Il metodo <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> è in grado di riservare spazio o aggiungere dati o di eseguire entrambe le operazioni, a seconda dei parametri specificati durante la chiamata.</span><span class="sxs-lookup"><span data-stu-id="6e716-113">The <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method can either reserve space or append data, or both, depending on the parameters that are specified when making the call.</span></span> <span data-ttu-id="6e716-114">Man mano che una transazione viene elaborata, un'applicazione può aggiungere le informazioni di annullamento e riservare spazio per i record di compensazione.</span><span class="sxs-lookup"><span data-stu-id="6e716-114">As work progresses in a transaction, an application can append the undo information and reserve space for compensation records.</span></span> <span data-ttu-id="6e716-115">Durante un'operazione di rollback, i record di compensazione creati indicano ciò che è stato annullato sul disco.</span><span class="sxs-lookup"><span data-stu-id="6e716-115">During a rollback operation, compensation records that are created indicate what has been undone on the disk.</span></span> <span data-ttu-id="6e716-116">I record vengono aggiunti utilizzando lo spazio precedentemente riservato.</span><span class="sxs-lookup"><span data-stu-id="6e716-116">The records are appended using space that has been previously reserved.</span></span> <span data-ttu-id="6e716-117">Ciò garantisce che il gestore di risorse non esaurisca spazio di log, condizione irreversibile, durante l'esecuzione di un'operazione di rollback.</span><span class="sxs-lookup"><span data-stu-id="6e716-117">This guarantees that an RM does not run out of log space, which is a fatal condition, while performing a rollback operation.</span></span> <span data-ttu-id="6e716-118">Se un log si riempie durante una transazione, è possibile per l'applicazione eseguire senza problemi il rollback della transazione senza danneggiare dati durevoli.</span><span class="sxs-lookup"><span data-stu-id="6e716-118">If a log fills up during a transaction, an application can safely roll back a transaction without corrupting durable data.</span></span>  
  
 <span data-ttu-id="6e716-119">CLFS è un sistema di registrazione conforme con ARIES, specifico per il log write-ahead.</span><span class="sxs-lookup"><span data-stu-id="6e716-119">CLFS is an ARIES-compliant logging system, meant for write-ahead logging.</span></span> <span data-ttu-id="6e716-120">Con questo tipo di registrazione un'applicazione scrive un record di annullamento prima di eseguire l'operazione, prenotando la quantità di spazio del log necessaria per scrivere un record di compensazione, che può essere utilizzato durante il rollback.</span><span class="sxs-lookup"><span data-stu-id="6e716-120">In write-ahead logging, an application writes an undo record before it performs the operation, reserving the amount of space it takes in the log to write a compensating record, which may be used during rollback.</span></span> <span data-ttu-id="6e716-121">Lo spazio riservato verrà utilizzato in un secondo momento quando il record di compensazione verrà effettivamente scritto.</span><span class="sxs-lookup"><span data-stu-id="6e716-121">Later, the reserved space is used when the compensation record is actually written.</span></span>  
  
 <span data-ttu-id="6e716-122">Le applicazioni possono prenotare o accedere allo spazio di registro in qualsiasi momento (si tratta di operazioni che si escludono a vicenda).</span><span class="sxs-lookup"><span data-stu-id="6e716-122">Applications can either reserve or access long space at any given time (they are mutually exclusive operations).</span></span> <span data-ttu-id="6e716-123">Dopo la scrittura nel log di un record di commit, un'applicazione può liberare le prenotazioni per i record di compensazione.</span><span class="sxs-lookup"><span data-stu-id="6e716-123">After a commit record is written to the log, an application can free up the reservations for the compensation records.</span></span> <span data-ttu-id="6e716-124">Questa azione può essere eseguita chiamando il metodo <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> o il metodo <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e716-124">This action can be done by calling either the <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> or <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method.</span></span> <span data-ttu-id="6e716-125">La chiamata al metodo <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> garantisce che l'operazione sia atomica, diversamente dalla chiamata al metodo <xref:System.IO.Log.ReservationCollection.FreeReservation%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e716-125">Calling the <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method guarantees that the operation is atomic, while calling the <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> method does not.</span></span>  
  
 <span data-ttu-id="6e716-126">Quando si liberano record, è necessario liberare gli stessi record prenotati insieme in una chiamata precedente al metodo <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e716-126">When you free records, you must free the same records that you reserved together in a previous call to the <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e716-127">L'implementazione di <xref:System.IO.Log.IRecordSequence> deve implementare i metodi <xref:System.IO.Log.ReservationCollection.MakeReservation%2A> e <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> per eseguire le effettive operazioni di allocazione e deallocazione della prenotazione.</span><span class="sxs-lookup"><span data-stu-id="6e716-127">Your implementation of <xref:System.IO.Log.IRecordSequence> must implement the <xref:System.IO.Log.ReservationCollection.MakeReservation%2A> and <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> methods to perform the actual reservation allocation and deallocation.</span></span> <span data-ttu-id="6e716-128">L'implementazione, inoltre, deve chiamare <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A> quando un record viene scritto in uno spazio riservato.</span><span class="sxs-lookup"><span data-stu-id="6e716-128">In addition, your implementation must also call <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A> when a record is written into a reserved space.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e716-129">Le prenotazioni possono essere eseguite in due modalità come illustrato negli esempi riportati di seguito.</span><span class="sxs-lookup"><span data-stu-id="6e716-129">Reservations can be performed in two ways as shown in the following examples.</span></span> <span data-ttu-id="6e716-130">È possibile adottare le pratiche negli esempi per un'elaborazione affidabile.</span><span class="sxs-lookup"><span data-stu-id="6e716-130">You can adopt the practices in the samples for robust processing.</span></span> <span data-ttu-id="6e716-131">Questa attività può essere eseguita solo se si utilizza la classe <xref:System.IO.Log.LogRecordSequence> basata su CLFS.</span><span class="sxs-lookup"><span data-stu-id="6e716-131">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
//Using the ReserveAndAppend Method  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
long[] lengthOfUndoRecords = new long[] { 1000 };  
recordSequence.ReserveAndAppend(recordData,  
                                                     userSqn,  
                                                     previousSqn,  
                                                     RecordSequenceAppendOptions.None,  
                                                     reservations,  
                                                     lengthOfUndoRecords);  
recordSequence.Append(undoRecordData,    // If necessary …  
                                    userSqn,  
                                    previousSqn,  
                                    RecordSequenceAppendOptions.ForceFlush,  
                                    reservations);  
  
// Using the Manual Approach  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ReservationCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e716-132">Inizializza una nuova istanza della classe <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-132">Initializes a new instance of the <see cref="T:System.IO.Log.ReservationCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Add(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(long size);" />
      <MemberSignature Language="F#" Value="abstract member Add : int64 -&gt; unit&#xA;override this.Add : int64 -&gt; unit" Usage="reservationCollection.Add size" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="6e716-133">Dimensione, in byte, della prenotazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-133">The size of the requested reservation, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e716-134">Alloca una prenotazione e la aggiunge alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-134">Allocates a reservation and adds it to the collection.</span>
          </span>
          <span data-ttu-id="6e716-135">Questo metodo non può essere ereditato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-135">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6e716-136">Nell'esempio seguente viene illustrato come creare una prenotazione manualmente.</span><span class="sxs-lookup"><span data-stu-id="6e716-136">The following example shows how to manually make a reservation.</span></span> <span data-ttu-id="6e716-137">Questa attività può essere eseguita solo se si utilizza la classe <xref:System.IO.Log.LogRecordSequence> basata su CLFS.</span><span class="sxs-lookup"><span data-stu-id="6e716-137">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6e716-138">
            <paramref name="archiveTail" /> non è compreso tra i numeri di sequenza di base e finale di questa sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-138">
              <paramref name="archiveTail" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6e716-139">
            <paramref name="size" /> non è valido o supera la dimensione massima della prenotazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-139">
              <paramref name="size" /> is invalid or exceeds maximum reservation size.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6e716-140">Si verifica un errore di I/O durante la creazione dell’istantanea dell'archivio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-140">An I/O error occurs when creating the archive snapshot.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e716-141">Il metodo è stato chiamato dopo l'eliminazione sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-141">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="6e716-142">Memoria insufficiente per continuare l'esecuzione del programma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-142">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6e716-143">L'accesso per l'archivio dei registri specificato viene negato dal sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-143">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="6e716-144">Sequenza di record piena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-144">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="reservationCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e716-145">Rilascia tutte le prenotazioni contenute nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-145">Releases all of the reservations in the collection.</span>
          </span>
          <span data-ttu-id="6e716-146">Questo metodo non può essere ereditato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-146">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6e716-147">
            <paramref name="size" /> non è valido o supera la dimensione massima della prenotazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-147">
              <paramref name="size" /> is invalid or exceeds maximum reservation size.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6e716-148">Si verifica un errore di I/O durante la creazione dell’istantanea dell'archivio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-148">An I/O error occurs when creating the archive snapshot.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e716-149">Il metodo è stato chiamato dopo l'eliminazione sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-149">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="6e716-150">Memoria insufficiente per continuare l'esecuzione del programma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-150">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="6e716-151">Sequenza di record piena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-151">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6e716-152">L'accesso per l'archivio dei registri specificato viene negato dal sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-152">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Contains(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (size As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(long size);" />
      <MemberSignature Language="F#" Value="abstract member Contains : int64 -&gt; bool&#xA;override this.Contains : int64 -&gt; bool" Usage="reservationCollection.Contains size" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="6e716-153">Dimensione da individuare nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-153">The size to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e716-154">Determina se una prenotazione della dimensione specificata è stata eseguita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-154">Determines whether a reservation of the specified size has been made.</span>
          </span>
          <span data-ttu-id="6e716-155">Questo metodo non può essere ereditato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-155">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e716-156">
            <see langword="true" /> se è stata eseguita almeno una prenotazione della dimensione specificata, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-156">
              <see langword="true" /> if at least one reservation of the specified size has been made; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e716-157">Il metodo è stato chiamato dopo l'eliminazione sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-157">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="6e716-158">Memoria insufficiente per continuare l'esecuzione del programma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-158">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6e716-159">L'accesso per l'archivio dei registri specificato viene negato dal sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-159">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (long[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int64[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Long(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;long&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int64[] * int -&gt; unit&#xA;override this.CopyTo : int64[] * int -&gt; unit" Usage="reservationCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int64[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="6e716-160">Matrice di destinazione della copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-160">The array that is the destination of the copy.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="6e716-161">Indice in base zero nella matrice in corrispondenza del quale ha inizio la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-161">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e716-162">Copia l'intera raccolta in una matrice unidimensionale, a partire dall'indice specificato della matrice di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-162">Copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</span>
          </span>
          <span data-ttu-id="6e716-163">Questo metodo non può essere ereditato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-163">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6e716-164">
            <paramref name="array" /> o <paramref name="arrayIndex" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-164">
              <paramref name="array" /> or <paramref name="arrayIndex" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6e716-165">
            <paramref name="arrayIndex" /> è minore di zero oppure maggiore o uguale alla lunghezza di <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-165">
              <paramref name="arrayIndex" /> is less than zero, or greater than or equal to the length of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6e716-166">Non c'è spazio sufficiente nella matrice specificata per copiare i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-166">There is not enough space in the specified array to copy the data.</span>
          </span>
          <span data-ttu-id="6e716-167">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-167">-or-</span>
          </span>
          <span data-ttu-id="6e716-168">
            <paramref name="array" /> non è una matrice unidimensionale, che è l'unico tipo supportato per l'azione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-168">
              <paramref name="array" /> is not a single dimensional array, which is the only type supported for the requested action.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e716-169">Il metodo è stato chiamato dopo l'eliminazione sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-169">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="6e716-170">Memoria insufficiente per continuare l'esecuzione del programma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-170">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6e716-171">L'accesso per l'archivio dei registri specificato viene negato dal sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-171">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.ReservationCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.IO.Log.ReservationCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6e716-172">Ottiene il numero di prenotazioni contenute nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-172">Gets the number of reservations in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6e716-173">Numero di prenotazioni contenute nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-173">The number of reservations in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ReservationCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="reservationCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e716-174">Consente all'oggetto <see cref="T:System.IO.Log.ReservationCollection" /> di liberare risorse prima di essere eliminato dal Garbage Collector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-174">Allows the <see cref="T:System.IO.Log.ReservationCollection" /> to free resources before it is destroyed by the garbage collector.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeReservation">
      <MemberSignature Language="C#" Value="protected abstract void FreeReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FreeReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.FreeReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FreeReservation (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FreeReservation(long size);" />
      <MemberSignature Language="F#" Value="abstract member FreeReservation : int64 -&gt; unit" Usage="reservationCollection.FreeReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="6e716-175">Dimensione della prenotazione da rilasciare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-175">The size of the reservation to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e716-176">Se sottoposto a override in una classe derivata, rilascia una prenotazione della dimensione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-176">When overridden in a derived class, releases a reservation of the specified size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6e716-177">
            <para>Quando si eredita da <see cref="T:System.IO.Log.ReservationCollection" />, è necessario implementare questo metodo per rilasciare effettivamente lo spazio nella sequenza di record. Non è necessario chiamare <see cref="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" /> quando questo metodo è completo: tale logica viene gestita automaticamente.  Quando si liberano record, è necessario liberare gli stessi record prenotati insieme in una chiamata precedente al <see cref="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" /> (metodo).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-177">
              <para>When you inherit from <see cref="T:System.IO.Log.ReservationCollection" />, you must implement this method to actually release space in the record sequence. You should not call <see cref="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" /> when this method is complete; that logic is handled for you.  When you free records, you must free the same records that you reserved together in a previous call to the <see cref="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBestMatchingReservation">
      <MemberSignature Language="C#" Value="protected long GetBestMatchingReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int64 GetBestMatchingReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetBestMatchingReservation (size As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; long GetBestMatchingReservation(long size);" />
      <MemberSignature Language="F#" Value="member this.GetBestMatchingReservation : int64 -&gt; int64" Usage="reservationCollection.GetBestMatchingReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="6e716-178">Dimensione della prenotazione che deve essere rispettata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-178">The size of the reservation that must be fit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e716-179">Quando viene sottoposto a override in una classe derivata, ottiene la migliore prenotazione corrispondente per una data dimensione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-179">When overridden in a derived class, gets the best matching reservation for a given size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e716-180">Prenotazione contenuta nella raccolta, maggiore o uguale alla dimensione specificata oppure -1 se tale prenotazione non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-180">A reservation from the collection that is greater than or equal to the specified size, or -1 if no such reservation exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e716-181">Questo metodo viene chiamato in genere in caso di aggiunta di un record dallo spazio riservato a una sequenza di record.</span><span class="sxs-lookup"><span data-stu-id="6e716-181">This method is typically called when appending a record from reserved space to a record sequence.</span></span> <span data-ttu-id="6e716-182">Quando viene restituito, una prenotazione della dimensione restituita è stata rimossa dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="6e716-182">When it returns, a reservation of the returned size has been removed from the collection.</span></span> <span data-ttu-id="6e716-183">Se, per qualche ragione, non viene effettuato l'accesso allo spazio riservato, è opportuno chiamare il metodo <xref:System.IO.Log.ReservationCollection.ReservationMade%2A> per avere la certezza che <xref:System.IO.Log.ReservationCollection> rappresenti con precisione la quantità di spazio riservato nella sequenza di record.</span><span class="sxs-lookup"><span data-stu-id="6e716-183">If, for some reason, the reserved space is not actually accessed, the <xref:System.IO.Log.ReservationCollection.ReservationMade%2A> method should be called to ensure that the <xref:System.IO.Log.ReservationCollection> accurately represents the amount of reserved space in the record sequence.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;long&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;int64&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;long&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;int64&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;int64&gt;" Usage="reservationCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e716-184">Restituisce un enumeratore in grado di scorrere l'oggetto <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-184">Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
          <span data-ttu-id="6e716-185">Questo metodo non può essere ereditato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-185">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e716-186">Enumeratore in grado di scorrere l'oggetto <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-186">An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6e716-187">L'operazione non è valida per uno dei motivi seguenti:</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-187">The operation is invalid for one of the following reasons:</span>
          </span>
          <span data-ttu-id="6e716-188">-   L'enumerazione è stata terminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-188">-   The enumeration has ended.</span>
          </span>
          <span data-ttu-id="6e716-189">-   La raccolta è stata modificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-189">-   The collection has been modified.</span>
          </span>
          <span data-ttu-id="6e716-190">-   L'enumerazione non è stata avviata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-190">-   The enumeration has not been started.</span>
          </span>
          <span data-ttu-id="6e716-191">È necessario chiamare <see cref="M:System.Collections.IEnumerator.MoveNext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-191">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e716-192">Il metodo è stato chiamato dopo l'eliminazione sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-192">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="6e716-193">Memoria insufficiente per continuare l'esecuzione del programma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-193">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6e716-194">L'accesso per l'archivio dei registri specificato viene negato dal sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-194">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.ReservationCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.IO.Log.ReservationCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6e716-195">Ottiene un valore che indica se la raccolta è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-195">Gets a value that indicates whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6e716-196">Questa proprietà restituisce sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-196">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e716-197">Un oggetto <xref:System.IO.Log.ReservationCollection> non è mai di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="6e716-197">A <xref:System.IO.Log.ReservationCollection> is never read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReservation">
      <MemberSignature Language="C#" Value="protected abstract void MakeReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void MakeReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.MakeReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub MakeReservation (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void MakeReservation(long size);" />
      <MemberSignature Language="F#" Value="abstract member MakeReservation : int64 -&gt; unit" Usage="reservationCollection.MakeReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="6e716-198">Dimensione della prenotazione da allocare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-198">The size of the reservation to allocate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e716-199">Se sottoposto a override in una classe derivata, alloca una prenotazione della dimensione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-199">When overridden in a derived class, allocates a reservation of the specified size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6e716-200">
            <para>Quando si eredita da <see cref="T:System.IO.Log.ReservationCollection" />, è necessario implementare questo metodo per allocare effettivamente lo spazio nella sequenza di record. Non è necessario chiamare <see cref="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" /> quando questo metodo viene completato, che per la logica è gestita.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-200">
              <para>When you inherit from <see cref="T:System.IO.Log.ReservationCollection" />, you must implement this method to actually reserve space in the record sequence. You should not call <see cref="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" /> when this method is complete; that logic is handled for you.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (long item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(int64 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Remove(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(long item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : int64 -&gt; bool&#xA;override this.Remove : int64 -&gt; bool" Usage="reservationCollection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="6e716-201">Dimensione della prenotazione da rilasciare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-201">The size of the reservation to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e716-202">Rilascia una prenotazione della dimensione specificata, se precedentemente creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-202">Releases a reservation of the specified size, if one has been made.</span>
          </span>
          <span data-ttu-id="6e716-203">Questo metodo non può essere ereditato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-203">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e716-204">
            <see langword="true" /> se una prenotazione della dimensione specificata è stata trovata e rimossa, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-204">
              <see langword="true" /> if a reservation of the specified size was found and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6e716-205">Nell'esempio seguente viene illustrato come creare una prenotazione manualmente.</span><span class="sxs-lookup"><span data-stu-id="6e716-205">The following example shows how to manually make a reservation.</span></span> <span data-ttu-id="6e716-206">Questa attività può essere eseguita solo se si utilizza la classe <xref:System.IO.Log.LogRecordSequence> basata su CLFS.</span><span class="sxs-lookup"><span data-stu-id="6e716-206">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6e716-207">Nella raccolta di prenotazioni specificata non è stata trovata nessuna prenotazione con dimensioni tali da corrispondere al record indicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-207">No reservation large enough to fit the provided record can be found in the specified reservation collection.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6e716-208">Si verifica un errore di I/O durante la creazione dell’istantanea dell'archivio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-208">An I/O error occurs when creating the archive snapshot.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e716-209">Il metodo è stato chiamato dopo l'eliminazione sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-209">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="6e716-210">Memoria insufficiente per continuare l'esecuzione del programma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-210">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="6e716-211">Sequenza di record piena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-211">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6e716-212">L'accesso per l'archivio dei registri specificato viene negato dal sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-212">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReservationFreed">
      <MemberSignature Language="C#" Value="protected void ReservationFreed (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReservationFreed(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReservationFreed (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReservationFreed(long size);" />
      <MemberSignature Language="F#" Value="member this.ReservationFreed : int64 -&gt; unit" Usage="reservationCollection.ReservationFreed size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="6e716-213">Dimensione della prenotazione rilasciata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-213">The size of the reservation that has been released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e716-214">Se sottoposto a override in una classe derivata, indica che una prenotazione è stata rilasciata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-214">When overridden in a derived class, indicates that a reservation has been released.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e716-215">Quando si eredita da <xref:System.IO.Log.ReservationCollection>, è necessario chiamare questo metodo quando una prenotazione viene rilasciata per una ragione diversa dalla rimozione dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="6e716-215">When you inherit from <xref:System.IO.Log.ReservationCollection>, you must call this method when a reservation is released for a reason other than removing it from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReservationMade">
      <MemberSignature Language="C#" Value="protected void ReservationMade (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReservationMade(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReservationMade (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReservationMade(long size);" />
      <MemberSignature Language="F#" Value="member this.ReservationMade : int64 -&gt; unit" Usage="reservationCollection.ReservationMade size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="6e716-216">Dimensione della prenotazione creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-216">The size of the reservation that has been made.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e716-217">Se sottoposto a override in una classe derivata, indica che una prenotazione è stata creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-217">When overridden in a derived class, indicates that a reservation has been made.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e716-218">Quando si eredita da <xref:System.IO.Log.ReservationCollection>, è necessario chiamare questo metodo quando una prenotazione viene creata esternamente a una chiamata a <xref:System.IO.Log.ReservationCollection.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e716-218">When you inherit from <xref:System.IO.Log.ReservationCollection>, you must call this method when a reservation is made outside of a call to <xref:System.IO.Log.ReservationCollection.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e716-219">Restituisce un enumeratore in grado di scorrere l'oggetto <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-219">Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
          <span data-ttu-id="6e716-220">Questo metodo non può essere ereditato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-220">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e716-221">Enumeratore in grado di scorrere l'oggetto <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-221">An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6e716-222">L'operazione non è valida per uno dei motivi seguenti:</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-222">The operation is invalid for one of the following reasons:</span>
          </span>
          <span data-ttu-id="6e716-223">-   L'enumerazione è stata terminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-223">-   The enumeration has ended.</span>
          </span>
          <span data-ttu-id="6e716-224">-   La raccolta è stata modificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-224">-   The collection has been modified.</span>
          </span>
          <span data-ttu-id="6e716-225">-   L'enumerazione non è stata avviata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-225">-   The enumeration has not been started.</span>
          </span>
          <span data-ttu-id="6e716-226">È necessario chiamare <see cref="M:System.Collections.IEnumerator.MoveNext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-226">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e716-227">Il metodo è stato chiamato dopo l'eliminazione sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-227">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="6e716-228">Memoria insufficiente per continuare l'esecuzione del programma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-228">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6e716-229">L'accesso per l'archivio dei registri specificato viene negato dal sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e716-229">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>