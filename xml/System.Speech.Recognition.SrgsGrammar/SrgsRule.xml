<Type Name="SrgsRule" FullName="System.Speech.Recognition.SrgsGrammar.SrgsRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="307e4841afae122a83c6584e1ea3f426c3a238af" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33681004" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SrgsRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsRule" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Rule={_id.ToString()} Scope={_scope.ToString()}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Speech.Recognition.SrgsGrammar.SrgsRule/SrgsRuleDebugDisplay))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta una regola di grammatica.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> classe per creare una nuova regola in fase di esecuzione o modificare una regola in un flusso di grammatica esistente o un file in fase di esecuzione.  
  
 Le parole e frasi specificate da <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> oggetti nelle grammatiche definite da <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> istanze limitare l'input vocale che il riconoscimento deve essere in grado di identificare.  
  
 Un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> oggetto specifica la sequenza in cui devono essere pronunciate parole e frasi, ordinando gli oggetti che li contengono. Parole e frasi all'interno di una regola vengono rappresentate da oggetti, ad esempio <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, e <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> elementi. Utilizzare il <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> gli oggetti di proprietà per accedere alla raccolta di figlio un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> oggetto contiene.  
  
 È possibile determinare se un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> può essere specificato in un riferimento di regola da una regola in una grammatica esterna impostando la <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A> proprietà.  
  
 Non è consentito definire un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> che è vuoto o che contiene solo spazi vuoti.  
  
 Questa classe rappresenta il `rule` elemento definito nel World Wide Web Consortium (W3C) [vocale riconoscimento grammatica specifica (SRGS) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201761). Per informazioni sul SRGS `rule` elemento e i dettagli relativi al supporto per Speech, vedere [elemento rule](http://msdn.microsoft.com/library/da67b4aa-0545-426a-a02f-1417b968021e).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRule (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRule(System::String ^ id);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Identificatore della regola.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> e specifica l'identificatore per la regola.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> costruttore inizializza la <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> proprietà. L'identificatore deve essere univoco all'interno di una grammatica specificata.  
  
 Il <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> costruttore genera un <xref:System.FormatException> nelle circostanze seguenti:  
  
-   `id` non è un nome XML valido, come definito in [Extensible Markup Language (XML) 1.0 (quinta edizione)](https://www.w3.org/TR/REC-xml/). Per parafrasare questa definizione, un nome XML valido deve iniziare con una lettera, un carattere di sottolineatura ('_') o un carattere due punti (': ') e può essere seguito da zero o più caratteri NameChar (anche definiti nella specifica XML).  
  
-   `id` è "NULL" o "VOID" o "GARBAGE".  
  
-   `id` contiene almeno un carattere dell'ID regola non valida. Questi caratteri sono: '?', ' *', '+', '&#124;', ' (','), ' ^', '$', '/', ';', '.', '=', '\<', ' >', ' [', ']', ' {', '} ','\\\\',' ', '\t', '\r' e '\n'.  
  
   
  
## Examples  
 L'esempio seguente crea una grammatica che riconosce la frase "è di un paese che ha vinto i mondiali" seguito dal nome di un paese che ha vinto i mondiali. Nell'esempio viene creato un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> oggetto denominato `winnerRule` e passa l'identificatore `WorldCupWinner` come un <xref:System.String>. Il <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> oggetto costituito da una matrice di nuovi <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> oggetti contenenti alternative per essere riconosciuti dalla regola.  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="id" /> è vuoto.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="id" /> non è un identificatore di regola corretto.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRule (string id, params System.Speech.Recognition.SrgsGrammar.SrgsElement[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, class System.Speech.Recognition.SrgsGrammar.SrgsElement[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String, ParamArray elements As SrgsElement())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRule(System::String ^ id, ... cli::array &lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ elements);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="elements" Type="System.Speech.Recognition.SrgsGrammar.SrgsElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">Identificatore della regola.</param>
        <param name="elements">Matrice di elementi <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> da una matrice di oggetti <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> costruttore inizializza la <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> proprietà. L'identificatore deve essere univoco all'interno di una grammatica specificata.  
  
 Il <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> costruttore genera un <xref:System.FormatException> nelle circostanze seguenti:  
  
-   `id` non è un nome XML valido, come definito in [Extensible Markup Language (XML) 1.0 (quinta edizione)](https://www.w3.org/TR/REC-xml/). Per parafrasare questa definizione, un nome XML valido deve iniziare con una lettera, un carattere di sottolineatura ('_') o un carattere due punti (': ') e può essere seguito da zero o più caratteri NameChar (anche definiti nella specifica XML).  
  
-   `id` è "NULL" o "VOID" o "GARBAGE".  
  
-   `id` contiene almeno un carattere dell'ID regola non valida. Questi caratteri sono: '?', ' *', '+', '&#124;', ' (','), ' ^', '$', '/', ';', '.', '=', '\<', ' >', ' [', ']', ' {', '} ','\\\\',' ', '\t', '\r' e '\n'.  
  
   
  
## Examples  
 L'esempio seguente crea una grammatica che riconosce la frase "è di un paese che ha vinto i mondiali" seguito dal nome di un paese che ha vinto i mondiali. Nell'esempio viene creata una regola pubblica denominata `WorldCupWinner`. L'esempio crea quindi due <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> oggetti, `ruleEurope` e `ruleSAmerica`, passando un <xref:System.String> per l'identificatore della regola e un <xref:System.Speech.Recognition.SrgsGrammar.SrgsElement> matrice che contiene un <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> oggetto. Successivamente, l'esempio aggiunge i riferimenti a regola `ruleEurope` e `ruleSAmerica` dalla regola `WorldCupWinner`.  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  // Create a grammar from an SRGSDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument srgsGrammar = new SrgsDocument ();  
  SrgsRule winnerRule = new SrgsRule ("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add (new SrgsItem ("A nation that has won the world cup is"));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the grammar and make winnerRule  
  // the root rule of the grammar.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  srgsGrammar.Root = winnerRule;  
}  
```  
  
 La grammatica creata ha il formato seguente.  
  
```xml  
<grammar version="1.0" xml:lang="en-US" xmlns="http://www.w3.org/2001/06/grammar" root="WorldCupWinner">  
    <rule id="WorldCupWinner" scope="public">  
        <item> A nation that has won the world cup is </item>  
        <one-of>  
            <item>  
                <ruleref uri="#EuropeanNations" />  
            </item>  
            <item>  
                <ruleref uri="#SouthAmericanNations" />  
            </item>  
        </one-of>  
    </rule>  
    <rule id="EuropeanNations">  
        <one-of>  
            <item> England </item>  
            <item> France </item>  
            <item> Germany </item>  
            <item> Italy </item>  
        </one-of>  
    </rule>  
    <rule id="SouthAmericanNations">  
        <one-of>  
            <item> Argentina </item>  
            <item> Brazil </item>  
            <item> Uruguay </item>  
        </one-of>  
    </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> è <see langword="null" />.  
  
 <paramref name="elements" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="id" /> è vuoto.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="id" /> non è un identificatore di regola corretto.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Speech.Recognition.SrgsGrammar.SrgsElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Speech.Recognition.SrgsGrammar.SrgsElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (element As SrgsElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Speech::Recognition::SrgsGrammar::SrgsElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Speech.Recognition.SrgsGrammar.SrgsElement" />
      </Parameters>
      <Docs>
        <param name="element">Oggetto che eredita da <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> e specifica che cosa può essere riconosciuto.</param>
        <summary>Aggiunge un elemento <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> a un oggetto <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tipico aggiunte a un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> oggetto includono <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, e <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> oggetti che specificano ciò che è possono dire altoparlanti. Un elemento regola valida deve contenere almeno una parte di testo riconoscibile o un riferimento di regola. Vedere [creare le grammatiche con SrgsGrammar](http://msdn.microsoft.com/library/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906) per ulteriori informazioni.  
  
 Un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> oggetto può inoltre contenere <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> e <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> oggetti Aggiungi semantiche chiavi e valori semantici per la regola. Il motore di riconoscimento vocale restituirà le informazioni semantiche, nonché alla frase riconosciuta, quando rileva la frase. Vedere [Markup di interpretazione semantica](http://msdn.microsoft.com/library/2e115391-73b3-4666-8fd1-540c529de3b0) per ulteriori informazioni.  
  
   
  
## Examples  
 L'esempio seguente crea una grammatica che riconosce la frase "è di un paese che ha vinto i mondiali" seguito dal nome di un paese che ha vinto i mondiali. Dopo aver creato il <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> oggetto `winnerRule` e assegnargli l'identificatore di stringa `WorldCupWinner`, nell'esempio viene utilizzato il <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add%2A> metodo a cui aggiungere la stringa "è un paese che ha vinto i mondiali" per la regola. L'esempio crea quindi due regole aggiuntive, `ruleEurope` e `ruleSAmerica`. Utilizzando il <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add%2A> metodo, l'esempio aggiunge un <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> dell'oggetto per il `WorldCupWinner` regola che contiene riferimenti a regole per `ruleEurope` e `ruleSAmerica`.  
  
```csharp  
// Create an SrgsDocument, create a new rule  
// and set its scope to public.  
SrgsDocument document = new SrgsDocument();  
SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
winnerRule.Scope = SrgsRuleScope.Public;  
  
// Add the introduction.  
winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
// Create the rule for the European nations.  
SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
// Create the rule for the South American nations.  
SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
// Add references to winnerRule for ruleEurope and ruleSAmerica.  
winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
// Add all the rules to the document and make winnerRule   
// the root rule of the document.  
document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
document.Root = winnerRule;  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseClass">
      <MemberSignature Language="C#" Value="public string BaseClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseClass" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La proprietà non è attualmente supportata.</summary>
        <value>Non supportato.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsElement&gt; Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Speech.Recognition.SrgsGrammar.SrgsElement&gt; Elements" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As Collection(Of SrgsElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ Elements { System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la raccolta di oggetti <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> contenuti nell'istanza di <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />.</summary>
        <value>Raccolta di elementi contenuti nella regola.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli elementi in un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> oggetto può essere costituita <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag>, e <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> oggetti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'identificatore per la regola.</summary>
        <value>Identificatore per la regola.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'identificatore per una regola è una stringa che contiene il nome della regola.  
  
 Un valore utilizzato per impostare <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> devono essere conformi alle regole seguenti:  
  
-   Il valore deve essere un nome XML valido, come definito in [Extensible Markup Language (XML) 1.0 (quinta edizione)](https://www.w3.org/TR/REC-xml/). Per parafrasare questa definizione, un nome XML valido deve iniziare con una lettera, un carattere di sottolineatura ('_') o un carattere due punti (': ') e può essere seguito da zero o più caratteri NameChar (anche definiti nella specifica XML).  
  
-   Il valore può essere "NULL" o "VOID" o "GARBAGE".  
  
-   Il valore non può contenere qualsiasi carattere dell'ID regola non valida. Questi caratteri sono: '?', ' *', '+', '&#124;', ' (','), ' ^', '$', '/', ';', '.', '=', '\<', ' >', ' [', ']', ' {', '} ','\\\\',' ', '\t', '\r' e '\n'.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">È stato fatto un tentativo per impostare la proprietà <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" /> su un valore non valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public string OnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnError" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError" />
      <MemberSignature Language="VB.NET" Value="Public Property OnError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La proprietà non è attualmente supportata.</summary>
        <value>Non supportato.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="public string OnInit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnInit" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />
      <MemberSignature Language="VB.NET" Value="Public Property OnInit As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnInit { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La proprietà non è attualmente supportata.</summary>
        <value>Non supportato.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParse">
      <MemberSignature Language="C#" Value="public string OnParse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnParse" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse" />
      <MemberSignature Language="VB.NET" Value="Public Property OnParse As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnParse { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La proprietà non è attualmente supportata.</summary>
        <value>Non supportato.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRecognition">
      <MemberSignature Language="C#" Value="public string OnRecognition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnRecognition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition" />
      <MemberSignature Language="VB.NET" Value="Public Property OnRecognition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnRecognition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La proprietà non è attualmente supportata.</summary>
        <value>Non supportato.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsRuleScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.SrgsGrammar.SrgsRuleScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As SrgsRuleScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SrgsGrammar::SrgsRuleScope Scope { System::Speech::Recognition::SrgsGrammar::SrgsRuleScope get(); void set(System::Speech::Recognition::SrgsGrammar::SrgsRuleScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se una regola può essere attivata per il riconoscimento e quando altre regole possono fare riferimento alla regola.</summary>
        <value>Un valore che imposta l'ambito per la regola.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore predefinito per l'ambito è `Private`. Una regola privata può essere attivata solo per il riconoscimento per un riferimento di regola dalla regola nella grammatica contenitore radice o da un'altra regola di cui viene fatto riferimento dalla regola di radice. Una regola privata non può fare riferimento a una grammatica esterna, a meno che la regola privata è dichiarata come la regola radice della grammatica relativo contenitore.  
  
 Se l'ambito è impostato su `Public`, un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> oggetto può essere attivato per il riconoscimento tramite un riferimento da un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> oggetto nella grammatica contenitore o da una regola in una grammatica esterna.  
  
   
  
## Examples  
 L'esempio seguente crea una grammatica che riconosce la frase "è di un paese che ha vinto i mondiali" seguito dal nome di un paese che ha vinto i mondiali. Crea una regola pubblica denominata `WorldCupWinner` e imposta l'ambito della regola al ruolo Public.  
  
```csharp  
// Create an SrgsDocument, create a new rule and set its scope to public.  
SrgsDocument document = new SrgsDocument();  
SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
winnerRule.Scope = SrgsRuleScope.Public;  
  
// Add the introduction.  
winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
// Create the rule for the European nations.  
SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
// Create the rule for the South American nations.  
SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
// Add references to winnerRule for ruleEurope and ruleSAmerica.  
winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope)), new SrgsItem(new SrgsRuleRef(ruleSAmerica)})));  
  
// Add all the rules to the document and make winnerRule   
// the root rule of the document.  
document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
document.Root = winnerRule;  
```  
  
 La grammatica creata ha il formato seguente.  
  
```xml  
<grammar version="1.0" xml:lang="en-US" xmlns="http://www.w3.org/2001/06/grammar" root="WorldCupWinner">  
    <rule id="WorldCupWinner" scope="public">  
        <item> A nation that has won the world cup is </item>  
        <one-of>  
            <item>  
                <ruleref uri="#EuropeanNations" />  
            </item>  
            <item>  
                <ruleref uri="#SouthAmericanNations" />  
            </item>  
        </one-of>  
    </rule>  
    <rule id="EuropeanNations">  
        <one-of>  
            <item> England< /item>  
            <item> France </item>  
            <item> Germany </item>  
            <item> Italy </item>  
        </one-of>  
    </rule>  
    <rule id="SouthAmericanNations">  
        <one-of>  
            <item> Argentina </item>  
            <item> Brazil </item>  
            <item> Uruguay </item>  
        </one-of>  
    </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public string Script { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Script" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Script" />
      <MemberSignature Language="VB.NET" Value="Public Property Script As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Script { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La proprietà non è attualmente supportata.</summary>
        <value>Non supportato.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>