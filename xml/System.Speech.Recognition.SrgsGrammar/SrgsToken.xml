<Type Name="SrgsToken" FullName="System.Speech.Recognition.SrgsGrammar.SrgsToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa77b77f058f82ea6c785de084d18f4dbb88a9e2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30528525" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SrgsToken : System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsToken extends System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsToken&#xA;Inherits SrgsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsToken : System::Speech::Recognition::SrgsGrammar::SrgsElement" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.SrgsGrammar.SrgsElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta una parola o una frase breve che può essere riconosciuta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzando i membri del <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> (classe), è possibile specificare tre forme di una parola: il <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> form, il <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> form e un oggetto personalizzato <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> per word.  
  
 Se più parole vengono archiviate in un singolo <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> dell'oggetto, ognuno viene considerato come un token diverso internamente e nel risultato.  
  
 Questa classe rappresenta il `token` elemento definito del World Wide Web Consortium (W3C) [vocale riconoscimento grammatica specifica (SRGS) versione 1.0.](http://go.microsoft.com/fwlink/?LinkId=201761). Per informazioni sul SRGS `token` elemento e i dettagli relativi al supporto per Speech, vedere [token elemento](http://msdn.microsoft.com/library/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsToken (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsToken(System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo della nuova istanza <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> della classe.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> e specifica il testo da riconoscere.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crea un <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> i cui <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> proprietà viene impostata inizialmente il valore di `text` parametro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="text" /> è vuoto.</exception>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public string Display { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Display" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />
      <MemberSignature Language="VB.NET" Value="Public Property Display As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Display { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il formato di visualizzazione del testo da pronunciare.</summary>
        <value>Una rappresentazione del token nel modo in cui deve essere visualizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene in genere rappresentano lo stesso valore di <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> modulo potrebbe essere diverso dal <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> modulo per una parola o una frase in un <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. Ad esempio, il modulo di visualizzazione può essere un acronimo, ad esempio 'USA', mentre il testo che verrà letta e a cui il <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> si applica, è "Stati Uniti d'America".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Si è tentato di impostare <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" /> su <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Viene effettuato un tentativo di assegnazione di una stringa vuota a <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Pronunciation">
      <MemberSignature Language="C#" Value="public string Pronunciation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pronunciation" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />
      <MemberSignature Language="VB.NET" Value="Public Property Pronunciation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pronunciation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa che definisce la pronuncia per il token.</summary>
        <value>Restituisce una stringa contenente i telefoni dall'alfabeto fonetico specificato in <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Telefoni sono lettere o simboli che descrivono i suoni di riconoscimento vocale. Speech supporta tre alfabeto fonetico per specificare la pronuncia personalizzata: il Universal Phone impostare (UPS), il set di API riconoscimento vocale (SAPI) telefono e all'alfabeto fonetico internazionale (IPA). I telefoni specificati in <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> devono corrispondere nell'alfabeto fonetico specificato in <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>. Vedere [dizionari e caratteri dell'alfabeto fonetico](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) per ulteriori informazioni.  
  
 I telefoni specificati in <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> indicare come il contenuto di <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> deve risultare significativi per il riconoscimento ha esito positivo.  Il motore di riconoscimento vocale utilizza la pronuncia specificata in <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> in modo che corrisponda il riconoscimento vocale input e restituisce la stringa contenuta da <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> nel risultato del riconoscimento.  
  
 Se il telefono non è delimitati da spazi o la stringa specificata contiene un numero di telefono non riconosciuto, il motore di riconoscimento non riconosce la pronuncia specificata come una pronuncia valida della parola contenuta da <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.  
  
 Pronuncia specificata in <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> hanno la precedenza su pronunce specificati in dizionari associate a una grammatica o di un motore di riconoscimento. Inoltre, la pronuncia nel <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> proprietà si applica solo a singola occorrenza della parola o una frase contenuta da <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente la grammatica contiene parole gergale e dispone di una parola non comune: "whatchamacallit". Aggiunta di un pronuncia inline personalizzato, tramite il <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> proprietà del <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> classe può migliorare l'accuratezza del riconoscimento per la parola "whatchamacallit" nonché per l'intera frase che lo contiene. L'esempio Usa telefoni dal Microsoft Universal Phone impostare (UPS) per definire la pronuncia personalizzata.  
  
```  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an instance of the in-process recognizer.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine(new System.Globalization.CultureInfo("en-US")))  
      {  
  
        // Build the SrgsOneOf objects with alternative choices for the slang phrase.  
        SrgsOneOf gimme = new SrgsOneOf(  
          new string[] { "give me", "gimme", "hand me", "ha'me" });  
        SrgsOneOf the = new SrgsOneOf(new string[] { "the", "duh" });  
  
        // Build the one-of element that contains the pronunciation.  
        SrgsItem thing = new SrgsItem("thingamajig");  
        SrgsItem whatcha = new SrgsItem();  
        SrgsToken callit = new SrgsToken("whatchamacallit");  
        callit.Pronunciation = "W AE T CH AE M AE K AA L IH T";  
        whatcha.Add(callit);  
        SrgsOneOf what = new SrgsOneOf(new SrgsItem[] {thing, whatcha});  
  
        // Create the rule from the SrgsOneOf objects.  
        SrgsRule slangRule = new SrgsRule("slang", gimme, the, what);  
  
        // Build an SrgsDocument object from the rule and set the phonetic alphabet.  
        SrgsDocument tokenPron = new SrgsDocument(slangRule);  
        tokenPron.PhoneticAlphabet = SrgsPhoneticAlphabet.Ups;  
  
        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  
        Grammar g_Slang = new Grammar(tokenPron);  
        g_Slang.Name = ("Slang Pronunciation");  
        recognizer.LoadGrammarAsync(g_Slang);  
  
        // Configure recognizer input.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Start asynchronous recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Recognized phrase: " + e.Result.Text);  
      Console.WriteLine("Confidence: " + e.Result.Confidence);  
      Console.WriteLine("  Word summary: ");  
      foreach (RecognizedWordUnit word in e.Result.Words)  
      {  
        Console.WriteLine(  
          "    Lexical form ({1})" +  
          " Pronunciation ({0})" +  
          " Confidence ({2})",  
          word.Pronunciation, word.LexicalForm, word.Confidence);  
      }  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Si è tentato di impostare <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" /> su <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Viene effettuato un tentativo di assegnazione di una stringa vuota a <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la forma scritta della parola che deve essere pronunciata.</summary>
        <value>Il testo contenuto nell'istanza della classe <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene in genere rappresentano lo stesso valore di <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> modulo potrebbe essere diverso dal <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> modulo per una parola o una frase in un <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. Ad esempio, il <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> modulo può essere un acronimo, ad esempio 'USA', mentre il testo che verrà letta e a cui il <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> si applica, è "Stati Uniti d'America".  
  
 Il valore predefinito per il <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> proprietà è una stringa vuota, "".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Si è tentato di impostare <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" /> su <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Viene effettuato un tentativo di assegnazione di una stringa vuota a <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />.</exception>
        <exception cref="T:System.ArgumentException">Viene effettuato un tentativo di assegnazione di una stringa contenente virgolette (") a <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>