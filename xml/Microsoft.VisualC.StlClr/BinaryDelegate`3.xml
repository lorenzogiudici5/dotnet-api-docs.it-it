<Type Name="BinaryDelegate&lt;TArg1,TArg2,TResult&gt;" FullName="Microsoft.VisualC.StlClr.BinaryDelegate&lt;TArg1,TArg2,TResult&gt;">
  <TypeSignature Language="C#" Value="public delegate TResult BinaryDelegate&lt;TArg1,TArg2,TResult&gt;(TArg1 A_0, TArg2 A_1);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BinaryDelegate`3&lt;TArg1, TArg2, TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function BinaryDelegate(Of TArg1, TArg2, TResult)(A_0 As TArg1, A_1 As TArg2) As TResult " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TArg1, typename TArg2, typename TResult&gt;&#xA;public delegate TResult BinaryDelegate(TArg1 A_0, TArg2 A_1);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TArg1" />
    <TypeParameter Name="TArg2" />
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1708")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1005")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="A_0" Type="TArg1" />
    <Parameter Name="A_1" Type="TArg2" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TResult</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TArg1"><span data-ttu-id="d36e8-101">Primo argomento delegato.</span><span class="sxs-lookup"><span data-stu-id="d36e8-101">The first delegate argument.</span></span></typeparam>
    <typeparam name="TArg2"><span data-ttu-id="d36e8-102">Secondo argomento delegato.</span><span class="sxs-lookup"><span data-stu-id="d36e8-102">The second delegate argument.</span></span></typeparam>
    <typeparam name="TResult"><span data-ttu-id="d36e8-103">Tipo restituito del delegato.</span><span class="sxs-lookup"><span data-stu-id="d36e8-103">The return type of the delegate.</span></span></typeparam>
    <param name="A_0"><span data-ttu-id="d36e8-104">Primo argomento.</span><span class="sxs-lookup"><span data-stu-id="d36e8-104">The first argument.</span></span></param>
    <param name="A_1"><span data-ttu-id="d36e8-105">Secondo argomento.</span><span class="sxs-lookup"><span data-stu-id="d36e8-105">The second argument.</span></span></param>
    <summary><span data-ttu-id="d36e8-106">Descrive un delegato di due argomenti.</span><span class="sxs-lookup"><span data-stu-id="d36e8-106">Describes a two-argument delegate.</span></span> <span data-ttu-id="d36e8-107">Viene usato per specificare gli argomenti e il tipo restituito del delegato.</span><span class="sxs-lookup"><span data-stu-id="d36e8-107">You use it to specify the arguments and return type of the delegate.</span></span></summary>
    <returns><span data-ttu-id="d36e8-108">Tipo restituito del delegato.</span><span class="sxs-lookup"><span data-stu-id="d36e8-108">The return type of the delegate.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d36e8-109">Questo delegato Ã¨ l'equivalente generico di STL/CLR `binary_delegate` classe.</span><span class="sxs-lookup"><span data-stu-id="d36e8-109">This delegate is the generic equivalent of the STL/CLR `binary_delegate` class.</span></span> <span data-ttu-id="d36e8-110">Per ulteriori informazioni, vedere [binary_delegate (STL/CLR)](/cpp/dotnet/binary-delegate-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="d36e8-110">For more information, see [binary_delegate (STL/CLR)](/cpp/dotnet/binary-delegate-stl-clr).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>