<Type Name="StatisticFormula" FullName="System.Web.UI.DataVisualization.Charting.StatisticFormula">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="235f03061dd887e4cb6e27ee31b456531e70ea3e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36393210" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StatisticFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatisticFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.StatisticFormula" />
  <TypeSignature Language="VB.NET" Value="Public Class StatisticFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class StatisticFormula" />
  <TypeSignature Language="F#" Value="type StatisticFormula = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8233e-101">Calcola formule statistiche.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8233e-101">Calculates statistical formulas.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8233e-102">Le formule possono essere raggruppate approssimativamente nelle categorie seguenti: le distribuzioni, incluse le distribuzioni inverse; test; e formule statistiche di base.</span><span class="sxs-lookup"><span data-stu-id="8233e-102">Formulas can be loosely grouped into the following categories: distributions, including inverse distributions; tests; and basic statistical formulas.</span></span> <span data-ttu-id="8233e-103">Ogni gruppo ha caratteristiche comuni per quanto riguarda i relativi valori di input e restituiti.</span><span class="sxs-lookup"><span data-stu-id="8233e-103">Each group has common characteristics with respect to their input and return values.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anova">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AnovaResult Anova (double probability, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.AnovaResult Anova(float64 probability, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Anova (probability As Double, inputSeriesNames As String) As AnovaResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::AnovaResult ^ Anova(double probability, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Anova : double * string -&gt; System.Web.UI.DataVisualization.Charting.AnovaResult" Usage="statisticFormula.Anova (probability, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AnovaResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="8233e-104">Valore alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-104">Alpha value.</span>
          </span>
          <span data-ttu-id="8233e-105">L'intervallo di input accettabile è compreso tra 0 e 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-105">The acceptable input range is between 0 and 1.</span>
          </span>
        </param>
        <param name="inputSeriesNames">
          <span data-ttu-id="8233e-106">Nomi di due o più serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-106">Names of two or more input series.</span>
          </span>
          <span data-ttu-id="8233e-107">Ogni serie deve essere presente nella raccolta di serie al momento della chiamata del metodo e avere lo stesso numero di punti dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-107">Each series must exist in the series collection at the time of the method call, and have the same number of data points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-108">La formula dell'analisi della varianza determina la presenza o l'assenza di una differenza statisticamente significativa tra i valori medi di due o più gruppi di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-108">The Anova formula determines the existence or absence of a statistically significant difference between the mean values of two or more groups of data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-109">Oggetto <see cref="T:System.Web.UI.DataVisualization.Charting.AnovaResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-109">An <see cref="T:System.Web.UI.DataVisualization.Charting.AnovaResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-110">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-110">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As AnovaResult = Chart1.DataManipulator.Statistics.Anova(.05, "Series1,Series2,Series3")  
```  
  
```csharp  
AnovaResult result = Chart1.DataManipulator.Statistics.Anova(.05, "Series1,Series2,Series3");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaFunction">
      <MemberSignature Language="C#" Value="public double BetaFunction (double m, double n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 BetaFunction(float64 m, float64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaFunction (m As Double, n As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BetaFunction(double m, double n);" />
      <MemberSignature Language="F#" Value="member this.BetaFunction : double * double -&gt; double" Usage="statisticFormula.BetaFunction (m, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double" />
        <Parameter Name="n" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="8233e-111">Primo valore per la funzione beta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-111">First value for the beta function.</span>
          </span>
        </param>
        <param name="n">
          <span data-ttu-id="8233e-112">Secondo valore per la funzione beta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-112">Second value for the beta function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-113">La funzione beta calcola il valore della funzione beta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-113">The beta function calculates the beta function value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-114">Valore beta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-114">Beta value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-115">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-115">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.BetaFunction(2.3, 6.2)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.BetaFunction(2.3, 6.2);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlation">
      <MemberSignature Language="C#" Value="public double Correlation (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Correlation(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Correlation (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Correlation(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Correlation : string * string -&gt; double" Usage="statisticFormula.Correlation (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">
          <span data-ttu-id="8233e-116">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del primo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-116">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="8233e-117">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del secondo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-117">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-118">La formula di correlazione indica l'efficacia della relazione esistente tra due variabili casuali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-118">The correlation formula shows the strength of the relationship that exists between two random variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-119">Valore di correlazione tra i due gruppi di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-119">Correlation value between the two groups of data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8233e-120">Il metodo genera un'eccezione se la serie di input non è lo stesso numero di punti dati.</span><span class="sxs-lookup"><span data-stu-id="8233e-120">The method throws an exception if the input series do not have the same number of data points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8233e-121">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-121">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.Correlation("Series1", "Series2")  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.Correlation("Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance">
      <MemberSignature Language="C#" Value="public double Covariance (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Covariance(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Covariance : string * string -&gt; double" Usage="statisticFormula.Covariance (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">
          <span data-ttu-id="8233e-122">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del primo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-122">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="8233e-123">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del secondo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-123">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-124">La formula della covarianza misura il grado di dipendenza che può sussistere tra due variabili casuali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-124">The covariance formula measures the degree of dependence that may exist between two random variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-125">Valore di covarianza tra i due gruppi di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-125">Covariance value between the two groups of data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8233e-126">Il metodo genera un'eccezione se la serie di input non è lo stesso numero di punti dati.</span><span class="sxs-lookup"><span data-stu-id="8233e-126">The method throws an exception if the input series do not have the same number of data points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8233e-127">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-127">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As double = Chart1.DataManipulator.Statistics.Covariance("Series1", "Series2")  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.Covariance("Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FDistribution">
      <MemberSignature Language="C#" Value="public double FDistribution (double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 FDistribution(float64 value, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FDistribution (value As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FDistribution(double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.FDistribution : double * int * int -&gt; double" Usage="statisticFormula.FDistribution (value, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8233e-128">Valore F per cui si desidera la distribuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-128">The F value for which you want the distribution.</span>
          </span>
        </param>
        <param name="firstDegreeOfFreedom">
          <span data-ttu-id="8233e-129">Primo grado di libertà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-129">First degree of freedom.</span>
          </span>
        </param>
        <param name="secondDegreeOfFreedom">
          <span data-ttu-id="8233e-130">Secondo grado di libertà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-130">Second degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-131">La formula della distribuzione F calcola la probabilità per la distribuzione F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-131">The F distribution formula calculates the probability for the F-distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-132">Probabilità per la distribuzione F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-132">Probability for the F distribution.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-133">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-133">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As double = Chart1.DataManipulator.Statistics.FDistribution(6.31, 15, 7)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.FDistribution(6.31, 15, 7);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.FTestResult FTest (double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.FTestResult FTest(float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FTest (probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As FTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::FTestResult ^ FTest(double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.FTest : double * string * string -&gt; System.Web.UI.DataVisualization.Charting.FTestResult" Usage="statisticFormula.FTest (probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.FTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="8233e-134">Valore alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-134">The alpha value.</span>
          </span>
          <span data-ttu-id="8233e-135">L'intervallo di input accettabile è compreso tra 0 e 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-135">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="8233e-136">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del primo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-136">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="8233e-137">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del secondo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-137">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-138">La formula del test F esegue un test F di due campioni usando la distribuzione F e consente di determinare se i campioni hanno varianze diverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-138">The F-test formula performs a two-sample F-test using F distribution, and is used to see if the samples have different variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-139">Oggetto <see cref="T:System.Web.UI.DataVisualization.Charting.FTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-139">An <see cref="T:System.Web.UI.DataVisualization.Charting.FTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8233e-140">Il metodo genera un'eccezione se la serie di input non è lo stesso numero di punti dati.</span><span class="sxs-lookup"><span data-stu-id="8233e-140">The method throws an exception if the input series do not have the same number of data points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8233e-141">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-141">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As FTestResult = Chart1.DataManipulator.Statistics.FTest(0.05, "Series1", "Series2")  
```  
  
```csharp  
FTestResult result = Chart1.DataManipulator.Statistics.FTest(0.05, "Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaFunction">
      <MemberSignature Language="C#" Value="public double GammaFunction (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GammaFunction(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaFunction (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaFunction(double value);" />
      <MemberSignature Language="F#" Value="member this.GammaFunction : double -&gt; double" Usage="statisticFormula.GammaFunction value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8233e-142">Valore per cui è necessario il valore gamma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-142">Value for which the gamma value is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-143">La funzione gamma calcola il valore gamma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-143">The gamma function calculates the gamma value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-144">Valore gamma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-144">Gamma value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-145">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-145">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.GammaFunction(6.2)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.GammaFunction(6.2);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseFDistribution">
      <MemberSignature Language="C#" Value="public double InverseFDistribution (double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseFDistribution(float64 probability, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseFDistribution (probability As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseFDistribution(double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseFDistribution : double * int * int -&gt; double" Usage="statisticFormula.InverseFDistribution (probability, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="8233e-146">Probabilità per la distribuzione F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-146">Probability for the F distribution.</span>
          </span>
          <span data-ttu-id="8233e-147">L'intervallo di input accettabile è compreso tra 0 e 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-147">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="firstDegreeOfFreedom">
          <span data-ttu-id="8233e-148">Primo grado di libertà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-148">First degree of freedom.</span>
          </span>
        </param>
        <param name="secondDegreeOfFreedom">
          <span data-ttu-id="8233e-149">Secondo grado di libertà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-149">Second degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-150">La formula della distribuzione F inversa calcola l'inverso della distribuzione cumulativa F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-150">The inverse F distribution formula calculates the inverse of the F cumulative distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-151">Valore F per la distribuzione F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-151">F value for the F distribution.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-152">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-152">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.InverseFDistribution(.05, 15, 30)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.InverseFDistribution(.05, 15, 30);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseNormalDistribution">
      <MemberSignature Language="C#" Value="public double InverseNormalDistribution (double probability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseNormalDistribution(float64 probability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseNormalDistribution (probability As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseNormalDistribution(double probability);" />
      <MemberSignature Language="F#" Value="member this.InverseNormalDistribution : double -&gt; double" Usage="statisticFormula.InverseNormalDistribution probability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="8233e-153">Valore alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-153">Alpha value.</span>
          </span>
          <span data-ttu-id="8233e-154">L'intervallo di input accettabile è compreso tra 0 e 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-154">The acceptable input range is between 0 and 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-155">La formula della distribuzione normale inversa calcola l'inverso della distribuzione cumulativa normale standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-155">The inverse normal distribution formula calculates the inverse of the standard normal cumulative distribution.</span>
          </span>
          <span data-ttu-id="8233e-156">La distribuzione ha media 0 e una deviazione standard pari a 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-156">The distribution has a mean of 0 and a standard deviation of one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-157">Inverso della funzione di distribuzione normale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-157">Inverse of the normal distribution function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-158">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-158">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As double = Chart1.DataManipulator.Statistics.InverseNormalDistribution(.05)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.InverseNormalDistribution(.05);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseTDistribution">
      <MemberSignature Language="C#" Value="public double InverseTDistribution (double probability, int degreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseTDistribution(float64 probability, int32 degreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseTDistribution (probability As Double, degreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseTDistribution(double probability, int degreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseTDistribution : double * int -&gt; double" Usage="statisticFormula.InverseTDistribution (probability, degreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="8233e-159">Probabilità per la distribuzione F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-159">Probability for the F distribution.</span>
          </span>
          <span data-ttu-id="8233e-160">L'intervallo di input accettabile è compreso tra 0 e 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-160">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="degreeOfFreedom">
          <span data-ttu-id="8233e-161">Grado di libertà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-161">Degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-162">La formula della distribuzione *t* inversa calcola il valore *t* della distruzione *t* di Student come funzione di probabilità e gradi di libertà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-162">The inverse *t*-distribution formula calculates the *t*-value of the Student's *t*-distribution as a function of probability and degrees of freedom.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-163">Inverso della distribuzione *t*.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-163">Inverse of the *t*-distribution.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-164">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-164">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
double result = Chart1.DataManipulator.Statistics.InverseTDistribution(.05, 15)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.InverseTDistribution(.05, 15);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mean">
      <MemberSignature Language="C#" Value="public double Mean (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Mean(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mean (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Mean(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Mean : string -&gt; double" Usage="statisticFormula.Mean inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="8233e-165">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati per cui è necessario il valore medio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-165">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the data for which the mean value is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-166">La formula della media calcola la media dei dati archiviati in una serie di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-166">The mean formula calculates the average, or mean, of data stored in a data series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-167">Valore medio di tutti i punti dati nella serie specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-167">Mean value of all the data points in the given series.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8233e-168">Se la serie di input denominato non esiste nel <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> al momento della chiamata al metodo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8233e-168">If named input series does not exist in the <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8233e-169">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-169">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.Mean("Series1")  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.Mean("Series1");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Median">
      <MemberSignature Language="C#" Value="public double Median (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Median(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Median (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Median(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Median : string -&gt; double" Usage="statisticFormula.Median inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="8233e-170">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati per cui è necessario il valore di mediana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-170">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the data for which the median value is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-171">La formula della mediana calcola la mediana dei dati archiviati in una serie di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-171">The median formula calculates the median of the data stored in a data series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-172">Mediana di tutti i punti dati nella serie specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-172">Median of all the data points in the given series.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8233e-173">Se la serie di input denominata non esiste nel <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> al momento della chiamata al metodo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8233e-173">If the named input series does not exist in the <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8233e-174">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-174">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.Median("Series1")  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.Median("Series1");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalDistribution">
      <MemberSignature Language="C#" Value="public double NormalDistribution (double zValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 NormalDistribution(float64 zValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormalDistribution (zValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormalDistribution(double zValue);" />
      <MemberSignature Language="F#" Value="member this.NormalDistribution : double -&gt; double" Usage="statisticFormula.NormalDistribution zValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="zValue">
          <span data-ttu-id="8233e-175">Valore per cui è necessaria la distribuzione normale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-175">Value for which the normal distribution is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-176">La formula della distribuzione normale calcola il valore della distribuzione cumulativa normale standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-176">The normal distribution formula calculates the value of the standard normal cumulative distribution.</span>
          </span>
          <span data-ttu-id="8233e-177">La distribuzione ha media 0 e una deviazione standard pari a 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-177">The distribution has a mean of 0 and a standard deviation of 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-178">Valore della distribuzione cumulativa normale standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-178">Value of the standard normal cumulative distribution.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-179">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-179">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.NormalDistribution(1.96)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.NormalDistribution(1.96);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TDistribution">
      <MemberSignature Language="C#" Value="public double TDistribution (double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 TDistribution(float64 value, int32 degreeOfFreedom, bool oneTail) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TDistribution (value As Double, degreeOfFreedom As Integer, oneTail As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TDistribution(double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="F#" Value="member this.TDistribution : double * int * bool -&gt; double" Usage="statisticFormula.TDistribution (value, degreeOfFreedom, oneTail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
        <Parameter Name="oneTail" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8233e-180">Valore <c>t</c> per cui si vuole la distribuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-180">
              <c>t</c>-value for which you want the distribution.</span>
          </span>
        </param>
        <param name="degreeOfFreedom">
          <span data-ttu-id="8233e-181">Grado di libertà</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-181">Degree of freedom</span>
          </span>
        </param>
        <param name="oneTail">
          <span data-ttu-id="8233e-182">Se è impostato su <see langword="true" />, viene utilizzata la distribuzione a una coda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-182">If set to <see langword="true" />, one-tailed distribution is used.</span>
          </span>
          <span data-ttu-id="8233e-183">In caso contrario, viene utilizzata la distribuzione a due code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-183">Otherwise, two-tailed distribution is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-184">La formula della distribuzione *t* calcola la probabilità per la distribuzione *t* di Student.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-184">The *t*-distribution formula calculates the probability for the Student's *t*-distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-185">Probabilità della funzione di distribuzione *t*.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-185">*t*-distribution function probability.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-186">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-186">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.TDistribution(1.96, 30, true)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.TDistribution(1.96, 30, true);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestEqualVariances">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.TTestResult TTestEqualVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.TTestResult TTestEqualVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestEqualVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::TTestResult ^ TTestEqualVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestEqualVariances : double * double * string * string -&gt; System.Web.UI.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestEqualVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="8233e-187">Differenza ipotizzata tra le medie dei gruppi di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-187">Hypothesized difference between the means of the data groups.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="8233e-188">Valore alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-188">Alpha value.</span>
          </span>
          <span data-ttu-id="8233e-189">L'intervallo di input accettabile è compreso tra 0 e 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-189">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="8233e-190">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del primo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-190">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="8233e-191">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del secondo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-191">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-192">La formula del test *t* con varianze uguali esegue un test *t* usando la distribuzione *t* di Student con varianze uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-192">The *t*-test with equal variances formula performs a *t*-test using Student's *t*-distribution with equal variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-193">Un oggetto <see cref="T:System.Web.UI.DataVisualization.Charting.TTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-193">A <see cref="T:System.Web.UI.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-194">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-194">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As TTestResult = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, "Series1", "Series2")  
```  
  
```csharp  
TTestResult result = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, "Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestPaired">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.TTestResult TTestPaired (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.TTestResult TTestPaired(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestPaired (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::TTestResult ^ TTestPaired(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestPaired : double * double * string * string -&gt; System.Web.UI.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestPaired (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="8233e-195">Differenza ipotizzata tra le medie dei gruppi di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-195">Hypothesized difference between the means of the data groups.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="8233e-196">Valore alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-196">Alpha value.</span>
          </span>
          <span data-ttu-id="8233e-197">L'intervallo di input accettabile è compreso tra 0 e 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-197">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="8233e-198">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del primo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-198">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="8233e-199">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del secondo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-199">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-200">La formula del test *t* con dati accoppiati esegue un test *t* usando la distribuzione *t* di Student con campioni accoppiati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-200">The *t*-test paired formula performs a *t*-test using Student's *t*-distribution with paired samples.</span>
          </span>
          <span data-ttu-id="8233e-201">Questo è utile quando si osserva un accoppiamento naturale nei campioni, ad esempio quando un gruppo di campioni viene testato due volte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-201">This is useful when there is an observed natural pairing in samples (for example, when a sample group is tested twice).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-202">Un oggetto <see cref="T:System.Web.UI.DataVisualization.Charting.TTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-202">A <see cref="T:System.Web.UI.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-203">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-203">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As TTestResult = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, "Series1", "Series2")  
```  
  
```csharp  
TTestResult result = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, "Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestUnequalVariances">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.TTestResult TTestUnequalVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.TTestResult TTestUnequalVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestUnequalVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::TTestResult ^ TTestUnequalVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestUnequalVariances : double * double * string * string -&gt; System.Web.UI.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestUnequalVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="8233e-204">Differenza ipotizzata tra le medie dei gruppi di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-204">Hypothesized difference between the means of the data groups.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="8233e-205">Valore alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-205">Alpha value.</span>
          </span>
          <span data-ttu-id="8233e-206">L'intervallo di input accettabile è compreso tra 0 e 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-206">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="8233e-207">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del primo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-207">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="8233e-208">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del secondo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-208">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-209">La formula del test *t* con varianze diverse esegue un test *t* usando la distribuzione *t* di Student con varianze diverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-209">The *t*-test with unequal variances formula performs a *t*-test using Student's *t*-distribution with unequal variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-210">Un oggetto <see cref="T:System.Web.UI.DataVisualization.Charting.TTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-210">A <see cref="T:System.Web.UI.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-211">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-211">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As TTestResult = Chart1.DataManipulator.Statistics.TTestUnEqualVariances(0.2, 0.05, "Series1", "Series2")  
```  
  
```csharp  
TTestResult result = Chart1.DataManipulator.Statistics.TTestUnEqualVariances(0.2, 0.05, "Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Variance">
      <MemberSignature Language="C#" Value="public double Variance (string inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Variance(string inputSeriesName, bool sampleVariance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Variance (inputSeriesName As String, sampleVariance As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Variance(System::String ^ inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="F#" Value="member this.Variance : string * bool -&gt; double" Usage="statisticFormula.Variance (inputSeriesName, sampleVariance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="sampleVariance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="8233e-212">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati per cui è necessario il valore medio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-212">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the data for which the mean value is required.</span>
          </span>
        </param>
        <param name="sampleVariance">
          <span data-ttu-id="8233e-213">Specificare <see langword="true" /> se i dati sono un campione di una popolazione e <see langword="false" /> se i dati sono l'intera popolazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-213">Specify <see langword="true" /> if the data is a sample of a population; and <see langword="false" /> if the data is the entire population.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-214">La formula della varianza calcola la varianza all'interno di un gruppo di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-214">The variance formula calculates the variance within a group of data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-215">Varianza all'interno del gruppo di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-215">Variance within the group of data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-216">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-216">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.Variance("Series1", false)  
```  
  
```csharp  
TTestResult result = double result = Chart1.DataManipulator.Statistics.Variance("Series1", false);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ZTestResult ZTest (double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.ZTestResult ZTest(float64 hypothesizedMeanDifference, float64 varianceFirstGroup, float64 varianceSecondGroup, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ZTest (hypothesizedMeanDifference As Double, varianceFirstGroup As Double, varianceSecondGroup As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As ZTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::ZTestResult ^ ZTest(double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.ZTest : double * double * double * double * string * string -&gt; System.Web.UI.DataVisualization.Charting.ZTestResult" Usage="statisticFormula.ZTest (hypothesizedMeanDifference, varianceFirstGroup, varianceSecondGroup, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ZTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="varianceFirstGroup" Type="System.Double" />
        <Parameter Name="varianceSecondGroup" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="8233e-217">Differenza ipotizzata tra le medie dei gruppi di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-217">Hypothesized difference between the means of the data groups.</span>
          </span>
        </param>
        <param name="varianceFirstGroup">
          <span data-ttu-id="8233e-218">Varianza all'interno del primo gruppo di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-218">Variance within the first group of data.</span>
          </span>
        </param>
        <param name="varianceSecondGroup">
          <span data-ttu-id="8233e-219">Varianza all'interno del secondo gruppo di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-219">Variance within the second group of data.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="8233e-220">Valore alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-220">Alpha value.</span>
          </span>
          <span data-ttu-id="8233e-221">L'intervallo di input accettabile è compreso tra 0 e 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-221">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="8233e-222">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del primo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-222">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="8233e-223">Nome dell'oggetto <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> in cui sono archiviati i dati del secondo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-223">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8233e-224">La formula del test Z esegue un test Z utilizzando la distribuzione normale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-224">The Z-test formula performs a Z-test using normal distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8233e-225">Un oggetto <see cref="T:System.Web.UI.DataVisualization.Charting.ZTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8233e-225">A <see cref="T:System.Web.UI.DataVisualization.Charting.ZTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8233e-226">Il codice seguente viene illustrato come utilizzare la formula.</span><span class="sxs-lookup"><span data-stu-id="8233e-226">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As ZTestResult = Chart1.DataManipulator.Statistics.ZTest(0.2, 2.5, 4.5, 0.05, "Series1", "Series2")  
```  
  
```csharp  
ZTestResult result = Chart1.DataManipulator.Statistics.ZTest(0.2, 2.5, 4.5, 0.05, "Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>