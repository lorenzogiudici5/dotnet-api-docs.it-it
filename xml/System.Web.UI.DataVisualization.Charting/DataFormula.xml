<Type Name="DataFormula" FullName="System.Web.UI.DataVisualization.Charting.DataFormula">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f840c5dcdf884f475eabe94f4b90057a92c08eef" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39880077" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataFormula" />
  <TypeSignature Language="F#" Value="type DataFormula = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="507ff-101">Fornisce le propriet√† e i metodi per preparare i dati della serie per l'analisi tecnica, applicare formule ai dati della serie e preparare i dati di output da visualizzare come grafico.</span>
      <span class="sxs-lookup">
        <span data-stu-id="507ff-101">Provides properties and methods to prepare series data for technical analysis, apply formulas on the series data and prepare output data to be displayed as a chart.</span>
      </span>
      <span data-ttu-id="507ff-102">I calcoli effettivi vengono eseguiti nella classe <see cref="T:System.Web.UI.DataVisualization.Charting.StatisticFormula" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="507ff-102">The actual calculations are performed in the <see cref="T:System.Web.UI.DataVisualization.Charting.StatisticFormula" /> class.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataFormula ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataFormula.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataFormula();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="507ff-103">Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.DataVisualization.Charting.DataFormula" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-103">Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.DataFormula" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySeriesValues">
      <MemberSignature Language="C#" Value="public void CopySeriesValues (string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopySeriesValues(string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataFormula.CopySeriesValues(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopySeriesValues (inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopySeriesValues(System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.CopySeriesValues : string * string -&gt; unit" Usage="dataFormula.CopySeriesValues (inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeries">
          <span data-ttu-id="507ff-104">Elenco delimitato da virgole di nomi di serie di dati di input e nomi di valori X e Y facoltativi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-104">A comma-separated list of input data series names and optional X and Y value names.</span>
          </span>
        </param>
        <param name="outputSeries">
          <span data-ttu-id="507ff-105">Elenco delimitato da virgole di nomi di serie di dati di output e nomi di valori X e Y facoltativi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-105">A comma-separated list of output data series names and optional X and Y value names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="507ff-106">Unisce, divide o sposta valori Y nella serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-106">Merges, splits or moves Y values in the series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FinancialFormula">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="507ff-107">Chiama un metodo da un modulo formula con i parametri specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-107">Calls a method from a formula module with the specified parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Web.UI.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Web.UI.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataFormula.FinancialFormula(System.Web.UI.DataVisualization.Charting.FinancialFormula,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Web::UI::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Web.UI.DataVisualization.Charting.FinancialFormula * string -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Web.UI.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName">
          <span data-ttu-id="507ff-108">Nome della formula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-108">Formula name.</span>
          </span>
        </param>
        <param name="inputSeries">
          <span data-ttu-id="507ff-109">Elenco delimitato da virgole di nomi di serie di input e nomi di valori X e Y facoltativi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-109">A comma-separated list of input series names and optional X and Y value names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="507ff-110">Chiama un metodo da un modulo formula con il nome della formula e i nomi di serie di input specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-110">Calls a method from a formula module with the specified formula name and input series name(s).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Web.UI.DataVisualization.Charting.FinancialFormula formulaName, System.Web.UI.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Web.UI.DataVisualization.Charting.FinancialFormula formulaName, class System.Web.UI.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataFormula.FinancialFormula(System.Web.UI.DataVisualization.Charting.FinancialFormula,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Web::UI::DataVisualization::Charting::FinancialFormula formulaName, System::Web::UI::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Web.UI.DataVisualization.Charting.FinancialFormula * System.Web.UI.DataVisualization.Charting.Series -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Web.UI.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName">
          <span data-ttu-id="507ff-111">Nome della formula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-111">Formula name.</span>
          </span>
        </param>
        <param name="inputSeries">
          <span data-ttu-id="507ff-112">Serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-112">Input series.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="507ff-113">Chiama un metodo da un modulo formula con il nome della formula e la serie di input specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-113">Calls a method from a formula module with the specified formula name and input series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Web.UI.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Web.UI.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataFormula.FinancialFormula(System.Web.UI.DataVisualization.Charting.FinancialFormula,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Web::UI::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Web.UI.DataVisualization.Charting.FinancialFormula * string * string -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Web.UI.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName">
          <span data-ttu-id="507ff-114">Nome della formula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-114">Formula name.</span>
          </span>
        </param>
        <param name="inputSeries">
          <span data-ttu-id="507ff-115">Elenco delimitato da virgole di nomi di serie di input e nomi di valori X e Y facoltativi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-115">A comma-separated list of input series names and optional X and Y value names.</span>
          </span>
        </param>
        <param name="outputSeries">
          <span data-ttu-id="507ff-116">Elenco delimitato da virgole di nomi di serie di output e nomi di valori X e Y facoltativi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-116">A comma-separated list of output series names and optional X and Y value names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="507ff-117">Chiama un metodo da un modulo formula con il nome della formula, i nomi di serie di input e i nomi di serie di output specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-117">Calls a method from a formula module with the specified formula name, input series name(s) and output series name(s).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Web.UI.DataVisualization.Charting.FinancialFormula formulaName, System.Web.UI.DataVisualization.Charting.Series inputSeries, System.Web.UI.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Web.UI.DataVisualization.Charting.FinancialFormula formulaName, class System.Web.UI.DataVisualization.Charting.Series inputSeries, class System.Web.UI.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataFormula.FinancialFormula(System.Web.UI.DataVisualization.Charting.FinancialFormula,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Web::UI::DataVisualization::Charting::FinancialFormula formulaName, System::Web::UI::DataVisualization::Charting::Series ^ inputSeries, System::Web::UI::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Web.UI.DataVisualization.Charting.FinancialFormula * System.Web.UI.DataVisualization.Charting.Series * System.Web.UI.DataVisualization.Charting.Series -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Web.UI.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName">
          <span data-ttu-id="507ff-118">Nome della formula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-118">Formula name.</span>
          </span>
        </param>
        <param name="inputSeries">
          <span data-ttu-id="507ff-119">Serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-119">The input series.</span>
          </span>
        </param>
        <param name="outputSeries">
          <span data-ttu-id="507ff-120">Serie di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-120">The output series.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="507ff-121">Chiama un metodo da un modulo formula con il nome della formula, la serie di input e la serie di output specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-121">Calls a method from a formula module with the specified formula name, input series and output series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Web.UI.DataVisualization.Charting.FinancialFormula formulaName, string parameters, string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Web.UI.DataVisualization.Charting.FinancialFormula formulaName, string parameters, string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataFormula.FinancialFormula(System.Web.UI.DataVisualization.Charting.FinancialFormula,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, parameters As String, inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Web::UI::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ parameters, System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Web.UI.DataVisualization.Charting.FinancialFormula * string * string * string -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, parameters, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Web.UI.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="parameters" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName">
          <span data-ttu-id="507ff-122">Nome della formula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-122">Formula name.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="507ff-123">Parametri della formula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-123">Formula parameters.</span>
          </span>
        </param>
        <param name="inputSeries">
          <span data-ttu-id="507ff-124">Elenco delimitato da virgole di nomi di serie di input e nomi di valori X e Y facoltativi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-124">A comma-separated list of input series names and optional X and Y value names.</span>
          </span>
        </param>
        <param name="outputSeries">
          <span data-ttu-id="507ff-125">Elenco delimitato da virgole di nomi di serie di output e nomi di valori X e Y facoltativi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-125">A comma-separated list of output series names and optional X and Y value names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="507ff-126">Chiama un metodo da un modulo formula con il nome della formula, i parametri della formula, i nomi di serie di input e i nomi di serie di output specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-126">Calls a method from a formula module with the specified formula name, formula parameters, input series name(s) and output series name(s).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Web.UI.DataVisualization.Charting.FinancialFormula formulaName, string parameters, System.Web.UI.DataVisualization.Charting.Series inputSeries, System.Web.UI.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Web.UI.DataVisualization.Charting.FinancialFormula formulaName, string parameters, class System.Web.UI.DataVisualization.Charting.Series inputSeries, class System.Web.UI.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataFormula.FinancialFormula(System.Web.UI.DataVisualization.Charting.FinancialFormula,System.String,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, parameters As String, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Web::UI::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ parameters, System::Web::UI::DataVisualization::Charting::Series ^ inputSeries, System::Web::UI::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Web.UI.DataVisualization.Charting.FinancialFormula * string * System.Web.UI.DataVisualization.Charting.Series * System.Web.UI.DataVisualization.Charting.Series -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, parameters, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Web.UI.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="parameters" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName">
          <span data-ttu-id="507ff-127">Nome della formula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-127">Formula name.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="507ff-128">Parametri della formula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-128">Formula parameters.</span>
          </span>
        </param>
        <param name="inputSeries">
          <span data-ttu-id="507ff-129">Serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-129">The input series.</span>
          </span>
        </param>
        <param name="outputSeries">
          <span data-ttu-id="507ff-130">Serie di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-130">The output series.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="507ff-131">Chiama un metodo da un modulo formula con il nome della formula, i parametri della formula, la serie di input e la serie di output specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-131">Calls a method from a formula module with the specified formula name, formula parameters, input series and output series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyPointIgnored">
      <MemberSignature Language="C#" Value="public bool IsEmptyPointIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyPointIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmptyPointIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmptyPointIgnored { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyPointIgnored : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="507ff-132">Ottiene o imposta un flag che indica se i punti vuoti vengono ignorati durante l'esecuzione dei calcoli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-132">Gets or sets a flag that indicates whether empty points are ignored while performing calculations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="507ff-133">
            <see langword="True" /> se i punti vuoti vengono ignorati; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-133">
              <see langword="True" /> if empty points are ignored, otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="507ff-134">Restituisce il valore √® `true`, i punti vuoti vengono ignorati durante i calcoli.</span><span class="sxs-lookup"><span data-stu-id="507ff-134">Returns value is `true`, empty points are ignored during calculations.</span></span> <span data-ttu-id="507ff-135">In caso contrario, i punti vuoti vengono considerati zeri.</span><span class="sxs-lookup"><span data-stu-id="507ff-135">Otherwise, empty points are treated as zeroes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartFromFirst">
      <MemberSignature Language="C#" Value="public bool IsStartFromFirst { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStartFromFirst" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataFormula.IsStartFromFirst" />
      <MemberSignature Language="VB.NET" Value="Public Property IsStartFromFirst As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStartFromFirst { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsStartFromFirst : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataFormula.IsStartFromFirst" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="507ff-136">Ottiene o imposta un flag che indica se iniziare da zero formule quali una media mobile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-136">Gets or sets a flag that indicates whether to start formulas such as a rolling average from zero.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="507ff-137">
            <see langword="True" /> se le formule come una media mobile iniziano da zero. In caso contrario <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-137">
              <see langword="True" /> if formulas such as "rolling average" start from zero; otherwise, <see langword="False" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Statistics">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.StatisticFormula Statistics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.StatisticFormula Statistics" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataFormula.Statistics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Statistics As StatisticFormula" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::StatisticFormula ^ Statistics { System::Web::UI::DataVisualization::Charting::StatisticFormula ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Statistics : System.Web.UI.DataVisualization.Charting.StatisticFormula" Usage="System.Web.UI.DataVisualization.Charting.DataFormula.Statistics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.StatisticFormula</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="507ff-138">Restituisce un riferimento alla classe <see cref="T:System.Web.UI.DataVisualization.Charting.StatisticFormula" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-138">Returns a reference to the <see cref="T:System.Web.UI.DataVisualization.Charting.StatisticFormula" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="507ff-139">Un oggetto <see cref="T:System.Web.UI.DataVisualization.Charting.StatisticFormula" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="507ff-139">A <see cref="T:System.Web.UI.DataVisualization.Charting.StatisticFormula" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>