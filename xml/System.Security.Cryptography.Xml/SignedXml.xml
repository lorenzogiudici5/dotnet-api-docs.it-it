<Type Name="SignedXml" FullName="System.Security.Cryptography.Xml.SignedXml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f8ac401693b149ab07e9bb6addec91b3ccb14b1" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33683215" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SignedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SignedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.SignedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class SignedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignedXml" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un wrapper per un oggetto firma XML core per facilitare la creazione di firme XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.SignedXml> classe è l'implementazione di .NET Framework del World Wide Web Consortium (W3C) [sintassi della firma XML e specifica di elaborazione](https://www.w3.org/TR/xmldsig-core/), noto anche come XMLDSIG (firma digitale XML).  XMLDSIG è un metodo basato su standard e interoperativo per firmare e verificare tutta o parte di un documento XML o altri dati indirizzabili da un URI (Uniform Resource Identifier).  
  
 Utilizzare la <xref:System.Security.Cryptography.Xml.SignedXml> classe ogni volta che si desidera condividere dati XML firmati tra applicazioni o organizzazioni in modo standard.  I dati firmati utilizzando questa classe possono essere verificati per qualsiasi implementazione conforme alla specifica W3C per XMLDSIG.  
  
 La <xref:System.Security.Cryptography.Xml.SignedXml> classe consente di creare i seguenti tre tipi di firme digitali XML:  
  
|Tipo di firma|Descrizione|  
|--------------------|-----------------|  
|Firma protetta|La firma è contenuta all'interno dell'elemento XML da firmare.|  
|Firma di protezione|Il documento XML firmato è contenuto all'interno di <`Signature`> elemento.|  
|Firma disconnessa interno|La firma e un documento XML firmato sono nello stesso documento, ma non contiene l'altro.|  
  
 È inoltre disponibile un quarto tipo di firma di chiamata di una firma disconnessa esterna quando i dati e la firma presenti nei documenti XML separati. Firme scollegate esterne non sono supportate dalla <xref:System.Security.Cryptography.Xml.SignedXml> classe.  
  
## <a name="the-structure-of-an--xml-signature"></a>La struttura di una firma XML  
 XMLDSIG consente di creare una <`Signature`> elemento che contiene una firma digitale di un documento XML o altri dati indirizzabili da URI.  Il <`Signature`> elemento può contenere informazioni su dove trovare una chiave che la verifica della firma e l'algoritmo di crittografia utilizzato per la firma. La struttura di base è la seguente:  
  
```xml  
  
<Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">  
    <SignedInfo>  
      <CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>  
      <SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>  
      <Reference URI="">  
        <Transforms>  
          <Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>  
        </Transforms>  
        <DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>  
        <DigestValue>Base64EncodedValue==</DigestValue>  
      </Reference>  
    </SignedInfo>  
    <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>  
  </Signature>  
  
```  
  
 Le parti principali di questa struttura sono:  
  
 Il <`CanonicalizationMethod`> elemento  
 Specifica le regole per la riscrittura il `Signature` elemento da XML, testo, in byte per la convalida della firma. Il valore predefinito in .NET Framework è http://www.w3.org/TR/2001/REC-xml-c14n-20010315, che identifica un algoritmo trustworthy. Questo elemento è rappresentato dal <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=nameWithType> proprietà.  
  
 Il <`SignatureMethod`> elemento  
 Specifica l'algoritmo utilizzato per la generazione di firma e convalida, è stata applicata per il <`Signature`> elemento per produrre il valore in <`SignatureValue`>. Nell'esempio precedente, il valore http://www.w3.org/2000/09/xmldsig#rsa-sha1 identifica una firma RSA PKCS1 SHA-1. Questo elemento è rappresentato dal <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> proprietà.  
  
 Il <`SignatureValue`> elemento  
 Specifica la firma del servizio di crittografia per il <`Signature`> elemento. Se la firma non viene verificato, quindi una parte di <`Signature`> blocco è stato alterato e il documento viene considerato non valido. Purché il <`CanonicalizationMethod`> valore sia attendibile, questo valore è resistente alle manomissioni. Questo elemento è rappresentato dal <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> proprietà.  
  
 Il `URI` attributo di <`Reference`> elemento  
 Specifica un oggetto dati utilizzando un riferimento URI. Questo attributo è rappresentato dal <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> proprietà.  
  
-   Non specificare il `URI` attributo, vale a dire l'impostazione di <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> proprietà `null`, significa che l'applicazione ricevente deve conoscere l'identità dell'oggetto. Nella maggior parte dei casi, un `null` URI genererà un'eccezione. Non utilizzare un `null` URI, a meno che l'applicazione interagisce con un protocollo che lo richiedono.  
  
-   L'impostazione di `URI` attributo a una stringa vuota indica che l'elemento radice del documento da firmare, un modulo di firma protetta.  
  
-   Se il valore di `URI` attributo inizia con #, quindi il valore deve essere risolto in un elemento nel documento corrente. Questo modulo è utilizzabile con uno dei tipi di firma supportato (firma protetta, busta firma o la firma scollegato interno).  
  
-   Altri elementi viene considerato una firma di una risorsa esterna scollegata e non è supportato dalla <xref:System.Security.Cryptography.Xml.SignedXml> classe.  
  
 Il <`Transforms`> elemento  
 Contiene un elenco ordinato di <`Transform`> gli elementi che descrivono come firmatario ottenuto l'oggetto dati che è stata digest. Un algoritmo di trasformazione è simile al metodo di canonizzazione, ma anziché la riscrittura il <`Signature`> elemento, la riscrittura il contenuto identificato dal `URI` attributo di <`Reference`> elemento. Il <`Transforms`> elemento è rappresentato dalla <xref:System.Security.Cryptography.Xml.TransformChain> classe.  
  
-   Ogni algoritmo di trasformazione è definito che accetti (un XPath set di nodi) XML o byte come input. Se il formato dei dati correnti è diverso dai requisiti di input di trasformazione, vengono applicate le regole di conversione.  
  
-   Ogni algoritmo di trasformazione è definito come produrre XML o byte come output.  
  
-   Se l'output dell'ultimo algoritmo di trasformazione non è definito in byte (o nessuna trasformazioni specificate), quindi il metodo di canonizzazione http://www.w3.org/TR/2001/REC-xml-c14n-20010315 viene utilizzato come una trasformazione implicita (anche se è stato specificato un algoritmo diverso nel <`CanonicalizationMethod`> elemento).  
  
-   Il valore http://www.w3.org/2000/09/xmldsig#enveloped-signature per la trasformazione algoritmo consente di codificare una regola che viene interpretata come rimuovere il <`Signature`> elemento dal documento. In caso contrario, un verificatore di una firma protetta verrà digest documento, inclusa la firma, ma il firmatario sarebbe hanno digest il documento prima che l'applicazione della firma, causando risposte diverse.  
  
 Il <`DigestMethod`> elemento  
 Identifica il metodo digest (hash di crittografia) da applicare al contenuto trasformato identificato dal `URI` attributo di <`Reference`> elemento. È rappresentato dal <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=nameWithType> proprietà.  
  
## <a name="choosing-a-canonicalization-method"></a>Scelta di un metodo di canonizzazione  
 A meno che non interagisce con una specifica che richiede l'utilizzo di un valore diverso, è consigliabile utilizzare il metodo di canonizzazione predefinito in .NET Framework che è l'algoritmo C14N XML 1.0, il cui valore è http://www.w3.org/TR/2001/REC-xml-c14n-20010315. L'algoritmo C14N a XML 1.0 è necessario essere supportati da tutte le implementazioni di XMLDSIG, soprattutto perché è una trasformazione finale implicita da applicare.  
  
 Sono disponibili versioni degli algoritmi di canonizzazione che supporta commenti conservare. I metodi di canonizzazione a mantenimento del commento non sono consigliati perché violano il principio di "firmare cosa viene visualizzata". Ovvero, i commenti in una <`Signature`> elemento non modificherà la logica di elaborazione per la modalità di esecuzione della firma, è semplicemente quali il valore della firma. In combinazione con un algoritmo di firma vulnerabile, che consente i commenti per essere inclusi offre un utente malintenzionato non necessari liberamente forzare una collisione hash, visualizzando un documento alterato legittimi.  In .NET Framework, sono supportati solo canonicalizers incorporato per impostazione predefinita. Per supportare canonicalizers aggiuntivi o personalizzati, vedere il <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> proprietà. Se il documento viene utilizzato un metodo di canonizzazione che non è presente nella raccolta rappresentata dal <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> proprietà, quindi il <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> metodo restituirà `false`.  
  
> [!NOTE]
>  Un'applicazione molto difensiva può rimuovere tutti i valori non è previsto firmatari da utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> insieme.  
  
## <a name="are-the-reference-values-safe-from-tampering"></a>Sono valori di riferimento sicuri da eventuali manomissioni?  
 Sì, il <`Reference`> i valori sono sicuri da eventuali manomissioni.  Verifica di .NET framework il <`SignatureValue`> calcolo prima di elaborare qualsiasi il <`Reference`> valori e i relativi Trasforma e si interrompe in anticipo per evitare le istruzioni di elaborazione potenzialmente dannose.  
  
## <a name="choosing-the-elements-to-sign"></a>Scegliere gli elementi da firmare  
 È consigliabile utilizzare il valore di "" per il `URI` attributo (o impostare il <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> proprietà in una stringa vuota), se possibile. Ciò significa che l'intero documento viene considerato per il calcolo del digest, ovvero che l'intero documento è protetto da eventuali manomissioni.  
  
 È molto comune per visualizzare `URI` valori sotto forma di punti di ancoraggio, ad esempio #foo, che fa riferimento a un elemento il cui attributo ID è "foo". Purtroppo, è facile per questa opzione per essere manomessi perché sono inclusi solo il contenuto dell'elemento di destinazione, non il contesto. Utilizzino questa distinzione è noto come Wrapping firma XML (XSW).  
  
 Se l'applicazione considera commenti semantica (che è non comune quando si gestiscono XML), sarà necessario utilizzare "#xpointer(/)" anziché "" e "#xpointer(id('foo'))" anziché "#foo". Le versioni #xpointer vengono interpretate come comprensivo di commenti, mentre i moduli di shortname sono esclusi i commenti.  
  
 Se è necessario accettare i documenti che sono protetti solo parzialmente e si desidera verificare di avere a disposizione lo stesso contenuto che la firma è protetto, utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A> metodo.  
  
## <a name="security-considerations-about-the-keyinfo-element"></a>Considerazioni sulla sicurezza sull'elemento KeyInfo  
 I dati nel parametro <`KeyInfo`> elemento (vale a dire il <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> proprietà), che contiene una chiave per convalidare la firma, non deve essere attendibile.  
  
 In particolare, quando il <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> valore rappresenta una chiave pubblica RSA, DSA o ECDSA bare, il documento potrebbe essere stato alterato, nonostante il <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> metodo reporting che la firma è valida.  Ciò può verificarsi perché l'entità che esegue solo la manomissione deve generare una nuova chiave e firmare nuovamente il documento alterato con la nuova chiave. In tal caso, a meno che l'applicazione verifica che la chiave pubblica è un valore previsto, il documento deve essere considerato come se sono stati alterato. È necessario che l'applicazione, esaminare la chiave pubblica incorporata all'interno del documento e verificarlo con un elenco di valori noti per il contesto del documento. Ad esempio, se il documento è compresa per essere emesso da un utente noto, si potrebbe controllare la chiave con un elenco di chiavi note utilizzati da tale utente.  
  
 È inoltre possibile verificare la chiave dopo l'elaborazione del documento usando il <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> (metodo), anziché utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> metodo. Tuttavia, per una protezione ottimale, è necessario verificare in anticipo la chiave.  
  
 In alternativa, prendere in considerazione durante il tentativo dell'utente registrato le chiavi pubbliche, invece di leggere il contenuto di <`KeyInfo`> elemento.  
  
## <a name="security-considerations-about-the-x509data-element"></a>Considerazioni sulla sicurezza sull'elemento X509Data  
 L'opzione facoltativa <`X509Data`> è un elemento figlio del <`KeyInfo`> elemento e contiene uno o più X509 certificati o identificatori per X509 certificati. I dati di <`X509Data`> elemento inoltre non deve essere implicitamente attendibile.  
  
 Quando si verifica un documento con l'oggetto incorporato <`X509Data`> elemento, .NET Framework consente di verificare solo che i dati si risolve in un X509 certificato la cui chiave pubblica può essere utilizzato correttamente per convalidare la firma del documento. A differenza di chiamata di <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> metodo con il `verifySignatureOnly` parametro impostato su `false`, viene eseguito alcun controllo di revoca, non è selezionata alcuna catena di certificati e non viene verificata scadenza. Anche se l'applicazione estrae il certificato stesso e lo passa al <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> metodo con il `verifySignatureOnly` parametro impostato su `false`, che è comunque la convalida non sufficiente per impedire manomissioni documento. Il certificato deve comunque essere considerato appropriato per il documento viene apposta la firma.  
  
 Usando un certificato di firma incorporato può fornire le strategie di rotazione delle chiavi utile, se nel <`X509Data`> sezione o il contenuto del documento. Quando si utilizza questo approccio un'applicazione deve estrarre manualmente il certificato ed eseguire la convalida è simile a:  
  
-   Il certificato è stato emesso, direttamente o tramite una catena da un'autorità di certificazione (CA) il cui certificato pubblico è incorporato nell'applicazione.  
  
     Utilizzo dell'elenco di trust fornita dal sistema operativo senza ulteriori controlli, ad esempio un nome di un oggetto noto, non è sufficiente per impedire manomissioni <xref:System.Security.Cryptography.Xml.SignedXml>.  
  
-   Il certificato viene verificato che non scaduti al momento della firma di documenti (o "ora" per prossimità di elaborazione dei documenti in tempo reale).  
  
-   Per i certificati emessi da un'autorità di certificazione che supporta la revoca lunga durati, verificare che il certificato non è stato revocato.  
  
-   Il soggetto del certificato viene considerato appropriato per il documento corrente.  
  
## <a name="choosing-the-transform-algorithm"></a>La scelta dell'algoritmo di trasformazione  
 Se occorre interoperare con una specifica che ha determinato valori specifici (ad esempio XrML), è necessario seguire la specifica.  Se si dispone di una firma protetta (ad esempio quando la firma dell'intero documento), quindi è necessario utilizzare http://www.w3.org/2000/09/xmldsig#enveloped-signature (rappresentato dal <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> classe). È possibile specificare anche la trasformazione XML C14N implicita, ma non è necessario.  Per una firma di protezione o scollegata, non sono necessari alcuna trasformazione. La trasformazione XML C14N implicita si occupa di tutti gli elementi.  
  
 Con la sicurezza aggiornata introdotti dal [Bollettino Microsoft sulla sicurezza MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx), .NET Framework è limitato a quali trasformazioni possono essere utilizzata nella verifica di documento per impostazione predefinita, con trasformazioni non attendibili, causando <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>per restituire sempre `false`. In particolare, le trasformazioni che richiedono input aggiuntive (specificato come elementi figlio nel codice XML) non è più consentite a causa delle loro eventualità di abuso da utenti malintenzionati. Il W3C consiglia di evitare le trasformazioni XSLT e XPath, sono le due trasformazioni principale interessate da queste restrizioni.  
  
## <a name="the-problem-with-external-references"></a>Il problema con i riferimenti esterni  
 Se un'applicazione non verifica che i riferimenti esterni non sono appropriati per il contesto corrente, può essere sfruttati in modo da fornire per molte vulnerabilità di sicurezza (incluse le informazioni di tipo Denial of Service, Distributed Reflection Denial of Service, La diffusione di Bypass di firma e l'esecuzione di codice). Anche se un'applicazione per convalidare l'URI di riferimento esterno, vi resta un problema della risorsa caricato due volte: una volta quando l'applicazione legge e una volta quando <xref:System.Security.Cryptography.Xml.SignedXml> lo legge. Poiché non c'è garanzia che la lettura di applicazione e il documento verificare passaggi hanno lo stesso contenuto, la firma non fornisce i livelli di attendibilità.  
  
 Dato il rischio di riferimenti esterni, <xref:System.Security.Cryptography.Xml.SignedXml> genererà un'eccezione quando viene rilevato un riferimento esterno.  Per ulteriori informazioni, vedere [articolo della Knowledge Base 3148821](https://support.microsoft.com/en-us/kb/3148821).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come accedere e verificare un intero documento XML utilizzando una firma protetta.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un singolo elemento di un documento XML utilizzando una firma di protezione.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come accedere e verificare un intero documento XML utilizzando una firma protetta.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un oggetto indirizzabile identificatore URI (Uniform Resource) utilizzando una firma disconnessa.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un singolo elemento di un documento XML utilizzando una firma di protezione.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml(System::Xml::XmlDocument ^ document);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document">Oggetto <see cref="T:System.Xml.XmlDocument" /> con il quale inizializzare la nuova istanza di <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> dal documento XML specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come accedere e verificare un intero documento XML utilizzando una firma protetta.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un oggetto indirizzabile identificatore URI (Uniform Resource) utilizzando una firma disconnessa.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un singolo elemento di un documento XML utilizzando una firma di protezione.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="document" /> è <see langword="null" />.  
  
 oppure  
  
 Il parametro <paramref name="document" /> contiene la proprietà null <see cref="P:System.Xml.XmlDocument.DocumentElement" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml (System.Xml.XmlElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elem As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml(System::Xml::XmlElement ^ elem);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elem" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="elem">Oggetto <see cref="T:System.Xml.XmlElement" /> con il quale inizializzare la nuova istanza di <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> dall'oggetto <see cref="T:System.Xml.XmlElement" /> specificato.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="elem" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(class System.Security.Cryptography.Xml.DataObject dataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::Security::Cryptography::Xml::DataObject ^ dataObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataObject" Type="System.Security.Cryptography.Xml.DataObject" />
      </Parameters>
      <Docs>
        <param name="dataObject">Oggetto <see cref="T:System.Security.Cryptography.Xml.DataObject" /> da aggiungere all'elenco di oggetti ai quali apporre la firma.</param>
        <summary>Consente di aggiungere un oggetto <see cref="T:System.Security.Cryptography.Xml.DataObject" /> all'elenco degli oggetti ai quali apporre la firma.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> metodo aggiunge un <`Object`> elemento che rappresenta un oggetto deve essere firmata per il <`Signature`> dell'elemento di una firma digitale XML.  
  
 Il <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> metodo chiama internamente il <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> metodo il <xref:System.Security.Cryptography.Xml.Signature> incapsulato dall'oggetto di <xref:System.Security.Cryptography.Xml.SignedXml> oggetto.  È inoltre possibile aggiungere un <xref:System.Security.Cryptography.Xml.DataObject> oggetto chiamando direttamente il <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> metodo il <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> proprietà.  
  
 Per ulteriori informazioni sulle firme digitali XML, vedere la specifica XMLDSIG disponibile all'indirizzo www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 Il seguente codice viene calcolata e la firma XML.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CPP/example.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CS/example.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.Reference reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.Reference reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::Reference ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Security.Cryptography.Xml.Reference" />
      </Parameters>
      <Docs>
        <param name="reference">Oggetto <see cref="T:System.Security.Cryptography.Xml.Reference" /> che descrive il metodo e il valore di digest, nonché la trasformazione da usare per la creazione di una firma digitale XML.</param>
        <summary>Consente di aggiungere un oggetto <see cref="T:System.Security.Cryptography.Xml.Reference" /> all'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> che descrive il metodo e il valore di digest, nonché la trasformazione da utilizzare per la creazione della firma digitale XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> metodo aggiunge un <`Reference`> elemento per il <xref:System.Security.Cryptography.Xml.SignedXml> oggetto che descrive un metodo digest, il valore digest e la trasformazione da utilizzare per la creazione di una firma digitale XML.  Il <`Reference`> è un elemento figlio di <`SignedInfo`> elemento.  
  
 Il <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> metodo chiama internamente il <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> metodo il <xref:System.Security.Cryptography.Xml.SignedInfo> incapsulato dall'oggetto di <xref:System.Security.Cryptography.Xml.SignedXml> oggetto.  È inoltre possibile aggiungere un <xref:System.Security.Cryptography.Xml.Reference> oggetto chiamando direttamente il <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> metodo il <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> proprietà.  
  
 Per ulteriori informazioni sulle firme digitali XML, vedere la specifica XMLDSIG disponibile all'indirizzo www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come accedere e verificare un intero documento XML utilizzando una firma protetta.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un oggetto indirizzabile identificatore URI (Uniform Resource) utilizzando una firma disconnessa.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un singolo elemento di un documento XML utilizzando una firma di protezione.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se la proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> viene verificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se la proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> viene verificata mediante la chiave pubblica della firma.</summary>
        <returns>
          <see langword="true" /> se la proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> viene verificata, <see langword="false" /> in caso contrario.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente anche di calcolare il digest dei riferimenti e il valore della firma.  
  
 Se un documento XML è stato firmato con una firma x. 509, il <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> metodo eseguirà la ricerca nell'archivio "AddressBook" i certificati utilizzabili per la verifica. Ad esempio, se il certificato viene fatto riferimento da un identificatore SKI (Subject Key Identifier), il <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> metodo selezionare i certificati con tale identificatore e li prova uno dopo l'altro fino a quando non è possibile verificare il certificato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come accedere e verificare un intero documento XML utilizzando una firma protetta.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un oggetto indirizzabile identificatore URI (Uniform Resource) utilizzando una firma disconnessa.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un singolo elemento di un documento XML utilizzando una firma di protezione.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La proprietà <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> della chiave pubblica della firma non corrisponde alla proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />.  
  
 oppure  
  
 Non è possibile creare la descrizione della firma.  
  
 -oppure–  
  
 Non è possibile creare l'algoritmo hash.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (key As AsymmetricAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key">Implementazione della proprietà <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> che contiene la chiave da utilizzare per la verifica della proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
        <summary>Determina se la proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> viene verificata per la chiave specificata.</summary>
        <returns>
          <see langword="true" /> se proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> viene verificata per la chiave specificata, <see langword="false" /> in caso contrario.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come accedere e verificare un oggetto indirizzabile identificatore URI (Uniform Resource) utilizzando una firma disconnessa.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un intero documento XML utilizzando una firma protetta.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="key" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La proprietà <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> del parametro<paramref name="key" /> non corrisponde alla proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />.  
  
 oppure  
  
 Non è possibile creare la descrizione della firma.  
  
 -oppure–  
  
 Non è possibile creare l'algoritmo hash.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.KeyedHashAlgorithm macAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (macAlg As KeyedHashAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::KeyedHashAlgorithm ^ macAlg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="macAlg" Type="System.Security.Cryptography.KeyedHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="macAlg">Implementazione di <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> che contiene il codice MAC da utilizzare per la verifica della proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
        <summary>Determina se viene effettuata la verifica della proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> per l'algoritmo di codice MAC (Message Authentication Code) specificato.</summary>
        <returns>
          <see langword="true" /> se la proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> viene verificata per il codice MAC specificato, <see langword="false" /> in caso contrario.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come accedere e verificare un oggetto indirizzabile identificatore URI (Uniform Resource) utilizzando una firma disconnessa.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un intero documento XML utilizzando una firma di protezione.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="macAlg" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La proprietà <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> dell'oggetto <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> specificato non è valida.  
  
 oppure  
  
 La proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> è <see langword="null" />.  
  
 oppure  
  
 Non è possibile creare la trasformazione crittografica utilizzata per controllare la firma.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (certificate As X509Certificate2, verifySignatureOnly As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, bool verifySignatureOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="certificate">Oggetto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> da utilizzare per la verifica della proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
        <param name="verifySignatureOnly">
          <see langword="true" /> solo per la verifica della firma; <see langword="false" /> per la verifica sia della firma sia del certificato.</param>
        <summary>Determina se la verifica della proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> viene effettuata per l'oggetto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> specificato e, eventualmente, se il certificato è valido.</summary>
        <returns>
          <see langword="true" /> se la firma è valida; in caso contrario, <see langword="false" />.  
  
 oppure  
  
 <see langword="true" /> se la firma e il certificato sono validi, <see langword="false" /> in caso contrario.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella versione 1.1 di .NET Framework, il certificato x. 509 non viene verificato.  Nella versione 2.0 e versioni successive, il certificato x. 509 viene verificato.  
  
 Nella versione 2.0 e versioni successive di .NET Framework, il <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> metodo eseguirà la ricerca nell'archivio "AddressBook" i certificati utilizzabili per la verifica. Ad esempio, se il certificato viene fatto riferimento da un identificatore SKI (Subject Key Identifier), il <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> metodo selezionare i certificati con tale identificatore e li prova uno dopo l'altro fino a quando non è possibile verificare il certificato.  
  
   
  
## Examples  
 Esempio di codice seguente usa un certificato x. 509 da un archivio certificati per firmare e verificare un documento XML.  
  
 [!code-csharp[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/csharp/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature/cs/sample.cs#1)]
 [!code-vb[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="certificate" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Non è possibile creare la descrizione della firma per il parametro <paramref name="certificate" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignatureReturningKey">
      <MemberSignature Language="C#" Value="public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignatureReturningKey([out] class System.Security.Cryptography.AsymmetricAlgorithm&amp; signingKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignatureReturningKey (ByRef signingKey As AsymmetricAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignatureReturningKey([Runtime::InteropServices::Out] System::Security::Cryptography::AsymmetricAlgorithm ^ % signingKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signingKey" Type="System.Security.Cryptography.AsymmetricAlgorithm&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="signingKey">Al momento della restituzione, il metodo contiene l'implementazione dell'oggetto <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> in cui è presente la chiave pubblica della firma. Questo parametro viene passato non inizializzato.</param>
        <summary>Determina se la proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> viene verificata mediante la chiave pubblica della firma.</summary>
        <returns>
          <see langword="true" /> se è stata effettuata la verifica della proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> mediante la chiave pubblica della firma, <see langword="false" /> in caso contrario.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come accedere e verificare un oggetto indirizzabile identificatore URI (Uniform Resource) utilizzando una firma disconnessa.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/VB/exampledetached.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un intero documento XML utilizzando una firma di protezione.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/VB/exampleenvelope.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="signingKey" /> è null.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La proprietà <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> della chiave pubblica della firma non corrisponde alla proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />.  
  
 oppure  
  
 Non è possibile creare la descrizione della firma.  
  
 -oppure–  
  
 Non è possibile creare l'algoritmo hash.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Consente di calcolare una firma digitale XML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consente di calcolare una firma digitale XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> metodo crea una firma digitale XML e molti degli elementi XML necessari.  
  
 È necessario impostare i dati da firmare e <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> proprietà prima di chiamare questo metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come accedere e verificare un oggetto indirizzabile identificatore URI (Uniform Resource) utilizzando una firma disconnessa.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un intero documento XML utilizzando una firma di protezione.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> è <see langword="null" />.  
  
 oppure  
  
 La proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> non è un oggetto<see cref="T:System.Security.Cryptography.DSA" /> o un oggetto <see cref="T:System.Security.Cryptography.RSA" />.  
  
 oppure  
  
 Non è possibile caricare la chiave.</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.KeyedHashAlgorithm macAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature (macAlg As KeyedHashAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature(System::Security::Cryptography::KeyedHashAlgorithm ^ macAlg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="macAlg" Type="System.Security.Cryptography.KeyedHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="macAlg">Oggetto <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> che contiene il codice MAC da utilizzare per il calcolo del valore della proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
        <summary>Consente di elaborare una firma digitale XML utilizzando l'algoritmo di codice MAC (Message Authentication Code) specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> metodo crea una firma digitale XML utilizzando l'algoritmo MAC specificato e molti degli elementi XML necessari.  
  
 È necessario impostare i dati vengano firmati prima di chiamare questo metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come accedere e verificare un oggetto indirizzabile identificatore URI (Uniform Resource) utilizzando una firma disconnessa.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un intero documento XML utilizzando una firma di protezione.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="macAlg" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">L'oggetto <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> specificato dal parametro <paramref name="macAlg" /> non è un'istanza di <see cref="T:System.Security.Cryptography.HMACSHA1" />.  
  
 oppure  
  
 La proprietà <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> dell'oggetto <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> specificato non è valida.  
  
 oppure  
  
 Non è possibile creare la trasformazione crittografica utilizzata per controllare la firma.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptedXml">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptedXml EncryptedXml" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.EncryptedXml" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptedXml As EncryptedXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::EncryptedXml ^ EncryptedXml { System::Security::Cryptography::Xml::EncryptedXml ^ get(); void set(System::Security::Cryptography::Xml::EncryptedXml ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un oggetto <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> che definisce le regole di elaborazione della crittografia XML.</summary>
        <value>Oggetto <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> che definisce le regole di elaborazione della crittografia XML.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document">Oggetto <see cref="T:System.Xml.XmlDocument" /> da cui recuperare l'oggetto <see cref="T:System.Xml.XmlElement" />.</param>
        <param name="idValue">ID dell'oggetto <see cref="T:System.Xml.XmlElement" /> da recuperare dall'oggetto <see cref="T:System.Xml.XmlDocument" />.</param>
        <summary>Restituisce l'oggetto <see cref="T:System.Xml.XmlElement" /> con l'ID specificato dall'oggetto <see cref="T:System.Xml.XmlDocument" /> indicato.</summary>
        <returns>Oggetto <see cref="T:System.Xml.XmlElement" /> con l'ID specificato dell'oggetto <see cref="T:System.Xml.XmlDocument" /> indicato oppure <see langword="null" /> se non è possibile trovarlo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetPublicKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPublicKey () As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Cryptography::AsymmetricAlgorithm ^ GetPublicKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce la chiave pubblica della firma.</summary>
        <returns>Oggetto <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> contenente la chiave pubblica della firma oppure <see langword="null" /> se non è possibile individuare la chiave.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.SignedXml.GetPublicKey%2A> metodo restituisce un <xref:System.Security.Cryptography.AsymmetricAlgorithm> oggetto che contiene una chiave pubblica può essere utilizzata per verificare una firma digitale XML.  
  
 La chiave deve essere un <xref:System.Security.Cryptography.DSA> o <xref:System.Security.Cryptography.RSA> chiave.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce la rappresentazione XML dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <returns>Rappresentazione XML dell'oggetto <see cref="T:System.Security.Cryptography.Xml.Signature" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> è <see langword="null" />.  
  
 oppure  
  
 La proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> corrente.</summary>
        <value>Oggetto <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> proprietà rappresenta la <`KeyInfo`> dell'elemento di una firma digitale XML mediante un <xref:System.Security.Cryptography.Xml.KeyInfo> oggetti contenuti all'interno della proprietà.  Il <`KeyInfo`> è un elemento figlio di <`Signature`> elemento.  
  
 Utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> proprietà per incorporare le informazioni relative alla chiave è progettata per aiutare a identificare la chiave necessaria per la convalida di un documento XML.  
  
 Per ulteriori informazioni sul `<KeyInfo>` elemento, vedere la specifica XMLDSIG, disponibile all'indirizzo www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfo> quando si accede a una risorsa rappresentata da un URI (Universal Resource Identifier) dell'oggetto.  In questo esempio la firma viene salvata in un nuovo file.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfo> quando si firma un documento XML dell'oggetto.  In questo esempio la firma viene salvata in un nuovo file.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Elemento XML dal quale caricare lo stato <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</param>
        <summary>Consente di caricare uno stato della classe <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> da un elemento XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.LoadXml%2A> metodo per verificare un documento XML.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#3)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#3)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Il parametro <paramref name="value" /> non contiene una proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> valida.  
  
 oppure  
  
 Il parametro <paramref name="value" /> non contiene una proprietà <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> valida.</exception>
      </Docs>
    </Member>
    <Member MemberName="m_signature">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.Xml.Signature m_signature;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.Xml.Signature m_signature" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.m_signature" />
      <MemberSignature Language="VB.NET" Value="Protected m_signature As Signature " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Security::Cryptography::Xml::Signature ^ m_signature;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'oggetto <see cref="T:System.Security.Cryptography.Xml.Signature" /> dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> corrente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_strSigningKeyName">
      <MemberSignature Language="C#" Value="protected string m_strSigningKeyName;" />
      <MemberSignature Language="ILAsm" Value=".field family string m_strSigningKeyName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName" />
      <MemberSignature Language="VB.NET" Value="Protected m_strSigningKeyName As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ m_strSigningKeyName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta il nome della chiave installata da utilizzare per la firma dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Imposta l'oggetto <see cref="T:System.Xml.XmlResolver" /> corrente.</summary>
        <value>Oggetto <see cref="T:System.Xml.XmlResolver" /> corrente. Il valore predefinito è rappresentato dall'oggetto <see cref="T:System.Xml.XmlSecureResolver" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Xml.XmlResolver> classe risolve risorse XML esterne denominate da un URI (Uniform Resource Identifier). Se si ritiene attendibile l'origine del file XML, è possibile evitare di consentire l'accesso alle risorse di computer denominate dall'URI del file XML. È possibile utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.Resolver%2A> proprietà per controllare il livello di accesso dei file XML alle risorse del computer specificando differenti <xref:System.Xml.XmlResolver> oggetti. Se non si desidera consentire l'accesso, è possibile impostare questa proprietà `null` (`Nothing` in Visual Basic).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeCanonicalizationMethods">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; SafeCanonicalizationMethods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; SafeCanonicalizationMethods" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeCanonicalizationMethods As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ SafeCanonicalizationMethods { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[Supportato in .NET Framework 4.5.1 e versioni successive]  
  
 Ottiene i nomi dei metodi di cui sono esplicitamente consentiti gli algoritmi di canonizzazione.</summary>
        <value>Una raccolta di nomi dei metodi che in modo sicuro producono XML canonici.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I metodi di canonizzazione convertono un documento XML in forma canonica. Per ulteriori informazioni su XML in formato canonico, vedere [XML in formato canonico](http://www.w3.org/TR/xml-c14n) nel sito Web W3C.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Signature">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.Signature Signature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.Signature Signature" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.Signature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signature As Signature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::Signature ^ Signature { System::Security::Cryptography::Xml::Signature ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Security.Cryptography.Xml.Signature" /> dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> corrente.</summary>
        <value>Oggetto <see cref="T:System.Security.Cryptography.Xml.Signature" /> dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> proprietà rappresenta la <`Signature`> dell'elemento di una firma digitale XML mediante un <xref:System.Security.Cryptography.Xml.Signature> oggetti contenuti all'interno della proprietà.  Il <`Signature`> è l'elemento radice usato per la creazione della firma digitale di XML e la verifica.  
  
 Utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> proprietà da recuperare il <xref:System.Security.Cryptography.Xml.Signature> oggetto utilizzato per il <xref:System.Security.Cryptography.Xml.SignedXml> oggetto.  
  
 Per ulteriori informazioni sul `<Signature>` elemento, vedere la specifica XMLDSIG, disponibile all'indirizzo www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> proprietà per firmare e verificare un intero documento XML utilizzando una firma protetta.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> proprietà per firmare e verificare un oggetto indirizzabile tramite Uniform Resource Identifier (URI) utilizzando una firma disconnessa.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureFormatValidator">
      <MemberSignature Language="C#" Value="public Func&lt;System.Security.Cryptography.Xml.SignedXml,bool&gt; SignatureFormatValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Security.Cryptography.Xml.SignedXml, bool&gt; SignatureFormatValidator" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property SignatureFormatValidator As Func(Of SignedXml, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ SignatureFormatValidator { Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ get(); void set(Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Security.Cryptography.Xml.SignedXml,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un delegato che verrà chiamato per convalidare il formato (non la sicurezza tramite crittografia) di una firma XML.</summary>
        <value>
          <see langword="true" /> se il formato è accettabile. In caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere utilizzato per garantire che solo determinate trasformazioni vengono utilizzate o che la firma viene utilizzato un determinato algoritmo di hash e così via.  
  
 Imposta la proprietà `null` rimuove tutte le convalida del formato di firma dal <xref:System.Security.Cryptography.Xml.SignedXml> oggetto.  
  
 È anche possibile leggere l'oggetto delegato corrente e catena a tale se si desidera.  
  
 Se si imposta un validator di formato, il delegato è fornito verrà visualizzato come un parametro di input di <xref:System.Security.Cryptography.Xml.SignedXml> in corso la verifica dell'oggetto e restituisce un valore booleano: `true` se il formato è accettabile, `false` in caso contrario. Se il delegato restituisce `false` per qualsiasi motivo, il <xref:System.Security.Cryptography.Xml.SignedXml> oggetto segnalerà che la firma XML non è valida.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureLength">
      <MemberSignature Language="C#" Value="public string SignatureLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureLength" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureLength As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureLength { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la lunghezza della firma per l'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> corrente.</summary>
        <value>Lunghezza della firma per l'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> corrente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureMethod">
      <MemberSignature Language="C#" Value="public string SignatureMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il metodo di firma per l'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> corrente.</summary>
        <value>Metodo di firma per l'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> proprietà rappresenta la <`SignatureMethod`> dell'elemento di una firma digitale XML utilizzando una stringa identificatore URI (Uniform Resource) all'interno della proprietà. Il <`SignatureMethod`> è un elemento figlio di <`SignedInfo`> elemento.  
  
 Utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> proprietà da recuperare il <`SignatureMethod`> URI utilizzato per il <xref:System.Security.Cryptography.Xml.SignedXml> oggetto. Questa proprietà è di sola lettura. Per ulteriori informazioni sull'impostazione a livello di codice un URI per il <`SignatureMethod`> elemento, vedere il <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A> proprietà.  
  
 Per ulteriori informazioni sul `<SignatureMethod>` elemento, vedere la specifica XMLDSIG, disponibile all'indirizzo www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureValue">
      <MemberSignature Language="C#" Value="public byte[] SignatureValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SignatureValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SignatureValue { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore di firma dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> corrente.</summary>
        <value>Matrice di byte contenente il valore di firma dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> proprietà rappresenta la <`SignatureValue`> dell'elemento di una firma digitale XML utilizzando una matrice di byte contenuti all'interno della proprietà.  Il <`SignatureValue`> è un elemento figlio di <`Signature>` elemento.  
  
 Utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> proprietà per recuperare il valore della firma digitale XML.  Questa proprietà viene popolata automaticamente quando si effettua una chiamata ha esito positivo per il <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> metodo.  
  
 Per ulteriori informazioni sul `<SignatureValue>` elemento, vedere la specifica XMLDSIG, disponibile all'indirizzo www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.SignedInfo SignedInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignedInfo As SignedInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::SignedInfo ^ SignedInfo { System::Security::Cryptography::Xml::SignedInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.SignedInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> corrente.</summary>
        <value>Oggetto <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> proprietà rappresenta la <`SignedInfo`> dell'elemento di una firma digitale XML utilizzando una matrice di byte contenuti all'interno della proprietà.  Il <`SignedInfo`> è un elemento figlio di <`Signature>` elemento.  
  
 Utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> proprietà da recuperare il <xref:System.Security.Cryptography.Xml.SignedInfo> oggetto che viene utilizzato il <xref:System.Security.Cryptography.Xml.SignedXml> oggetto per creare una firma digitale XML.  
  
 Per ulteriori informazioni sul `<SignedInfo>` elemento, vedere la specifica XMLDSIG, disponibile all'indirizzo www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm SigningKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ SigningKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la chiave dell'algoritmo asimmetrico utilizzata per la firma dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <value>Chiave di algoritmo asimmetrico utilizzata per la firma dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> da proprietà per specificare la chiave asimmetrica da utilizzare per creare una firma digitale XML.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come accedere e verificare un intero documento XML utilizzando una firma protetta.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un oggetto indirizzabile identificatore URI (Uniform Resource) utilizzando una firma disconnessa.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 Esempio di codice seguente viene illustrato come accedere e verificare un singolo elemento di un documento XML utilizzando una firma di protezione.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKeyName">
      <MemberSignature Language="C#" Value="public string SigningKeyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SigningKeyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SigningKeyName" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SigningKeyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome della chiave installata da utilizzare per la firma dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <value>Nome della chiave installata da utilizzare per la firma dell'oggetto <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDecryptionTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDecryptionTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDecryptionTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDecryptionTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDecryptionTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) di trasformazione della modalità di decrittografia XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl> campo è "http://www.w3.org/2002/07/decrypt#XML".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/2002/07/decrypt#XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigBase64TransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigBase64TransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigBase64TransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigBase64TransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigBase64TransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per la trasformazione base 64. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> campo è "http://www.w3.org/2000/09/xmldsig#base64".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Il <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> classe implementa la trasformazione descritta dal <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> campo.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/2000/09/xmldsig#base64.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come usare i membri del <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> classe.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigC14NTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigC14NTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigC14NTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigC14NTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigC14NTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per la trasformazione XML in formato canonico. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> campo è "http://www.w3.org/TR/2001/REC-xml-c14n-20010315".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Il <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> classe implementa la trasformazione descritta dal <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> campo.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/TR/2001/REC-xml-c14n-20010315.  
  
 Questo campo ha lo stesso valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> campo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come chiamare i membri del <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> classe.  
  
 [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigC14NWithCommentsTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigC14NWithCommentsTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigC14NWithCommentsTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigC14NWithCommentsTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per la trasformazione XML in formato canonico, con commenti. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> campo è "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments ".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Il <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> classe implementa la trasformazione descritta dal <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> campo.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.  
  
 Questo campo ha lo stesso valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> campo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigCanonicalizationUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigCanonicalizationUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigCanonicalizationUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigCanonicalizationUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigCanonicalizationUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per l'algoritmo standard di conversione in formato canonico delle firme digitali XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> campo è "http://www.w3.org/TR/2001/REC-xml-c14n-20010315".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Il <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> classe implementa la trasformazione descritta dal <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> campo.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/TR/2001/REC-xml-c14n-20010315.  
  
 Questo campo ha lo stesso valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> campo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigCanonicalizationWithCommentsUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigCanonicalizationWithCommentsUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigCanonicalizationWithCommentsUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigCanonicalizationWithCommentsUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per l'algoritmo standard di conversione in formato canonico delle firme digitali XML e comprende i commenti. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> campo è "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Il <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> classe implementa la trasformazione descritta dal <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> campo.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.  
  
 Questo campo ha lo stesso valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> campo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigDSAUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigDSAUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigDSAUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigDSAUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigDSAUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per l'algoritmo <see cref="T:System.Security.Cryptography.DSA" /> standard delle firme digitali XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> campo è "http://www.w3.org/2000/09/xmldsig#dsa-sha1".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/2000/09/xmldsig#dsa-sha1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigEnvelopedSignatureTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigEnvelopedSignatureTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigEnvelopedSignatureTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigEnvelopedSignatureTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per la trasformazione della firma protetta. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> campo è "http://www.w3.org/2000/09/xmldsig#enveloped-signature".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Il <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> classe implementa la trasformazione descritta dal <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> campo.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/2000/09/xmldsig#enveloped-signature.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come usare i membri del <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> classe.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigExcC14NTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigExcC14NTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigExcC14NTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigExcC14NTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigExcC14NTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per la  conversione in formato canonico esclusivo XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> campo è "http://www.w3.org/2001/10/xml-exc-c14n#".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Il <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> classe implementa la trasformazione descritta dal <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> campo.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/2001/10/xml-exc-c14n#.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come accedere e verificare un documento XML usando la <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> classe.  In questo esempio viene creata una firma di busta.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CS/example.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigExcC14NWithCommentsTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigExcC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigExcC14NWithCommentsTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigExcC14NWithCommentsTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per la  conversione in formato canonico esclusivo XML, con commenti. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> campo è "http://www.w3.org/2001/10/xml-exc-c14n#WithComments".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Il <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> classe implementa la trasformazione descritta dal <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> campo.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/2001/10/xml-exc-c14n#WithComments.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come accedere e verificare un documento XML usando la <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> classe.  In questo esempio viene creata una firma di busta.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigHMACSHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigHMACSHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigHMACSHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigHMACSHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigHMACSHA1Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per l'algoritmo <see cref="T:System.Security.Cryptography.HMACSHA1" /> standard delle firme digitali XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url> campo è "http://www.w3.org/2000/09/xmldsig#hmac-sha1".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/2000/09/xmldsig#hmac-sha1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigMinimalCanonicalizationUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigMinimalCanonicalizationUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigMinimalCanonicalizationUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigMinimalCanonicalizationUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigMinimalCanonicalizationUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per l'algoritmo standard minimo di conversione in formato canonico delle firme digitali XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl> campo è "http://www.w3.org/2000/09/xmldsig#minimal".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/2000/09/xmldsig#minimal.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigNamespaceUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) dello spazio dei nomi standard delle firme digitali XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl> campo è "http://www.w3.org/2000/09/xmldsig#".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/2000/09/xmldsig#.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA1Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per il metodo di firma <see cref="T:System.Security.Cryptography.RSA" /> standard delle firme digitali XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> campo è "http://www.w3.org/2000/09/xmldsig#rsa-sha1".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/2000/09/xmldsig#rsa-sha1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA256Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per la variazione del metodo di firma SHA-256 <see cref="T:System.Security.Cryptography.RSA" /> per le firme digitali XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url> campo è "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al [ https://www.w3.org/2001/04/xmldsig-more#rsa-sha256 ](https://www.w3.org/2001/04/xmldsig-more#rsa-sha256).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA384Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA384Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA384Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA384Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA384Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per la variazione del metodo di firma SHA-384 <see cref="T:System.Security.Cryptography.RSA" /> per le firme digitali XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url> campo è "http://www.w3.org/2001/04/xmldsig-more#rsa-sha384".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al [ https://www.w3.org/2001/04/xmldsig-more#rsa-sha384 ](https://www.w3.org/2001/04/xmldsig-more#rsa-sha384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA512Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per la variazione del metodo di firma SHA-512 <see cref="T:System.Security.Cryptography.RSA" /> per le firme digitali XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url> campo è "http://www.w3.org/2001/04/xmldsig-more#rsa-sha512".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al [ https://www.w3.org/2001/04/xmldsig-more#rsa-sha512 ](https://www.w3.org/2001/04/xmldsig-more#rsa-sha512).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA1Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per il metodo digest <see cref="T:System.Security.Cryptography.SHA1" /> standard per le firme digitali XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> campo è "http://www.w3.org/2000/09/xmldsig#sha1".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/2000/09/xmldsig#sha1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA256Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per il metodo digest <see cref="T:System.Security.Cryptography.SHA256" /> standard per le firme digitali XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url> campo è "http://www.w3.org/2001/04/xmlenc#sha256".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al [ http://www.w3.org/2001/04/xmlenc#sha256 ](http://www.w3.org/2001/04/xmlenc#sha256).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA384Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA384Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA384Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA384Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA384Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per il metodo digest <see cref="T:System.Security.Cryptography.SHA384" /> standard per le firme digitali XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url> campo è "http://www.w3.org/2001/04/xmldsig-more#sha384".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al [ https://www.w3.org/2001/04/xmldsig-more#sha384 ](https://www.w3.org/2001/04/xmldsig-more#sha384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA512Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per il metodo digest <see cref="T:System.Security.Cryptography.SHA512" /> standard per le firme digitali XML. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url> campo è "http://www.w3.org/2001/04/xmlenc#sha512".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al [ http://www.w3.org/2001/04/xmlenc#sha512 ](http://www.w3.org/2001/04/xmlenc#sha512).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigXPathTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigXPathTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigXPathTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigXPathTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigXPathTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per XPath (XML Path Language). Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> campo è "http://www.w3.org/TR/1999/REC-xpath-19991116".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe implementa la trasformazione descritta dal <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> campo.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/TR/1999/REC-xpath-19991116.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come chiamare i membri del <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigXsltTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigXsltTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigXsltTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigXsltTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigXsltTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per le trasformazioni XSLT. Questo campo è costante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> campo è "http://www.w3.org/TR/1999/REC-xslt-19991116".  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Il <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> classe implementa la trasformazione descritta dal <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> campo.  
  
 Per altre informazioni, vedere la specifica World Wide Web Consortium (W3C) al http://www.w3.org/TR/1999/REC-xslt-19991116.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come usare i membri del <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> classe.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlLicenseTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlLicenseTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlLicenseTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlLicenseTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlLicenseTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta l'URI (Uniform Resource Identifier) per l'algoritmo di trasformazione delle licenza utilizzato per normalizzare le licenze XrML delle firme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> campo è "urn: mpeg:mpeg21:2003:01-REL-R-NS: licenseTransform"  
  
 Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.  
  
 Il <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> classe implementa la trasformazione descritta dal <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> campo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>