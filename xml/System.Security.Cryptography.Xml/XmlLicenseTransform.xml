<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlLicenseTransform.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac536b3cef52db5c23dd1d8ffbfc2acc8bbe2e63459.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36b3cef52db5c23dd1d8ffbfc2acc8bbe2e63459</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>Represents the license transform algorithm used to normalize XrML licenses for signatures.</source>
          <target state="translated">Rappresenta l'algoritmo di trasformazione della licenza utilizzato per normalizzare le licenze XrML delle firme.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> classe rappresenta l'algoritmo di trasformazione di licenza come definito in MPEG Rights Extension Language (MPEG REL).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class to transform XrML licenses for signatures.</source>
          <target state="translated">Utilizzare la <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> classe per trasformare le licenze XrML delle firme.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>The Uniform Resource Identifier (URI) that describes the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class is defined by the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl&gt;</ph> field.</source>
          <target state="translated">La risorsa identificatore URI (Uniform) che descrive il <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> classe viene definita la <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl&gt;</ph> campo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>The following code example shows how to validate an XML digital signature using the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come convalidare una firma digitale XML mediante il <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> interfaccia e <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
          <source>Gets or sets the decryptor of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Ottiene o imposta il decrittografatore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
          <source>The decryptor of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Decrittografatore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> object uses an <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> interface to decrypt <ph id="ph3">`&lt;encryptedGrant&gt;`</ph> elements from the current <ph id="ph4">`&lt;license&gt;`</ph> element.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> viene utilizzata da object un <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> interfaccia decrittografare <ph id="ph3">`&lt;encryptedGrant&gt;`</ph> elementi dall'oggetto corrente <ph id="ph4">`&lt;license&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
          <source>The following code example shows how to validate an XML digital signature using the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come convalidare una firma digitale XML mediante il <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> interfaccia e <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml">
          <source>Returns an XML representation of the parameters of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object that are suitable to be included as subelements of an XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Viene restituita una rappresentazione XML dei parametri dell'oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> che potranno essere inclusi come sottoelementi di un elemento <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> XMLDSIG.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml">
          <source>A list of the XML nodes that represent the transform-specific content needed to describe the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object in an XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Elenco dei nodi XML che rappresentano il contenuto specifico della trasformazione necessario per descrivere l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> corrente in un elemento XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>Returns the output of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Restituisce l'output di un oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput">
          <source>Returns the output of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Restituisce l'output di un oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput">
          <source>The output of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Output dell'oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput">
          <source>The type of the returned object must be <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</source>
          <target state="translated">Il tipo dell'oggetto restituito deve essere <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source>The type of the output to return.</source>
          <target state="translated">Tipo dell'output da restituire.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source><ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> is the only valid type for this parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> è l'unico tipo valido per questo parametro.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source>Returns the output of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Restituisce l'output di un oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source>The output of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Output dell'oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is not an <ph id="ph2">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> object.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="type" /&gt;</ph> non è un oggetto <ph id="ph2">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes">
          <source>Gets an array of types that are valid inputs to the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> method of the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Ottiene una matrice di tipi che sono input validi del metodo <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> dell'oggetto <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes">
          <source>An array of types that are valid inputs to the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> method of the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object; you can pass only objects of one of these types to the <ph id="ph3">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> method of the current <ph id="ph4">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Matrice di tipi di input validi per il metodo <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> dell'oggetto <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> corrente; è possibile passare solo oggetti di uno di questi tipi al metodo <ph id="ph3">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> dell'oggetto <ph id="ph4">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes">
          <source>The only valid input type to the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class is <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</source>
          <target state="translated">Il tipo di input valido solo per il <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> classe <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> object that encapsulates the transform to load into the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> che incapsula la trasformazione da caricare nell'oggetto <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>Parses the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> object as transform-specific content of a <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element; this method is not supported because the <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object has no inner XML elements.</source>
          <target state="translated">Consente di analizzare l'oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> pecificato come contenuto specifico della trasformazione di un elemento <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph>; questo metodo non è supportato, in quanto l'oggetto <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> è privo di elementi XML interni.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The input to load into the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Input da caricare nell'oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The type of the input object must be <ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph>.</source>
          <target state="translated">Il tipo dell'oggetto di input deve essere <ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>Loads the specified input into the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Consente di caricare l'input specificato nell'oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The context was not set before this transform was invoked.</source>
          <target state="translated">Il contesto non è stato impostato prima di richiamare la trasformazione.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="&amp;lt;issuer&amp;gt;" /&gt;</ph> element was not set before this transform was invoked.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;see langword="&amp;lt;issuer&amp;gt;" /&gt;</ph> non è stato impostato prima di richiamare la trasformazione.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="&amp;lt;license&amp;gt;" /&gt;</ph> element was not set before this transform was invoked.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;see langword="&amp;lt;license&amp;gt;" /&gt;</ph> non è stato impostato prima di richiamare la trasformazione.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /&gt;</ph> property was not set before this transform was invoked.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /&gt;</ph> non è stata impostata prima di richiamare la trasformazione.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes">
          <source>Gets an array of types that are valid outputs from the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> method of the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Ottiene una matrice di tipi che sono possibili output del metodo <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> dell'oggetto <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes">
          <source>An array of valid output types for the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object; only objects of one of these types are returned from the <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /&gt;</ph> methods of the current <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">Matrice di tipi di output validi per l'oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> corrente. Dai metodi <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /&gt;</ph> dell'oggetto <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> corrente vengono restituiti solo oggetti appartenenti a uno di questi tipi.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes">
          <source>The only valid output type to the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class is <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</source>
          <target state="translated">Il tipo di output valido solo per il <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> classe <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>