<Type Name="IRelDecryptor" FullName="System.Security.Cryptography.Xml.IRelDecryptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b13ef86e46019bc611ae98aa22876549d60a70d1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36530688" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRelDecryptor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelDecryptor" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.IRelDecryptor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelDecryptor" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRelDecryptor" />
  <TypeSignature Language="F#" Value="type IRelDecryptor = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce i metodi che decrittografano un elemento <see langword="&lt;encryptedGrant&gt;" /> XrML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Security.Cryptography.Xml.IRelDecryptor> interfacciarsi con il <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> classe per decrittografare un XrML `<encryptedGrant>` elemento.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come convalidare una firma digitale XML mediante il <xref:System.Security.Cryptography.Xml.IRelDecryptor> interfaccia e il <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> classe.  
  
 [!code-cpp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/cpp/sample.cpp#2)]
 [!code-csharp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/CS/sample.cs#2)]
 [!code-vb[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/VB/sample.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public System.IO.Stream Decrypt (System.Security.Cryptography.Xml.EncryptionMethod encryptionMethod, System.Security.Cryptography.Xml.KeyInfo keyInfo, System.IO.Stream toDecrypt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream Decrypt(class System.Security.Cryptography.Xml.EncryptionMethod encryptionMethod, class System.Security.Cryptography.Xml.KeyInfo keyInfo, class System.IO.Stream toDecrypt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.IRelDecryptor.Decrypt(System.Security.Cryptography.Xml.EncryptionMethod,System.Security.Cryptography.Xml.KeyInfo,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ Decrypt(System::Security::Cryptography::Xml::EncryptionMethod ^ encryptionMethod, System::Security::Cryptography::Xml::KeyInfo ^ keyInfo, System::IO::Stream ^ toDecrypt);" />
      <MemberSignature Language="F#" Value="abstract member Decrypt : System.Security.Cryptography.Xml.EncryptionMethod * System.Security.Cryptography.Xml.KeyInfo * System.IO.Stream -&gt; System.IO.Stream" Usage="iRelDecryptor.Decrypt (encryptionMethod, keyInfo, toDecrypt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptionMethod" Type="System.Security.Cryptography.Xml.EncryptionMethod" />
        <Parameter Name="keyInfo" Type="System.Security.Cryptography.Xml.KeyInfo" />
        <Parameter Name="toDecrypt" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="encryptionMethod">Oggetto <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> che incapsula l'algoritmo utilizzato per la crittografia XML.</param>
        <param name="keyInfo">Oggetto <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> che contiene una chiave asimmetrica da utilizzare per la decrittografia.</param>
        <param name="toDecrypt">Oggetto flusso che contiene un elemento <see langword="&lt;encryptedGrant&gt;" /> da decrittografare.</param>
        <summary>Decrittografa un elemento <see langword="&lt;encryptedGrant&gt;" /> XrML contenuto all'interno di un oggetto <see cref="T:System.IO.Stream" />.</summary>
        <returns>Oggetto <see cref="T:System.IO.Stream" /> che contiene un elemento <see langword="&lt;encryptedGrant&gt;" /> decrittografato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.IRelDecryptor.Decrypt%2A> metodo consente di decrittografare un XrML `<encryptedGrant>` elemento e restituisce un flusso di testo normale.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>