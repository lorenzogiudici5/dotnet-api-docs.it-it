<Type Name="XmlDsigXPathTransform" FullName="System.Security.Cryptography.Xml.XmlDsigXPathTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72266ea916975f3a2f0926c89de56fc0b9df2ea4" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49130016" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDsigXPathTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDsigXPathTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDsigXPathTransform&#xA;Inherits Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDsigXPathTransform : System::Security::Cryptography::Xml::Transform" />
  <TypeSignature Language="F#" Value="type XmlDsigXPathTransform = class&#xA;    inherit Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta la trasformazione XPath per una firma digitale come definita dalla specifica W3C.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe consente di inviare un documento XML usando il linguaggio XPath.  Questa classe usa un'espressione XPath per selezionare i nodi XML che si desidera firmare o crittografare durante la rimozione di tutti gli altri dalle operazioni di crittografia.  
  
 Usare il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe per firmare o crittografare parti specifiche di un documento XML usando un'espressione XPath.  Per informazioni sull'inizializzazione di <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> al valore di una stringa di trasformazione XPath, vedere il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInnerXml%2A> (metodo).  
  
 L'URI Uniform Resource Identifier () che descrive la <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe viene definita la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> campo.  
  
 Per altre informazioni sulla trasformazione XPath, vedere la sezione 6.6.3 della specifica XMLDSIG, disponibile tramite il W3C in www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 In questa sezione sono riportati due esempi di codice. Il primo esempio di codice illustra come firmare e verificare un documento XML usando il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe con una firma protetta.  In questo esempio viene firmato un documento XML e Salva la firma in un nuovo documento XML.  Il secondo esempio di codice viene illustrato come chiamare i membri del <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe.  
  
 **Esempio di #1**  
  
 [!code-cpp[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/VB/sample.vb#1)]  
  
 **Esempio #2**  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigXPathTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigXPathTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come firmare e verificare un documento XML usando il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe.  In questo esempio viene creata una firma protetta.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberSignature Language="F#" Value="override this.GetInnerXml : unit -&gt; System.Xml.XmlNodeList" Usage="xmlDsigXPathTransform.GetInnerXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Viene restituita una rappresentazione XML dei parametri dell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> che potranno essere inclusi come sottoelementi di un elemento <see langword="&lt;Transform&gt;" /> XMLDSIG.</summary>
        <returns>Elenco dei nodi XML che rappresentano il contenuto specifico della trasformazione necessario per descrivere l'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente in un elemento XMLDSIG <see langword="&lt;Transform&gt;" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce l'output dell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput%2A> metodo per recuperare un <xref:System.Xml.XmlNodeList> oggetto che contiene una rappresentazione XML di una trasformazione XPath.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput();" />
      <MemberSignature Language="F#" Value="override this.GetOutput : unit -&gt; obj" Usage="xmlDsigXPathTransform.GetOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'output dell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente.</summary>
        <returns>Output dell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il tipo dell'oggetto restituito deve essere <xref:System.Xml.XmlNodeList>.  
  
 Usare la <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput%2A> metodo per recuperare un <xref:System.Xml.XmlNodeList> oggetto che contiene una rappresentazione XML di una trasformazione XPath.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput%2A> metodo per recuperare l'output dell'oggetto corrente <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> oggetto. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetOutput : Type -&gt; obj" Usage="xmlDsigXPathTransform.GetOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Tipo dell'output da restituire. <see cref="T:System.Xml.XmlNodeList" /> è l'unico tipo valido per questo parametro.</param>
        <summary>Restituisce l'output dell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente di tipo <see cref="T:System.Xml.XmlNodeList" />.</summary>
        <returns>Output dell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente di tipo <see cref="T:System.Xml.XmlNodeList" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il tipo dell'oggetto restituito deve essere <xref:System.Xml.XmlNodeList>.  
  
 Usare la <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput%2A> metodo per recuperare un <xref:System.Xml.XmlNodeList> oggetto che contiene una rappresentazione XML di una trasformazione XPath.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput%2A> metodo per recuperare l'output dell'oggetto corrente <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> oggetto. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#7)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="type" /> non è un oggetto <see cref="T:System.Xml.XmlNodeList" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigXPathTransform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlDsigXPathTransform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una matrice di tipi che sono input validi del metodo <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)" /> dell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente.</summary>
        <value>Matrice di tipi di input validi per l'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente; solo oggetti appartenenti a uno di questi tipi possono essere passati al metodo <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)" /> dell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tipi di input validi per <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> vengono <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, e <xref:System.Xml.XmlNodeList>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come chiamare il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.InputTypes%2A> proprietà da recuperare i tipi di input validi per la trasformazione corrente. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberSignature Language="F#" Value="override this.LoadInnerXml : System.Xml.XmlNodeList -&gt; unit" Usage="xmlDsigXPathTransform.LoadInnerXml nodeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">Oggetto <see cref="T:System.Xml.XmlNodeList" /> da caricare nell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente.</param>
        <summary>Consente di analizzare l'oggetto <see cref="T:System.Xml.XmlNodeList" /> specificato specificato come contenuto specifico della trasformazione di un elemento <see langword="&lt;Transform&gt;" /> e di configurare lo stato interno dell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> in modo che risulti corrispondente all'elemento <see langword="&lt;Transform&gt;" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInnerXml%2A> metodo per inizializzare il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe con una trasformazione XPath.  
  
 Per inizializzare il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> di classi con una trasformazione XPath, completare i passaggi seguenti.  
  
1.  Creare una nuova <xref:System.Xml.XmlElement> classe e impostarne il <xref:System.Xml.XmlElement.InnerText%2A> proprietà sul valore di una stringa di trasformazione XPath.  
  
2.  Chiamare il <xref:System.Xml.XmlNode.SelectNodes%2A> metodo per creare un <xref:System.Xml.XmlNodeList> oggetto che rappresenta la trasformazione.  
  
3.  Creare una nuova istanza della <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe e passare l'oggetto creato in precedenza <xref:System.Xml.XmlNodeList> dell'oggetto per il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInnerXml%2A> (metodo).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come firmare e verificare un documento XML usando il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe.  In questo esempio crea una firma protetta.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Il valore del parametro <paramref name="nodeList" /> è <see langword="null" />.  
  
oppure 
Il parametro <paramref name="nodeList" /> non contiene un elemento <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInput(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.LoadInput : obj -&gt; unit" Usage="xmlDsigXPathTransform.LoadInput obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Input da caricare nell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente.</param>
        <summary>Consente di caricare l'input specificato nell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput%2A> metodo per inizializzare un' <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> oggetto per il valore di una trasformazione XPath utilizzando un <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, o <xref:System.Xml.XmlNodeList> oggetto.  Per informazioni sull'inizializzazione di un <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> oggetti usando una stringa di trasformazione XPath, vedere il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInnerXml%2A> (metodo).  
  
 Il tipo dell'oggetto di input deve essere uno dei tipi nel <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.InputTypes%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come chiamare le <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput%2A> usando il metodo <xref:System.Xml.XmlDocument> oggetto come input. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#11)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigXPathTransform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlDsigXPathTransform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una matrice di tipi che sono possibili output dei metodi <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput" /> dell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente.</summary>
        <value>Matrice di tipi di output validi dell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente; i metodi <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput" /> dell'oggetto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> corrente restituiscono solo oggetti appartenenti a uno di questi tipi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlNodeList> è il tipo di output valido solo per <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come chiamare il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.OutputTypes%2A> proprietà da recuperare i tipi di output valido per la trasformazione corrente. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>