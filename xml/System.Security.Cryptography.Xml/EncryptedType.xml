<Type Name="EncryptedType" FullName="System.Security.Cryptography.Xml.EncryptedType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="483bc6a8a6303b5a7c9073f3dedec0b8f09b0383" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36626290" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncryptedType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncryptedType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncryptedType" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedType abstract" />
  <TypeSignature Language="F#" Value="type EncryptedType = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta la classe base astratta dalla quale derivano le classi <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> e <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.EncryptedType> classe rappresenta la classe base astratta da cui le classi <xref:System.Security.Cryptography.Xml.EncryptedData> e <xref:System.Security.Cryptography.Xml.EncryptedKey> derivare. Queste due classi contengono i dati effettivamente crittografati o informazioni sulla chiave nella crittografia XML. Per garantire la conformità agli standard di crittografia XML, è necessario utilizzare queste due classi derivate.  
  
 Per ulteriori informazioni sugli standard di crittografia XML, vedere [XML Encryption Syntax and Processing versione 1.1](https://www.w3.org/TR/xmlenc-core/).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come crittografare e decrittografare un elemento XML mediante il <xref:System.Security.Cryptography.Xml.EncryptedData> classe che deriva dal <xref:System.Security.Cryptography.Xml.EncryptedType> classe.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncryptedType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncryptedType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore crea una nuova istanza di <xref:System.Security.Cryptography.Xml.EncryptedType> classe. Questa classe rappresenta la classe base astratta da cui le classi <xref:System.Security.Cryptography.Xml.EncryptedData> e <xref:System.Security.Cryptography.Xml.EncryptedKey> derivare. Per garantire la conformità agli standard di crittografia XML, utilizzare le due classi derivate. Per ulteriori informazioni sugli standard di crittografia XML, vedere [XML Encryption Syntax and Processing versione 1.1](https://www.w3.org/TR/xmlenc-core/).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come crittografare e decrittografare un elemento XML mediante il <xref:System.Security.Cryptography.Xml.EncryptedData> classe che deriva dal <xref:System.Security.Cryptography.Xml.EncryptedType> classe.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public void AddProperty (System.Security.Cryptography.Xml.EncryptionProperty ep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddProperty(class System.Security.Cryptography.Xml.EncryptionProperty ep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddProperty (ep As EncryptionProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddProperty(System::Security::Cryptography::Xml::EncryptionProperty ^ ep);" />
      <MemberSignature Language="F#" Value="member this.AddProperty : System.Security.Cryptography.Xml.EncryptionProperty -&gt; unit" Usage="encryptedType.AddProperty ep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ep" Type="System.Security.Cryptography.Xml.EncryptionProperty" />
      </Parameters>
      <Docs>
        <param name="ep">Oggetto <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" />.</param>
        <summary>Aggiunge un elemento figlio <see langword="&lt;EncryptionProperty&gt;" /> all'elemento <see langword="&lt;EncryptedProperties&gt;" /> dell'oggetto <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> corrente nella crittografia XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere utilizzato per aggiungere `<EncryptionProperty>` gli elementi figlio per il `<EncryptedProperties>` elemento. Il `<EncryptedProperties>` elemento fornisce informazioni aggiuntive per il `<EncryptedType>` elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherData">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.CipherData CipherData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.CipherData CipherData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CipherData As CipherData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::CipherData ^ CipherData { System::Security::Cryptography::Xml::CipherData ^ get(); void set(System::Security::Cryptography::Xml::CipherData ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherData : System.Security.Cryptography.Xml.CipherData with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.CipherData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore <see cref="T:System.Security.Cryptography.Xml.CipherData" /> di un'istanza della classe <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />.</summary>
        <value>Un oggetto <see cref="T:System.Security.Cryptography.Xml.CipherData" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `<CipherData>` elemento è un elemento obbligatorio nella crittografia XML che fornisce i dati crittografati. Deve contenere la sequenza di ottetti crittografata come testo con codifica base64 del <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> proprietà, o fornire un riferimento a una posizione esterna che contiene la sequenza di ottetti crittografata utilizzando la <xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A> proprietà.  
  
 Per altre informazioni su questo elemento, vedere <xref:System.Security.Cryptography.Xml.CipherData>.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come crittografare e decrittografare un elemento XML mediante il <xref:System.Security.Cryptography.Xml.EncryptedData> classe che deriva dal <xref:System.Security.Cryptography.Xml.EncryptedType> classe.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La proprietà <see cref="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" /> è stata impostata su <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public virtual string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'attributo <see langword="Encoding" /> di un'istanza <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> nella crittografia XML.</summary>
        <value>Stringa che descrive la codifica dei dati crittografati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà descrive la codifica dei dati crittografati. Ad esempio, se i dati crittografati sono un file PNG con codifica base64, la codifica può essere specificata comehttp://www.w3.org/2000/09/xmldsig#base64'.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come crittografare e decrittografare un elemento XML mediante il <xref:System.Security.Cryptography.Xml.EncryptedData> classe che deriva dal <xref:System.Security.Cryptography.Xml.EncryptedType> classe. Questo esempio vengono quindi visualizzati diverse proprietà della <xref:System.Security.Cryptography.Xml.EncryptedData> classe nella console.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionMethod">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptionMethod As EncryptionMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionMethod ^ EncryptionMethod { System::Security::Cryptography::Xml::EncryptionMethod ^ get(); void set(System::Security::Cryptography::Xml::EncryptionMethod ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionMethod : System.Security.Cryptography.Xml.EncryptionMethod with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'elemento <see langword="&lt;EncryptionMethod&gt;" /> per la crittografia XML.</summary>
        <value>Oggetto <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> che rappresenta l'elemento <see langword="&lt;EncryptionMethod&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `<EncryptionMethod>` è un elemento facoltativo che descrive l'algoritmo di crittografia applicato ai dati crittografati. Se l'elemento è assente, l'algoritmo di crittografia deve essere noto al destinatario o la decrittografia avrà esito negativo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come crittografare e decrittografare un elemento XML mediante il <xref:System.Security.Cryptography.Xml.EncryptedData> classe che deriva dal <xref:System.Security.Cryptography.Xml.EncryptedType> classe.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProperties">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncryptionProperties As EncryptionPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ EncryptionProperties { System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionProperties : System.Security.Cryptography.Xml.EncryptionPropertyCollection" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'elemento <see langword="&lt;EncryptionProperties&gt;" /> nella crittografia XML.</summary>
        <value>Oggetto <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `<EncryptionProperties>` elemento può contenere informazioni aggiuntive sulla creazione del <xref:System.Security.Cryptography.Xml.EncryptedType> istanza, ad esempio un indicatore data e ora o il numero di serie dell'hardware di crittografia usato durante la crittografia.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come crittografare e decrittografare un elemento XML mediante il <xref:System.Security.Cryptography.Xml.EncryptedData> classe che deriva dal <xref:System.Security.Cryptography.Xml.EncryptedType> classe. Questo esempio vengono quindi visualizzati diverse proprietà della <xref:System.Security.Cryptography.Xml.EncryptedData> classe nella console.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="abstract member GetXml : unit -&gt; System.Xml.XmlElement" Usage="encryptedType.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce la rappresentazione XML dell'oggetto <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />.</summary>
        <returns>Oggetto <see cref="T:System.Xml.XmlElement" /> che rappresenta l'elemento <see langword="&lt;EncryptedType&gt;" /> nella crittografia XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per restituire il `<EncryptedType>` elemento nello schema XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'attributo <see langword="Id" /> di un'istanza <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> nella crittografia XML.</summary>
        <value>Stringa dell'attributo <see langword="Id" /> dell'elemento <see langword="&lt;EncryptedType&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Id` è un attributo facoltativo la `<EncryptedType>` elemento che fornisce un metodo standard per l'assegnazione di un identificatore di stringa a un elemento all'interno di un documento XML.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come crittografare e decrittografare un elemento XML mediante il <xref:System.Security.Cryptography.Xml.EncryptedData> classe che deriva dal <xref:System.Security.Cryptography.Xml.EncryptedType> classe. Questo esempio vengono quindi visualizzati diverse proprietà della <xref:System.Security.Cryptography.Xml.EncryptedData> classe nella console.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyInfo : System.Security.Cryptography.Xml.KeyInfo with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'elemento <see langword="&lt;KeyInfo&gt;" /> nella crittografia XML.</summary>
        <value>Un oggetto <see cref="T:System.Security.Cryptography.Xml.KeyInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `<KeyInfo>` elemento è un elemento facoltativo che contiene informazioni sulla chiave utilizzata per crittografare i dati.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come crittografare e decrittografare un elemento XML mediante il <xref:System.Security.Cryptography.Xml.EncryptedData> classe che deriva dal <xref:System.Security.Cryptography.Xml.EncryptedType> classe. Questo esempio vengono quindi visualizzati diverse proprietà della <xref:System.Security.Cryptography.Xml.EncryptedData> classe nella console.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public abstract void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LoadXml : System.Xml.XmlElement -&gt; unit" Usage="encryptedType.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto <see cref="T:System.Xml.XmlElement" /> che rappresenta un elemento XML da utilizzare nell'elemento <see langword="&lt;EncryptedType&gt;" />.</param>
        <summary>Carica le informazioni XML nell'elemento <see langword="&lt;EncryptedType&gt;" /> nella crittografia XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per caricare un elemento XML esistente nel <xref:System.Security.Cryptography.Xml.EncryptedType> oggetto.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come crittografare e decrittografare un elemento XML mediante il <xref:System.Security.Cryptography.Xml.EncryptedData> classe che deriva dal <xref:System.Security.Cryptography.Xml.EncryptedType> classe.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="value" /> fornito è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MimeType">
      <MemberSignature Language="C#" Value="public virtual string MimeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MimeType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MimeType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MimeType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MimeType : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'attributo <see langword="MimeType" /> di un'istanza <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> nella crittografia XML.</summary>
        <value>Stringa che descrive il tipo di supporto dei dati crittografati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `MimeType` attributo è un attributo facoltativo che descrive il tipo di supporto dei dati crittografati. Il valore di questo attributo è una stringa con i valori definiti dalle [del documento RFC 2045: parte MIME Multipurpose Internet Mail Extensions (): formato dei corpi dei messaggi Internet](https://www.ietf.org/rfc/rfc2045.txt). Ad esempio, se i dati crittografati sono un file PNG con codifica base64, i `Encoding` sarebbe l'attributo 'http://www.w3.org/2000/09/xmldsig#base64' e il `MimeType` sarebbe "image/png". Questo attributo è facoltativo e non la convalida del `MimeType` le informazioni sono obbligatorie. L'attributo indica che l'applicazione di crittografia deve eseguire un'elaborazione aggiuntiva. Si noti che queste informazioni potrebbero non essere necessarie se è già associato con l'identificatore di `Type` attributo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come crittografare e decrittografare un elemento XML mediante il <xref:System.Security.Cryptography.Xml.EncryptedData> classe che deriva dal <xref:System.Security.Cryptography.Xml.EncryptedType> classe. Questo esempio vengono quindi visualizzati diverse proprietà della <xref:System.Security.Cryptography.Xml.EncryptedData> classe nella console.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'attributo <see langword="Type" /> di un'istanza <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> nella crittografia XML.</summary>
        <value>Stringa che descrive il formato di testo dei dati crittografati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Type` attributo è un attributo facoltativo che identifica le informazioni sul formato del testo del contenuto crittografato tipo. Sebbene sia facoltativo, questo è un attributo importante e viene utilizzato per elaborazione obbligatoria descritto in [regole di elaborazione: decrittografia](https://www.w3.org/TR/xmlenc-core/) (sezione 4.2) della specifica XML Encryption Syntax and Processing (https://www.w3.org/TR/xmlenc-core/). Se il `<EncryptedData>` elemento contiene i dati di tipo `'element'` o elemento `'content'`e sostituisce che i dati in un documento XML, è consigliabile che il `Type` attributo essere fornito. Senza queste informazioni, l'applicazione tenta di decrittografare le informazioni in grado di ripristinare automaticamente il documento XML in formato testo originale.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come crittografare e decrittografare un elemento XML mediante il <xref:System.Security.Cryptography.Xml.EncryptedData> classe che deriva dal <xref:System.Security.Cryptography.Xml.EncryptedType> classe.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>