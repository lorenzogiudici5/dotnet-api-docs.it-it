<Type Name="Reference" FullName="System.Security.Cryptography.Xml.Reference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b906510510910edb0a742484503ec8db706d3bbb" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33681433" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Reference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Reference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.Reference" />
  <TypeSignature Language="VB.NET" Value="Public Class Reference" />
  <TypeSignature Language="C++ CLI" Value="public ref class Reference" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta l'elemento <see langword="&lt;reference&gt;" /> di una firma XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.Reference> oggetto rappresenta la <`reference`> dell'elemento di una firma digitale XML definita dalla specifica di firma digitale XML.  
  
 Utilizzare il <xref:System.Security.Cryptography.Xml.Reference> per specificare le informazioni seguenti:  
  
-   L'algoritmo digest usato per firmare dell'oggetto dati.  Questo valore è obbligatorio.  
  
-   La risorsa identificatore URI (Uniform) dell'oggetto dati per eseguire l'accesso. L'URI è possibile specificare un percorso di file o elementi specifici all'interno di un documento XML.  Questo valore è obbligatorio.  
  
-   Una catena di trasformazioni da applicare prima di generare il digest. Questo valore è facoltativo.  
  
-   Il tipo di oggetto da firmare.  Questo valore è facoltativo.  
  
-   Un identificatore univoco utilizzato per fare riferimento corrente `<reference>` elemento.  Questo valore è facoltativo.  
  
 Per ulteriori informazioni sul <`reference`> elemento, vedere il W3C specifica www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come generare e verificare una firma XML protetta utilizzando il <xref:System.Security.Cryptography.Xml.Reference> oggetto.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.Reference" /> con le proprietà predefinite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come generare e verificare una firma XML protetta utilizzando il <xref:System.Security.Cryptography.Xml.Reference> oggetto.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 Esempio di codice riportato di seguito viene illustrato come generare e verificare una firma XML disconnessa utilizzando il <xref:System.Security.Cryptography.Xml.Reference> oggetto.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Oggetto <see cref="T:System.IO.Stream" /> con il quale inizializzare la nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.Reference" />.</param>
        <summary>Consente di inizializzare unan uvoa istanza della classe <see cref="T:System.Security.Cryptography.Xml.Reference" /> con il valore hash di <see cref="T:System.IO.Stream" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza la <xref:System.Security.Cryptography.Xml.Reference> oggetto con il valore hash che corrisponde alla `stream` parametro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference(System::String ^ uri);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Oggetto <see cref="T:System.Uri" /> con il quale inizializzare la nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.Reference" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.Reference" /> con l'oggetto <see cref="T:System.Uri" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza la <xref:System.Security.Cryptography.Xml.Reference> oggetto con l'URI con un'elaborazione speciale per i dati `""`, `#xpointer(/)`, e `#xxxx`.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare la <xref:System.Security.Cryptography.Xml.Reference> classe per firmare e verificare un documento XML utilizzando una firma di busta.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTransform">
      <MemberSignature Language="C#" Value="public void AddTransform (System.Security.Cryptography.Xml.Transform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTransform(class System.Security.Cryptography.Xml.Transform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTransform(System::Security::Cryptography::Xml::Transform ^ transform);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="System.Security.Cryptography.Xml.Transform" />
      </Parameters>
      <Docs>
        <param name="transform">Trasformazione da aggiungere all'elenco di trasformazioni.</param>
        <summary>Consente di aggiungere un oggetto <see cref="T:System.Security.Cryptography.Xml.Transform" /> all'elenco delle trasformazioni da eseguire sui dati prima di passarli all'algoritmo digest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.Reference.AddTransform%2A> metodo consente di modificare il `<Transform>` elemento e i relativi sottoelementi di una firma digitale XML.  
  
 Vengono applicate nell'ordine in cui sono stati aggiunti. Se è specificata alcuna trasformazione, è necessario almeno le trasformazioni vengono aggiunti automaticamente.  
  
 Per ulteriori informazioni sulle firme digitali XML, vedere la specifica W3C www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come generare e verificare una firma XML protetta utilizzando il <xref:System.Security.Cryptography.Xml.Reference> oggetto.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 Esempio di codice riportato di seguito viene illustrato come generare e verificare una firma XML disconnessa utilizzando il <xref:System.Security.Cryptography.Xml.Reference> oggetto.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="transform" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DigestMethod">
      <MemberSignature Language="C#" Value="public string DigestMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DigestMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.DigestMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DigestMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DigestMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'URI (Uniform Resource Identifier) per il metodo di digest dell'oggetto <see cref="T:System.Security.Cryptography.Xml.Reference" /> corrente.</summary>
        <value>URI per il metodo di digest di <see cref="T:System.Security.Cryptography.Xml.Reference" /> corrente. Il valore predefinito è "http://www.w3.org/2000/09/xmldsig#sha1".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> proprietà utilizza una stringa URI per rappresentare il <`DigestMethod`> dell'elemento di una firma digitale XML.  
  
 Il metodo digest è l'algoritmo utilizzato per l'hash di <xref:System.Security.Cryptography.Xml.Reference>. L'algoritmo predefinito è <xref:System.Security.Cryptography.SHA1>.  
  
 Per ulteriori informazioni sulle firme digitali XML, vedere la specifica W3C www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DigestValue">
      <MemberSignature Language="C#" Value="public byte[] DigestValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DigestValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.DigestValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DigestValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DigestValue { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Consente di ottiene o impostare il valore di digest dell'oggetto <see cref="T:System.Security.Cryptography.Xml.Reference" /> corrente.</summary>
        <value>Il valore digest dell'oggetto <see cref="T:System.Security.Cryptography.Xml.Reference" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> proprietà utilizza una matrice di byte per rappresentare il <`DigestValue`> dell'elemento di una firma digitale XML.  
  
 Il <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> proprietà contiene il valore con codifica Base 64 del digest dell'oggetto descritto dal <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> proprietà.  
  
 Il <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> proprietà viene popolata automaticamente con il valore appropriato quando si effettua una chiamata a <xref:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature%2A>.  
  
 Per ulteriori informazioni sulle firme digitali XML, vedere la specifica W3C www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce la rappresentazione XML di <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
        <returns>Rappresentazione XML di <see cref="T:System.Security.Cryptography.Xml.Reference" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La proprietà <see cref="P:System.Security.Cryptography.Xml.Reference.DigestMethod" /> è <see langword="null" />.  
  
 oppure  
  
 La proprietà <see cref="P:System.Security.Cryptography.Xml.Reference.DigestValue" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'ID dell'oggetto <see cref="T:System.Security.Cryptography.Xml.Reference" /> corrente.</summary>
        <value>ID dell'oggetto <see cref="T:System.Security.Cryptography.Xml.Reference" /> corrente. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Security.Cryptography.Xml.Reference.Id%2A> proprietà per aggiungere un ID di stringa per la rappresentazione XML dell'oggetto corrente <xref:System.Security.Cryptography.Xml.Reference> elemento. L'ID viene utilizzato per fare riferimento il <xref:System.Security.Cryptography.Xml.Reference> elemento da un altro percorso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Elemento XML dal quale caricare lo stato della classe <see cref="T:System.Security.Cryptography.Xml.Reference" />.</param>
        <summary>Consente di caricare uno stato della classe <see cref="T:System.Security.Cryptography.Xml.Reference" /> da un elemento XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Il parametro <paramref name="value" /> non contiene trasformazioni.  
  
 oppure  
  
 Il parametro <paramref name="value" /> contiene una trasformazione sconosciuta.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransformChain">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.TransformChain TransformChain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.TransformChain TransformChain" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.TransformChain" />
      <MemberSignature Language="VB.NET" Value="Public Property TransformChain As TransformChain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::TransformChain ^ TransformChain { System::Security::Cryptography::Xml::TransformChain ^ get(); void set(System::Security::Cryptography::Xml::TransformChain ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.TransformChain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la catena di trasformazioni dell'oggetto <see cref="T:System.Security.Cryptography.Xml.Reference" /> corrente.</summary>
        <value>Catena di trasformazioni dell'oggetto <see cref="T:System.Security.Cryptography.Xml.Reference" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.Reference.TransformChain%2A> proprietà rappresenta la <`Transform`> elemento e i relativi sottoelementi di una firma digitale XML.  
  
 La catena di trasformazioni è un elenco ordinato delle trasformazioni. L'output di queste trasformazioni rappresenta l'input per l'algoritmo hash specificato nella <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> proprietà.  
  
 Per ulteriori informazioni sulle firme digitali XML, vedere la specifica W3C www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo dell'oggetto a cui viene apposta la firma.</summary>
        <value>Tipo dell'oggetto a cui viene apposta la firma.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Uri" /> dell'istanza corrente di <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
        <value>Oggetto <see cref="T:System.Uri" /> dell'istanza corrente di <see cref="T:System.Security.Cryptography.Xml.Reference" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> proprietà utilizza un'identificatore URI (Uniform Resource) di stringa per rappresentare il <`URI`> dell'elemento di una firma digitale XML.  
  
 Utilizzare il <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> proprietà per specificare il percorso di un documento e per specificare l'elemento del documento XML corrente per firmare o per indicare che l'intero documento deve essere firmato.  
  
 Per creare una firma digitale XML, è necessario impostare il <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> proprietà. Nella tabella seguente vengono descritti i valori che è possibile passare il <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> proprietà.  
  
|Oggetto da firmare|Valore passato al <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> proprietà|  
|--------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|Un intero documento XML utilizzando una firma protetta.|Una stringa vuota: ""|  
|Un elemento specifico all'interno di un documento XML utilizzando una firma protetta.|Il nome di un elemento XML identificato da un nome di attributo ID. La stringa deve essere nel formato seguente in cui `IDname` è il nome di un ID di nome di attributo valido:<br /><br /> "#Idname"|  
|Un file utilizzando una firma disconnessa.|L'URI di un file: "c:\data.jpg" o "c:\data.xml".|  
  
 Per ulteriori informazioni sulle firme digitali XML, vedere il World Wide Web Consortium (W3C) [sintassi della firma XML e specifica di elaborazione](https://www.w3.org/TR/xmldsig-core/).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come generare e verificare una firma XML protetta utilizzando il <xref:System.Security.Cryptography.Xml.Reference> oggetto.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>