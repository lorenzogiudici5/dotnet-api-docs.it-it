<Type Name="KeyInfoName" FullName="System.Security.Cryptography.Xml.KeyInfoName">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e426569eed9750639e18c09520dc0fa31533d5f1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30497835" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyInfoName : System.Security.Cryptography.Xml.KeyInfoClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyInfoName extends System.Security.Cryptography.Xml.KeyInfoClause" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.KeyInfoName" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyInfoName&#xA;Inherits KeyInfoClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyInfoName : System::Security::Cryptography::Xml::KeyInfoClause" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.KeyInfoClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>	Rappresenta un sottoelemento <see langword="&lt;KeyName&gt;" /> di un elemento <see langword="&lt;KeyInfo&gt;" /> XMLDSIG o della crittografia XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `<KeyName>` elemento contiene un identificatore di stringa che la parte che convalida o la decrittografia di un documento XML utilizzato per identificare la chiave corrispondente.  Ad esempio, se si riceve un documento XML crittografato o firmato con un `<KeyName>` valore dell'elemento di "AsymmetricKey1", si utilizzerà una chiave che è il mittente e sono denominati "AsymmetricKey1" per decrittografare o verificare il documento.  Entrambe le parti devono concordare un mapping del nome della chiave anticipatamente.  Si noti che la chiave effettiva non è incorporata nel documento XML.  
  
 Per ulteriori informazioni sul `<KeyName>` elemento, vedere la sezione 4.4.1 della specifica XMLDSIG, che è disponibile il World Wide Web Consortium (W3C) al www.w3.org/TR/xmldsig-core/, oppure la specifica della crittografia XML, è disponibile W3C in www.w3.org/TR/xmlenc-core/.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfoName> quando si accede a una risorsa rappresentata da un URI (Universal Resource Identifier) dell'oggetto.  In questo esempio la firma viene salvata in un nuovo file.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfoName> quando si firma un documento XML dell'oggetto.  In questo esempio la firma viene salvata in un nuovo file.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfoName> dell'oggetto per la crittografia di un documento XML. In questo esempio incorpora una chiave crittografata all'interno del documento XML crittografato.  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfoName> dell'oggetto per la crittografia di un documento XML. In questo esempio associa un nome a una chiave simmetrica per facilitarne l'identificazione per il metodo di decrittografia.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyInfoName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfoName.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyInfoName();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfoName> quando si accede a una risorsa rappresentata da un URI (Universal Resource Identifier) dell'oggetto.  In questo esempio la firma viene salvata in un nuovo file.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfoName> quando si firma un documento XML dell'oggetto.  In questo esempio la firma viene salvata in un nuovo file.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfoName> dell'oggetto per la crittografia di un documento XML. In questo esempio incorpora una chiave crittografata all'interno del documento XML crittografato.  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfoName> dell'oggetto per la crittografia di un documento XML. In questo esempio associa un nome a una chiave simmetrica per facilitarne l'identificazione per il metodo di decrittografia.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyInfoName (string keyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyInfoName(System::String ^ keyName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyName">Identificatore di stringa che corrisponde al valore dell'elemento <see langword="&lt;KeyName&gt;" />.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> specificando l'identificatore di stringa che rappresenta il valore dell'elemento <see langword="&lt;KeyName&gt;" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `keyName` parametro può contenere qualsiasi stringa, l'interpretazione della stringa è specifica dell'applicazione. Lo spazio vuoto è significativo nel valore stringa.  
  
 Il `keyName` parametro specifica il valore della <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfoName.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una rappresentazione XML dell'oggetto <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" />.</summary>
        <returns>Rappresentazione XML dell'oggetto <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.XmlElement> oggetto restituito da questo metodo è adatto per l'uso come sottoelemento di un elemento XMLDSIG o la crittografia XML `<KeyInfo>` elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public override void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto <see cref="T:System.Xml.XmlElement" /> che specifica lo stato dell'oggetto <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" />.</param>
        <summary>Consente di analizzare l'oggetto <see cref="T:System.Xml.XmlElement" /> di input e di configurare lo stato interno dell'oggetto <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> di conseguenza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.KeyInfoName.LoadXml%2A> metodo viene utilizzato in genere al processo un `<KeyName>` sottoelemento di un `<KeyInfo>` elemento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.KeyInfoName.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'identificatore di stringa contenuto in un elemento <see langword="&lt;KeyName&gt;" />.</summary>
        <value>Identificatore di stringa che corrisponde al valore dell'elemento <see langword="&lt;KeyName&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> proprietà può contenere qualsiasi stringa, l'interpretazione della stringa è specifica dell'applicazione. Lo spazio vuoto è significativo nel valore stringa.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfoName> quando si accede a una risorsa rappresentata da un URI (Universal Resource Identifier) dell'oggetto.  In questo esempio la firma viene salvata in un nuovo file.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfoName> quando si firma un documento XML dell'oggetto.  In questo esempio la firma viene salvata in un nuovo file.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfoName> dell'oggetto per la crittografia di un documento XML. In questo esempio incorpora una chiave crittografata all'interno del documento XML crittografato.  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.Cryptography.Xml.KeyInfoName> dell'oggetto per la crittografia di un documento XML. In questo esempio associa un nome a una chiave simmetrica per facilitarne l'identificazione per il metodo di decrittografia.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>