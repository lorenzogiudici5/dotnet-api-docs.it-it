<Type Name="ViewStateService" FullName="System.Activities.Presentation.View.ViewStateService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="267468a00fdd54a77dcdc8e2daf0217761d34d87" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30357345" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ViewStateService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ViewStateService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.ViewStateService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ViewStateService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewStateService abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="54894-101">Consente la conservazione e l'accesso di tutti i valori dei dati associati ai componenti di interazione dell'utente di un'applicazione del flusso di lavoro in un determinato momento dell'esecuzione di un'applicazione del flusso di lavoro.</span>
      <span class="sxs-lookup">
        <span data-stu-id="54894-101">Enables the preservation and accessing of all data values associated with the user interaction components of a workflow application, at a particular point in time in the running of a workflow application.</span>
      </span>
      <span data-ttu-id="54894-102">Una classe <see cref="T:System.Activities.Presentation.View.ViewStateService" /> archivia gli stati di visualizzazione degli elementi del modello.</span>
      <span class="sxs-lookup">
        <span data-stu-id="54894-102">A <see cref="T:System.Activities.Presentation.View.ViewStateService" /> stores view states for model items.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54894-103">Ciò si rivela utile in quanto consente di continuare a recuperare lo stato quando il controllo dell'applicazione è intermittente con i postback.</span><span class="sxs-lookup"><span data-stu-id="54894-103">This is useful so that the state can keep being retrieved when control of the application goes and comes with postbacks.</span></span> <span data-ttu-id="54894-104"><xref:System.Activities.Presentation.View.ViewStateService> è una classe astratta.</span><span class="sxs-lookup"><span data-stu-id="54894-104"><xref:System.Activities.Presentation.View.ViewStateService> is an abstract class.</span></span> <span data-ttu-id="54894-105">Le classi derivate devono archiviare gli stati di visualizzazione quando viene chiamato <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> e devono recuperarli quando viene chiamato <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>.</span><span class="sxs-lookup"><span data-stu-id="54894-105">Derived classes must store view states when <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> is called, and retrieve them when <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> is called.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewStateService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ViewStateService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54894-106">Avvia una nuova istanza della classe <see cref="T:System.Activities.Presentation.View.ViewStateService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-106">Initiates a new instance of the <see cref="T:System.Activities.Presentation.View.ViewStateService" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveViewState">
      <MemberSignature Language="C#" Value="public abstract bool RemoveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RemoveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="54894-107">Parametro <see cref="T:System.Activities.Presentation.Model.ModelItem" /> dell'attività del flusso di lavoro associata allo stato di visualizzazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-107">The workflow activity <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associated with the current view state.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="54894-108">
            <see cref="T:System.String" /> che identifica l'elemento dello stato di visualizzazione archiviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-108">The <see cref="T:System.String" /> that identifies the view state item that is stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54894-109">Se implementato in una classe derivata, rimuove lo stato di visualizzazione rappresentato dalla chiave specificata e associato all'elemento del modello specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-109">When implemented in a derived class, removes the view state represented by the specified key and associated with the specified model item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54894-110">
            <see langword="true" /> se lo stato di visualizzazione è stato rimosso; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-110">
              <see langword="true" /> if the view state was removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveAllViewState">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.Dictionary&lt;string,object&gt; RetrieveAllViewState (System.Activities.Presentation.Model.ModelItem modelItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; RetrieveAllViewState(class System.Activities.Presentation.Model.ModelItem modelItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ RetrieveAllViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="54894-111">
            <see cref="T:System.Activities.Presentation.Model.ModelItem" /> cui si applica lo stato di visualizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-111">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54894-112">Restituisce un aspetto dello stato di visualizzazione archiviato per il parametro <paramref name="modelItem" /> specificato, in base al parametro <paramref name="key" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-112">Returns an aspect of the view state that was stored for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54894-113">Restituisce <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-113">Returns <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54894-114">Chiamare <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> per archiviare inizialmente le informazioni sullo stato di visualizzazione in modo che sia possibile recuperarle.</span><span class="sxs-lookup"><span data-stu-id="54894-114">Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveViewState">
      <MemberSignature Language="C#" Value="public abstract object RetrieveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RetrieveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ RetrieveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="54894-115">Parametro <see cref="T:System.Activities.Presentation.Model.ModelItem" /> dell'attività del flusso di lavoro associata allo stato di visualizzazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-115">The workflow activity <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associated with the current view state.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="54894-116">L'oggetto <see cref="T:System.String" /> che identifica l'aspetto dello stato di visualizzazione da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-116">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54894-117">Recupera un aspetto dello stato di visualizzazione archiviato per il parametro <paramref name="modelItem" /> specificato, in base al parametro <paramref name="key" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-117">Retrieves an aspect of the view state for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54894-118">L'aspetto dello stato di visualizzazione come <see cref="T:System.Object" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-118">The aspect of the view state as an <see cref="T:System.Object" />,or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54894-119">Chiamare <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> per archiviare inizialmente le informazioni sullo stato di visualizzazione in modo che sia possibile recuperarle.</span><span class="sxs-lookup"><span data-stu-id="54894-119">Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewState">
      <MemberSignature Language="C#" Value="public abstract void StoreViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="54894-120">
            <see cref="T:System.Activities.Presentation.Model.ModelItem" /> cui si applica lo stato di visualizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-120">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="54894-121">
            <see cref="T:System.String" /> che identifica l'aspetto dello stato di visualizzazione da archiviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-121">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be stored.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="54894-122">Oggetto <see cref="T:System.Object" /> da archiviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-122">An <see cref="T:System.Object" /> to be stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54894-123">Memorizza un aspetto dello stato di visualizzazione archiviato per il parametro <paramref name="modelItem" /> specificato, in base al parametro <paramref name="key" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-123">Stores an aspect of the view state for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54894-124">È possibile recuperare l'oggetto archiviato chiamando <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> e passando gli stessi valori per `modelItem` e `key`.</span><span class="sxs-lookup"><span data-stu-id="54894-124">You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewStateWithUndo">
      <MemberSignature Language="C#" Value="public abstract void StoreViewStateWithUndo (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewStateWithUndo(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewStateWithUndo(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="54894-125">
            <see cref="T:System.Activities.Presentation.Model.ModelItem" /> cui si applica lo stato di visualizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-125">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="54894-126">
            <see cref="T:System.String" /> che identifica l'aspetto dello stato di visualizzazione da archiviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-126">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be stored.</span>
          </span>
          <span data-ttu-id="54894-127">
            <see cref="T:System.String" /> che identifica l'elemento dello stato di visualizzazione archiviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-127">The <see cref="T:System.String" /> that identifies the view state item that is stored.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="54894-128">Oggetto <see cref="T:System.Object" /> da archiviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-128">An <see cref="T:System.Object" /> to be stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54894-129">Se implementato in una classe derivata, registra l'impostazione corrente dell'elemento rappresentato dalla chiave specificata in modo che sia disponibile per un'operazione di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-129">When implemented in a derived class, records the current setting of the item represented by the specified key so that it is available for an undo operation.</span>
          </span>
          <span data-ttu-id="54894-130">L'elemento rappresentato dalla chiave specificata viene quindi archiviato nello stato di visualizzazione dell'elemento del modello specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-130">The item represented by the specified key is then stored in the view state of the specified model item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54894-131">È possibile recuperare l'oggetto archiviato chiamando <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> e passando gli stessi valori per `modelItem` e `key`.</span><span class="sxs-lookup"><span data-stu-id="54894-131">You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoableViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event UndoableViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ UndoableViewStateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54894-132">Se implementato in una classe derivata, dichiara un evento che segnala che è stata apportata una modifica allo stato di visualizzazione annullabile del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-132">When implemented in a derived class, declares an event that signals that a change has been made to the control’s undoable view state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.ViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event ViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ ViewStateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54894-133">Se implementato in una classe derivata, dichiara un evento che segnala che è stata apportata una modifica allo stato di visualizzazione del controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="54894-133">When implemented in a derived class, declares an event that signals that a change has been made to the control’s view state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>