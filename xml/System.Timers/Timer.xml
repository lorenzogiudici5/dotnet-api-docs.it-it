<Type Name="Timer" FullName="System.Timers.Timer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91933504784861b73f918ea9f5c77f9f33d153c7" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51934598" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Timers.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Elapsed")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c0df4-101">Genera un evento dopo un intervallo specificato, con un'opzione per generare eventi ricorrenti.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0df4-101">Generates an event after a set interval, with an option to generate recurring events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-102">Il <xref:System.Timers.Timer> componente è un timer basate su server che genera una <xref:System.Timers.Timer.Elapsed> evento nell'applicazione dopo il numero di millisecondi nel <xref:System.Timers.Timer.Interval%2A> proprietà è trascorso.</span><span class="sxs-lookup"><span data-stu-id="c0df4-102">The <xref:System.Timers.Timer> component is a server-based timer that raises an <xref:System.Timers.Timer.Elapsed> event in your application after the number of milliseconds in the <xref:System.Timers.Timer.Interval%2A> property has elapsed.</span></span> <span data-ttu-id="c0df4-103">È possibile configurare il <xref:System.Timers.Timer> per generare l'evento utilizzando una sola volta o ripetutamente il <xref:System.Timers.Timer.AutoReset%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="c0df4-103">You can configure the <xref:System.Timers.Timer> object to raise the event just once or repeatedly using the <xref:System.Timers.Timer.AutoReset%2A> property.</span></span> <span data-ttu-id="c0df4-104">In genere, un <xref:System.Timers.Timer> oggetto viene dichiarato a livello di classe in modo che rimanga nell'ambito fino a quando è necessaria.</span><span class="sxs-lookup"><span data-stu-id="c0df4-104">Typically, a <xref:System.Timers.Timer> object is declared at the class level so that it stays in scope as long as it is needed.</span></span> <span data-ttu-id="c0df4-105">È possibile quindi gestire relativo <xref:System.Timers.Timer.Elapsed> eventi per garantire l'elaborazione normale.</span><span class="sxs-lookup"><span data-stu-id="c0df4-105">You can then handle its <xref:System.Timers.Timer.Elapsed> event to provide regular processing.</span></span> <span data-ttu-id="c0df4-106">Ad esempio, si supponga di avere un server critico che deve rimanere in esecuzione 24 ore su 24, 7 giorni alla settimana.</span><span class="sxs-lookup"><span data-stu-id="c0df4-106">For example, suppose you have a critical server that must be kept running 24 hours a day, 7 days a week.</span></span> <span data-ttu-id="c0df4-107">È possibile creare un servizio che utilizza un <xref:System.Timers.Timer> oggetto da verificare periodicamente il server e assicurarsi che il sistema sia attivo e in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="c0df4-107">You could create a service that uses a <xref:System.Timers.Timer> object to periodically check the server and ensure that the system is up and running.</span></span> <span data-ttu-id="c0df4-108">Se il sistema non risponde, il servizio potrebbe tentare di riavviare il server o notificare all'amministratore.</span><span class="sxs-lookup"><span data-stu-id="c0df4-108">If the system is not responding, the service could attempt to restart the server or notify an administrator.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="c0df4-109">Il <xref:System.Timers.Timer> classe non è disponibile per tutte le implementazioni di .NET e le versioni, ad esempio .NET Standard 1.6 e versioni precedenti.</span><span class="sxs-lookup"><span data-stu-id="c0df4-109">The <xref:System.Timers.Timer> class is not available for all .NET implementations and versions, such as .NET Standard 1.6 and lower versions.</span></span>
> <span data-ttu-id="c0df4-110">In questi casi, è possibile usare il <xref:System.Threading.Timer?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="c0df4-110">In these cases, you can use the <xref:System.Threading.Timer?displayProperty=nameWithType> class instead.</span></span>
  
 <span data-ttu-id="c0df4-111">Questo tipo implementa la <xref:System.IDisposable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="c0df4-111">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="c0df4-112">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</span><span class="sxs-lookup"><span data-stu-id="c0df4-112">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="c0df4-113">Per eliminare il tipo direttamente, chiamare relativi <xref:System.IDisposable.Dispose%2A> metodo in un `try` / `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="c0df4-113">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="c0df4-114">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="c0df4-114">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="c0df4-115">Per altre informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="c0df4-115">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="c0df4-116">Il server basate su <xref:System.Timers.Timer?displayProperty=nameWithType> classe è progettata per l'uso con thread di lavoro in un ambiente a thread multipli.</span><span class="sxs-lookup"><span data-stu-id="c0df4-116">The server-based <xref:System.Timers.Timer?displayProperty=nameWithType> class is designed for use with worker threads in a multithreaded environment.</span></span> <span data-ttu-id="c0df4-117">I timer di server possono spostarsi tra i thread per gestire l'eccezione <xref:System.Timers.Timer.Elapsed> evento, con conseguente accuratezza maggiore i timer di Windows nella generazione dell'evento nel tempo.</span><span class="sxs-lookup"><span data-stu-id="c0df4-117">Server timers can move among threads to handle the raised <xref:System.Timers.Timer.Elapsed> event, resulting in more accuracy than Windows timers in raising the event on time.</span></span>  
  
 <span data-ttu-id="c0df4-118">Il <xref:System.Timers.Timer?displayProperty=nameWithType> componente genera il <xref:System.Timers.Timer.Elapsed> evento, in base al valore (in millisecondi) del <xref:System.Timers.Timer.Interval%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="c0df4-118">The <xref:System.Timers.Timer?displayProperty=nameWithType> component raises the <xref:System.Timers.Timer.Elapsed> event, based on the value (in milliseconds) of the <xref:System.Timers.Timer.Interval%2A> property.</span></span> <span data-ttu-id="c0df4-119">È possibile gestire questo evento per eseguire l'elaborazione che è necessario.</span><span class="sxs-lookup"><span data-stu-id="c0df4-119">You can handle this event to perform the processing you need.</span></span> <span data-ttu-id="c0df4-120">Ad esempio, si supponga di disporre di un'applicazione di vendita in linea che invia continuamente gli ordini di vendita in un database.</span><span class="sxs-lookup"><span data-stu-id="c0df4-120">For example, suppose that you have an online sales application that continuously posts sales orders to a database.</span></span> <span data-ttu-id="c0df4-121">Il servizio che consente di compilare le istruzioni per la spedizione opera su un batch di ordini, anziché elaborare individualmente ogni ordine.</span><span class="sxs-lookup"><span data-stu-id="c0df4-121">The service that compiles the instructions for shipping operates on a batch of orders rather than processing each order individually.</span></span> <span data-ttu-id="c0df4-122">È possibile usare un <xref:System.Timers.Timer> per avviare il batch ogni 30 minuti di elaborazione.</span><span class="sxs-lookup"><span data-stu-id="c0df4-122">You could use a <xref:System.Timers.Timer> to start the batch processing every 30 minutes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c0df4-123">La classe Timer ha la stessa risoluzione come l'orologio di sistema.</span><span class="sxs-lookup"><span data-stu-id="c0df4-123">The System.Timers.Timer class has the same resolution as the system clock.</span></span> <span data-ttu-id="c0df4-124">Ciò significa che il <xref:System.Timers.Timer.Elapsed> viene generato l'evento a un intervallo definito per la risoluzione del clock di sistema se la <xref:System.Timers.Timer.Interval%2A> proprietà è minore rispetto alla risoluzione del clock di sistema.</span><span class="sxs-lookup"><span data-stu-id="c0df4-124">This means that the <xref:System.Timers.Timer.Elapsed> event will fire at an interval defined by the resolution of the system clock if the <xref:System.Timers.Timer.Interval%2A> property is less than the resolution of the system clock.</span></span> <span data-ttu-id="c0df4-125">Per altre informazioni, vedere la proprietà <xref:System.Timers.Timer.Interval%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0df4-125">For more information, see the <xref:System.Timers.Timer.Interval%2A> property.</span></span>  
  
 <span data-ttu-id="c0df4-126">Quando <xref:System.Timers.Timer.AutoReset%2A> è impostata su `false`, un <xref:System.Timers.Timer?displayProperty=nameWithType> oggetto genera il <xref:System.Timers.Timer.Elapsed> evento una sola volta, dopo il primo <xref:System.Timers.Timer.Interval%2A> è trascorso.</span><span class="sxs-lookup"><span data-stu-id="c0df4-126">When <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, a <xref:System.Timers.Timer?displayProperty=nameWithType> object raises the <xref:System.Timers.Timer.Elapsed> event only once, after the first <xref:System.Timers.Timer.Interval%2A> has elapsed.</span></span> <span data-ttu-id="c0df4-127">Per continuare a generare il <xref:System.Timers.Timer.Elapsed> eventi regolarmente in base all'intervallo definito dal <xref:System.Timers.Timer.Interval%2A>, impostare <xref:System.Timers.Timer.AutoReset%2A> a `true`, ovvero il valore predefinito.</span><span class="sxs-lookup"><span data-stu-id="c0df4-127">To keep raising the <xref:System.Timers.Timer.Elapsed> event regularly at the interval defined by the <xref:System.Timers.Timer.Interval%2A>, set <xref:System.Timers.Timer.AutoReset%2A> to `true`, which is the default value.</span></span>  
  
 <span data-ttu-id="c0df4-128">Il <xref:System.Timers.Timer> componente intercetta ed Elimina tutte le eccezioni generate dai gestori eventi per il <xref:System.Timers.Timer.Elapsed> evento.</span><span class="sxs-lookup"><span data-stu-id="c0df4-128">The <xref:System.Timers.Timer> component catches and suppresses all exceptions thrown by event handlers for the <xref:System.Timers.Timer.Elapsed> event.</span></span> <span data-ttu-id="c0df4-129">Questo comportamento è soggetta a modifiche nelle versioni future di .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="c0df4-129">This behavior is subject to change in future releases of the .NET Framework.</span></span> <span data-ttu-id="c0df4-130">Si noti tuttavia che ciò non vale per i gestori di eventi che vengono eseguiti in modo asincrono e includeranno il `await` operatore (in c#) o `Await` operatore (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c0df4-130">Note, however, that this is not true of event handlers that execute asynchronously and include the `await` operator (in C#)  or the `Await` operator (in Visual Basic).</span></span> <span data-ttu-id="c0df4-131">Le eccezioni generate in questi gestori eventi vengono propagate nel thread chiamante, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="c0df4-131">Exceptions thrown in these event handlers are propagated back to the calling thread, as the following example illustrates.</span></span> <span data-ttu-id="c0df4-132">Per altre informazioni sulle eccezioni generate nei metodi asincroni, vedere [gestione delle eccezioni](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md).</span><span class="sxs-lookup"><span data-stu-id="c0df4-132">For more information on exceptions thrown in asynchronous methods, see   [Exception Handling](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md).</span></span>  
  
 [!code-csharp[System.Timers.Timer#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/AsyncHandlerEx1.cs#3)]
 [!code-vb[System.Timers.Timer#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/AsyncHandlerEx1.vb#3)]  
  
 <span data-ttu-id="c0df4-133">Se il <xref:System.Timers.Timer.SynchronizingObject%2A> proprietà viene `null`, il <xref:System.Timers.Timer.Elapsed> evento viene generato in un <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="c0df4-133">If the <xref:System.Timers.Timer.SynchronizingObject%2A> property is `null`, the <xref:System.Timers.Timer.Elapsed> event is raised on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="c0df4-134">Se l'elaborazione del <xref:System.Timers.Timer.Elapsed> evento ha una durata superiore <xref:System.Timers.Timer.Interval%2A>, l'evento potrebbe essere generato nuovamente in un altro <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="c0df4-134">If processing of the <xref:System.Timers.Timer.Elapsed> event lasts longer than <xref:System.Timers.Timer.Interval%2A>, the event might be raised again on another <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="c0df4-135">In questo caso, il gestore dell'evento deve essere rientrante.</span><span class="sxs-lookup"><span data-stu-id="c0df4-135">In this situation, the event handler should be reentrant.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0df4-136">Il metodo di gestione degli eventi può essere eseguito in un unico thread allo stesso tempo che un altro thread chiama il <xref:System.Timers.Timer.Stop%2A> metodo o il set di <xref:System.Timers.Timer.Enabled%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="c0df4-136">The event-handling method might run on one thread at the same time that another thread calls the <xref:System.Timers.Timer.Stop%2A> method or sets the <xref:System.Timers.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="c0df4-137">Ciò potrebbe comportare il <xref:System.Timers.Timer.Elapsed> evento generato dopo che il timer è stato arrestato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-137">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the timer is stopped.</span></span> <span data-ttu-id="c0df4-138">Il codice di esempio per il <xref:System.Timers.Timer.Stop%2A> metodo illustra un modo per evitare questa race condition.</span><span class="sxs-lookup"><span data-stu-id="c0df4-138">The example code for the <xref:System.Timers.Timer.Stop%2A> method shows one way to avoid this race condition.</span></span>  
  
 <span data-ttu-id="c0df4-139">Anche se <xref:System.Timers.Timer.SynchronizingObject%2A> non è `null`, <xref:System.Timers.Timer.Elapsed> gli eventi possono verificarsi dopo il <xref:System.Timers.Timer.Dispose%2A> o <xref:System.Timers.Timer.Stop%2A> metodo è stato chiamato o dopo il <xref:System.Timers.Timer.Enabled%2A> proprietà è stata impostata `false`, in quanto il segnale per generare il <xref:System.Timers.Timer.Elapsed> eventi sono sempre in coda per l'esecuzione in un pool di thread.</span><span class="sxs-lookup"><span data-stu-id="c0df4-139">Even if <xref:System.Timers.Timer.SynchronizingObject%2A> is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="c0df4-140">Un modo per risolvere questa race condition consiste nell'impostare un flag che indica il gestore eventi per il <xref:System.Timers.Timer.Elapsed> evento ignori alcuni eventi successivi.</span><span class="sxs-lookup"><span data-stu-id="c0df4-140">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="c0df4-141">Se si usa la <xref:System.Timers.Timer?displayProperty=nameWithType> classe con un elemento dell'interfaccia utente, ad esempio un form o controllo, senza attivare il timer su tale elemento dell'interfaccia utente, assegnare il form o un controllo che contiene il <xref:System.Timers.Timer> per il <xref:System.Timers.Timer.SynchronizingObject%2A> proprietà, in modo che l'evento è il marshalling nel thread dell'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="c0df4-141">If you use the <xref:System.Timers.Timer?displayProperty=nameWithType> class with a user interface element, such as a form or control, without placing the timer on that user interface element, assign the form or control that contains the <xref:System.Timers.Timer> to the <xref:System.Timers.Timer.SynchronizingObject%2A> property, so that the event is marshaled to the user interface thread.</span></span>  
  
 <span data-ttu-id="c0df4-142">Per un elenco di valori di proprietà predefiniti per un'istanza di <xref:System.Timers.Timer>, vedere il <xref:System.Timers.Timer.%23ctor%2A> costruttore.</span><span class="sxs-lookup"><span data-stu-id="c0df4-142">For a list of default property values for an instance of <xref:System.Timers.Timer>, see the <xref:System.Timers.Timer.%23ctor%2A> constructor.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="c0df4-143">Tenere presente che .NET include quattro classi denominate `Timer`, ognuno dei quali offre diverse funzionalità:</span><span class="sxs-lookup"><span data-stu-id="c0df4-143">Be aware that .NET includes four classes named `Timer`, each of which offers different functionality:</span></span>  
>   
> - <span data-ttu-id="c0df4-144"><xref:System.Timers.Timer?displayProperty=nameWithType> (questo argomento): genera un evento a intervalli regolari.</span><span class="sxs-lookup"><span data-stu-id="c0df4-144"><xref:System.Timers.Timer?displayProperty=nameWithType> (this topic): fires an event at regular intervals.</span></span> <span data-ttu-id="c0df4-145">La classe è destinata da utilizzare come un server basato su o componente del servizio in un ambiente a thread multipli; non dispone di alcuna interfaccia utente e non è visibile in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="c0df4-145">The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>  
> - <span data-ttu-id="c0df4-146"><xref:System.Threading.Timer?displayProperty=nameWithType>: esegue un metodo di callback singolo in un pool di thread a intervalli regolari.</span><span class="sxs-lookup"><span data-stu-id="c0df4-146"><xref:System.Threading.Timer?displayProperty=nameWithType>: executes a single callback method on a thread pool thread at regular intervals.</span></span> <span data-ttu-id="c0df4-147">Il metodo di callback viene definito quando il timer viene creata un'istanza e non può essere modificato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-147">The callback method is defined when the timer is instantiated and cannot be changed.</span></span> <span data-ttu-id="c0df4-148">Ad esempio il <xref:System.Timers.Timer?displayProperty=nameWithType> (classe), questa classe è destinata all'utilizzo come un componente basato su server o del servizio in un ambiente multithreading, ma senza un'interfaccia utente e non è visibile in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="c0df4-148">Like the <xref:System.Timers.Timer?displayProperty=nameWithType> class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>  
> - <span data-ttu-id="c0df4-149"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (Solo .NET framework): un componente di Windows Form che genera un evento a intervalli regolari.</span><span class="sxs-lookup"><span data-stu-id="c0df4-149"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (.NET Framework only): a Windows Forms component that fires an event at regular intervals.</span></span> <span data-ttu-id="c0df4-150">Il componente non dispone di interfacce utente ed è progettato per l'uso in un ambiente a thread singolo.</span><span class="sxs-lookup"><span data-stu-id="c0df4-150">The component has no user interface and is designed for use in a single-threaded environment.</span></span>  
> - <span data-ttu-id="c0df4-151"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (Solo .NET framework): un componente ASP.NET che esegue postback asincroni o sincroni pagine web a intervalli regolari.</span><span class="sxs-lookup"><span data-stu-id="c0df4-151"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (.NET Framework only): an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</span></span>  

## Examples  
 <span data-ttu-id="c0df4-152">Nell'esempio seguente crea una `System.Timers.Timer` oggetto che viene attivato relativo <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> eventi ogni due secondi (2000 millisecondi), impostare un gestore eventi per l'evento e avvia il timer.</span><span class="sxs-lookup"><span data-stu-id="c0df4-152">The following example instantiates a `System.Timers.Timer` object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="c0df4-153">Il gestore dell'evento Visualizza il valore della <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> proprietà ogni volta che viene generato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-153">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-csharp[System.Timers.Timer#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer2a.cs#2)]
 [!code-vb[System.Timers.Timer#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer2a.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="c0df4-154">Qualsiasi membro pubblico <see langword="static" /> membri di questo tipo sono thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0df4-154">Any public <see langword="static" /> members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="c0df4-155">I membri di istanza non sono garantiti come thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0df4-155">Any instance members are not guaranteed to be thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="P:System.Timers.Timer.AutoReset" />
    <altmember cref="P:System.Timers.Timer.Interval" />
    <altmember cref="E:System.Timers.Timer.Elapsed" />
    <altmember cref="M:System.Timers.Timer.#ctor" />
    <altmember cref="T:System.Threading.Timer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0df4-156">Inizializza una nuova istanza della classe <see cref="T:System.Timers.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-156">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0df4-157">Inizializza una nuova istanza della classe <see cref="T:System.Timers.Timer" /> e imposta tutte le proprietà sui rispettivi valori iniziali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-157">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets all the properties to their initial values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-158">La tabella seguente illustra i valori iniziali delle proprietà per un'istanza di <xref:System.Timers.Timer>.</span><span class="sxs-lookup"><span data-stu-id="c0df4-158">The following table shows initial property values for an instance of <xref:System.Timers.Timer>.</span></span>  
  
|<span data-ttu-id="c0df4-159">Proprietà</span><span class="sxs-lookup"><span data-stu-id="c0df4-159">Property</span></span>|<span data-ttu-id="c0df4-160">Valore iniziale</span><span class="sxs-lookup"><span data-stu-id="c0df4-160">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Timers.Timer.AutoReset%2A>|`true`|  
|<xref:System.Timers.Timer.Enabled%2A>|`false`|  
|<xref:System.Timers.Timer.Interval%2A>|<span data-ttu-id="c0df4-161">100 millisecondi</span><span class="sxs-lookup"><span data-stu-id="c0df4-161">100 milliseconds</span></span>|  
|<xref:System.Timers.Timer.SynchronizingObject%2A>|<span data-ttu-id="c0df4-162">Riferimento null (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c0df4-162">A null reference (`Nothing` in Visual Basic).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c0df4-163">Nell'esempio seguente crea una <xref:System.Timers.Timer> oggetto che viene attivato relativo <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> eventi ogni due secondi (2000 millisecondi), impostare un gestore eventi per l'evento e avvia il timer.</span><span class="sxs-lookup"><span data-stu-id="c0df4-163">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="c0df4-164">Il gestore dell'evento Visualizza il valore della <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> proprietà ogni volta che viene generato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-164">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (double interval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (interval As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(double interval);" />
      <MemberSignature Language="F#" Value="new System.Timers.Timer : double -&gt; System.Timers.Timer" Usage="new System.Timers.Timer interval" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="interval">
          <span data-ttu-id="c0df4-165">Tempo che intercorre tra gli eventi, in millisecondi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-165">The time, in milliseconds, between events.</span>
          </span>
          <span data-ttu-id="c0df4-166">Il valore deve essere maggiore di zero e minore o uguale a <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-166">The value must be greater than zero and less than or equal to <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0df4-167">Inizializza una nuova istanza della classe <see cref="T:System.Timers.Timer" /> e imposta la proprietà <see cref="P:System.Timers.Timer.Interval" /> sul numero di millisecondi specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-167">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets the <see cref="P:System.Timers.Timer.Interval" /> property to the specified number of milliseconds.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-168">Questo costruttore imposta la <xref:System.Timers.Timer.Interval%2A> proprietà dell'istanza del nuovo timer, ma non abilita il timer.</span><span class="sxs-lookup"><span data-stu-id="c0df4-168">This constructor sets the <xref:System.Timers.Timer.Interval%2A> property of the new timer instance, but does not enable the timer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0df4-169">Nell'esempio seguente crea una <xref:System.Timers.Timer> oggetto che viene attivato relativo <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> eventi ogni due secondi (2000 millisecondi), impostare un gestore eventi per l'evento e avvia il timer.</span><span class="sxs-lookup"><span data-stu-id="c0df4-169">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="c0df4-170">Il gestore dell'evento Visualizza il valore della <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> proprietà ogni volta che viene generato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-170">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-csharp[System.Timers.Timer#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/AsyncHandlerEx1.cs#3)]
 [!code-vb[System.Timers.Timer#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/AsyncHandlerEx1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c0df4-171">Il valore del parametro <paramref name="interval" /> è maggiore o uguale a zero oppure maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-171">The value of the <paramref name="interval" /> parameter is less than or equal to zero, or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="AutoReset">
      <MemberSignature Language="C#" Value="public bool AutoReset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReset" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.AutoReset" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoReset { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoReset : bool with get, set" Usage="System.Timers.Timer.AutoReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("Indicates whether the timer will be restarted when it is enabled.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Timers.TimersDescription("TimerAutoReset")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0df4-172">Ottiene o imposta un valore booleano che indica se <see cref="T:System.Timers.Timer" /> deve generare l'evento <see cref="E:System.Timers.Timer.Elapsed" /> una sola volta (<see langword="false" />) o più volte (<see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-172">Gets or sets a Boolean indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once (<see langword="false" />) or repeatedly (<see langword="true" />).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0df4-173">
            <see langword="true" /> se <see cref="T:System.Timers.Timer" /> deve generare l'evento <see cref="E:System.Timers.Timer.Elapsed" /> allo scadere di ogni intervallo; <see langword="false" /> se deve generare l'evento <see cref="E:System.Timers.Timer.Elapsed" /> solo una volta, in corrispondenza della prima scadenza dell'intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-173">
              <see langword="true" /> if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event each time the interval elapses; <see langword="false" /> if it should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once, after the first time the interval elapses.</span>
          </span>
          <span data-ttu-id="c0df4-174">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-174">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-175">Se il <xref:System.Timers.Timer> è già abilitata quando il <xref:System.Timers.Timer.Start%2A> viene chiamato il metodo, l'intervallo viene reimpostato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-175">If the <xref:System.Timers.Timer> is already enabled when the <xref:System.Timers.Timer.Start%2A> method is called, the interval is reset.</span></span> <span data-ttu-id="c0df4-176">Se <xref:System.Timers.Timer.AutoReset%2A> viene `false`, il <xref:System.Timers.Timer.Start%2A> necessario chiamare il metodo per avviare nuovamente il conteggio.</span><span class="sxs-lookup"><span data-stu-id="c0df4-176">If <xref:System.Timers.Timer.AutoReset%2A> is `false`, the <xref:System.Timers.Timer.Start%2A> method must be called in order to start the count again.</span></span>  
  
 <span data-ttu-id="c0df4-177">Reimpostare l'intervallo interessa quando il <xref:System.Timers.Timer.Elapsed> viene generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="c0df4-177">Resetting the interval affects when the <xref:System.Timers.Timer.Elapsed> event is raised.</span></span> <span data-ttu-id="c0df4-178">Ad esempio, se si imposta l'intervallo di 5 secondi e quindi impostare il <xref:System.Timers.Timer.Enabled%2A> proprietà `true`, il conteggio inizia all'ora <xref:System.Timers.Timer.Enabled%2A> è impostata.</span><span class="sxs-lookup"><span data-stu-id="c0df4-178">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="c0df4-179">Se si reimposta l'intervallo su 10 secondi quando il conteggio è 3 secondi, il <xref:System.Timers.Timer.Elapsed> evento viene generato per la prima volta, 13 secondi dopo il <xref:System.Timers.Timer.Enabled%2A> è stata impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="c0df4-179">If you reset the interval to 10 seconds when the count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after the <xref:System.Timers.Timer.Enabled%2A> property was set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0df4-180">L'esempio seguente crea una <xref:System.Timers.Timer> cui <xref:System.Timers.Timer.Elapsed> viene generato l'evento dopo 1,5 secondi.</span><span class="sxs-lookup"><span data-stu-id="c0df4-180">The following example creates a <xref:System.Timers.Timer> whose <xref:System.Timers.Timer.Elapsed> event fires after 1.5 seconds.</span></span> <span data-ttu-id="c0df4-181">Quindi, il relativo gestore eventi visualizza "Hello World!"</span><span class="sxs-lookup"><span data-stu-id="c0df4-181">Its event handler then displays "Hello World!"</span></span> <span data-ttu-id="c0df4-182">Nella console.</span><span class="sxs-lookup"><span data-stu-id="c0df4-182">on the console.</span></span>  
  
 [!code-cpp[Classic Timer.Timer1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer.Timer1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/CS/source.cs#1)]
 [!code-vb[Classic Timer.Timer1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="timer.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0df4-183">Avvia l'inizializzazione in fase di esecuzione di un oggetto <see cref="T:System.Timers.Timer" /> usato in un form o da un altro componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-183">Begins the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-184">Il [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Progettazione ambiente Usa questo metodo per avviare l'inizializzazione di un componente che viene usato in un form o da un altro componente.</span><span class="sxs-lookup"><span data-stu-id="c0df4-184">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component that is used on a form or by another component.</span></span> <span data-ttu-id="c0df4-185">Il <xref:System.Timers.Timer.EndInit%2A> metodo termina l'inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="c0df4-185">The <xref:System.Timers.Timer.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="c0df4-186">Usando il <xref:System.Timers.Timer.BeginInit%2A> e <xref:System.Timers.Timer.EndInit%2A> metodi impedisce l'utilizzo prima che il completamento dell'inizializzazione del controllo.</span><span class="sxs-lookup"><span data-stu-id="c0df4-186">Using the <xref:System.Timers.Timer.BeginInit%2A> and <xref:System.Timers.Timer.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.EndInit" />
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="timer.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0df4-187">Rilascia le risorse usate da <see cref="T:System.Timers.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-187">Releases the resources used by the <see cref="T:System.Timers.Timer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-188">Il <xref:System.Timers.Timer.Close%2A> metodo chiama a sua volta la `Dispose` (metodo).</span><span class="sxs-lookup"><span data-stu-id="c0df4-188">The <xref:System.Timers.Timer.Close%2A> method in turn calls the `Dispose` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="timer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c0df4-189">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-189">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0df4-190">Rilascia tutte le risorse usate dall'oggetto <see cref="T:System.Timers.Timer" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-190">Releases all resources used by the current <see cref="T:System.Timers.Timer" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public event System.Timers.ElapsedEventHandler Elapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Timers.ElapsedEventHandler Elapsed" />
      <MemberSignature Language="DocId" Value="E:System.Timers.Timer.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Elapsed As ElapsedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Timers::ElapsedEventHandler ^ Elapsed;" />
      <MemberSignature Language="F#" Value="member this.Elapsed : System.Timers.ElapsedEventHandler " Usage="member this.Elapsed : System.Timers.ElapsedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("Occurs when the Interval has elapsed.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Timers.TimersDescription("TimerIntervalElapsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Timers.ElapsedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0df4-191">Si verifica quando l'intervallo scade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-191">Occurs when the interval elapses.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-192">Il <xref:System.Timers.Timer.Elapsed> evento viene generato se il <xref:System.Timers.Timer.Enabled%2A> proprietà è `true` e l'intervallo di tempo (in millisecondi) definito dal <xref:System.Timers.Timer.Interval%2A> proprietà allo scadere dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="c0df4-192">The <xref:System.Timers.Timer.Elapsed> event is raised if the <xref:System.Timers.Timer.Enabled%2A> property is `true` and the time interval (in milliseconds) defined by the <xref:System.Timers.Timer.Interval%2A> property elapses.</span></span> <span data-ttu-id="c0df4-193">Se il <xref:System.Timers.Timer.AutoReset%2A> proprietà è `true`, l'evento viene generato ripetutamente in base all'intervallo definito dalle <xref:System.Timers.Timer.Interval%2A> proprietà; in caso contrario, l'evento viene generato una sola volta, la prima volta il <xref:System.Timers.Timer.Interval%2A> valore allo scadere dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="c0df4-193">If the <xref:System.Timers.Timer.AutoReset%2A> property is `true`, the event is raised repeatedly at an interval defined by the <xref:System.Timers.Timer.Interval%2A> property; otherwise, the event is raised only once, the first time the <xref:System.Timers.Timer.Interval%2A> value elapses.</span></span>  
  
 <span data-ttu-id="c0df4-194">Se <xref:System.Timers.Timer.Interval%2A> viene impostato dopo la <xref:System.Timers.Timer> è avviato, il conteggio viene reimpostato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-194">If <xref:System.Timers.Timer.Interval%2A> is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="c0df4-195">Ad esempio, se si imposta l'intervallo di 5 secondi e quindi impostare <xref:System.Timers.Timer.Enabled%2A> al `true`, il conteggio inizia all'ora <xref:System.Timers.Timer.Enabled%2A> è impostata.</span><span class="sxs-lookup"><span data-stu-id="c0df4-195">For example, if you set the interval to 5 seconds and then set <xref:System.Timers.Timer.Enabled%2A> to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="c0df4-196">Se si reimposta l'intervallo su 10 secondi quando il numero è 3 secondi, il <xref:System.Timers.Timer.Elapsed> evento viene generato per la prima volta dopo 13 secondi <xref:System.Timers.Timer.Enabled%2A> è stata impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="c0df4-196">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
 <span data-ttu-id="c0df4-197">Se il <xref:System.Timers.Timer.SynchronizingObject%2A> proprietà viene `null`, il <xref:System.Timers.Timer.Elapsed> evento viene generato in un <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="c0df4-197">If the <xref:System.Timers.Timer.SynchronizingObject%2A> property is `null`,the <xref:System.Timers.Timer.Elapsed> event is raised on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="c0df4-198">Se l'elaborazione dei <xref:System.Timers.Timer.Elapsed> evento ha una durata superiore <xref:System.Timers.Timer.Interval%2A>, l'evento potrebbe essere generato nuovamente in un altro <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="c0df4-198">If the processing of the <xref:System.Timers.Timer.Elapsed> event lasts longer than <xref:System.Timers.Timer.Interval%2A>, the event might be raised again on another <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="c0df4-199">In questo caso, il gestore dell'evento deve essere rientrante.</span><span class="sxs-lookup"><span data-stu-id="c0df4-199">In this situation, the event handler should be reentrant.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0df4-200">Il metodo di gestione degli eventi può essere eseguito in un unico thread allo stesso tempo che un altro thread chiama il <xref:System.Timers.Timer.Stop%2A> metodo o il set di <xref:System.Timers.Timer.Enabled%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="c0df4-200">The event-handling method might run on one thread at the same time that another thread calls the <xref:System.Timers.Timer.Stop%2A> method or sets the <xref:System.Timers.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="c0df4-201">Ciò potrebbe comportare il <xref:System.Timers.Timer.Elapsed> evento generato dopo che il timer è stato arrestato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-201">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the timer is stopped.</span></span> <span data-ttu-id="c0df4-202">Il codice di esempio per il <xref:System.Timers.Timer.Stop%2A> metodo illustra un modo per evitare questa race condition.</span><span class="sxs-lookup"><span data-stu-id="c0df4-202">The example code for the <xref:System.Timers.Timer.Stop%2A> method shows one way to avoid this race condition.</span></span>  
  
 <span data-ttu-id="c0df4-203">Anche se <xref:System.Timers.Timer.SynchronizingObject%2A> non è `null`, <xref:System.Timers.Timer.Elapsed> gli eventi possono verificarsi dopo il <xref:System.Timers.Timer.Dispose%2A> o <xref:System.Timers.Timer.Stop%2A> metodo è stato chiamato o dopo il <xref:System.Timers.Timer.Enabled%2A> proprietà è stata impostata `false`, in quanto il segnale per generare il <xref:System.Timers.Timer.Elapsed> eventi sono sempre in coda per l'esecuzione in un pool di thread.</span><span class="sxs-lookup"><span data-stu-id="c0df4-203">Even if <xref:System.Timers.Timer.SynchronizingObject%2A> is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="c0df4-204">Un modo per risolvere questa race condition consiste nell'impostare un flag che indica il gestore eventi per il <xref:System.Timers.Timer.Elapsed> evento ignori alcuni eventi successivi.</span><span class="sxs-lookup"><span data-stu-id="c0df4-204">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="c0df4-205">Il <xref:System.Timers.Timer> componente intercetta ed Elimina tutte le eccezioni generate dai gestori eventi per il <xref:System.Timers.Timer.Elapsed> evento.</span><span class="sxs-lookup"><span data-stu-id="c0df4-205">The <xref:System.Timers.Timer> component catches and suppresses all exceptions thrown by event handlers for the <xref:System.Timers.Timer.Elapsed> event.</span></span> <span data-ttu-id="c0df4-206">Questo comportamento è soggetta a modifiche nelle versioni future di .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="c0df4-206">This behavior is subject to change in future releases of the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0df4-207">Nell'esempio seguente crea una <xref:System.Timers.Timer> oggetto che viene attivato relativo <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> eventi ogni due secondi (2000 millisecondi), impostare un gestore eventi per l'evento e avvia il timer.</span><span class="sxs-lookup"><span data-stu-id="c0df4-207">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="c0df4-208">Il gestore dell'evento Visualizza il valore della <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> proprietà ogni volta che viene generato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-208">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
        <altmember cref="T:System.Timers.ElapsedEventArgs" />
        <altmember cref="T:System.Timers.ElapsedEventHandler" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Timers.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("Indicates whether the timer is enabled to fire events at a defined interval.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Timers.TimersDescription("TimerEnabled")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0df4-209">Ottiene o imposta un valore che indica se <see cref="T:System.Timers.Timer" /> deve generare l'evento <see cref="E:System.Timers.Timer.Elapsed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-209">Gets or sets a value indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0df4-210">
            <see langword="true" /> se <see cref="T:System.Timers.Timer" /> deve generare l'evento <see cref="E:System.Timers.Timer.Elapsed" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-210">
              <see langword="true" /> if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c0df4-211">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-211">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-212">L'impostazione <xref:System.Timers.Timer.Enabled%2A> al `true` è uguale alla chiamata al metodo <xref:System.Timers.Timer.Start%2A>, mentre l'impostazione <xref:System.Timers.Timer.Enabled%2A> al `false` è uguale alla chiamata al metodo <xref:System.Timers.Timer.Stop%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0df4-212">Setting <xref:System.Timers.Timer.Enabled%2A> to `true` is the same as calling <xref:System.Timers.Timer.Start%2A>, while setting <xref:System.Timers.Timer.Enabled%2A> to `false` is the same as calling <xref:System.Timers.Timer.Stop%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0df4-213">Il segnale per generare il <xref:System.Timers.Timer.Elapsed> eventi sempre in coda per l'esecuzione su un <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="c0df4-213">The signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="c0df4-214">Ciò potrebbe comportare il <xref:System.Timers.Timer.Elapsed> evento generato dopo il <xref:System.Timers.Timer.Enabled%2A> è impostata su `false`.</span><span class="sxs-lookup"><span data-stu-id="c0df4-214">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Enabled%2A> property is set to `false`.</span></span> <span data-ttu-id="c0df4-215">L'esempio di codice per il <xref:System.Timers.Timer.Stop%2A> metodo illustra un modo per risolvere questa race condition.</span><span class="sxs-lookup"><span data-stu-id="c0df4-215">The code example for the <xref:System.Timers.Timer.Stop%2A> method shows one way to work around this race condition.</span></span>  
  
 <span data-ttu-id="c0df4-216">Se <xref:System.Timers.Timer.Enabled%2A> è impostata su `true` e <xref:System.Timers.Timer.AutoReset%2A> è impostata su `false`, il <xref:System.Timers.Timer> genera il <xref:System.Timers.Timer.Elapsed> eventi solo una volta, la prima volta che l'intervallo scade.</span><span class="sxs-lookup"><span data-stu-id="c0df4-216">If <xref:System.Timers.Timer.Enabled%2A> is set to `true` and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span>  
  
 <span data-ttu-id="c0df4-217">Se l'intervallo viene impostato dopo la <xref:System.Timers.Timer> è avviato, il conteggio viene reimpostato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-217">If the interval is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="c0df4-218">Ad esempio, se si imposta l'intervallo di 5 secondi e quindi impostare il <xref:System.Timers.Timer.Enabled%2A> proprietà `true`, il conteggio inizia all'ora <xref:System.Timers.Timer.Enabled%2A> è impostata.</span><span class="sxs-lookup"><span data-stu-id="c0df4-218">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="c0df4-219">Se si reimposta l'intervallo su 10 secondi quando il numero è 3 secondi, il <xref:System.Timers.Timer.Elapsed> evento viene generato per la prima volta dopo 13 secondi <xref:System.Timers.Timer.Enabled%2A> è stata impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="c0df4-219">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0df4-220">Alcune finestre di progettazione visiva, ad esempio quelli in Microsoft Visual Studio, impostare il <xref:System.Timers.Timer.Enabled%2A> proprietà `true` durante l'inserimento di un nuovo <xref:System.Timers.Timer>.</span><span class="sxs-lookup"><span data-stu-id="c0df4-220">Some visual designers, such as those in Microsoft Visual Studio, set the <xref:System.Timers.Timer.Enabled%2A> property to `true` when inserting a new <xref:System.Timers.Timer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0df4-221">Nell'esempio seguente crea una <xref:System.Timers.Timer> oggetto che viene attivato relativo <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> eventi ogni due secondi (2000 millisecondi), impostare un gestore eventi per l'evento e avvia il timer.</span><span class="sxs-lookup"><span data-stu-id="c0df4-221">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="c0df4-222">Il gestore dell'evento Visualizza il valore della <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> proprietà ogni volta che viene generato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-222">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c0df4-223">Non è possibile impostare questa proprietà perché il timer è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-223">This property cannot be set because the timer has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c0df4-224">La proprietà <see cref="P:System.Timers.Timer.Interval" /> era impostata su un valore maggiore di <see cref="F:System.Int32.MaxValue" /> prima che sia stato abilitato il timer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-224">The <see cref="P:System.Timers.Timer.Interval" /> property was set to a value greater than <see cref="F:System.Int32.MaxValue" /> before the timer was enabled.</span>
          </span>
        </exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="M:System.Timers.Timer.Stop" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="timer.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0df4-225">Termina l'inizializzazione in fase di esecuzione di un oggetto <see cref="T:System.Timers.Timer" /> usato in un form o da un altro componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-225">Ends the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-226">Il [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Progettazione ambiente utilizza questo metodo per terminare l'inizializzazione di un componente che viene usato in un form o da un altro componente.</span><span class="sxs-lookup"><span data-stu-id="c0df4-226">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component that is used on a form or by another component.</span></span> <span data-ttu-id="c0df4-227">Il <xref:System.Timers.Timer.BeginInit%2A> metodo avvia l'inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="c0df4-227">The <xref:System.Timers.Timer.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="c0df4-228">Usando il <xref:System.Timers.Timer.BeginInit%2A> e <xref:System.Timers.Timer.EndInit%2A> metodi impedisce l'utilizzo prima che il completamento dell'inizializzazione del controllo.</span><span class="sxs-lookup"><span data-stu-id="c0df4-228">Using the <xref:System.Timers.Timer.BeginInit%2A> and <xref:System.Timers.Timer.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Timers.Timer.BeginInit" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Timers.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("The number of milliseconds between timer events.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Timers.TimersDescription("TimerInterval")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0df4-229">Ottiene o imposta l'intervallo, espresso in millisecondi, in cui generare l'evento <see cref="E:System.Timers.Timer.Elapsed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-229">Gets or sets the interval, expressed in milliseconds, at which to raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0df4-230">Tempo tra gli eventi <see cref="E:System.Timers.Timer.Elapsed" />, in millisecondi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-230">The time, in milliseconds, between <see cref="E:System.Timers.Timer.Elapsed" /> events.</span>
          </span>
          <span data-ttu-id="c0df4-231">Il valore deve essere maggiore di zero e minore o uguale a <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-231">The value must be greater than zero, and less than or equal to <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="c0df4-232">Il valore predefinito è 100 millisecondi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-232">The default is 100 milliseconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-233">Si utilizza il <xref:System.Timers.Timer.Interval%2A> proprietà per determinare la frequenza con cui il <xref:System.Timers.Timer.Elapsed> evento.</span><span class="sxs-lookup"><span data-stu-id="c0df4-233">You use the <xref:System.Timers.Timer.Interval%2A> property to determine the frequency at which the <xref:System.Timers.Timer.Elapsed> event is fired.</span></span> <span data-ttu-id="c0df4-234">Poiché il <xref:System.Timers.Timer> classe dipende dall'orologio di sistema, ha la stessa risoluzione come l'orologio di sistema.</span><span class="sxs-lookup"><span data-stu-id="c0df4-234">Because the <xref:System.Timers.Timer> class depends on the system clock, it has the same resolution as the system clock.</span></span> <span data-ttu-id="c0df4-235">Ciò significa che il <xref:System.Timers.Timer.Elapsed> viene generato l'evento a un intervallo definito per la risoluzione del clock di sistema se la <xref:System.Timers.Timer.Interval%2A> proprietà è minore rispetto alla risoluzione del clock di sistema.</span><span class="sxs-lookup"><span data-stu-id="c0df4-235">This means that the <xref:System.Timers.Timer.Elapsed> event will fire at an interval defined by the resolution of the system clock if the <xref:System.Timers.Timer.Interval%2A> property is less than the resolution of the system clock.</span></span> <span data-ttu-id="c0df4-236">L'esempio seguente imposta il <xref:System.Timers.Timer.Interval%2A> proprietà 5 millisecondi.</span><span class="sxs-lookup"><span data-stu-id="c0df4-236">The following example sets the <xref:System.Timers.Timer.Interval%2A> property to 5 milliseconds.</span></span> <span data-ttu-id="c0df4-237">Quando viene eseguito un [!INCLUDE[win7](~/includes/win7-md.md)] sistema il cui clock di sistema ha una risoluzione di circa 15 millisecondi, viene generato l'evento circa ogni 15 millisecondi anziché ogni 5 millisecondi.</span><span class="sxs-lookup"><span data-stu-id="c0df4-237">When run on a [!INCLUDE[win7](~/includes/win7-md.md)] system whose system clock has a resolution of approximately 15 milliseconds, the event fires approximately every 15 milliseconds rather than every 5 milliseconds.</span></span>  
  
 [!code-csharp[System.Timers.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer.interval/cs/interval2.cs#1)]
 [!code-vb[System.Timers.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer.interval/vb/interval2.vb#1)]  
  
 <span data-ttu-id="c0df4-238">È possibile usare il codice seguente per determinare la risoluzione dell'orologio di sistema nel sistema corrente:</span><span class="sxs-lookup"><span data-stu-id="c0df4-238">You can use the following code to determine the resolution of the system clock on the current system:</span></span>  
  
 [!code-csharp[System.Timers.Timer.Interval#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer.interval/cs/resolution1.cs#2)]
 [!code-vb[System.Timers.Timer.Interval#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer.interval/vb/resolution1.vb#2)]  
  
 <span data-ttu-id="c0df4-239">Se l'app richiede una risoluzione maggiore rispetto a quello offerto dal <xref:System.Timers.Timer> classe o l'orologio di sistema, usare i timer multimediali ad alta risoluzione, vedere [procedura: utilizzare il Timer ad alta risoluzione](https://msdn.microsoft.com/library/aa964692.aspx).</span><span class="sxs-lookup"><span data-stu-id="c0df4-239">If your app requires greater resolution than that offered by the <xref:System.Timers.Timer> class or the system clock, use the high-resolution multimedia timers; see [How to: Use the High-Resolution Timer](https://msdn.microsoft.com/library/aa964692.aspx).</span></span>  
  
 <span data-ttu-id="c0df4-240">Se l'intervallo viene impostato dopo la <xref:System.Timers.Timer> è avviato, il conteggio viene reimpostato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-240">If the interval is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="c0df4-241">Ad esempio, se si imposta l'intervallo di 5 secondi e quindi impostare il <xref:System.Timers.Timer.Enabled%2A> proprietà `true`, il conteggio inizia all'ora <xref:System.Timers.Timer.Enabled%2A> è impostata.</span><span class="sxs-lookup"><span data-stu-id="c0df4-241">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="c0df4-242">Se si reimposta l'intervallo su 10 secondi quando il numero è 3 secondi, il <xref:System.Timers.Timer.Elapsed> evento viene generato per la prima volta dopo 13 secondi <xref:System.Timers.Timer.Enabled%2A> è stata impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="c0df4-242">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
 <span data-ttu-id="c0df4-243">Se <xref:System.Timers.Timer.Enabled%2A> è impostata su `true` e <xref:System.Timers.Timer.AutoReset%2A> è impostata su `false`, il <xref:System.Timers.Timer> genera il <xref:System.Timers.Timer.Elapsed> eventi solo una volta, la prima volta che l'intervallo scade.</span><span class="sxs-lookup"><span data-stu-id="c0df4-243">If <xref:System.Timers.Timer.Enabled%2A> is set to `true` and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span> <span data-ttu-id="c0df4-244"><xref:System.Timers.Timer.Enabled%2A> viene quindi impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="c0df4-244"><xref:System.Timers.Timer.Enabled%2A> is then set to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0df4-245">Se <xref:System.Timers.Timer.Enabled%2A> e <xref:System.Timers.Timer.AutoReset%2A> sono entrambe impostate su `false`, e il timer in precedenza abilitato, impostando il <xref:System.Timers.Timer.Interval%2A> proprietà causa il <xref:System.Timers.Timer.Elapsed> dell'evento una volta, come se il <xref:System.Timers.Timer.Enabled%2A> proprietà è stata impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="c0df4-245">If <xref:System.Timers.Timer.Enabled%2A> and <xref:System.Timers.Timer.AutoReset%2A> are both set to `false`, and the timer has previously been enabled, setting the <xref:System.Timers.Timer.Interval%2A> property causes the <xref:System.Timers.Timer.Elapsed> event to be raised once, as if the <xref:System.Timers.Timer.Enabled%2A> property had been set to `true`.</span></span> <span data-ttu-id="c0df4-246">Per impostare l'intervallo senza generazione dell'evento, è possibile impostare temporaneamente i <xref:System.Timers.Timer.Enabled%2A> proprietà `true`, impostare il <xref:System.Timers.Timer.Interval%2A> proprietà per l'intervallo di tempo desiderato e quindi impostare immediatamente il <xref:System.Timers.Timer.Enabled%2A> proprietà verso `false`.</span><span class="sxs-lookup"><span data-stu-id="c0df4-246">To set the interval without raising the event, you can temporarily set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, set the <xref:System.Timers.Timer.Interval%2A> property to the desired time interval, and then immediately set the <xref:System.Timers.Timer.Enabled%2A> property back to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0df4-247">Nell'esempio seguente crea una <xref:System.Timers.Timer> oggetto che viene attivato relativo <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> eventi ogni due secondi (2000 millisecondi), impostare un gestore eventi per l'evento e avvia il timer.</span><span class="sxs-lookup"><span data-stu-id="c0df4-247">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="c0df4-248">Il gestore dell'evento Visualizza il valore della <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> proprietà ogni volta che viene generato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-248">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c0df4-249">L'intervallo è minore o uguale a zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-249">The interval is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="c0df4-250">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-250">-or-</span>
          </span>
          <span data-ttu-id="c0df4-251">L'intervallo è più grande di <see cref="F:System.Int32.MaxValue" />e il timer è attualmente attivato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-251">The interval is greater than <see cref="F:System.Int32.MaxValue" />, and the timer is currently enabled.</span>
          </span>
          <span data-ttu-id="c0df4-252">Non viene generata alcuna eccezione finché il timer non viene abilitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-252">(If the timer is not currently enabled, no exception is thrown until it becomes enabled.)</span>
          </span>
        </exception>
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Timers.Timer.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0df4-253">Ottiene o imposta il sito che associa l'oggetto <see cref="T:System.Timers.Timer" /> al contenitore in modalità progettazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-253">Gets or sets the site that binds the <see cref="T:System.Timers.Timer" /> to its container in design mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0df4-254">Interfaccia <see cref="T:System.ComponentModel.ISite" /> che rappresenta il sito che associa l'oggetto <see cref="T:System.Timers.Timer" /> al contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-254">An <see cref="T:System.ComponentModel.ISite" /> interface representing the site that binds the <see cref="T:System.Timers.Timer" /> object to its container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-255">Associano i siti di una <xref:System.ComponentModel.Component> a un <xref:System.ComponentModel.Container> e abilitare la comunicazione tra di essi, nonché fornendo un modo per il contenitore gestire i relativi componenti.</span><span class="sxs-lookup"><span data-stu-id="c0df4-255">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as providing a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="timer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0df4-256">Avvia la generazione dell'evento <see cref="E:System.Timers.Timer.Elapsed" /> impostando <see cref="P:System.Timers.Timer.Enabled" /> su <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-256">Starts raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-257">Se <xref:System.Timers.Timer.Start%2A> viene chiamato e <xref:System.Timers.Timer.AutoReset%2A> è impostata su `false`, il <xref:System.Timers.Timer> genera il <xref:System.Timers.Timer.Elapsed> eventi solo una volta, la prima volta che l'intervallo scade.</span><span class="sxs-lookup"><span data-stu-id="c0df4-257">If <xref:System.Timers.Timer.Start%2A> is called and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span> <span data-ttu-id="c0df4-258">Se <xref:System.Timers.Timer.Start%2A> viene chiamato e <xref:System.Timers.Timer.AutoReset%2A> viene `true`, il <xref:System.Timers.Timer> genera il <xref:System.Timers.Timer.Elapsed> ora dell'evento prima l'intervallo scade e continua a generare l'evento nell'intervallo specificato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-258">If <xref:System.Timers.Timer.Start%2A> is called and <xref:System.Timers.Timer.AutoReset%2A> is `true`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event the first time the interval elapses and continues to raise the event on the specified interval.</span></span>  
  
 <span data-ttu-id="c0df4-259">È anche possibile avviare temporizzazione impostando <xref:System.Timers.Timer.Enabled%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="c0df4-259">You can also start timing by setting <xref:System.Timers.Timer.Enabled%2A> to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0df4-260">Se <xref:System.Timers.Timer.AutoReset%2A> viene `false`, il <xref:System.Timers.Timer.Start%2A> necessario chiamare il metodo per avviare nuovamente il conteggio.</span><span class="sxs-lookup"><span data-stu-id="c0df4-260">If <xref:System.Timers.Timer.AutoReset%2A> is `false`, the <xref:System.Timers.Timer.Start%2A> method must be called in order to start the count again.</span></span>  
  
 <span data-ttu-id="c0df4-261">Una chiamata al <xref:System.Timers.Timer.Start%2A> metodo quando è abilitato il timer non ha alcun effetto.</span><span class="sxs-lookup"><span data-stu-id="c0df4-261">A call to the <xref:System.Timers.Timer.Start%2A> method when the timer is enabled has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c0df4-262">L'oggetto <see cref="T:System.Timers.Timer" /> viene creato con intervallo uguale o maggiore di <see cref="F:System.Int32.MaxValue" /> + 1 oppure viene impostato su un intervallo minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-262">The <see cref="T:System.Timers.Timer" /> is created with an interval equal to or greater than <see cref="F:System.Int32.MaxValue" /> + 1, or set to an interval less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Stop" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="timer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0df4-263">Arresta la generazione dell'evento <see cref="E:System.Timers.Timer.Elapsed" /> impostando <see cref="P:System.Timers.Timer.Enabled" /> su <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-263">Stops raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-264">È anche possibile arrestare temporizzazione impostando <xref:System.Timers.Timer.Enabled%2A> a `false`.</span><span class="sxs-lookup"><span data-stu-id="c0df4-264">You can also stop timing by setting <xref:System.Timers.Timer.Enabled%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0df4-265">Il segnale per generare il <xref:System.Timers.Timer.Elapsed> eventi sempre in coda per l'esecuzione in un <xref:System.Threading.ThreadPool> thread, in modo che il metodo di gestione degli eventi può essere eseguito in un unico thread allo stesso tempo che una chiamata al <xref:System.Timers.Timer.Stop%2A> metodo viene eseguito in un altro thread.</span><span class="sxs-lookup"><span data-stu-id="c0df4-265">The signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a <xref:System.Threading.ThreadPool> thread, so the event-handling method might run on one thread at the same time that a call to the <xref:System.Timers.Timer.Stop%2A> method runs on another thread.</span></span> <span data-ttu-id="c0df4-266">Ciò potrebbe comportare il <xref:System.Timers.Timer.Elapsed> evento generato dopo il <xref:System.Timers.Timer.Stop%2A> viene chiamato il metodo.</span><span class="sxs-lookup"><span data-stu-id="c0df4-266">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Stop%2A> method is called.</span></span> <span data-ttu-id="c0df4-267">L'esempio di codice nella sezione successiva illustra un modo per risolvere questa race condition.</span><span class="sxs-lookup"><span data-stu-id="c0df4-267">The code example in the next section shows one way to work around this race condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0df4-268">Nell'esempio seguente crea una `System.Timers.Timer` oggetto che viene attivato relativo <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> eventi ogni due secondi (2000 millisecondi), impostare un gestore eventi per l'evento e avvia il timer.</span><span class="sxs-lookup"><span data-stu-id="c0df4-268">The following example instantiates a `System.Timers.Timer` object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="c0df4-269">Il gestore dell'evento Visualizza il valore della <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> proprietà ogni volta che viene generato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-269">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span> <span data-ttu-id="c0df4-270">Quando l'utente preme il tasto INVIO, l'applicazione chiama il <xref:System.Timers.Timer.Stop%2A> metodo prima di terminare l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="c0df4-270">When the user presses the Enter key, the application calls the  <xref:System.Timers.Timer.Stop%2A> method before terminating the application.</span></span>  
  
 [!code-csharp[System.Timers.Timer#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer2a.cs#2)]
 [!code-vb[System.Timers.Timer#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer2a.vb#2)]  
  
 <span data-ttu-id="c0df4-271">Esempio di codice seguente illustra un modo per evitare che il thread che chiama il <xref:System.Timers.Timer.Stop%2A> metodo non potrà continuare fino a un attualmente in esecuzione <xref:System.Timers.Timer.Elapsed> termina evento e anche per evitare che due <xref:System.Timers.Timer.Elapsed> gli eventi di esecuzione del gestore di evento allo stesso ora (noto anche come reentrancy).</span><span class="sxs-lookup"><span data-stu-id="c0df4-271">The following code example shows one way to prevent the thread that calls the <xref:System.Timers.Timer.Stop%2A> method from continuing until a currently executing <xref:System.Timers.Timer.Elapsed> event ends, and also to prevent two <xref:System.Timers.Timer.Elapsed> events from executing the event handler at the same time (often referred to as reentrancy).</span></span>  
  
 <span data-ttu-id="c0df4-272">L'esempio esegue 100 esecuzioni dei test.</span><span class="sxs-lookup"><span data-stu-id="c0df4-272">The example executes 100 test runs.</span></span> <span data-ttu-id="c0df4-273">Ogni volta che viene eseguito il test, il timer viene avviato con un intervallo di 150 millisecondi.</span><span class="sxs-lookup"><span data-stu-id="c0df4-273">Each time the test is run, the timer is started with an interval of 150 milliseconds.</span></span> <span data-ttu-id="c0df4-274">Il gestore eventi Usa le <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> metodo da simulare un'attività che varia in modo casuale di lunghezza compresa tra 50 e 200 millisecondi.</span><span class="sxs-lookup"><span data-stu-id="c0df4-274">The event handler uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to simulate a task that randomly varies in length from 50 to 200 milliseconds.</span></span> <span data-ttu-id="c0df4-275">Inoltre, il metodo di test avvia un thread di controllo che è in attesa di un secondo e quindi si arresta il timer.</span><span class="sxs-lookup"><span data-stu-id="c0df4-275">The test method also starts a control thread that waits for a second and then stops the timer.</span></span> <span data-ttu-id="c0df4-276">Se viene gestito un evento quando il thread di controllo si arresta il timer, il thread di controllo deve attendere fino al termine dell'evento prima di procedere.</span><span class="sxs-lookup"><span data-stu-id="c0df4-276">If an event is being handled when the control thread stops the timer, the control thread must wait until the event is finished before proceeding.</span></span>  
  
 <span data-ttu-id="c0df4-277">Il <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> overload del metodo viene usato per evitare la reentrancy e impedire al thread di controllo proseguire fino alla fine di un evento in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="c0df4-277">The <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload is used to avoid reentrancy and to prevent the control thread from continuing until an executing event ends.</span></span> <span data-ttu-id="c0df4-278">Il gestore eventi Usa le <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> metodo per impostare un controllo, variabili su 1, ma solo se il valore attualmente è zero.</span><span class="sxs-lookup"><span data-stu-id="c0df4-278">The event handler uses the <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> method to set a control variable to 1, but only if the value is currently zero.</span></span> <span data-ttu-id="c0df4-279">Si tratta di un'operazione atomica.</span><span class="sxs-lookup"><span data-stu-id="c0df4-279">This is an atomic operation.</span></span> <span data-ttu-id="c0df4-280">Se il valore restituito è zero, la variabile di controllo è stata impostata su 1 e consente di passare il gestore dell'evento.</span><span class="sxs-lookup"><span data-stu-id="c0df4-280">If the return value is zero, the control variable has been set to 1 and the event handler proceeds.</span></span> <span data-ttu-id="c0df4-281">Se il valore restituito è diverso da zero, l'evento viene semplicemente ignorato, per evitare la reentrancy.</span><span class="sxs-lookup"><span data-stu-id="c0df4-281">If the return value is non-zero, the event is simply discarded to avoid reentrancy.</span></span> <span data-ttu-id="c0df4-282">(Se fosse necessario eseguire tutti gli eventi, il <xref:System.Threading.Monitor> classe sarebbe un modo migliore per sincronizzare gli eventi.) Quando termina il gestore dell'evento, imposta la variabile di controllo nuovamente su zero.</span><span class="sxs-lookup"><span data-stu-id="c0df4-282">(If it were necessary to execute every event, the <xref:System.Threading.Monitor> class would be a better way to synchronize the events.) When the event handler ends, it sets the control variable back to zero.</span></span> <span data-ttu-id="c0df4-283">L'esempio registra il numero totale di eventi eseguiti, che sono stati scartati a causa della reentrancy e che si sono verificati dopo il <xref:System.Timers.Timer.Stop%2A> metodo è stato chiamato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-283">The example records the total number of events that executed, that were discarded because of reentrancy, and that occurred after the <xref:System.Timers.Timer.Stop%2A> method was called.</span></span>  
  
 <span data-ttu-id="c0df4-284">Il thread di controllo Usa il <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> metodo per impostare il controllo di variabili per -1 (meno uno), ma solo se il valore attualmente è zero.</span><span class="sxs-lookup"><span data-stu-id="c0df4-284">The control thread uses the <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> method to set the control variable to -1 (minus one), but only if the value is currently zero.</span></span> <span data-ttu-id="c0df4-285">Se l'operazione atomica positivo diverso da zero, un evento è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="c0df4-285">If the atomic operation returns non-zero, an event is currently executing.</span></span> <span data-ttu-id="c0df4-286">Il thread di controllo rimane in attesa e nuovo tentativo.</span><span class="sxs-lookup"><span data-stu-id="c0df4-286">The control thread waits and tries again.</span></span> <span data-ttu-id="c0df4-287">L'esempio registra il numero di volte in cui che il thread di controllo era necessario attendere un evento di completamento.</span><span class="sxs-lookup"><span data-stu-id="c0df4-287">The example records the number of times the control thread had to wait for an event to finish.</span></span>  
  
 [!code-csharp[Timer.Stop#1](~/samples/snippets/csharp/VS_Snippets_CLR/Timer.Stop/CS/source.cs#1)]
 [!code-vb[Timer.Stop#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Timer.Stop/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Timers.Timer.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("The object used to marshal the event handler calls issued when an interval has elapsed.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Timers.TimersDescription("TimerSynchronizingObject")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0df4-288">Ottiene o imposta l'oggetto usato per effettuare il marshalling delle chiamate del gestore eventi generate alla scadenza di un intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-288">Gets or sets the object used to marshal event-handler calls that are issued when an interval has elapsed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0df4-289">
            <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> che rappresenta l'oggetto usato per effettuare il marshalling delle chiamate del gestore eventi generate alla scadenza di un intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-289">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> representing the object used to marshal the event-handler calls that are issued when an interval has elapsed.</span>
          </span>
          <span data-ttu-id="c0df4-290">Il valore predefinito è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0df4-290">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0df4-291">Quando <xref:System.Timers.Timer.SynchronizingObject%2A> viene `null`, il metodo che gestisce il <xref:System.Timers.Timer.Elapsed> eventi viene chiamato su un thread dal pool di thread del sistema.</span><span class="sxs-lookup"><span data-stu-id="c0df4-291">When <xref:System.Timers.Timer.SynchronizingObject%2A> is `null`, the method that handles the <xref:System.Timers.Timer.Elapsed> event is called on a thread from the system-thread pool.</span></span> <span data-ttu-id="c0df4-292">Per altre informazioni sui pool di thread del sistema, vedere <xref:System.Threading.ThreadPool>.</span><span class="sxs-lookup"><span data-stu-id="c0df4-292">For more information on system-thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="c0df4-293">Quando il <xref:System.Timers.Timer.Elapsed> evento è gestito da un componente di Windows Form visual, ad esempio un pulsante, l'accesso al componente tramite il pool di thread del sistema potrebbe essere il risultato di un'eccezione o semplicemente potrebbero non funzionare.</span><span class="sxs-lookup"><span data-stu-id="c0df4-293">When the <xref:System.Timers.Timer.Elapsed> event is handled by a visual Windows Forms component, such as a button, accessing the component through the system-thread pool might result in an exception or just might not work.</span></span> <span data-ttu-id="c0df4-294">Per evitare questo effetto impostando <xref:System.Timers.Timer.SynchronizingObject%2A> a un componente di Windows Form, in modo che il metodo che gestisce il <xref:System.Timers.Timer.Elapsed> eventi da chiamare sullo stesso thread che il componente è stato creato.</span><span class="sxs-lookup"><span data-stu-id="c0df4-294">Avoid this effect by setting <xref:System.Timers.Timer.SynchronizingObject%2A> to a Windows Forms component, which causes the method that handles the <xref:System.Timers.Timer.Elapsed> event to be called on the same thread that the component was created on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0df4-295">Anche se il <xref:System.Timers.Timer.SynchronizingObject%2A> proprietà non è `null`, <xref:System.Timers.Timer.Elapsed> gli eventi possono verificarsi dopo il <xref:System.Timers.Timer.Dispose%2A> o <xref:System.Timers.Timer.Stop%2A> metodo è stato chiamato o dopo la <xref:System.Timers.Timer.Enabled%2A> proprietà è stata impostata `false`, in quanto il segnale per generare il <xref:System.Timers.Timer.Elapsed> eventi sono sempre in coda per l'esecuzione in un pool di thread.</span><span class="sxs-lookup"><span data-stu-id="c0df4-295">Even if the <xref:System.Timers.Timer.SynchronizingObject%2A> property is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="c0df4-296">Un modo per risolvere questa race condition consiste nell'impostare un flag che indica il gestore eventi per il <xref:System.Timers.Timer.Elapsed> evento ignori alcuni eventi successivi.</span><span class="sxs-lookup"><span data-stu-id="c0df4-296">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="c0df4-297">Se il <xref:System.Timers.Timer> viene usato all'interno di Visual Studio in una finestra di progettazione Windows Form <xref:System.Timers.Timer.SynchronizingObject%2A> viene impostato automaticamente al controllo che contiene il <xref:System.Timers.Timer>.</span><span class="sxs-lookup"><span data-stu-id="c0df4-297">If the <xref:System.Timers.Timer> is used inside Visual Studio in a Windows Forms designer, <xref:System.Timers.Timer.SynchronizingObject%2A> is automatically set to the control that contains the <xref:System.Timers.Timer>.</span></span> <span data-ttu-id="c0df4-298">Ad esempio, se si inserisce un <xref:System.Timers.Timer> in una finestra di progettazione per `Form1` (che eredita dalla classe <xref:System.Windows.Forms.Form>), il <xref:System.Timers.Timer.SynchronizingObject%2A> proprietà di <xref:System.Timers.Timer> è impostato per l'istanza di `Form1`.</span><span class="sxs-lookup"><span data-stu-id="c0df4-298">For example, if you place a <xref:System.Timers.Timer> on a designer for `Form1` (which inherits from <xref:System.Windows.Forms.Form>), the <xref:System.Timers.Timer.SynchronizingObject%2A> property of <xref:System.Timers.Timer> is set to the instance of `Form1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0df4-299">L'esempio seguente è un'app di Windows Form che funge da un editor di file di testo molto semplice.</span><span class="sxs-lookup"><span data-stu-id="c0df4-299">The following example is a Windows Forms app that serves as a very simple text file editor.</span></span> <span data-ttu-id="c0df4-300">Quando il testo nella casella di testo non è stato salvato, l'app chiede all'utente a intervalli di un minuto se desidera salvare il contenuto della casella di testo.</span><span class="sxs-lookup"><span data-stu-id="c0df4-300">When the text in the text box has not been saved, the app asks the user at one-minute intervals whether he or she wants to save the contents of the text box.</span></span>  <span data-ttu-id="c0df4-301">A tale scopo, il <xref:System.Timers.Timer.Interval%2A> è impostata su 1 minuto (60000 millisecondi) e il <xref:System.Timers.Timer.SynchronizingObject%2A> è impostata sul <xref:System.Windows.Forms.Form> oggetto.</span><span class="sxs-lookup"><span data-stu-id="c0df4-301">To do this, the <xref:System.Timers.Timer.Interval%2A> property is set to one minute (60,000 milliseconds), and the <xref:System.Timers.Timer.SynchronizingObject%2A> property is set to the <xref:System.Windows.Forms.Form> object.</span></span>  
  
 [!code-csharp[System.Timers.Timer.SynchronizingObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Timers.Timer.SynchronizingObject/cs/Form1.cs#1)]
 [!code-vb[System.Timers.Timer.SynchronizingObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Timers.Timer.SynchronizingObject/vb/Form1.vb#1)]  
  
 <span data-ttu-id="c0df4-302">L'esempio è necessario aggiungere i seguenti controlli al form:</span><span class="sxs-lookup"><span data-stu-id="c0df4-302">The example requires that you add the following controls to the form:</span></span>  
  
-   <span data-ttu-id="c0df4-303">Oggetto <xref:System.Windows.Forms.TextBox> controllo denominato `TextBox1` (nome predefinito).</span><span class="sxs-lookup"><span data-stu-id="c0df4-303">A <xref:System.Windows.Forms.TextBox> control named `TextBox1` (its default name).</span></span>  
  
-   <span data-ttu-id="c0df4-304">Oggetto <xref:System.Windows.Forms.Button> controllo denominato `Button1` (nome predefinito).</span><span class="sxs-lookup"><span data-stu-id="c0df4-304">A <xref:System.Windows.Forms.Button> control named `Button1` (its default name).</span></span>  
  
-   <span data-ttu-id="c0df4-305">Oggetto <xref:System.Windows.Forms.SaveFileDialog> controllo denominato `SaveSaveFileDialog1` (nome predefinito).</span><span class="sxs-lookup"><span data-stu-id="c0df4-305">A <xref:System.Windows.Forms.SaveFileDialog> control named `SaveSaveFileDialog1` (its default name) .</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.ComponentModel.ISynchronizeInvoke" />
        <altmember cref="T:System.Threading.ThreadPool" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
  </Members>
</Type>