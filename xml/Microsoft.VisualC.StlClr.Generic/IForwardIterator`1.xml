<Type Name="IForwardIterator&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.Generic.IForwardIterator&lt;TValue&gt;">
  <TypeSignature Language="C#" Value="public interface IForwardIterator&lt;TValue&gt; : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;, Microsoft.VisualC.StlClr.Generic.IOutputIterator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IForwardIterator`1&lt;TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt;, class Microsoft.VisualC.StlClr.Generic.IOutputIterator`1&lt;!TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IForwardIterator(Of TValue)&#xA;Implements IInputIterator(Of TValue), IOutputIterator(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IForwardIterator : Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt;, Microsoft::VisualC::StlClr::Generic::IOutputIterator&lt;TValue&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IOutputIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue">[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]</typeparam>
    <summary><span data-ttu-id="a106c-101">Interfaccia per un iteratore che può accedere agli elementi in un contenitore solo in avanti utilizzando l'operatore di incremento.</span><span class="sxs-lookup"><span data-stu-id="a106c-101">Interface for an iterator that can access elements in a container only in the forward direction by using the increment operator.</span></span> <span data-ttu-id="a106c-102">L'elemento al quale l'iteratore punta può essere scritto o letto un numero illimitato di volte.</span><span class="sxs-lookup"><span data-stu-id="a106c-102">The element that the iterator points to can be both written to and read from any number of times.</span></span> <span data-ttu-id="a106c-103">Gli iteratori in avanti possono essere utilizzati ovunque sia richiesto un iteratore di input o output.</span><span class="sxs-lookup"><span data-stu-id="a106c-103">Forward iterators can be used anywhere an input or output iterator is required.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>