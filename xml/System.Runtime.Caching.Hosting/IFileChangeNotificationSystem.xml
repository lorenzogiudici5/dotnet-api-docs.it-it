<Type Name="IFileChangeNotificationSystem" FullName="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ebfbbed64ce375ea6b980924387f099875657fa5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39928272" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFileChangeNotificationSystem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFileChangeNotificationSystem" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFileChangeNotificationSystem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFileChangeNotificationSystem" />
  <TypeSignature Language="F#" Value="type IFileChangeNotificationSystem = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce un modo per esporre un oggetto <see cref="T:System.Runtime.Caching.FileChangeMonitor" /> personalizzato a un'implementazione della cache.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In ASP.NET il <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfaccia fornisce l'accesso alla gestione delle notifiche di modifica di file interno.  
  
 Il <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> viene usata internamente dall'interfaccia di <xref:System.Runtime.Caching.HostFileChangeMonitor> classe.  
  
 Quando un'implementazione della cache viene eseguito in un dominio dell'applicazione ASP.NET, ASP.NET implementa un' <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfacciarsi tramite il <xref:System.Runtime.Caching.ObjectCache.Host%2A> proprietà. Il <xref:System.Runtime.Caching.HostFileChangeMonitor> rileva questa proprietà di classe e Usa il sistema di notifica-modifica del file ASP.NET per rimuovere tali voci di cache basate su notifica di modifica di file.  
  
 Nelle applicazioni non ASP.NET, non è disponibile alcun ambiente host che implementa un oggetto personalizzato <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfaccia. Di conseguenza, il <xref:System.Runtime.Caching.HostFileChangeMonitor> classe Usa il <xref:System.IO.FileSystemWatcher> classe di CLR.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StartMonitoring">
      <MemberSignature Language="C#" Value="public void StartMonitoring (string filePath, System.Runtime.Caching.OnChangedCallback onChangedCallback, out object state, out DateTimeOffset lastWriteTime, out long fileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartMonitoring(string filePath, class System.Runtime.Caching.OnChangedCallback onChangedCallback, [out] object&amp; state, [out] valuetype System.DateTimeOffset&amp; lastWriteTime, [out] int64&amp; fileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartMonitoring(System::String ^ filePath, System::Runtime::Caching::OnChangedCallback ^ onChangedCallback, [Runtime::InteropServices::Out] System::Object ^ % state, [Runtime::InteropServices::Out] DateTimeOffset % lastWriteTime, [Runtime::InteropServices::Out] long % fileSize);" />
      <MemberSignature Language="F#" Value="abstract member StartMonitoring : string * System.Runtime.Caching.OnChangedCallback *  *  *  -&gt; unit" Usage="iFileChangeNotificationSystem.StartMonitoring (filePath, onChangedCallback, state, lastWriteTime, fileSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
        <Parameter Name="state" Type="System.Object" RefType="out" />
        <Parameter Name="lastWriteTime" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="fileSize" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filePath">Percorso fisico completo di una directory o di un file di cui monitorare le modifiche.</param>
        <param name="onChangedCallback">Riferimento a un metodo che implementa il delegato <see cref="T:System.Runtime.Caching.OnChangedCallback" />. Quando la directory o il file monitorato viene modificato, l'implementazione dell'ambiente host dell'interfaccia di <see cref="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" /> genera un evento chiamando la classe <see cref="T:System.Runtime.Caching.OnChangedCallback" />.</param>
        <param name="state">Lo stato fornito dall'ambiente host. Le implementazioni della cache e i monitoraggi delle modifiche personalizzati devono considerare il valore di stato opaco. Tuttavia, è necessario archiviare lo stato in modo che possa essere inviato all'ambiente host quando l'implementazione della cache chiama il metodo <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" />.</param>
        <param name="lastWriteTime">Al termine, questo metodo contiene la data e l'ora dell'ultima operazione di scrittura in <c>filePath</c>. Questo parametro viene passato non inizializzato. Questo parametro viene restituito dall'ambiente host.</param>
        <param name="fileSize">Al termine, questo metodo contiene le dimensioni totali dell'oggetto <c>filePath</c> monitorato. Questo parametro viene passato non inizializzato. Questo parametro viene restituito dall'ambiente host.</param>
        <summary>Registra un percorso di file con l'ambiente host da monitorare.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato dagli oggetti della cache personalizzate e monitoraggi che implementano l'ambiente di host delle modifiche personalizzati <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfaccia per registrare i percorsi di file per il monitoraggio con l'ambiente host. Il <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A> viene chiamato dai responsabili dell'implementazione di <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interfaccia per registrare un file o directory per il monitoraggio delle modifiche.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopMonitoring">
      <MemberSignature Language="C#" Value="public void StopMonitoring (string filePath, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopMonitoring(string filePath, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopMonitoring (filePath As String, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopMonitoring(System::String ^ filePath, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member StopMonitoring : string * obj -&gt; unit" Usage="iFileChangeNotificationSystem.StopMonitoring (filePath, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filePath">Percorso del file o della cartella in cui interrompere il monitoraggio. Deve corrispondere a un valore di percorso di file passato in una precedente chiamata al metodo <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />.</param>
        <param name="state">Informazioni di stato originariamente specificate dall'ambiente host durante una chiamata precedente al metodo <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />.</param>
        <summary>Termina il monitoraggio delle modifiche.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> metodo deve essere chiamato da cache personalizzate e monitoraggi che vengono eliminate dall'ambiente host per interrompere i percorsi di file e directory di monitoraggio delle modifiche personalizzati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>