<Type Name="WmiConfigurationAttribute" FullName="System.Management.Instrumentation.WmiConfigurationAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="25d5ab664d3c12ca530a3ec694c00aba2a63e240" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39725540" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WmiConfigurationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WmiConfigurationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WmiConfigurationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiConfigurationAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WmiConfigurationAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>L'attributo WmiConfiguration indica che un assembly contiene codice che implementa un provider WMI usando il modello delle estensioni dei provider .NET di WMI. L'attributo accetta parametri che definiscono la configurazione di alto livello del provider WMI implementato.  
  
Nota: le librerie .NET di WMI sono ora considerate in stato finale e non saranno disponibili altri sviluppi, miglioramenti o aggiornamenti per i problemi non correlati alla sicurezza che interessano queste librerie. Per tutte le nuove attività di sviluppo devono essere usate le [API MI](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente elenca i parametri accettati da questo attributo con l'aspetto della configurazione del provider consente al controllo.  
  
|Parametro|Configura|  
|---------------|----------------|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.Scope>|Lo spazio dei nomi in cui il provider espone le classi.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity>|-La protezione (DACL) nello spazio dei nomi usato.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel>|-Il modello di hosting che verrà utilizzato dal provider.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel>|-La modalità di rappresentazione del provider.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup>|Il gruppo host a cui appartiene il provider. Questo parametro è applicabile solo per i provider in-process.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction>|Sicurezza (DACL) per il provider WMI.|  
  
   
  
## Examples  
  
```  
// Specify that this assembly contains code that implements a WMI  
// Provider. Use the assembly:WmiConfiguration attribute to define  
// the WMI namespace, the hosting model, and the impersonation mode  
// of the WMI provider.  
// The attribute below specifies that the class this provider  
// exposes to WMI will be in the root/MortgageCalc namespace, will  
// use the decoupled hosting model and will not allow the provider  
// to impersonate its callers.  
  
[assembly: WmiConfiguration("root/MortgageCalc",HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false)]  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiConfigurationAttribute (string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiConfigurationAttribute(System::String ^ scope);" />
      <MemberSignature Language="F#" Value="new System.Management.Instrumentation.WmiConfigurationAttribute : string -&gt; System.Management.Instrumentation.WmiConfigurationAttribute" Usage="new System.Management.Instrumentation.WmiConfigurationAttribute scope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">Spazio dei nomi WMI nel quale il provider esporrà le classi. Ad esempio, "root\SpazioNomiProvider".</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Management.Instrumentation.WmiConfigurationAttribute" /> che specifica lo spazio dei nomi WMI nel quale il provider WMI esporrà le classi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un provider WMI debba esporre le classi in uno spazio dei nomi. Ecco perché il costruttore richiede l'ambito come parametro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingGroup">
      <MemberSignature Language="C#" Value="public string HostingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HostingGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostingGroup : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il gruppo di hosting per il provider WMI.</summary>
        <value>Valore <see cref="T:System.String" /> che indica il gruppo di hosting per il provider WMI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gruppi di hosting si applicano solo al provider che sono ospitati in-process. Il valore viene ignorato per i provider disaccoppiati.  
  
 Un gruppo di hosting è un set di provider in-process che sono che tutti assegnati lo stesso nome di gruppo di hosting. Il nome del gruppo di hosting è una stringa definita dall'utente per raggruppare logicamente i provider. Tutti i provider in-process nello stesso gruppo host in esecuzione nello stesso contesto di sicurezza sono ospitati all'interno di una singola istanza del processo Wmiprvse.exe. Pertanto, i provider che condividono lo stesso contesto di sicurezza e gruppo host condividono lo stesso processo host del servizio.  
  
   
  
## Examples  
 Nell'esempio seguente, il <xref:System.Management.Instrumentation.WmiConfigurationAttribute> viene utilizzato per indicare che l'assembly è contenuto in implementa un provider in-process che viene eseguito nel contesto di sicurezza NetworkService ed è ospitato in un'istanza del processo che ospita anche qualsiasi Wmiprvse.exe altri provider in-process nello stesso gruppo host che eseguono anche all'interno del contesto di sicurezza NetworkService.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService), HostingGroup = "MyProviders"]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingModel">
      <MemberSignature Language="C#" Value="public System.Management.Instrumentation.ManagementHostingModel HostingModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Instrumentation.ManagementHostingModel HostingModel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingModel As ManagementHostingModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::Instrumentation::ManagementHostingModel HostingModel { System::Management::Instrumentation::ManagementHostingModel get(); void set(System::Management::Instrumentation::ManagementHostingModel value); };" />
      <MemberSignature Language="F#" Value="member this.HostingModel : System.Management.Instrumentation.ManagementHostingModel with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.ManagementHostingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il modello di hosting per il provider WMI.</summary>
        <value>Valore <see cref="T:System.Management.Instrumentation.ManagementHostingModel" /> che indica il modello di hosting per il provider WMI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Provider WMI possono essere ospitati da un'applicazione o dal servizio WMI. Provider WMI ospitato da un'applicazione vengono chiamati i provider disaccoppiati. Quelle ospitate nel servizio WMI vengono chiamati i provider in-process. Il valore del modello di hosting determina entrambi modello di hosting e, nel caso di provider in-process, l'account (contesto di sicurezza) in cui il provider in esecuzione. Per ulteriori dettagli sui possibili valori di HostingModel, vedere <xref:System.Management.Instrumentation.ManagementHostingModel>.  
  
 Per altre informazioni sui modelli di hosting, vedere la [Provider di Hosting e la sicurezza](http://go.microsoft.com/fwlink/?LinkId=100075) argomento in WMI SDK su MSDN.  
  
   
  
## Examples  
 Nell'esempio seguente, il <xref:System.Management.Instrumentation.WmiConfigurationAttribute> viene utilizzato per indicare che l'assembly è contenuto in implementa un provider che viene esposta tramite lo spazio dei nomi root\NVPair.. Poiché il modello di hosting non <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled>, si tratta di un provider in-process. Il valore <xref:System.Management.Instrumentation.ManagementHostingModel.NetworkService> indica che il provider in-process viene eseguito nel contesto di sicurezza NetworkService.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService)]  
```  
  
 Nell'esempio seguente, il <xref:System.Management.Instrumentation.WmiConfigurationAttribute> viene utilizzato per indicare che l'assembly è contenuto in implementa un provider che viene esposta tramite lo spazio dei nomi root\NVPair.. Il valore <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled> indica che è un provider disaccoppiato.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.Decoupled)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyLevel">
      <MemberSignature Language="C#" Value="public bool IdentifyLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IdentifyLevel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IdentifyLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IdentifyLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IdentifyLevel : bool with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se il provider WMI può rappresentare i relativi chiamanti. Se il valore è false, il provider non può rappresentarli, se invece il valore è true, può rappresentarli.</summary>
        <value>Valore booleano che indica se un provider può rappresentare i chiamanti. Se il valore è false, il provider non può rappresentarli, se invece il valore è true, può rappresentarli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni, vedere l'argomento "Provider di Hosting e sicurezza" in MSDN library online all'indirizzo [ http://www.msdn.com ](http://www.msdn.com/).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il parametro IdentifyLevel per indicare che il provider può rappresentare i chiamanti.  
  
```  
[assembly: WmiConfiguration("root/MyProv", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = true]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceSecurity">
      <MemberSignature Language="C#" Value="public string NamespaceSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceSecurity" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceSecurity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NamespaceSecurity { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceSecurity : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una stringa SDDL (Security Descriptor Definition Language) che specifica il descrittore di sicurezza nello spazio dei nomi nel quale il provider espone gli oggetti di gestione.</summary>
        <value>Stringa SDDL che rappresenta il descrittore di sicurezza nello spazio dei nomi nel quale il provider espone gli oggetti di gestione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sulle modalità rappresentare i descrittori di sicurezza nel formato SDDL, vedere la [formato di stringa del descrittore di sicurezza](http://go.microsoft.com/fwlink/?LinkId=100763) argomento in MSDN library online.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il parametro NamespaceSecurity per impostare il descrittore di sicurezza per lo spazio dei nomi radice/SDTest nel quale i provider implementati in questo assembly espone le classi WMI.  
  
```  
[assembly: WmiConfiguration("root/SDTest", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false, NamespaceSecurity = "O:BAG:BAD:(A;CI;0x60003;;;WD)")]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scope As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scope { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scope : string" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo spazio dei nomi WMI nel quale il provider WMI espone le classi.</summary>
        <value>Valore <see cref="T:System.String" /> che indica lo spazio dei nomi nel quale il provider WMI espone le classi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uno spazio dei nomi WMI è una categoria all'interno del repository WMI. Lo spazio dei nomi root/cimv2 utilizzate ospita le classi che descrivono il Common Information Model, versione 2, definito dal consorzio Desktop Management Task Force (DMTF). È consigliabile esporre solo i provider nello spazio dei nomi se si espande al momento il modello CIM sta. In caso contrario, è necessario creare uno spazio dei nomi appropriato che rende non crittografato agli utenti il tipo di classi WMI è possibile prevedere che trova nello spazio dei nomi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityRestriction">
      <MemberSignature Language="C#" Value="public string SecurityRestriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityRestriction" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityRestriction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityRestriction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRestriction : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un descrittore di sicurezza per il provider WMI. Per altre informazioni, vedere i dettagli relativi alla proprietà SecurityDescriptor nell'argomento "__Win32Provider" in MSDN Online Library all'indirizzo [http://www.msdn.com](http://www.msdn.com/).</summary>
        <value>Valore <see cref="T:System.String" /> che contiene il descrittore di sicurezza per il provider WMI.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>