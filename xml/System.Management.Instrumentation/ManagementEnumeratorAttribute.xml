<Type Name="ManagementEnumeratorAttribute" FullName="System.Management.Instrumentation.ManagementEnumeratorAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8120c5ce7ed5d6adb3a3b99fb97d8882fa27e2d0" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39987334" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManagementEnumeratorAttribute : System.Management.Instrumentation.ManagementNewInstanceAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementEnumeratorAttribute extends System.Management.Instrumentation.ManagementNewInstanceAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementEnumeratorAttribute&#xA;Inherits ManagementNewInstanceAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEnumeratorAttribute sealed : System::Management::Instrumentation::ManagementNewInstanceAttribute" />
  <TypeSignature Language="F#" Value="type ManagementEnumeratorAttribute = class&#xA;    inherit ManagementNewInstanceAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementNewInstanceAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a3388-101">L'attributo ManagementEnumerator contrassegna un metodo che restituisce tutte le istanze di una classe WMI.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a3388-101">The ManagementEnumerator attribute marks a method that returns all the instances of a WMI class.</span>
      </span>
      <span data-ttu-id="a3388-102">Nota: le librerie .NET di WMI sono ora considerate in stato finale e non saranno disponibili altri sviluppi, miglioramenti o aggiornamenti per i problemi non correlati alla sicurezza che interessano queste librerie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a3388-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span>
      </span>
      <span data-ttu-id="a3388-103">Per tutte le nuove attività di sviluppo devono essere usate le [API MI](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx).</span>
      <span class="sxs-lookup">
        <span data-stu-id="a3388-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3388-104">Il metodo deve essere statico e pubblico.</span><span class="sxs-lookup"><span data-stu-id="a3388-104">The method must be static and public.</span></span> <span data-ttu-id="a3388-105">Deve restituire una raccolta di tutte le istanze della classe WMI.</span><span class="sxs-lookup"><span data-stu-id="a3388-105">It must return a collection of all instances of the WMI class.</span></span> <span data-ttu-id="a3388-106">La raccolta può essere di qualsiasi tipo convertibile in <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="a3388-106">The collection can be of any type convertible to <xref:System.Collections.IEnumerable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3388-107">Nell'esempio seguente viene illustrato come usare l'attributo enumeratore per contrassegnare un metodo che viene usato per enumerare le istanze di una classe.</span><span class="sxs-lookup"><span data-stu-id="a3388-107">The following example shows how to use the Enumerator attribute to mark a method that is used to enumerate instances of a class.</span></span> <span data-ttu-id="a3388-108">In questo caso, viene utilizzato il metodo Enumerate le <xref:System.Diagnostics.Process> classe da cui recuperare tutti i processi in esecuzione nel computer.</span><span class="sxs-lookup"><span data-stu-id="a3388-108">In this case, the Enumerate method uses the <xref:System.Diagnostics.Process> class to retrieve all of the processes running on the computer.</span></span>  
  
```csharp  
[ManagementEnumerator]  
public static IEnumerable Enumerate()  
{  
   Process[] rgProcesses = Process.GetProcesses();  
   for (int i = 0; i < rgProcesses.Length; i++)  
   {  
      yield return new ProcessProvider(rgProcesses[i]);  
   }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEnumeratorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEnumeratorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3388-109">Inizializza una nuova istanza della classe <see cref="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3388-109">Initializes a new instance of the <see cref="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public Type Schema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Schema" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema" />
      <MemberSignature Language="VB.NET" Value="Public Property Schema As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Schema { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schema : Type with get, set" Usage="System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3388-110">Ottiene o imposta un valore che definisce il tipo di output che verrà restituito dal metodo contrassegnato dall'attributo ManagementEnumerator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3388-110">Gets or sets a value that defines the type of output that the method that is marked with the ManagementEnumerator attribute will output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3388-111">Valore <see cref="T:System.Type" /> indicante il tipo di output che verrà restituito dal metodo contrassegnato dall'attributo <see cref="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3388-111">A <see cref="T:System.Type" /> value that indicates the type of output that the method marked with the <see cref="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" /> attribute will output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3388-112">Se il tipo restituito <xref:System.Object?displayProperty=nameWithType>, l'output dovrebbe essere considerata come un valore di tipo <xref:System.Object?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3388-112">If the returned type is <xref:System.Object?displayProperty=nameWithType>, then the output should be treated as a value of type <xref:System.Object?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>