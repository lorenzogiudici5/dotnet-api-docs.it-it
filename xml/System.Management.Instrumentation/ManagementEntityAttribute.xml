<Type Name="ManagementEntityAttribute" FullName="System.Management.Instrumentation.ManagementEntityAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67aec8c22a51190e16fce0b4601a1773892f1913" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30425915" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManagementEntityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementEntityAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementEntityAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementEntityAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEntityAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>L'attributo ManagementEntity indica che una classe fornisce informazioni sulla gestione esposte tramite un provider WMI.  
  
 Nota: le librerie .NET di WMI sono ora considerate in stato finale e non saranno disponibili altri sviluppi, miglioramenti o aggiornamenti per i problemi non correlati alla sicurezza che interessano queste librerie. Per tutte le nuove attività di sviluppo devono essere usate le [API MI](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe contrassegnata da questo attributo deve essere pubblica.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare l'attributo ManagementEntity per contrassegnare una classe.  
  
```  
// Use the ManagementEntity attribute on the class to specify that this // class contains management information that is available from  
// provider.  
  
    [ManagementEntity(Name = "MortgageCalc")]  
    public class MortgageCalcWMIProvider  
    {  
    }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEntityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEntityAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Management.ManagementEntityAttribute" />. È il costruttore predefinito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore non accetta un parametro di nome. Se non si specifica un nome utilizzando il <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parametro, il nome della classe WMI associata utilizzerà il nome della classe con attributo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="External">
      <MemberSignature Language="C#" Value="public bool External { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool External" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.External" />
      <MemberSignature Language="VB.NET" Value="Public Property External As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool External { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se la classe rappresenta una classe WMI in un provider implementato esterno all'assembly corrente.</summary>
        <value>Valore booleano uguale a true se la classe rappresenta una classe WMI esterna e uguale a false in caso contrario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene utilizzato quando si implementano i provider che implementano le classi che estendono le classi WMI esistenti astratte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome della classe WMI.</summary>
        <value>Stringa contenente il nome della classe WMI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non si specifica il nome della classe WMI impostando questa proprietà, la classe WMI utilizzerà il nome della classe con attributo.  
  
   
  
## Examples  
 Nell'esempio seguente, il parametro Name viene utilizzato per impostare il nome della classe WMI rappresentata dalla classe MortgageCalcWMIProvider. Imposta il nome su MortgageCalculator. Se il nome di parametro non è utilizzato, il corrispondente nome della classe c# MortgageCalcWMIProvider in questo caso, viene utilizzato come nome della classe WMI.  
  
```  
[ManagementEntity(Name = "MortgageCalculator")]  
public class MortgageCalcWMIProvider  
{  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton">
      <MemberSignature Language="C#" Value="public bool Singleton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Singleton" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      <MemberSignature Language="VB.NET" Value="Public Property Singleton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Singleton { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica se la classe associata rappresenta una classe WMI singleton.</summary>
        <value>Valore booleano uguale a true se la classe rappresenta una classe WMI singleton e uguale a false in caso contrario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una classe WMI singleton è per i quali è sempre possibile una sola istanza. Anche se è possibile codificare la logica per garantire che solo una singola istanza di una classe WMI viene sempre creata, viene fornito l'attributo di parametro per consentire l'esecuzione di attività semplice e coerente.  
  
 Quando si utilizzano le classi WMI singleton, le applicazioni client devono utilizzare una sintassi speciale. Per altre informazioni, vedere il Describing un argomento di percorso dell'oggetto istanza in MSDN online library presso [ http://www.msdn.com ](http://www.msdn.com/).  
  
   
  
## Examples  
 Frammento di codice riportato di seguito viene illustrato come utilizzare il parametro Singleton per indicare che una classe c# corrisponde a una classe WMI singleton.  
  
```  
[ManagementEntity(Singleton=true)]  
public class SingletonSample  
```  
  
 Per un esempio completo, l'utilizzo di un provider che implementa una classe singleton, vedere [procedura: creare un Provider disaccoppiati base](http://msdn.microsoft.com/library/1dabd442-c1ff-40a1-bb0e-d7b3566c2300).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>