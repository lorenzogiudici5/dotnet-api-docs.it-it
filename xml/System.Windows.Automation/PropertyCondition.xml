<Type Name="PropertyCondition" FullName="System.Windows.Automation.PropertyCondition">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="20220a68915445f103e600c34393348f9d4c5b5c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39780371" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyCondition : System.Windows.Automation.Condition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyCondition extends System.Windows.Automation.Condition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.PropertyCondition" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyCondition&#xA;Inherits Condition" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyCondition : System::Windows::Automation::Condition" />
  <TypeSignature Language="F#" Value="type PropertyCondition = class&#xA;    inherit Condition" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.Condition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5ccb2-101">Rappresenta un oggetto <see cref="T:System.Windows.Automation.Condition" /> che testa se una proprietà ha un valore specificato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5ccb2-101">Represents a <see cref="T:System.Windows.Automation.Condition" /> that tests whether a property has a specified value.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ccb2-102">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Automation.PropertyCondition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ccb2-102">Initializes a new instance of the <see cref="T:System.Windows.Automation.PropertyCondition" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyCondition (System.Windows.Automation.AutomationProperty property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Automation.AutomationProperty property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.PropertyCondition.#ctor(System.Windows.Automation.AutomationProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As AutomationProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyCondition(System::Windows::Automation::AutomationProperty ^ property, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Windows.Automation.PropertyCondition : System.Windows.Automation.AutomationProperty * obj -&gt; System.Windows.Automation.PropertyCondition" Usage="new System.Windows.Automation.PropertyCondition (property, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="5ccb2-103">Proprietà da testare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ccb2-103">The property to test.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5ccb2-104">Valore per il quale testare la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ccb2-104">The value to test the property for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ccb2-105">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Automation.PropertyCondition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ccb2-105">Initializes a new instance of the <see cref="T:System.Windows.Automation.PropertyCondition" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ccb2-106">Il parametro `property` non può essere <xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty>.</span><span class="sxs-lookup"><span data-stu-id="5ccb2-106">The `property` parameter cannot be <xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ccb2-107">Nell'esempio seguente, un <xref:System.Windows.Automation.PropertyCondition> specifica che il [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elemento da trovare ha un tipo di controllo di <xref:System.Windows.Automation.ControlType.List>.</span><span class="sxs-lookup"><span data-stu-id="5ccb2-107">In the following example, a <xref:System.Windows.Automation.PropertyCondition> specifies that the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element to be found has a control type of <xref:System.Windows.Automation.ControlType.List>.</span></span> <span data-ttu-id="5ccb2-108">Il <xref:System.Windows.Automation.PropertyCondition> viene quindi usato per ottenere l'elemento di elenco da una casella combinata.</span><span class="sxs-lookup"><span data-stu-id="5ccb2-108">The <xref:System.Windows.Automation.PropertyCondition> is then used to obtain the list element from a combo box.</span></span>  
  
 [!code-csharp[UIAClient_snip#180](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#180)]
 [!code-vb[UIAClient_snip#180](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#180)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyCondition (System.Windows.Automation.AutomationProperty property, object value, System.Windows.Automation.PropertyConditionFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Automation.AutomationProperty property, object value, valuetype System.Windows.Automation.PropertyConditionFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.PropertyCondition.#ctor(System.Windows.Automation.AutomationProperty,System.Object,System.Windows.Automation.PropertyConditionFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As AutomationProperty, value As Object, flags As PropertyConditionFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyCondition(System::Windows::Automation::AutomationProperty ^ property, System::Object ^ value, System::Windows::Automation::PropertyConditionFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Windows.Automation.PropertyCondition : System.Windows.Automation.AutomationProperty * obj * System.Windows.Automation.PropertyConditionFlags -&gt; System.Windows.Automation.PropertyCondition" Usage="new System.Windows.Automation.PropertyCondition (property, value, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="flags" Type="System.Windows.Automation.PropertyConditionFlags" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="5ccb2-109">Proprietà da testare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ccb2-109">The property to test.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5ccb2-110">Valore per il quale testare la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ccb2-110">The value to test the property for.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="5ccb2-111">Flag che influiscono sul confronto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ccb2-111">Flags that affect the comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ccb2-112">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Automation.PropertyCondition" /> con flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ccb2-112">Initializes a new instance of the <see cref="T:System.Windows.Automation.PropertyCondition" /> class, with flags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5ccb2-113">L'esempio seguente usa un' <xref:System.Windows.Automation.PropertyCondition> per recuperare il [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] elemento che rappresenta il form principale di un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="5ccb2-113">The following example uses a <xref:System.Windows.Automation.PropertyCondition> to retrieve the [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] element representing the main form of an application.</span></span> <span data-ttu-id="5ccb2-114">Il modulo è disponibile da una ricerca tra maiuscole e minuscole per il relativo identificatore di stringa.</span><span class="sxs-lookup"><span data-stu-id="5ccb2-114">The form is located by a case-insensitive search for its string identifier.</span></span>  
  
 [!code-csharp[UIAClient_snip#110](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#110)]
 [!code-vb[UIAClient_snip#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.PropertyConditionFlags Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.PropertyConditionFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.PropertyCondition.Flags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Flags As PropertyConditionFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::PropertyConditionFlags Flags { System::Windows::Automation::PropertyConditionFlags get(); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Windows.Automation.PropertyConditionFlags" Usage="System.Windows.Automation.PropertyCondition.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.PropertyConditionFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ccb2-115">Ottiene i flag utilizzati per testare il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ccb2-115">Gets the flags used for testing the property value.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationProperty Property { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.PropertyCondition.Property" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Property As AutomationProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationProperty ^ Property { System::Windows::Automation::AutomationProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.PropertyCondition.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ccb2-116">Ottiene la proprietà in corso di test da parte di questa condizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ccb2-116">Gets the property that this condition is testing.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.PropertyCondition.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Windows.Automation.PropertyCondition.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ccb2-117">Ottiene il valore della proprietà in corso di test da parte di questa condizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ccb2-117">Gets the property value that this condition is testing.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>