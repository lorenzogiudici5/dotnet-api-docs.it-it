<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SessionAuthenticationModule.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b7d2c3e066c7161e9965fffcf3d748c0a45c666c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7d2c3e066c7161e9965fffcf3d748c0a45c666c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>Implements an ASP.NET module that processes session cookies in WS-Federation scenarios.</source>
          <target state="translated">Implementa un modulo ASP.NET che elabora i cookie di sessione in scenari di WS-Federation.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>When present in the ASP.NET pipeline, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) processes session cookies in WS-Federation scenarios.</source>
          <target state="translated">Quando è presente nella pipeline ASP.NET, il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) elabora i cookie di sessione in scenari di WS-Federation.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>It uses the cookie handler specified by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property to read the raw session cookie from the HTTP request and write it to the HTTP response.</source>
          <target state="translated">Viene utilizzato il gestore del cookie specificato per il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> proprietà per leggere il cookie di sessione non elaborato della richiesta HTTP e scriverlo nella risposta HTTP.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>It uses the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that is configured for an application to deserialize the raw session cookie into <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> objects.</source>
          <target state="translated">Usa il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> che è configurato per un'applicazione deserializzare il cookie di sessione non elaborato in <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The session security token contains the claims (<ph id="ph1">&lt;xref:System.Security.Claims.Claim&gt;</ph>) and principal (<ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>) associated with the entity for which the request is being served.</source>
          <target state="translated">Il token di sicurezza di sessione contiene le attestazioni (<ph id="ph1">&lt;xref:System.Security.Claims.Claim&gt;</ph>) e dell'entità (<ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>) associato all'entità per cui viene gestita la richiesta.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The SAM adds its <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> event handler to the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> event in the ASP.NET pipeline.</source>
          <target state="translated">Aggiunge il modulo SAM relativo <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> gestore eventi per il <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> eventi nella pipeline ASP.NET.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> properties to the claims principal contained in the session token.</source>
          <target state="translated">Questo gestore intercetta le richieste di accesso e, se è presente un cookie di sessione, deserializza in un token di sessione e imposta il <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> proprietà per l'entità delle attestazioni contenute nel token di sessione.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>It invokes several of the other methods exposed by the SAM during this process.</source>
          <target state="translated">Viene richiamato, molti dei metodi esposti dal servizio di gestione durante questo processo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method can be invoked to sign the user out of a session (for example, in a SignOut.aspx.cs code-behind file).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metodo può essere richiamato per eseguire l'accesso l'utente da una sessione (ad esempio, in un file code-behind SignOut.aspx.cs).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The SAM exposes several events that provide access to its processing pipeline.</source>
          <target state="translated">Il modulo SAM espone diversi eventi che forniscono l'accesso per la pipeline di elaborazione.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> events enable you to modify session tokens that are read from cookies or created during processing.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> e <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> eventi consentono di modificare i token di sessione che vengono lette dal cookie o creati durante l'elaborazione.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>Typically, this is done to add, remove, or transform claims in the token or to adjust its expiration time.</source>
          <target state="translated">Questa operazione viene eseguita in genere, per aggiungere, rimuovere o trasformare le attestazioni nel token oppure per regolare l'ora di scadenza.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&gt;</ph>, <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&gt;</ph>, and <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> events provide hooks into the processing of sign-out requests.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&gt;</ph>, <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&gt;</ph>, e <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> eventi forniscono hook nell'elaborazione di richieste di disconnessione.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>For many scenarios, simply adding handlers for these events, often to the global.asax.cs file, will be sufficient.</source>
          <target state="translated">Per molti scenari, semplicemente l'aggiunta di gestori per questi eventi, frequenza con cui il file global.asax.cs, sarà sufficiente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>For more complicated scenarios, you can derive from <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> to implement a custom SAM.</source>
          <target state="translated">Per scenari più complessi, è possibile derivare da <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> per implementare una SAM personalizzata.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>To this end, many of the methods that are invoked during <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle.</source>
          <target state="translated">A tal fine, molti dei metodi che vengono richiamati durante <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> vengono esposte in modo che è possibile fornire un comportamento personalizzato in specifiche fasi del ciclo di vita di elaborazione della sessione.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>You can add the SAM to the ASP.NET pipeline in a configuration file by adding it to the HTTP modules under either the <ph id="ph1">`&lt;system.webServer&gt;`</ph> element for IIS version 7 and later or under the <ph id="ph2">`&lt;system.web&gt;`</ph> element for versions prior to IIS 7.</source>
          <target state="translated">È possibile aggiungere il modulo SAM nella pipeline ASP.NET in un file di configurazione, aggiungerlo ai moduli HTTP sotto il <ph id="ph1">`&lt;system.webServer&gt;`</ph> elemento IIS versione 7 e versioni successive o sotto il <ph id="ph2">`&lt;system.web&gt;`</ph> elemento per le versioni precedenti di IIS 7.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The cookie handler used by the SAM can be configured with the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> element.</source>
          <target state="translated">Il gestore di cookie usato dal servizio di gestione può essere configurato con il <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> elemento.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The following XML shows how to configure the SAM in the ASP.NET pipeline.</source>
          <target state="translated">Il codice XML seguente viene illustrato come configurare il modulo SAM nella pipeline ASP.NET.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>Many other elements that are present in a typical configuration are omitted here for brevity.</source>
          <target state="translated">Molti altri elementi presenti in una configurazione tipica vengono omessi qui per ragioni di brevità.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.SessionAuthenticationModule" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.SessionAuthenticationModule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph> and the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property is initialized to a default instance of the <ph id="ph4">&lt;xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A&gt;</ph> class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A&gt;</ph> è impostata su <ph id="ph2">`false`</ph> e <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> proprietà viene inizializzata su un'istanza predefinita del <ph id="ph4">&lt;xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>The session security token to use to authenticate the incoming HTTP request.</source>
          <target state="translated">Token di sicurezza della sessione da utilizzare per autenticare la richiesta HTTP in ingresso.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to write the session cookie; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per scrivere il cookie di sessione; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>Authenticates the incoming request by validating the incoming session token.</source>
          <target state="translated">Autentica la richiesta in entrata convalidando il token di sessione in ingresso.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>Upon successful validation, it updates the current HTTP context and thread principal with the specified  <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Dopo aver completato correttamente la convalida, il contesto HTTP corrente e l'entità del thread vengono aggiornati con l'elemento <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method is called from the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> metodo viene chiamato dal <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>It calls the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A&gt;</ph> method to validate the incoming token and update the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">Chiama il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A&gt;</ph> metodo per convalidare il token in ingresso e l'aggiornamento di <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph3">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>If the <ph id="ph1">`writeCookie`</ph> parameter is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A&gt;</ph> method is invoked to write the session token to a cookie.</source>
          <target state="translated">Se il <ph id="ph1">`writeCookie`</ph> parametro <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A&gt;</ph> metodo viene richiamato per scrivere il token di sessione in un cookie.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)">
          <source>The collection of cookies in which to search.</source>
          <target state="translated">Raccolta di cookie in cui cercare.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)">
          <source>Determines whether a session cookie is in the specified cookie collection.</source>
          <target state="translated">Determina se un cookie di sessione è presente nella raccolta di cookie specificata.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a session cookie is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se viene rilevato un cookie di sessione; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)">
          <source><ph id="ph1">&lt;paramref name="httpCookieCollection" /&gt;</ph> is null</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="httpCookieCollection" /&gt;</ph> è null</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken">
          <source>Gets the active <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> for the current <ph id="ph2">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> attivo per l'oggetto <ph id="ph2">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken">
          <source>The active session security token.</source>
          <target state="translated">Token di sicurezza della sessione attiva.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>Gets the cookie handler that is used to read, write, and delete session cookies.</source>
          <target state="translated">Ottiene il gestore di cookie utilizzato per leggere, scrivere ed eliminare i cookie di sessione.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>The cookie handler.</source>
          <target state="translated">Gestore di cookie.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property is initialized by the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> proprietà viene inizializzata dal <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>This method initializes the property based on the cookie handler specified on the <ph id="ph1">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration&gt;</ph> object that is set on the <ph id="ph2">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Questo metodo inizializza la proprietà in base al gestore del cookie specificato nel <ph id="ph1">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration&gt;</ph> oggetto impostato sul <ph id="ph2">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>You can set the cookie handler in a configuration file through the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> element.</source>
          <target state="translated">È possibile impostare il gestore di cookie in un file di configurazione tramite il <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> elemento.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>The principal to be captured in the token.</source>
          <target state="translated">Entità da acquisire nel token.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>An application-defined context string.</source>
          <target state="translated">Stringa di contesto definita dall'applicazione.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>The first instant in which this token is valid.</source>
          <target state="translated">L'indicazione del momento a partire dal quale il token è valido.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>The last instant in which this token is valid.</source>
          <target state="translated">L'indicazione del momento di fine di validità del token.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value should be persisted by the user agent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il valore deve essere mantenuto dall'agente utente; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from the specified parameters by using the configured session token handler.</source>
          <target state="translated">Crea <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> dai parametri specificati tramite il gestore token di sessione configurato.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>The session token.</source>
          <target state="translated">Token della sessione.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">Non c'è un gestore del token di sessione valido configurato.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(Nessun <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configurato nella proprietà <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie">
          <source>Deletes the session cookie and removes it from the cache.</source>
          <target state="translated">Elimina il cookie di sessione e lo rimuove dalla cache.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie">
          <source>Deletes the session cookie by using the cookie handler specified by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property.</source>
          <target state="translated">Elimina il cookie di sessione utilizzando il gestore del cookie specificato per il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie">
          <source>This method is called during sign-out by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato durante la disconnessione dal <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)">
          <source>The HTTP application object that contains this module.</source>
          <target state="translated">Applicazione HTTP che contiene il modulo.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)">
          <source>Initializes the module and prepares it to handle events from the module's <ph id="ph1">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> application object.</source>
          <target state="translated">Inizializza il modulo e lo prepara alla gestione di eventi dal relativo oggetto applicazione di <ph id="ph1">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> del modulo.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)">
          <source>Adds the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph> handlers to the <ph id="ph3">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType&gt;</ph> events of the application object specified by the <ph id="ph5">`context`</ph> parameter.</source>
          <target state="translated">Aggiunge il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph> gestori per il <ph id="ph3">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> e <ph id="ph4">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType&gt;</ph> eventi dell'oggetto applicazione specificata dal <ph id="ph5">`context`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration">
          <source>Initializes the module properties based on definitions in the configuration file.</source>
          <target state="translated">Inizializza le proprietà del modulo in base alle definizioni presenti nel file di configurazione.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration">
          <source>Initializes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property from the handler specified in configuration by the <ph id="ph2">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=nameWithType&gt;</ph> object that is set on the <ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Inizializza il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> proprietà da parte del gestore specificato nella configurazione per il <ph id="ph2">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=nameWithType&gt;</ph> oggetto impostato sul <ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration">
          <source>You can specify the cookie handler in a configuration file through the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> element.</source>
          <target state="translated">È possibile specificare il gestore di cookie in un file di configurazione tramite il <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> elemento.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>Gets or sets a value that specifies whether the session information (claim values, etc.) should be stored in the session cookie or whether the session content should be stored on the server side, using the cookie to store just a reference.</source>
          <target state="translated">Ottiene o imposta un valore che specifica se le informazioni sulla sessione (i valori di attestazione e così via) devono essere archiviate in un cookie di sessione o se il contenuto della sessione deve essere memorizzato sul lato server, utilizzando il cookie per archiviare solo un riferimento.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if issued cookies are in reference mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se i cookie rilasciati sono in modalità di riferimento; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, which specifies that issued cookies are not in reference mode.</source>
          <target state="translated">L'impostazione predefinita è <ph id="ph1">&lt;see langword="false" /&gt;</ph> che specifica che i cookie emessi non sono in modalità di riferimento.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>In reference mode, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> is stored in a server-side cache (an object that derives from <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>).</source>
          <target state="translated">In modalità di riferimento, il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> viene archiviato in una cache sul lato server (un oggetto che deriva da <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>The issued cookie just contains a context identifier that is used to retrieve the token from the cache.</source>
          <target state="translated">Il cookie emesso contiene solo un identificatore di contesto che viene utilizzato per recuperare il token dalla cache.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>To operate in reference mode, Microsoft recommends providing a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType&gt;</ph> event in the global.asax.cs file and setting the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property on the token passed in the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Per funzionare in modalità di riferimento, Microsoft consiglia di fornire un gestore per il <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType&gt;</ph> evento nel file global.asax.cs e impostazione di <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> proprietà il token passato nel <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property on the Session Authentication Module.</source>
          <target state="translated">Questo garantisce che il token di sessione viene eseguita in modalità di riferimento per ogni richiesta ed è preferibile all'impostazione semplicemente il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> proprietà del modulo di autenticazione della sessione.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The source for the event.</source>
          <target state="translated">Origine dell'evento.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This will be an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> object.</source>
          <target state="translated">Deve essere un oggetto <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dati per l'evento.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Handles the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event from the <ph id="ph2">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> pipeline.</source>
          <target state="translated">Gestisce l'evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> dalla pipeline <ph id="ph2">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This method does the following:</source>
          <target state="translated">Questo metodo effettua le operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A&gt;</ph> method to read a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> from the session cookie, if one is present.</source>
          <target state="translated">Richiama il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A&gt;</ph> metodo per leggere un <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> dal cookie di sessione, se presente.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>If a session security token cannot be read (most likely because a session has not been established), return.</source>
          <target state="translated">Se una sessione non può essere token di sicurezza (probabilmente perché non è stata stabilita una sessione), lettura restituito.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A&gt;</ph> method to raise the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event.</source>
          <target state="translated">Richiama il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A&gt;</ph> metodo per generare il <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This provides an opportunity for the token read from the cookie to be modified or for the request to be canceled.</source>
          <target state="translated">Ciò fornisce una possibilità per il token letto dal cookie da modificare o per la richiesta deve essere annullato.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The handler can also specify that the token should be reissued, by setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Il gestore può inoltre specificare che il token deve essere riemesso, impostando il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>If the token is to be reissued, removes it from the cache and invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A&gt;</ph> method to raise the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event.</source>
          <target state="translated">Se il token deve essere riemesso, rimuoverlo dalla cache e richiama il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A&gt;</ph> metodo per generare il <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This provides opportunity for the token to again be modified.</source>
          <target state="translated">Questo offre l'opportunità per il token nuovo da modificare.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The reissue behavior can also be modified by setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType&gt;</ph> property in the event handler.</source>
          <target state="translated">Il comportamento di eseguire nuovamente può anche essere modificato impostando la <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType&gt;</ph> proprietà nel gestore eventi.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method to authenticate the user.</source>
          <target state="translated">Richiama il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> metodo di autenticazione dell'utente.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>If successful, this has the effect of setting the <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> property to the principal that is contained in the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=nameWithType&gt;</ph> property of the incoming token.</source>
          <target state="translated">Se ha esito positivo, questo ha l'effetto dell'impostazione di <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> proprietà per l'entità che è contenuto nel <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=nameWithType&gt;</ph> proprietà del token in ingresso.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>If the session has expired, invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method.</source>
          <target state="translated">Se la sessione è scaduta, richiama il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method is added to the handlers for the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> event in the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> metodo viene aggiunto per i gestori per il <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> evento nel <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">Non c'è un gestore del token di sessione valido configurato.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(Nessun <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configurato nella proprietà <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The source for the event.</source>
          <target state="translated">Origine dell'evento.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This will be an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> object.</source>
          <target state="translated">Deve essere un oggetto <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dati per l'evento.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Handles the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event from the <ph id="ph2">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> pipeline.</source>
          <target state="translated">Gestisce l'evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> dalla pipeline <ph id="ph2">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The default implementation is empty.</source>
          <target state="translated">L'implementazione predefinita è vuota.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph> handler is added to the handlers for the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType&gt;</ph> event in the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph> gestore viene aggiunto per i gestori per il <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType&gt;</ph> evento nel <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dati per l'evento.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method.</source>
          <target state="translated">Chiamato dal <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dati per l'evento.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method.</source>
          <target state="translated">Chiamato dal <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dati per l'evento.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)">
          <source>This method is invoked from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method after the sign-out has been performed and the session cookie has been deleted.</source>
          <target state="translated">Questo metodo viene richiamato il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metodo dopo la disconnessione è stata eseguita e il cookie di sessione è stato eliminato.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dati per l'evento.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)">
          <source>This method is invoked from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method to perform sign-out. It is invoked before the session cookie is deleted.</source>
          <target state="translated">Questo metodo viene richiamato il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metodo per eseguire una disconnessione. Viene richiamato prima che venga eliminato il cookie di sessione.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dati per l'evento.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)">
          <source>This method is invoked from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method if an error occurs during sign-out.</source>
          <target state="translated">Questo metodo viene richiamato il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metodo se si verifica un errore durante la disconnessione.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>The cookie, in raw form, that contains the session token.</source>
          <target state="translated">Il cookie, in formato non elaborato, che contiene il token della sessione.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>Reads a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from the specified session cookie.</source>
          <target state="translated">Legge un oggetto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> dal cookie di sessione specificato.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>The session token that was read from the cookie.</source>
          <target state="translated">Token della sessione letto dal cookie.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">Non c'è un gestore del token di sessione valido configurato.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(Nessun <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configurato nella proprietà <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>Occurs when a session security token has been created.</source>
          <target state="translated">Si verifica quando viene creato un token di sicurezza della sessione.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>You can use this event to modify the session security token before it is written to a cookie.</source>
          <target state="translated">È possibile utilizzare questo evento per modificare il token di sicurezza della sessione prima che venga scritto in un cookie.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event is raised from within the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method after a session token (<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) has been created.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> evento viene generato dall'interno di <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> metodo dopo un token di sessione (<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) è stato creato.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>This happens, for example, if an event handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event modifies the token.</source>
          <target state="translated">Ciò si verifica, ad esempio, se un gestore eventi per il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> evento modifica il token.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).</source>
          <target state="translated">È possibile utilizzare questo evento per modificare le proprietà del token di sessione prima di essere passato ulteriore lungo la pipeline e viene usato per autenticare l'entità che effettua la richiesta (utente).</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>In an event handler, you can access the token through the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">In un gestore eventi, è possibile accedere il token tramite il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>After modifying the token, you can ensure that it is written back to the cookie by setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Dopo aver modificato il token, è possibile assicurarsi che si è scritti nuovamente nel cookie impostando il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType&gt;</ph> proprietà <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>Unlike, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event, <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> is not a cancelable event.</source>
          <target state="translated">A differenza di, il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> evento <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> non è un evento annullabile.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">Nel codice seguente viene illustrato un gestore per il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> evento implementato nel file global.asax.cs di un'applicazione web ASP.NET.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>You must also add the handler to the event.</source>
          <target state="translated">È inoltre necessario aggiungere il gestore per l'evento.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">Cui è riportato un esempio più completo di <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> argomento introduttivo.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>Occurs when a session security token has been read from a cookie.</source>
          <target state="translated">Si verifica quando un token di sicurezza della sessione è stato letto da un cookie.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event is raised from within the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method after a session token (<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) has been successfully read from the session cookie.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> evento viene generato dall'interno di <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> metodo dopo un token di sessione (<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) è stato letto dal cookie di sessione.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).</source>
          <target state="translated">È possibile utilizzare questo evento per modificare le proprietà del token di sessione prima di essere passato ulteriore lungo la pipeline e viene usato per autenticare l'entità che effettua la richiesta (utente).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>One of the most common scenarios involves modifying the session expiration time (accessible through the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType&gt;</ph> property) to override the session expiration time set in configuration through the <ph id="ph2">`lifetime`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element.</source>
          <target state="translated">Uno degli scenari più comuni modificandone l'ora di scadenza della sessione (accessibile tramite il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType&gt;</ph> proprietà) per eseguire l'override l'ora di scadenza della sessione impostato nella configurazione tramite il <ph id="ph2">`lifetime`</ph> attributo del <bpt id="p1">[</bpt> <ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> elemento.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>By modifying this property on each request, you can implement a sliding session; that is, a session in which the lifetime is extended each time the user accesses the site.</source>
          <target state="translated">Modificando questa proprietà per ogni richiesta, è possibile implementare una sessione di scorrimento. una sessione in cui la durata viene esteso ogni ora, ovvero gli accessi utente del sito.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>In an event handler, you can access the token through the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">In un gestore eventi, è possibile accedere il token tramite il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>After modifying the token, you can ensure that it is written back to the cookie by setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Dopo aver modificato il token, è possibile assicurarsi che si è scritti nuovamente nel cookie impostando il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType&gt;</ph> a <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>Finally, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event is a cancelable event, and you can set the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt;</ph> to abort further processing of the request.</source>
          <target state="translated">Infine, il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> tratta di un evento annullabile, e che è possibile impostare il <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> proprietà del <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt;</ph> per interrompere un'ulteriore elaborazione della richiesta.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">Nel codice seguente viene illustrato un gestore per il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> evento implementato nel file global.asax.cs di un'applicazione web ASP.NET.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>You must also add the handler to the event.</source>
          <target state="translated">È inoltre necessario aggiungere il gestore per l'evento.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">Cui è riportato un esempio più completo di <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> argomento introduttivo.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The session token from which to set the principal.</source>
          <target state="translated">Token della sessione da cui impostare l'entità.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Sets the principal on the <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> to the principal that is contained in the specified session token.</source>
          <target state="translated">Imposta l'entità su <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> e su <ph id="ph2">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> sull'entità contenuta nel token di sessione specificato.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A&gt;</ph> method and sets the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph4">&lt;xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType&gt;</ph> using the identities that are returned.</source>
          <target state="translated">Richiama il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A&gt;</ph> (metodo) e imposta il <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> proprietà e <ph id="ph3">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> proprietà <ph id="ph4">&lt;xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType&gt;</ph> usando le identità che vengono restituite.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>This method is called from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>Occurs after the user is signed out.</source>
          <target state="translated">Si verifica dopo la disconnessione dell'utente.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>Raised from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method just after the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph> method is invoked.</source>
          <target state="translated">Generato dal <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metodo subito dopo il <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph> metodo viene richiamato.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>This event is not guaranteed to be called for every session.</source>
          <target state="translated">Questo evento non deve necessariamente essere chiamato per ogni sessione.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</source>
          <target state="translated">Ad esempio, possono eliminare i cookie sul lato client, in questo caso, questo evento non verrà mai generato perché non vi è alcun evento sul lato server per l'eliminazione della sessione.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">Nel codice seguente viene illustrato un gestore per il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&gt;</ph> evento implementato nel file global.asax.cs di un'applicazione web ASP.NET.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>You must also add the handler to the event.</source>
          <target state="translated">È inoltre necessario aggiungere il gestore per l'evento.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">Cui è riportato un esempio più completo di <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> argomento introduttivo.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>Occurs before deleting the sign-in session.</source>
          <target state="translated">Si verifica prima dell'eliminazione della sessione di accesso.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>Raised from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method just before the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph> method is invoked.</source>
          <target state="translated">Generato dal <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metodo appena prima di <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph> metodo viene richiamato.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>This event is not guaranteed to be called for every session.</source>
          <target state="translated">Questo evento non deve necessariamente essere chiamato per ogni sessione.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</source>
          <target state="translated">Ad esempio, possono eliminare i cookie sul lato client, in questo caso, questo evento non verrà mai generato perché non vi è alcun evento sul lato server per l'eliminazione della sessione.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">Nel codice seguente viene illustrato un gestore per il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&gt;</ph> evento implementato nel file global.asax.cs di un'applicazione web ASP.NET.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>You must also add the handler to the event.</source>
          <target state="translated">È inoltre necessario aggiungere il gestore per l'evento.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">Cui è riportato un esempio più completo di <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> argomento introduttivo.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>Signs the current user out and raises the associated events.</source>
          <target state="translated">Esegue l'uscita dell'utente corrente e genera gli eventi associati.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A&gt;</ph> methods to perform sign-out. If an exception occurs, the <ph id="ph4">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A&gt;</ph> method is invoked to raise the <ph id="ph5">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> event.</source>
          <target state="translated">Richiama il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A&gt;</ph> metodi per eseguire una disconnessione. Se si verifica un'eccezione, il <ph id="ph4">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A&gt;</ph> metodo viene richiamato per generare il <ph id="ph5">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>You can set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph> object passed into the event handler for this event to cancel the sign-out and prevent the exception from being propagated to the client.</source>
          <target state="translated">È possibile impostare il <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> proprietà del <ph id="ph2">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph> oggetto passato nel gestore eventi per questo evento per annullare il processo di disconnessione e impedire che l'eccezione viene propagata al client.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>You can override this method to add application-specific behavior.</source>
          <target state="translated">È possibile eseguire l'override di questo metodo per aggiungere un comportamento specifico dell'applicazione.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>The following code shows code for invoking the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method from a SignOut.aspx page (SignOut.aspx.cs) in an ASP.NET web application.</source>
          <target state="translated">Il codice seguente mostra il codice per richiamare il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metodo da una pagina SignOut (SignOut.aspx.cs) in un'applicazione web ASP.NET.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">Cui è riportato un esempio più completo di <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> argomento introduttivo.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>Occurs when there is an error during sign-out.</source>
          <target state="translated">Si verifica quando è presente un errore durante la disconnessione.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>Raised from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method when an error occurs during sign-out.</source>
          <target state="translated">Generato il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metodo quando si verifica un errore durante la disconnessione.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>In an event handler, you can get the exception that resulted in the event being raised from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">In un gestore eventi, è possibile ottenere l'eccezione che ha generato nell'evento viene generato il <ph id="ph1">&lt;xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>You can cancel further processing of the exception, which has the result of not propagating the exception to the client, by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">È possibile annullare un'ulteriore elaborazione dell'eccezione, che è il risultato di non propagare l'eccezione al client, impostando il <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> proprietà del <ph id="ph2">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph> a <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>This event is not guaranteed to be called for every session.</source>
          <target state="translated">Questo evento non deve necessariamente essere chiamato per ogni sessione.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</source>
          <target state="translated">Ad esempio, possono eliminare i cookie sul lato client, in questo caso, questo evento non verrà mai generato perché non vi è alcun evento sul lato server per l'eliminazione della sessione.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">Nel codice seguente viene illustrato un gestore per il <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> evento implementato nel file global.asax.cs di un'applicazione web ASP.NET.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>You must also add the handler to the event.</source>
          <target state="translated">È inoltre necessario aggiungere il gestore per l'evento.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">Cui è riportato un esempio più completo di <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> argomento introduttivo.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)">
          <source>When this method returns, contains the session security token that was read from the session cookie.</source>
          <target state="translated">Quando in questo metodo viene eseguita la restituzione, contiene il token di sicurezza della sessione letto dal cookie di sessione.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)">
          <source>Attempts to read a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from a session cookie and returns a value that indicates whether the session cookie was successfully read.</source>
          <target state="translated">Tenta di leggere un <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> da un cookie di sessione e restituisce un valore che indica se il cookie di sessione è stato letto correttamente.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the session cookie was successfully read from the request; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il cookie di sessione è stato correttamente letto dalla richiesta; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)">
          <source>Reads the cookie by using the cookie handler that is configured in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property and then invokes the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A&gt;</ph> method to read the token from the cookie.</source>
          <target state="translated">Legge il cookie utilizzando il gestore di cookie che è configurato nel <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> proprietà e quindi richiama il <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A&gt;</ph> metodo da cui leggere il token del cookie.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token to validate.</source>
          <target state="translated">Token da convalidare.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Validates the specified <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> and returns its identities.</source>
          <target state="translated">Convalida <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> specificato e ne restituisce le identità.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The collection of identities that are contained in the token.</source>
          <target state="translated">La raccolta di identità che sono contenute nel token.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>This method is called from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>It invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=nameWithType&gt;</ph> method of the configured session token handler to validate the token and extract its identities.</source>
          <target state="translated">Richiama il <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=nameWithType&gt;</ph> metodo del gestore del token di sessione configurata per convalidare il token ed estrarre le identità.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token has expired.</source>
          <target state="translated">Il token è scaduto.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token start time is not yet valid.</source>
          <target state="translated">L'ora di inizio del token non è ancora valida.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">Non c'è un gestore del token di sessione valido configurato.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(Nessun <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configurato nella proprietà <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The session security token to write.</source>
          <target state="translated">Token di sicurezza della sessione da scrivere.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Writes the specified <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> to a session cookie.</source>
          <target state="translated">Scrive il <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> specificato in un cookie di sessione.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Writes the cookie by using the cookie handler that is configured in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property.</source>
          <target state="translated">Scrive il cookie utilizzando il gestore di cookie che è configurato nel <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="sessionToken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sessionToken" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">Non c'è un gestore del token di sessione valido configurato.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(Nessun <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configurato nella proprietà <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph>.)</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>