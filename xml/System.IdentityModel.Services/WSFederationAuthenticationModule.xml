<Type Name="WSFederationAuthenticationModule" FullName="System.IdentityModel.Services.WSFederationAuthenticationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4946a226efb8c22b2cb54ac00bf7e2cedea35d6e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36558377" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WSFederationAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSFederationAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class WSFederationAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <TypeSignature Language="F#" Value="type WSFederationAuthenticationModule = class&#xA;    inherit HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>L'oggetto <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> è un modulo HTTP usato per proteggere un'applicazione ASP.NET applicando impostazioni di autenticazione federate alle richieste in ingresso. L'oggetto <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> è il modulo principale disponibile in WIF per la gestione dell'accesso per l'identità basata sulle attestazioni nelle applicazioni ASP.NET.  
  
L'oggetto <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> genera vari eventi, consentendo agli sviluppatori ASP.NET di modificare il comportamento predefinito e di controllare i dettagli relativi alla modalità di elaborazione delle attestazioni e dell'autenticazione. La funzionalità <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> è divisa in metodi specifici delle attività.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> classe implementa un modulo HTTP noto come il modulo di autenticazione WS-Federation (WSFAM). Il WSFAM viene implementato di cui viene fornita da Windows Identity Foundation (WIF). Il WSFAM viene aggiunto alla pipeline ASP.NET per la creazione di una voce nel file Web. config. Deriva da <xref:System.IdentityModel.Services.HttpModuleBase>, che implementa l'interfaccia <xref:System.Web.IHttpModule>. Registra con il runtime ASP.NET per l'ascolto per il <xref:System.Web.HttpApplication.EndRequest> e <xref:System.Web.HttpApplication.AuthenticateRequest> eventi. In attesa per il <xref:System.Web.HttpApplication.EndRequest> evento, consente il WSFAM reindirizza i client a un servizio token di sicurezza (STS) per ottenere un token di sicurezza quando si verifica un errore di autorizzazione su una risorsa richiesta. In attesa per il <xref:System.Web.HttpApplication.AuthenticateRequest> evento consente il WSFAM monitorare le richieste HTTP per una risposta dal servizio token di sicurezza che contiene il token richiesto. Quando un token di questo tipo è presente e valido, crea un'istanza di <xref:System.Security.Claims.ClaimsPrincipal> per l'utente autenticato mediante le attestazioni presenti nel token.  
  
 Quando si usa il WSFAM, gestione delle sessioni è fornita da un modulo di autenticazione della sessione (SAM), che è un'istanza del <xref:System.IdentityModel.Services.SessionAuthenticationModule> classe o una classe derivata da esso. Il modulo SAM viene inoltre aggiunto alla pipeline ASP.NET nel file di configurazione. Il modulo SAM monitora le richieste per i cookie di autenticazione (sessione). Quando questi cookie sono presente e valido, il modulo estrae il <xref:System.Security.Claims.ClaimsPrincipal> per l'utente autenticato dal <xref:System.IdentityModel.Tokens.SessionSecurityToken> e imposta la <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> proprietà e l'entità del thread <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> proprietà.  
  
 WSFAM fornisce:  
  
-   La possibilità per un'applicazione ASP.NET per l'outsourcing dell'autenticazione a un servizio token di sicurezza (STS) utilizzando il protocollo WS-Federation. Identità può essere federato tra uno o più aree di identità e interessare più servizi token di sicurezza.  
  
-   Identità basata sulle attestazioni per le applicazioni ASP.NET. Durante l'autenticazione, il WSFAM compila un'entità dalle attestazioni nel token di sicurezza inviato dal servizio token di sicurezza e imposta questa entità delle attestazioni come l'entità del thread. È quindi possibile utilizzare questo oggetto principal per apportare ulteriori decisioni per la logica sull'utente che esso rappresenta, presentazione e autorizzazione nel codice.  
  
 Il WSFAM espone diverse proprietà che forniscono i parametri di messaggio da utilizzare nelle richieste di accesso e disconnessione di WS-Federation predefinito. Queste proprietà sono in genere inizializzate dal [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elemento in un file di configurazione. La più importante di queste proprietà sono:  
  
-   Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà che specifica l'indirizzo del servizio token di sicurezza (STS) a cui inviare le richieste di accesso e disconnessione di WS-Federation.  
  
-   Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> proprietà che specifica il parametro wtrealm da utilizzare nelle richieste di accesso WS-Federation. Il parametro wtrealm identifica l'area di autenticazione di sicurezza dell'applicazione relying party (RP) al STS.  
  
 I parametri di messaggio di accesso possono essere modificati anche in ogni richiesta, fornendo un delegato del gestore eventi per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento.  
  
 Due proprietà controllano il comportamento del modulo. Entrambe queste proprietà sono inoltre in genere inizializzati dal `<wsFederation>` elemento nella configurazione.  
  
-   Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> proprietà specifica se il modulo deve eseguire reindirizzamenti passivi per il servizio token di sicurezza per l'autenticazione.  
  
-   Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects%2A> proprietà specifica se sessioni devono essere persistenti. Se questa proprietà è impostata su true, il modulo SAM consente di scrivere un cookie di sessione nel client. Nelle successive richieste dal client, il modulo SAM fornisce l'autenticazione usando il token persistenti nel cookie di sessione.  
  
 Il WSFAM genera vari eventi durante l'accesso e disconnessione, che consentono agli sviluppatori ASP.NET modificare il comportamento predefinito del modulo e controllare i dettagli di come l'autenticazione e l'elaborazione delle attestazioni si verificano.  
  
 Prima che la richiesta di accesso WS-Federation viene inviata al servizio token di sicurezza, vengono generati gli eventi seguenti:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>: Generato quando è abilitato il reindirizzamento passivo e autorizzazione ha esito negativo su una risorsa richiesta.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>: Generato subito prima il WSFAM invia la richiesta di accesso WS-Federation al servizio token di sicurezza. È possibile usare questo evento per modificare i parametri nella richiesta di accesso.  
  
 Quando viene ricevuta una risposta di accesso (token di sicurezza rilasciata) dal servizio token di sicurezza, vengono generati gli eventi seguenti:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>: Generato immediatamente dopo il token di sicurezza inviato dal servizio token di sicurezza viene letto dalla risposta.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>: Generato immediatamente dopo il token è stato convalidato. È possibile usare questo evento da filtrare, trasformare o aggiungere attestazioni per l'entità delle attestazioni (<xref:System.Security.Claims.ClaimsPrincipal>) creato dal token di sicurezza.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>: Generato appena prima che il token di sessione (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) creato dall'entità viene usata per impostare il thread principale delle attestazioni e l'utente corrente e viene scritto il cookie di sessione. Offre la possibilità di modificare il token di sessione o abilitare o disabilitare la scrittura il cookie di sessione.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>: Generato al termine dell'autenticazione solo dopo che l'utente corrente e dell'entità del thread sono state impostate.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError>: Se si verifica un'eccezione durante l'accesso generato. È possibile annullare la richiesta e impedisce all'eccezione venga restituita al chiamante.  
  
 Quando si accede all'esterno di una sessione o durante l'elaborazione di una richiesta di pulizia disconnessione WS-Federation (wsignoutcleanup1.0), vengono generati gli eventi seguenti:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>: Generato immediatamente prima che la sessione viene eliminata per consentire di eseguire la pulizia che potrebbe dipendere la sessione o di annullare disconnessione.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>: Generato subito dopo la sessione è stata eliminata.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>: Se si verifica un'eccezione durante la disconnessione generata. Annullare la disconnessione e impedire l'eccezione venga restituita al chiamante.  
  
> [!NOTE]
>  Gli eventi di disconnessione non vengono generati quando la disconnessione al servizio token di sicurezza mediante la chiamata di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (metodo).  
  
 Esistono due modi per accedere a un servizio token di sicurezza usando WSFAM. Il primo prevede l'abilitazione di reindirizzamenti passivi tramite il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> proprietà. In questo caso, quando autorizzazione ha esito negativo su una risorsa richiesta, invece di restituire un `401:Access Denied` risposta al client, WSFAM compila un messaggio di richiesta di accesso WS-Federation dalle relative proprietà e reindirizza il client al servizio token di sicurezza per recuperare un token di sicurezza. Il secondo consiste in modo esplicito reindirizza il client al servizio STS chiamando il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metodo da una pagina web o di un controllo personalizzato nell'applicazione. Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metodo Usa anche le proprietà del WSFAM per costruire la richiesta di accesso.  
  
 Uno qualsiasi di overload <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> metodi possono essere utilizzati per uscire dalla sessione. Questa procedura elimina il cookie di sessione nel client. Viene inviato un messaggio di disconnessione WS-Federation ("wsignout1.0") al servizio token di sicurezza. Per la disconnessione al servizio token di sicurezza, è necessario usare il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (metodo).  
  
 Il WSFAM gestisce richieste di pulizia disconnessione WS-Federation ("wsignoutcleanup1.0"), l'eliminazione di una sessione con il client. Se il parametro wreply nel messaggio di pulizia di disconnessione non è impostato, il WSFAM restituisce un'immagine del segno di spunta verde per il servizio token di sicurezza che ha inviato il messaggio. Questa funzionalità è utilizzabile da un servizio token di sicurezza come un riconoscimento che l'applicazione relying Party è stata completata la disconnessione.  
  
 Il WSFAM espone le proprie funzionalità: ad esempio, la pipeline di elaborazione richiesta: tramite alcuni metodi specifici delle attività. È possibile eseguire l'override di questi metodi nelle classi derivate per modificare il comportamento del WSFAM.  
  
 Per essere utilizzato, il modulo deve essere aggiunto alla pipeline come illustrato nel codice XML seguente:  
  
```  
<configuration>  
  <system.webServer>  
    <modules>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 Una volta configurato, il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> genera eventi in diverse fasi di elaborazione di una richiesta HTTP. Gli sviluppatori ASP.NET possono gestire questi eventi nel file Global. asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Chiamato dai costruttori nelle classi derivate per inizializzare la classe <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore del parametro wauth da usare nelle richieste di accesso WS-Federation ("wsignin1.0").</summary>
        <value>URI che specifica il tipo di autenticazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il parametro wauth è facoltativo. Se il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType%2A> è impostata su `null` oppure una stringa vuota, il parametro wauth non è incluso nella richiesta di accesso.  
  
 È possibile eseguire l'override di questa impostazione per ogni richiesta HTTP mediante l'aggiunta di un gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento. Questo evento viene generato appena prima che il modulo di reindirizzamento al servizio token di sicurezza (STS) con un messaggio di richiesta di accesso WS-Federation. Il servizio token di sicurezza specificato da di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorizationFailed As EventHandler(Of AuthorizationFailedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::AuthorizationFailedEventArgs ^&gt; ^ AuthorizationFailed;" />
      <MemberSignature Language="F#" Value="member this.AuthorizationFailed : EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " Usage="member this.AuthorizationFailed : System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il modulo determina se l'utente deve essere reindirizzato all'emittente configurato per l'autenticazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> evento viene generato quando l'autorizzazione non è riuscita per una richiesta HTTP. Viene generato dall'interno di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegato del gestore eventi tramite una chiamata al <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed%2A> (metodo).  
  
 È possibile impostare il <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> proprietà per controllare se la richiesta viene reindirizzata al provider di identità. Il framework di questa proprietà viene inizializzata a `false` se l'utente è già stato autenticato. In questo caso, impostare la proprietà su `true` può causare un ciclo circolare con il servizio token di sicurezza.  
  
> [!NOTE]
>  Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento può essere utilizzato per modificare l'URL o annullare il reindirizzamento.  
  
 Per gestire questo evento in un'applicazione ASP.NET, creare un metodo denominato `WSFederationAuthentication_AuthorizationFailed` nel file Global. asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadSignInResponse">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un valore che indica se la richiesta HTTP specificata è un messaggio di risposta di accesso a WS-Federation. Se il messaggio è un messaggio di pulizia di disconnessione WS-Federation ("wsignoutcleanup1.0"), questo metodo elabora la richiesta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene inviato un messaggio di risposta di accesso alla relying party (RP) da un servizio token di sicurezza (STS) in risposta a un messaggio di richiesta di accesso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public bool CanReadSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="member this.CanReadSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Richiesta HTTP in ingresso.</param>
        <summary>Restituisce un valore che indica se la richiesta HTTP specificata è un messaggio di risposta di accesso a WS-Federation. Se il messaggio è un messaggio di pulizia di disconnessione WS-Federation ("wsignoutcleanup1.0"), questo metodo elabora la richiesta.</summary>
        <returns>
          <see langword="true" /> se la richiesta HTTP specificata contiene un POST per il form in cui il parametro wa viene impostato su "wsignout1.0" e il parametro wresult non è vuoto, in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato dalla pipeline di elaborazione richiesta per determinare se la richiesta HTTP in ingresso è un post dei FORM che contiene un messaggio di risposta di accesso WS-Federation.  
  
 Richiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> rapporto di overload con il `onPage` set di parametri `false` per indicare che la chiamata non è stato originato durante l'elaborazione di una pagina.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool CanReadSignInResponse (System.Web.HttpRequestBase request, bool onPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request, bool onPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadSignInResponse (request As HttpRequestBase, onPage As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request, bool onPage);" />
      <MemberSignature Language="F#" Value="abstract member CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool&#xA;override this.CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse (request, onPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
        <Parameter Name="onPage" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">Richiesta HTTP in ingresso.</param>
        <param name="onPage">
          <see langword="true" /> se la chiamata viene generata durante l'elaborazione di una richiesta di pagina. <see langword="false" /> se il chiamante è un modulo HTTP. Questo parametro determina come terminare l'elaborazione o inviare reindirizzamenti se il messaggio in arrivo è un messaggio di pulizia di disconnessione WS-Federation ("wsignoutcleanup1.0").</param>
        <summary>Restituisce un valore che indica se la richiesta HTTP specificata è un messaggio di risposta di accesso a WS-Federation. Se il messaggio è un messaggio di pulizia di disconnessione WS-Federation ("wsignoutcleanup1.0"), questo metodo elabora la richiesta.</summary>
        <returns>
          <see langword="true" /> se la richiesta HTTP specificata contiene un POST per il form in cui il parametro wa viene impostato su "wsignout1.0" e il parametro wresult non è vuoto, in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato dalla pipeline di elaborazione della richiesta tramite il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> overload per determinare se la richiesta HTTP in ingresso è un modulo POST che contiene un messaggio di risposta di accesso WS-Federation.  
  
 L'implementazione predefinita esegue le operazioni seguenti:  
  
-   Se la richiesta in ingresso contiene un POST del form, verrà chiamata la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse%2A> metodo per determinare se il form POST contiene una risposta di accesso.  
  
-   Se la richiesta in ingresso non è un POST del form e la richiesta contiene una richiesta di pulizia disconnessione WS-Federation (il parametro wa viene "wsignoutcleanup1.0"), disconnessione viene eseguita la correzione. In questo caso, il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metodo viene richiamato (con il parametro impostato su `true` per indicare una pulizia Sign-Out) a disconnette la sessione. In questo modo anche gli eventi di disconnessione da generare.  
  
     Successivamente, se la richiesta di pulizia di disconnessione contiene un parametro wreply, il client viene reindirizzato all'URL restituito dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl%2A> metodo; in caso contrario, un'immagine del segno di spunta verde viene restituita al servizio token di sicurezza. La ricezione di questa immagine è utilizzabile dal servizio token di sicurezza come un messaggio di conferma che la richiesta di pulizia di disconnessione è stata ricevuta ed elaborata correttamente dalla relying Party.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSignInRequest">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest (string uniqueId, string returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest(string uniqueId, string returnUrl, bool rememberMeSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignInRequest (uniqueId As String, returnUrl As String, rememberMeSet As Boolean) As SignInRequestMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::SignInRequestMessage ^ CreateSignInRequest(System::String ^ uniqueId, System::String ^ returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="F#" Value="member this.CreateSignInRequest : string * string * bool -&gt; System.IdentityModel.Services.SignInRequestMessage" Usage="wSFederationAuthenticationModule.CreateSignInRequest (uniqueId, returnUrl, rememberMeSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="rememberMeSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">Il modulo WSFAM salva questo valore nel parametro wctx nella richiesta di accesso WS-Federation; tuttavia non lo utilizza quando elabora le richieste o le risposte di accesso. È possibile impostarlo su qualsiasi valore. Non deve essere necessariamente univoco.</param>
        <param name="returnUrl">URL cui deve tornare il modulo dopo l'autenticazione.</param>
        <param name="rememberMeSet">Il modulo WSFAM salva questo valore nel parametro wctx nella richiesta di accesso WS-Federation; tuttavia non lo utilizza quando elabora le richieste o le risposte di accesso. È possibile impostarlo su <see langword="true" /> o <see langword="false" />.</param>
        <summary>Crea un messaggio di richiesta di accesso di WS-Federation utilizzando i parametri di WS-Federation configurati nel modulo.</summary>
        <returns>Messaggio di richiesta di accesso WS-Federation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crea una richiesta di accesso di WS-Federation è rappresentata da un <xref:System.IdentityModel.Services.SignInRequestMessage> oggetto. Le proprietà del nuovo <xref:System.IdentityModel.Services.SignInRequestMessage> oggetto vengono impostate come indicato di seguito:  
  
-   Il <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A> proprietà (il parametro wctx) è impostata su un valore creato usando i parametri del metodo.  
  
-   Il <xref:System.IdentityModel.Services.SignInRequestMessage.CurrentTime%2A> (il parametro di wct) viene impostata sull'ora corrente.  
  
-   Tutte le altre proprietà vengono impostate usando le proprietà equivalenti dell'istanza corrente.  
  
 I parametri passati al metodo vengono utilizzati per creare il parametro wctx del messaggio. Questa è una stringa con il formato seguente: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`.  
  
-   Il `ru` valore è impostato sul valore della `returnUrl` parametro passato al metodo e specifica l'URL che il modulo deve indicare al browser di autenticazione seguente. Questo è l'unico valore archiviato nella stringa di wctx che viene usata il wsfam. Le chiamate di modulo di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> metodo per estrarre il valore dal parametro wctx durante l'elaborazione di una risposta di accesso WS-Federation. Non deve essere confuso con il parametro messaggio wreply specificato mediante il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> proprietà e che fornisce l'indirizzo di relying Party a cui il servizio token di sicurezza (STS) dovrà indirizzare la relativa risposta.  
  
-   Il `cx` parametro è impostato sul valore della <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> proprietà. Questa proprietà viene esposta per consentire di impostare qualsiasi contesto definito dall'applicazione che deve essere archiviato nella stringa di wctx. Tuttavia, WSFAM non espone un metodo per estrarre il valore nella risposta. Se il valore è richiesto dall'applicazione, è necessario fornire il codice per analizzare la stringa wctx e legge questo valore quando l'elaborazione della risposta. È possibile farlo eseguendo l'override di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> (metodo).  
  
-   Né il `rm` valore, che viene impostata sul valore della `rememberMeSet` parametro, né la `id` parametro, che viene impostata sul valore del `uniqueId` parametro vengono utilizzati da WSFAM. È possibile impostarli su qualsiasi valore.  
  
 Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metodo viene chiamato dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> è <see langword="null" /> o una stringa vuota.  
  
oppure 
La proprietà <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> è <see langword="null" /> o una stringa vuota.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FederatedSignOut">
      <MemberSignature Language="C#" Value="public static void FederatedSignOut (Uri signOutUrl, Uri replyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FederatedSignOut(class System.Uri signOutUrl, class System.Uri replyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FederatedSignOut (signOutUrl As Uri, replyUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FederatedSignOut(Uri ^ signOutUrl, Uri ^ replyUrl);" />
      <MemberSignature Language="F#" Value="static member FederatedSignOut : Uri * Uri -&gt; unit" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut (signOutUrl, replyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutUrl" Type="System.Uri" />
        <Parameter Name="replyUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signOutUrl">URL del servizio token di sicurezza per ricevere il messaggio di richiesta di disconnessione WS-Federation. Non può essere <see langword="null" />.</param>
        <param name="replyUrl">URL da inviare come valore wreply nel messaggio di richiesta di disconnessione.</param>
        <summary>Esce dal servizio token di sicurezza specificato (STS) utilizzando il protocollo WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo per inviare un messaggio di richiesta di disconnessione WS-Federation per il servizio token di sicurezza specificato. È possibile fornire facoltativamente un valore per il parametro wreply nella richiesta di disconnessione.  
  
 Il metodo esegue le operazioni seguenti:  
  
1.  Crea un messaggio di richiesta di disconnessione WS-Federation utilizzando i parametri specificati.  
  
2.  Le chiamate di <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> metodo su SAM per eliminare il cookie di sessione.  
  
3.  Effettua il reindirizzamento al servizio token di sicurezza utilizzando il messaggio di richiesta di disconnessione dal primo passaggio.  
  
 Nessuno degli eventi di disconnessione: <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>, o <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> vengono generati da questo metodo. Per eliminare la sessione senza inviare un messaggio di richiesta di disconnessione al servizio token di sicurezza, chiamare uno degli overload <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> metodi.  
  
> [!NOTE]
>  Per eseguire disconnessione passiva con il token di sessione, il modulo si basa su un valore che è stato archiviato nel <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> proprietà durante l'accesso, per altre informazioni, vedere il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="signOutUrl" /> non è <see langword="null" /> e non è un URI assoluto.  
  
oppure 
 <paramref name="replyUrl" /> non è <see langword="null" /> e non è un URI assoluto.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="signOutUrl" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      </Docs>
    </Member>
    <Member MemberName="Freshness">
      <MemberSignature Language="C#" Value="public string Freshness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Freshness" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberSignature Language="VB.NET" Value="Public Property Freshness As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Freshness { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Freshness : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore del parametro wfresh da usare nelle richieste di accesso WS-Federation ("wsignin1.0").</summary>
        <value>La durata massima desiderata delle richieste di autenticazione, in minuti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il parametro wfresh è facoltativo. Se il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness%2A> è impostata su `null` oppure una stringa vuota, il parametro wfresh non è incluso nella richiesta di accesso.  
  
 È possibile eseguire l'override di questa impostazione per ogni richiesta HTTP mediante l'aggiunta di un gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento. Questo evento viene generato appena prima che il modulo di reindirizzamento al servizio token di sicurezza (STS) con un messaggio di richiesta di accesso WS-Federation. Il servizio token di sicurezza specificato da di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFederationPassiveSignOutUrl">
      <MemberSignature Language="C#" Value="public static string GetFederationPassiveSignOutUrl (string issuer, string signOutReply, string signOutQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFederationPassiveSignOutUrl(string issuer, string signOutReply, string signOutQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFederationPassiveSignOutUrl (issuer As String, signOutReply As String, signOutQueryString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFederationPassiveSignOutUrl(System::String ^ issuer, System::String ^ signOutReply, System::String ^ signOutQueryString);" />
      <MemberSignature Language="F#" Value="static member GetFederationPassiveSignOutUrl : string * string * string -&gt; string" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl (issuer, signOutReply, signOutQueryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="signOutReply" Type="System.String" />
        <Parameter Name="signOutQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuer">Indirizzo dell'emittente. L'indirizzo del servizio token di sicurezza (STS) a cui indirizzare la richiesta.</param>
        <param name="signOutReply">URL che specifica l'indirizzo da restituire dopo la disconnessione. Ciò consente di impostare il parametro wreply nella richiesta di disconnessione. Può essere <see langword="null" /> o vuoto se non è necessario includere un parametro wreply alla richiesta di disconnessione generata. Deve trattarsi di un URI assoluto.</param>
        <param name="signOutQueryString">Parametri aggiuntivi della stringa di query da includere nella richiesta di disconnessione. Può essere <see langword="null" /> o vuoto se non esistono parametri aggiuntivi da includere alla richiesta di disconnessione generata. Deve essere un URI relativo.</param>
        <summary>Restituisce un URL che rappresenta una richiesta di disconnessione WS-Federation indirizzata all'autorità emittente specificata e che contiene il parametro wreply specificato e i parametri aggiuntivi specificati.</summary>
        <returns>URL che contiene una richiesta di disconnessione passiva WS-Federation creata utilizzando i parametri specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nell'URL restituito: la base URI è impostato su `issuer`; il parametro wa viene impostato su "wsignout1.0"; il parametro wreply è impostato su `signOutReply`; e i parametri specificati in `signOutQueryString` sono presenti parametri di stringa di query aggiuntive.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuer" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedResult">
      <MemberSignature Language="C#" Value="protected virtual string GetReferencedResult (string resultPtr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReferencedResult(string resultPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReferencedResult (resultPtr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReferencedResult(System::String ^ resultPtr);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedResult : string -&gt; string&#xA;override this.GetReferencedResult : string -&gt; string" Usage="wSFederationAuthenticationModule.GetReferencedResult resultPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultPtr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultPtr">URL che specifica l'indirizzo del risultato dell'emissione.</param>
        <summary>Ottiene il risultato del rilascio (in genere il token pubblicato) dall'URL specificato. Risolve l'URL specificato nel parametro wresultptr in un messaggio di risposta di accesso.</summary>
        <returns>Il risultato dell'invio a cui fa riferimento l'URL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamato dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> metodo dall'interno la pipeline di elaborazione per risolvere l'URL specificato nel parametro wresultptr nel messaggio di risposta di accesso ricevuto da un servizio token di sicurezza (STS).  
  
 Per impostazione predefinita, questo metodo genera un <xref:System.NotSupportedException>. L'override del metodo in una classe derivata per supportare il parametro wresultptr. L'URL che punta al risultato di rilascio, che deve essere uno dei seguenti: una `<wst:RequestSecurityTokenResponse>` elemento, un `<wst:RequestSecurityTokenResponseCollection>` elemento, una risposta SOAP o una SOAP `<S:Fault>` elemento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Questo metodo non è supportato nella classe base. Occorre eseguirne l'override in una classe derivata.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnUrlFromResponse">
      <MemberSignature Language="C#" Value="protected virtual string GetReturnUrlFromResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReturnUrlFromResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReturnUrlFromResponse (request As HttpRequestBase) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReturnUrlFromResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string&#xA;override this.GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string" Usage="wSFederationAuthenticationModule.GetReturnUrlFromResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">La richiesta HTTP che contiene un POST del form, che contiene il messaggio di risposta di accesso WS-Federation.</param>
        <summary>Estrae l'URL della pagina originariamente richiesta dalla risposta di accesso.</summary>
        <returns>L'URL della pagina richiesto originariamente dal cliente. Si tratta dell'URL (nel relying party) al quale deve essere reindirizzato il client dopo aver eseguito l'accesso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dalla pipeline di elaborazione della richiesta (il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> (metodo)) per ottenere l'URL della pagina nella relying party (RP) per indirizzare il client dopo l'accesso ha esito positivo. Si tratta, in genere, l'URL della risorsa della relying Party a cui il client ha richiesto originariamente accesso.  
  
 Per impostazione predefinita, WSFAM Salva l'URL restituito all'interno del parametro di messaggio wctx quando invia la richiesta di accesso WS-Federation al servizio token di sicurezza (STS). Conforme alla specifica WS-Federation, il parametro wctx viene mantenuto tra le entità attraverso cui passa il messaggio e viene restituito invariato nel messaggio di risposta di accesso WS-Federation che viene inviato dal servizio token di sicurezza.  
  
 L'implementazione predefinita recupera l'URL restituito dal parametro wctx la risposta di accesso. Per altre informazioni sul formato del parametro wctx usato da WSFAM, vedere il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSecurityToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legge un token di sicurezza dalla richiesta specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (message As SignInResponseMessage) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio di risposta di accesso da cui leggere il token.</param>
        <summary>Legge un token di sicurezza dal messaggio di risposta di accesso specificato di WS Federation.</summary>
        <returns>Token di sicurezza letto dal messaggio.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita richiama la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%2CSystem.IdentityModel.Services.WSFederationSerializer%29?displayProperty=nameWithType> metodo per ottenere il token e li legge tramite il gestore appropriato dai gestori di token di sicurezza configurati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (request As HttpRequestBase) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Richiesta HTTP da cui leggere il token.</param>
        <summary>Legge un token di sicurezza dalla richiesta HTTP specificata.</summary>
        <returns>Token di sicurezza letto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamato dalla pipeline di elaborazione richiesta per ottenere il messaggio di richiesta di accesso WS-Federation come un <xref:System.IdentityModel.Tokens.SecurityToken> oggetto.  
  
 L'implementazione predefinita richiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage%2A> metodo per ottenere un <xref:System.IdentityModel.Services.SignInResponseMessage> dell'oggetto e quindi richiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> rapporto di overload.  
  
 Usare una classe derivata per interpretare un tipo specifico della richiesta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSessionTokenContext">
      <MemberSignature Language="C#" Value="protected virtual string GetSessionTokenContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSessionTokenContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSessionTokenContext () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSessionTokenContext();" />
      <MemberSignature Language="F#" Value="abstract member GetSessionTokenContext : unit -&gt; string&#xA;override this.GetSessionTokenContext : unit -&gt; string" Usage="wSFederationAuthenticationModule.GetSessionTokenContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene una stringa che deve essere mantenuta con il cookie di sessione nella proprietà <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />.</summary>
        <returns>La stringa da salvare in modo permanente in un cookie di sessione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> metodo viene chiamato dalla pipeline di elaborazione richieste durante l'elaborazione di un messaggio di risposta di accesso WS-Federation per ottenere il valore da archiviare nel <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> proprietà all'interno di cookie di sessione.  
  
 È possibile eseguire l'override di questo metodo per fornire un valore specifico dell'applicazione da archiviare nel cookie. WSFAM non espone alcun metodo per recuperare il valore del cookie. È necessario fornire la logica dell'applicazione per leggere il valore nuovamente dal cookie, se necessario.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La proprietà <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> è <see langword="null" />.</exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      </Docs>
    </Member>
    <Member MemberName="GetSignInResponseMessage">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignInResponseMessage (request As HttpRequestBase) As SignInResponseMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Services::SignInResponseMessage ^ GetSignInResponseMessage(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage&#xA;override this.GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage" Usage="wSFederationAuthenticationModule.GetSignInResponseMessage request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Richiesta HTTP da cui leggere il messaggio di risposta di accesso. La richiesta deve rappresentare un POST dei form.</param>
        <summary>Legge un oggetto <see cref="T:System.IdentityModel.Services.SignInResponseMessage" /> dal POST per il form rappresentato dalla richiesta HTTP specificata.</summary>
        <returns>Messaggio di risposta di accesso creato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamato dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> metodo nella pipeline di elaborazione della richiesta per ottenere un messaggio di risposta di accesso dal form contenuto nella richiesta HTTP POST.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Un messaggio di risposta di accesso non può essere letto dalla richiesta specificata.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignOutRedirectUrl">
      <MemberSignature Language="C#" Value="protected virtual string GetSignOutRedirectUrl (System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSignOutRedirectUrl(class System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSignOutRedirectUrl (signOutMessage As SignOutCleanupRequestMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSignOutRedirectUrl(System::IdentityModel::Services::SignOutCleanupRequestMessage ^ signOutMessage);" />
      <MemberSignature Language="F#" Value="abstract member GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string&#xA;override this.GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetSignOutRedirectUrl signOutMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutMessage" Type="System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </Parameters>
      <Docs>
        <param name="signOutMessage">Richiesta di pulizia di disconnessione.</param>
        <summary>Determinare l'URL a cui reindirizzare durante l'elaborazione di una richiesta di pulizia su disconnessione WS-Federation (wsignoutcleanup1.0) contenente un parametro wreply.</summary>
        <returns>URL di destinazione del reindirizzamento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> metodo nella pipeline di elaborazione della richiesta per determinare l'URL per reindirizzare a dopo l'elaborazione di una richiesta pulizia di disconnessione WS-Federation. Viene richiamato solo se il messaggio ha un parametro wreply (il `signOutMessage` il parametro ha un <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A> proprietà che non è né `null` né vuoto).  
  
 L'URL di risposta contenuta nel messaggio di convalida l'implementazione predefinita (il <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A?displayProperty=nameWithType> proprietà) l'indirizzo del servizio token di sicurezza (STS) specificato da di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà. Le condizioni seguenti devono essere true per l'URL di risposta sia valido:  
  
1.  L'URL di risposta è un URL assoluto.  
  
2.  L'URL di risposta ha lo stesso schema come autorità di certificazione.  
  
3.  L'URL di risposta con la stessa porta come autorità di certificazione.  
  
4.  L'URL di risposta ha lo stesso host come autorità di certificazione o l'URL di risposta specifica un sottodominio dell'autorità emittente.  
  
 Se tutte le condizioni seguenti sono true, che verrà restituito l'URL di risposta (risposta). in caso contrario, l'URL specificato per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà viene restituita.  
  
 Eseguire l'override di questo metodo per fornire convalida aggiuntiva per l'URL di risposta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="signOutMessage" /> presenta una proprietà <see cref="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" /> di tipo <see langword="null" /> o vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signOutMessage" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlTokenFromMessage">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Estrae il token emesso dal messaggio di risposta di accesso specificato di WS Federation.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio di risposta di accesso da cui estrarre il token. La risposta di accesso contiene il token generato dal servizio token di sicurezza.</param>
        <summary>Estrae il token emesso dal messaggio di risposta di accesso specificato di WS Federation.</summary>
        <returns>Stringa che contiene l'XML che rappresenta il token pubblicato. Questo è un elemento <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è disponibile alcun parametro wresult nel messaggio di risposta di accesso, il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult%2A> metodo viene chiamato per tentare di ottenere il token usando il parametro wresultptr.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il parametro <paramref name="message" /> non contiene un token. (Non contiene un parametro wresultptr o wresult valido).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage, federationSerializer As WSFederationSerializer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message, System::IdentityModel::Services::WSFederationSerializer ^ federationSerializer);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage (message, federationSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio di risposta di accesso da cui estrarre il token. La risposta di accesso contiene il token generato dal servizio token di sicurezza.</param>
        <param name="federationSerializer">Il serializzatore WS-Federation da utilizzare per deserializzare il messaggio di risposta di accesso.</param>
        <summary>Estrae il token rilasciato dal messaggio di risposta di accesso a WS-Federation specificato utilizzando il serializzatore WS- Federation specificato.</summary>
        <returns>Stringa che contiene l'XML che rappresenta il token pubblicato. Questo è un elemento <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HomeRealm">
      <MemberSignature Language="C#" Value="public string HomeRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HomeRealm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRealm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HomeRealm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HomeRealm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore del parametro whr da usare nelle richieste di accesso WS-Federation ("wsignin1.0").</summary>
        <value>Indirizzo del provider di identità.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il parametro whr è facoltativo. Se il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm%2A> è impostata su `null` oppure una stringa vuota, il parametro whr non è incluso nella richiesta di accesso.  
  
 È possibile eseguire l'override di questa impostazione per ogni richiesta HTTP mediante l'aggiunta di un gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento. Questo evento viene generato appena prima che il modulo di reindirizzamento al servizio token di sicurezza (STS) con un messaggio di richiesta di accesso WS-Federation. Il servizio token di sicurezza specificato da di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberSignature Language="F#" Value="override this.InitializeModule : System.Web.HttpApplication -&gt; unit" Usage="wSFederationAuthenticationModule.InitializeModule context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context">Applicazione HTTP che contiene il modulo.</param>
        <summary>Inizializza il modulo e lo prepara alla gestione di eventi dal relativo oggetto applicazione di [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] del modulo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aggiunge i gestori per gli eventi della pipeline ASP.NET in base alla tabella riportata di seguito.  
  
|event|Gestore|  
|-----------|-------------|  
|<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>|  
|<xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>|  
|<xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest%2A>|  
  
> [!NOTE]
>  Le proprietà del modulo, ad esempio <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> , sono inizializzati dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberSignature Language="F#" Value="override this.InitializePropertiesFromConfiguration : unit -&gt; unit" Usage="wSFederationAuthenticationModule.InitializePropertiesFromConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inizializza le proprietà del modulo in base alla configurazione specificata dalla proprietà <see cref="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" /> del modulo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Proprietà del modulo vengono inizializzate usando le proprietà equivalenti del <xref:System.IdentityModel.Services.Configuration.WsFederationConfiguration> specificato dall'oggetto di <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration%2A?displayProperty=nameWithType> proprietà.  
  
 È possibile specificare le impostazioni in un file di configurazione tramite il [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool IsSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member IsSignInResponse : System.Web.HttpRequestBase -&gt; bool&#xA;override this.IsSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.IsSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Richiesta HTTP in ingresso.</param>
        <summary>Ottiene un valore che indica se la richiesta specificata è un messaggio di risposta di accesso a WS-Federation.</summary>
        <returns>
          <see langword="true" /> se la richiesta è un messaggio di risposta di accesso WS-Federation; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> metodo nella pipeline di elaborazione della richiesta per determinare se la richiesta HTTP in ingresso è un messaggio di risposta di accesso WS-Federation.  
  
 L'implementazione predefinita restituisce `true` se il parametro wa è "wsignin1.0" e il wreq e wreqptr entrambi i parametri sono non impostati.  
  
 È possibile eseguire l'override di questo metodo nelle classi derivate per eseguire una convalida aggiuntiva.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public string Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Issuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un URI che identifica l'autorità emittente desiderata del token di sicurezza.</summary>
        <value>URI che identifica il servizio token di sicurezza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa è una proprietà obbligatoria. Deve essere impostata se i reindirizzamenti passivi sono abilitati. Specifica l'URL del servizio token di sicurezza (STS) a cui devono essere rilasciate richieste WS-Federation.  
  
 È possibile eseguire l'override di questa impostazione per ogni richiesta HTTP mediante l'aggiunta di un gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento. Questo evento viene generato appena prima che il modulo di reindirizzamento al servizio token di sicurezza (STS) con un messaggio di richiesta di accesso WS-Federation. Il servizio token di sicurezza specificato da di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Si è tentato di impostare la proprietà su <see langword="null" /> o su una stringa vuota.  
  
oppure 
È stato effettuato un tentativo di impostare la proprietà su un valore non valido URI assoluto.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticateRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthenticateRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Origine dell'evento. Deve essere un oggetto <see cref="T:System.Web.HttpApplication" />.</param>
        <param name="args">Dati per l'evento.</param>
        <summary>Gestisce l'evento <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> dalla pipeline [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> metodo implementa la pipeline di elaborazione di richiesta WS-Federation. Viene aggiunto al <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> eventi nel [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule%2A> (metodo).  
  
 Il metodo esegue le operazioni seguenti:  
  
1.  Le chiamate di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> metodo per determinare se è stato ricevuto un messaggio di risposta di accesso WS-Federation ("wsignin1.0"). Se la risposta è una richiesta di pulizia disconnessione WS-Federation ("wsignoutcleanup1.0"), <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> elabora il messaggio, termina la richiesta e reindirizza il client in base ai parametri di WS-Federation nella richiesta. Se il messaggio non è una risposta di accesso o una richiesta di pulizia di disconnessione, il modulo restituisce semplicemente; in caso contrario, esegue i passaggi seguenti per elaborare la risposta di accesso.  
  
2.  Chiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29> metodo per deserializzare un <xref:System.IdentityModel.Tokens.SecurityToken> oggetto della richiesta.  
  
3.  Genera l'evento <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>. È possibile annullare un'ulteriore elaborazione o modificare il token di sicurezza ricevuto in un gestore per questo evento. Un gestore di è in genere usato per modificare la <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A?displayProperty=nameWithType> o <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A?displayProperty=nameWithType> proprietà.  
  
4.  Convalida il token di sicurezza e crea un <xref:System.Security.Claims.ClaimsPrincipal> oggetto dalle attestazioni nel token di sicurezza.  
  
5.  Genera l'evento <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>. È possibile annullare un'ulteriore elaborazione o modificare l'entità delle attestazioni in un gestore per questo evento.  
  
6.  Usa il modulo di autenticazione configurato sessione (SAM) per creare un <xref:System.IdentityModel.Tokens.SessionSecurityToken> oggetto. (Il SAM configurato è il <xref:System.IdentityModel.Services.SessionAuthenticationModule> oggetto restituito dal <xref:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule%2A?displayProperty=nameWithType> proprietà.) Il token di sessione viene creato usando l'entità delle attestazioni restituita nel passaggio 5. Il <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A?displayProperty=nameWithType> e <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> le proprietà vengono impostate utilizzando il <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> e <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> le proprietà del <xref:System.IdentityModel.Tokens.SecurityToken> restituito nel passaggio 3 e vengono convalidati in base all'ora corrente e la durata del token specificato da entrambi i <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A>o il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> proprietà del <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> oggetto della raccolta di gestori di token usata da WSFAM. La durata dei token sul gestore di token di sessione può essere specificata nella configurazione tramite il [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) elemento. Nota: Il <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> proprietà sul gestore di cookie configurato per il database SAM non viene usato.  
  
7.  Le chiamate di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> metodo con il token di sessione per scrivere il cookie di sessione. Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> metodo che genera prima il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> evento. È possibile modificare le proprietà sul token di sessione o se il cookie deve essere resa persistente in un gestore per questo evento. Dopo l'evento viene generato, il metodo quindi scrive il cookie mediante il modulo SAM.  
  
    > [!NOTE]
    >  Il <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> set nella configurazione non viene utilizzato per scrivere il cookie.  
  
8.  Chiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn%2A> metodo per generare il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn> evento.  
  
9. Le chiamate di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> metodo per accedere alla pagina della relying Party a cui reindirizzare il client. Per impostazione predefinita, questo metodo legge l'URL restituito dal parametro wctx la risposta di accesso. Per altre informazioni sul modo in cui WSFAM archivia l'URL restituito, vedere il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> (metodo).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizationFailed (System.IdentityModel.Services.AuthorizationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizationFailed(class System.IdentityModel.Services.AuthorizationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizationFailed (e As AuthorizationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizationFailed(System::IdentityModel::Services::AuthorizationFailedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit&#xA;override this.OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthorizationFailed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dati per l'evento.</param>
        <summary>Genera l'evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamato dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegato del gestore eventi quando autorizzazione ha esito negativo.  
  
 Inizializza la <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> proprietà prima che venga generato il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> eventi per evitare i reindirizzamenti circolari se l'utente è già stato autenticato. Se l'utente è già autenticato, la proprietà viene inizializzata su `false` per evitare che reindirizza; in caso contrario, viene inizializzata su `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnEndRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnEndRequest : obj * EventArgs -&gt; unit&#xA;override this.OnEndRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnEndRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Origine dell'evento. Deve essere un oggetto <see cref="T:System.Web.HttpApplication" />.</param>
        <param name="args">Dati per l'evento.</param>
        <summary>Gestisce l'evento <see cref="E:System.Web.HttpApplication.EndRequest" /> dalla pipeline [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'evento viene ignorato a meno che il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> è di proprietà `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnPostAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnPostAuthenticateRequest (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Origine dell'evento. Deve essere un oggetto <see cref="T:System.Web.HttpApplication" />.</param>
        <param name="e">Dati per l'evento.</param>
        <summary>Gestisce l'evento <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> dalla pipeline [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, questo è un gestore eventi vuoto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="protected virtual void OnRedirectingToIdentityProvider (System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRedirectingToIdentityProvider(class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRedirectingToIdentityProvider (e As RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRedirectingToIdentityProvider(System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit&#xA;override this.OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnRedirectingToIdentityProvider e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dati per l'evento.</param>
        <summary>Genera l'evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit&#xA;override this.OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSessionSecurityTokenCreated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dati per l'evento.</param>
        <summary>Genera l'evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedIn (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedIn(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedIn (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedIn(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedIn : EventArgs -&gt; unit&#xA;override this.OnSignedIn : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedIn args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dati per l'evento.</param>
        <summary>Genera l'evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedOut : EventArgs -&gt; unit&#xA;override this.OnSignedOut : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dati per l'evento.</param>
        <summary>Genera l'evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamato dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metodo subito dopo la sessione viene eliminata.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignInError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignInError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignInError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignInError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignInError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dati per l'evento.</param>
        <summary>Genera l'evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (args As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit&#xA;override this.OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSigningOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dati per l'evento.</param>
        <summary>Genera l'evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamato dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metodo poco prima che la sessione viene eliminata.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignOutError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dati per l'evento.</param>
        <summary>Genera l'evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamato dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metodo se si verifica un'eccezione durante l'elaborazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PassiveRedirectEnabled">
      <MemberSignature Language="C#" Value="public bool PassiveRedirectEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PassiveRedirectEnabled" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PassiveRedirectEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PassiveRedirectEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PassiveRedirectEnabled : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se il modulo è abilitato per avviare i reindirizzamenti del protocollo WS-Federation.</summary>
        <value>
          <see langword="true" /> per abilitare i rendirizzamenti; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il modulo non avvierà reindirizzamenti del protocollo WS-Federation quando questa modalità non è abilitata. Se questa proprietà è `true`, il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà deve essere impostata per l'URL del Token di sicurezza del servizio (STS) a cui il chiamante deve essere reindirizzato.  
  
> [!WARNING]
>  Il codice dell'applicazione può inviare le richieste di accesso WS-Federation in modo esplicito tramite il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metodo, indipendentemente dal valore della <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      </Docs>
    </Member>
    <Member MemberName="PersistentCookiesOnPassiveRedirects">
      <MemberSignature Language="C#" Value="public bool PersistentCookiesOnPassiveRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentCookiesOnPassiveRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistentCookiesOnPassiveRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentCookiesOnPassiveRedirects : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se il cookie di sessione persistente viene emesso dopo la riuscita dell'autenticazione.</summary>
        <value>
          <see langword="true" /> per rilasciare un cookie di sessione permanente; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile eseguire l'override di questa impostazione per ogni richiesta HTTP mediante l'aggiunta di un gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> evento. Questo evento viene generato dalla richiesta di pipeline di elaborazione durante l'elaborazione di un messaggio di risposta di accesso WS-Federation da un servizio token di sicurezza (STS).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public string Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Policy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Policy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Policy : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore del parametro wp da usare nelle richieste di accesso WS-Federation ("wsignin1.0").</summary>
        <value>URL che identifica i criteri da utilizzare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il parametro wp è facoltativo. Se il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy%2A> è impostata su `null` oppure una stringa vuota, il parametro wp non è incluso nella richiesta di accesso.  
  
 È possibile eseguire l'override di questa impostazione per ogni richiesta HTTP mediante l'aggiunta di un gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento. Questo evento viene generato appena prima che il modulo di reindirizzamento al servizio token di sicurezza (STS) con un messaggio di richiesta di accesso WS-Federation. Il servizio token di sicurezza specificato da di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore del parametro wtrealm da usare per le richieste di accesso WS-Federation ("wsignin1.0").</summary>
        <value>URI che identifica il componente al servizio token di sicurezza (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta di una proprietà obbligatoria per le richieste di accesso WS-Federation. Deve essere impostata se i reindirizzamenti passivi sono abilitati. L'URI identifica l'applicazione relying Party per il servizio token di sicurezza. (Per identificare il servizio token di sicurezza per l'applicazione relying Party, vedere il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà).  
  
 Il valore di questa proprietà viene serializzato come il parametro wtrealm della stringa di query nel protocollo WS-Federation. Identifica l'applicazione relying Party per il servizio token di sicurezza. Viene utilizzato dal servizio token di sicurezza per decidere quali criteri da applicare per l'emissione di token e dove reindirizzare l'utente dopo il rilascio dei token. (Per identificare il servizio token di sicurezza per l'applicazione relying Party, vedere <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>.)  
  
 È possibile eseguire l'override di questa impostazione per ogni richiesta HTTP mediante l'aggiunta di un gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento. Questo evento viene generato appena prima che il modulo di reindirizzamento al servizio token di sicurezza (STS) con un messaggio di richiesta di accesso WS-Federation. Il servizio token di sicurezza specificato da di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Si è tentato di impostare la proprietà su <see langword="null" /> o su una stringa vuota.  
  
oppure 
È stato effettuato un tentativo di impostare la proprietà su un valore non valido URI assoluto.</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
      <MemberSignature Language="VB.NET" Value="Public Event RedirectingToIdentityProvider As EventHandler(Of RedirectingToIdentityProviderEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^&gt; ^ RedirectingToIdentityProvider;" />
      <MemberSignature Language="F#" Value="member this.RedirectingToIdentityProvider : EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " Usage="member this.RedirectingToIdentityProvider : System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il modulo reindirizzerà l'utente al provider di identità.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile accedere e modificare la richiesta di accesso WS-Federation mediante il <xref:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage%2A?displayProperty=nameWithType> proprietà. Ad esempio, è possibile modificare il <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> proprietà nel messaggio di accesso per modificare il provider di identità a cui verrà reindirizzata la richiesta. Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> è un evento annullabile ed è possibile impostare il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà `true` per annullare il reindirizzamento.  
  
 L'evento viene generato da all'interno di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> tramite una chiamata al metodo il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> (metodo).  
  
 Per gestire questo evento in un'applicazione ASP.NET, creare un metodo denominato `WSFederationAuthentication_RedirectingToIdentityProvider` nel file Global. asax.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come aggiungere un gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventi nel `Application_Init` evento nel file Global. asax. Il codice è tratto dal `FederationForWebApps` esempio. Per altre informazioni su questo esempio, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 Il codice seguente mostra il gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento nel nel file Global. asax di un'applicazione relying Party. Il codice verifica se la richiesta HTTP in ingresso contiene un parametro whr e, in caso affermativo, questo parametro viene impostato sulla richiesta di accesso WS-Federation che verrà inviata al servizio token di sicurezza. Il codice è tratto dal `FederationForWebApps` esempio. Per altre informazioni su questo esempio, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 Il codice seguente mostra il gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento nel nel file Global. asax di un servizio token di sicurezza del provider di federazione. Il codice verifica se la richiesta HTTP in ingresso contiene un parametro whr. Se la richiesta contiene il parametro whr, il client viene indirizzato a IP-STS per l'accesso; in caso contrario, il client viene indirizzato a una pagina di individuazione dell'area di autenticazione per selezionare il servizio IP-STS in corrispondenza del quale eseguire l'accesso. Il codice è tratto dal `FederationForWebApps` esempio. Per altre informazioni su questo esempio, vedere [indice degli esempi di codice di WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToIdentityProvider">
      <MemberSignature Language="C#" Value="public virtual void RedirectToIdentityProvider (string uniqueId, string returnUrl, bool persist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToIdentityProvider(string uniqueId, string returnUrl, bool persist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToIdentityProvider (uniqueId As String, returnUrl As String, persist As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToIdentityProvider(System::String ^ uniqueId, System::String ^ returnUrl, bool persist);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToIdentityProvider : string * string * bool -&gt; unit&#xA;override this.RedirectToIdentityProvider : string * string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.RedirectToIdentityProvider (uniqueId, returnUrl, persist)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="persist" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">Il modulo WSFAM salva questo valore nel parametro wctx nella richiesta di accesso WS-Federation; tuttavia non lo utilizza quando elabora le richieste o le risposte di accesso. È possibile impostarlo su qualsiasi valore. Non deve essere necessariamente univoco. Per altre informazioni, vedere il metodo <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />.</param>
        <param name="returnUrl">URL cui deve tornare il modulo dopo l'autenticazione.</param>
        <param name="persist">Il modulo WSFAM salva questo valore nel parametro wctx nella richiesta di accesso WS-Federation; tuttavia non lo utilizza quando elabora le richieste o le risposte di accesso. È possibile impostarlo su <see langword="true" /> o <see langword="false" />.</param>
        <summary>Reindirizza l'utente al servizio token di sicurezza (STS) specificato dalla proprietà <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> per ottenere un token di sicurezza utilizzando il protocollo WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> metodo viene chiamato dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metodo quando la richiesta viene eseguita da una pagina web visualizzata dalla relying party (RP) o dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegato del gestore eventi per eseguire un reindirizzamento passivo per il provider di identità su Errore di autorizzazione.  
  
 I parametri passati al metodo vengono utilizzati per creare il parametro wctx del messaggio. Il parametro solo significativo è la `returnUrl` parametro. Specifica l'URL che l'applicazione relying Party deve indicare al browser di autenticazione seguente. Non deve essere confuso con il parametro messaggio wreply specificato mediante il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> proprietà e che fornisce l'indirizzo di relying Party a cui il servizio token di sicurezza (STS) dovrà indirizzare la relativa risposta.  
  
 Il metodo esegue le operazioni seguenti:  
  
1.  Richiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties%2A> metodo per assicurarsi che una richiesta di accesso valido può essere rilasciato dal modulo.  
  
2.  Richiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metodo per creare la richiesta di accesso dalle proprietà configurate nel modulo.  
  
3.  Richiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> metodo per generare il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento. È possibile annullare il reindirizzamento o modificare il messaggio di richiesta di accesso nel gestore eventi per questo evento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> è <see langword="null" /> o una stringa vuota.  
  
oppure 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> è <see langword="null" /> o una stringa vuota.  
  
oppure 
La proprietà <see cref="P:System.Web.HttpContext.Current" /> è <see langword="null" /> o vuota.  
  
oppure 
La proprietà <see cref="P:System.Web.HttpContext.Response" /> del contesto restituita da <see cref="P:System.Web.HttpContext.Current" /> è <see langword="null" /> o vuota.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public string Reply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Reply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Property Reply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Reply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Reply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore del parametro wreply da usare nelle richieste di accesso WS-Federation ("wsignin1.0").</summary>
        <value>URL che identifica l'indirizzo a cui l'applicazione del componente desidera ricevere le risposte dal servizio token di sicurezza (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il parametro wreply è facoltativo. Se il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> è impostata su `null` oppure una stringa vuota, il parametro wreply non è incluso nella richiesta di accesso.  
  
 Il parametro wreply viene utilizzato dal servizio token di sicurezza deve per decidere dove reindirizzare l'utente dopo il rilascio dei token. Non è consigliabile per il servizio token di sicurezza in modo da utilizzare questo indirizzo per reindirizzare l'utente come tale reindirizzamento presenta vulnerabilità della protezione. L'indirizzo di risposta deve essere convalidata da STS (probabilmente da confrontando a un set di indirizzi di risposta preconfigurate per l'applicazione o un altro metodo) per assicurarsi che la risposta inviata al percorso ben noto, sicuro e comprensibile.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">È stato effettuato un tentativo di impostare la proprietà su un valore non valido URI assoluto.</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public string Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Request { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore del parametro wreq da usare nelle richieste di accesso WS-Federation ("wsignin1.0").</summary>
        <value>richiesta di pubblicazione del token espressa come elemento <see langword="&lt;wst:RequestSecurityToken&gt;" /> .</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il parametro wreq è facoltativo. Se il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Request%2A> è impostata su `null` oppure una stringa vuota, il parametro wreq non è incluso nella richiesta di accesso.  
  
 È possibile eseguire l'override di questa impostazione per ogni richiesta HTTP mediante l'aggiunta di un gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento. Questo evento viene generato appena prima che il modulo di reindirizzamento al servizio token di sicurezza (STS) con un messaggio di richiesta di accesso WS-Federation. Il servizio token di sicurezza specificato da di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPtr">
      <MemberSignature Language="C#" Value="public string RequestPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPtr" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPtr As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPtr { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPtr : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore del parametro wreqptr da usare nelle richieste di accesso WS-Federation ("wsignin1.0").</summary>
        <value>URL che specifica il percorso della richiesta di pubblicazione token espressa come elemento <see langword="&lt;wst:RequestSecurityToken&gt;" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il parametro wreqptr è facoltativo. Se il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr%2A> è impostata su `null` oppure una stringa vuota, il parametro wreq non è incluso nella richiesta di accesso.  
  
 È possibile eseguire l'override di questa impostazione per ogni richiesta HTTP mediante l'aggiunta di un gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento. Questo evento viene generato appena prima che il modulo di reindirizzamento al servizio token di sicurezza (STS) con un messaggio di richiesta di accesso WS-Federation. Il servizio token di sicurezza specificato da di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">È stato effettuato un tentativo di impostare la proprietà su un valore non valido URI assoluto.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequireHttps">
      <MemberSignature Language="C#" Value="public bool RequireHttps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireHttps" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireHttps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireHttps { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireHttps : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se la comunicazione con il servizio token di sicurezza (STS) deve utilizzare il protocollo HTTPS.</summary>
        <value>
          <see langword="true" /> se la comunicazione con il servizio token di sicurezza deve essere protetta utilizzando HTTPS; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resource : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore del parametro wres da usare nelle richieste di accesso WS-Federation ("wsignin1.0").</summary>
        <value>URI che identifica la risorsa a cui si accede, il componente e il servizio token di sicurezza (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il parametro wtrealm, che è l'impostazione di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> proprietà, usare invece il parametro.  
  
 Il parametro wres è facoltativo. Se il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource%2A> è impostata su `null` oppure una stringa vuota, il parametro wres non è incluso nella richiesta di accesso.  
  
 È possibile eseguire l'override di questa impostazione per ogni richiesta HTTP mediante l'aggiunta di un gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento. Questo evento viene generato appena prima che il modulo di reindirizzamento al servizio token di sicurezza (STS) con un messaggio di richiesta di accesso WS-Federation. Il servizio token di sicurezza specificato da di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenReceived As EventHandler(Of SecurityTokenReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenReceivedEventArgs ^&gt; ^ SecurityTokenReceived;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenReceived : EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " Usage="member this.SecurityTokenReceived : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un token di sicurezza è stato ricevuto da un servizio token di sicurezza (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile aggiungere un gestore eventi per modificare il token prima della convalida. Nell'evento gestore di è possibile accedere tramite il token di sicurezza di <xref:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken%2A?displayProperty=nameWithType> proprietà. Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> è un evento annullabile, è possibile impostare il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà `true` in un gestore eventi per terminare l'elaborazione del messaggio di risposta di accesso WS-Federation.  
  
 Questo evento viene generato all'interno di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegato del gestore eventi durante l'elaborazione di un messaggio di risposta di accesso WS-Federation ("wsignin1.0") ricevuto dal servizio token di sicurezza (STS). Viene generato solo dopo che un token di sicurezza è stato deserializzato dal parametro wresult o il parametro wresultptr del messaggio di risposta di accesso, ma prima che venga convalidato il token di sicurezza.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenValidated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenValidated As EventHandler(Of SecurityTokenValidatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenValidatedEventArgs ^&gt; ^ SecurityTokenValidated;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenValidated : EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " Usage="member this.SecurityTokenValidated : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo che un token di sicurezza ricevuto dal servizio STS è stato convalidato ma prima che sia creato il token di sicurezza della sessione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile aggiungere un gestore eventi per modificare l'entità è stata creata durante l'elaborazione di un messaggio di risposta di accesso WS-Federation da un servizio token di sicurezza (STS) prima di usarlo per creare il token di sessione. Nell'evento gestore, è possibile accedere all'entità tramite il <xref:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal%2A> proprietà. Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> è un evento annullabile, è possibile impostare il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà `true` in un gestore eventi per terminare l'elaborazione del messaggio di risposta di accesso WS-Federation.  
  
 Questo evento viene generato all'interno di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegato del gestore eventi durante l'elaborazione di un messaggio di risposta di accesso WS-Federation ("wsignin1.0") ricevuto dal servizio token di sicurezza (STS). L'evento viene generato immediatamente dopo il token di sicurezza deserializzato dal parametro wresult o il parametro wresultptr del messaggio di risposta di accesso è stato convalidato e prima di sicurezza della sessione creato token.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionSecurityTokenCreated : EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " Usage="member this.SessionSecurityTokenCreated : System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un token di sicurezza della sessione è stato creato dal token di sicurezza ricevuto da un servizio token di sicurezza (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile aggiungere un gestore eventi per modificare il token di sessione prima di essere utilizzato per impostare l'entità del thread e viene scritto il cookie di sessione. Nell'evento gestore, è possibile accedere il token di sessione tramite il <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> proprietà. È possibile specificare se un cookie di sessione deve essere scritta impostando il <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> proprietà.  
  
 Questo evento viene generato all'interno di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegato del gestore eventi durante l'elaborazione di un messaggio di risposta di accesso WS-Federation ("wsignin1.0") ricevuto dal servizio token di sicurezza (STS). L'evento viene generato immediatamente dopo il token di sicurezza deserializzato dal parametro wresult o il parametro wresultptr del messaggio di risposta di accesso è stato convalidato e prima le attestazioni di entità viene impostata sul <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> (e, nella <xref:System.Web.HttpContext.User%2A> proprietà del <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>).  
  
> [!IMPORTANT]
>  Per il funzionamento delle sessioni in modalità di riferimento, Microsoft consiglia di fornire un gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> evento nel file global.asax.cs e impostazione di <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> proprietà sul token passato il <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> proprietà. Ciò garantisce che il token di sessione opera in modalità di riferimento per ogni richiesta e viene preferito rispetto a impostare semplicemente il <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> proprietà del modulo di autenticazione della sessione.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalAndWriteSessionToken">
      <MemberSignature Language="C#" Value="public void SetPrincipalAndWriteSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPrincipalAndWriteSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalAndWriteSessionToken (sessionToken As SessionSecurityToken, isSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalAndWriteSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool isSession);" />
      <MemberSignature Language="F#" Value="member this.SetPrincipalAndWriteSessionToken : System.IdentityModel.Tokens.SessionSecurityToken * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken (sessionToken, isSession)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="isSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken">Token di sicurezza della sessione creato dal messaggio di risposta dell'accesso WS-Federation dal servizio token di sicurezza.</param>
        <param name="isSession">
          <see langword="true" /> per scrivere un cookie che rappresenta la sessione inclusa nella risposta; in caso contrario, <see langword="false" />.</param>
        <summary>Imposta l'entità del thread e facoltativamente scrive il cookie di sessione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamato dalla richiesta implementata in pipeline di elaborazione di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegato del gestore eventi. Questo metodo esegue le operazioni seguenti:  
  
1.  Richiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated%2A> metodo per generare il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> evento. È possibile usare questo evento per modificare il token di sessione prima che venga utilizzato per impostare l'entità del thread e scritta il cookie di sessione e specificare se il cookie di sessione deve essere scritta.  
  
2.  Richiama il <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> metodo nel modulo di autenticazione sessione configurato (<xref:System.IdentityModel.Services.SessionAuthenticationModule>) per impostare l'entità del thread e, facoltativamente, scrivere il cookie di sessione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sessionToken" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SignedIn">
      <MemberSignature Language="C#" Value="public event EventHandler SignedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedIn" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedIn;" />
      <MemberSignature Language="F#" Value="member this.SignedIn : EventHandler " Usage="member this.SignedIn : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo l'accesso dell'utente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la richiesta viene inviata alla pagina di accesso, un controllo nella pagina genera questo evento, non in questo modulo.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberSignature Language="F#" Value="member this.SignedOut : EventHandler " Usage="member this.SignedOut : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica subito dopo l'eliminazione della sessione durante la disconnessione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato tramite una chiamata ai <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> metodo dall'interno di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metodo mentre cessare sessione alla relying party (RP). L'evento non viene generato quando tale operazione federato disconnessione con i <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (metodo).  
  
 È possibile aggiungere un gestore eventi per eseguire eventuali elaborazioni aggiuntive che è necessaria per l'applicazione dopo aver eliminato il cookie di sessione.  
  
 Questo evento non è garantito a essere chiamato per ogni sessione. I cookie possono essere eliminati sul lato client, ad esempio, in modo che non verrà generato questo evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual void SignIn (string ControlId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(string ControlId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignIn (ControlId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignIn(System::String ^ ControlId);" />
      <MemberSignature Language="F#" Value="abstract member SignIn : string -&gt; unit&#xA;override this.SignIn : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignIn ControlId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlId">Il modulo WSFAM salva questo valore nel parametro wctx nella richiesta di accesso WS-Federation; tuttavia non lo utilizza quando elabora le richieste o le risposte di accesso. È possibile impostarlo su qualsiasi valore. Non deve essere necessariamente univoco. Per altre informazioni, vedere il metodo <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />.</param>
        <summary>Effettua l'accesso a un servizio token di sicurezza (STS) tramite il protocollo WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita richiama la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> metodo per eseguire l'accesso aggiuntivo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInContext">
      <MemberSignature Language="C#" Value="public string SignInContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInContext : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore di contesto specifico dell'applicazione da includere nel parametro wctx nelle richieste di accesso WS-Federation.</summary>
        <value>Il valore di contesto specifico dell'applicazione da includere nel parametro wctx per le richieste di accesso.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metodo viene richiamato, il messaggio di accesso generato contiene un parametro wctx che ha il formato seguente: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`. Il valore della <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> viene archiviato nel `cx` parametro. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> può essere chiamato direttamente dal codice. Viene inoltre chiamato quando il WSFAM sta eseguendo i reindirizzamenti passivi e anche quando entrambi il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metodo o il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> metodo viene richiamato dal codice dell'applicazione.  
  
 Sebbene il WSFAM Salva il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> valore nei messaggi di richiesta di accesso, se il valore viene usato dall'applicazione durante la risposta di elaborazione, è necessario fornire la logica per estraendolo da parametro wctx del messaggio di risposta di accesso.  
  
 Per altre informazioni sul formato e l'elaborazione del parametro wctx, vedere il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SignInError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignInError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignInError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignInError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignInError;" />
      <MemberSignature Language="F#" Value="member this.SignInError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignInError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Generato quando si verifica un errore durante l'accesso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la richiesta viene inviata alla pagina di accesso, un controllo nella pagina genera questo evento, non in questo modulo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberSignature Language="F#" Value="member this.SigningOut : EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " Usage="member this.SigningOut : System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima dell'eliminazione della sessione durante la disconnessione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato tramite una chiamata ai <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> metodo dall'interno di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metodo mentre cessare sessione alla relying party (RP). L'evento non viene generato quando tale operazione federato disconnessione con i <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (metodo).  
  
 È possibile aggiungere un gestore eventi per eseguire eventuali elaborazioni aggiuntive che sono necessaria per l'applicazione prima che venga eliminato il cookie di sessione. È possibile leggere il <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated*> proprietà nel gestore dell'evento per determinare se la disconnessione è il risultato della ricezione di un messaggio di richiesta di pulizia di disconnessione WS-Federation ("wsignoutcleanup1.0") da un servizio token di sicurezza (STS) o sia stata avviata in l'applicazione relying Party.  
  
 Questo evento non è garantito a essere chiamato per ogni sessione. I cookie possono essere eliminati sul lato client, ad esempio, in modo che non verrà generato questo evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInQueryString">
      <MemberSignature Language="C#" Value="public string SignInQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una stringa di query contenente eventuali parametri aggiuntivi da inviare nelle richieste di accesso WS-Federation ("wsignin1.0").</summary>
        <value>Un frammento di URL che contiene i parametri di messaggi aggiuntivi nel formato seguente: <c>param1 = value1&amp;param2 = value2&amp;paramN = valueN</c>. Il valore predefinito è una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questa proprietà per l'invio di parametri aggiuntivi in una richiesta di accesso. Queste sarebbero parametri specifici dell'applicazione che non sono uno dei parametri specificati per il protocollo WS-Federation. Per rimuovere i parametri aggiuntivi dalla richiesta di impostare la proprietà su una stringa vuota.  
  
 È possibile eseguire l'override di questa impostazione per ogni richiesta HTTP mediante l'aggiunta di un gestore per il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento. Questo evento viene generato appena prima che il modulo di reindirizzamento al servizio token di sicurezza (STS) con un messaggio di richiesta di accesso WS-Federation. Il servizio token di sicurezza specificato da di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Tentativo di impostare la proprietà su <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignOut">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Esce dalla sessione corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elimina la sessione corrente.  
  
 Per il servizio token di sicurezza (STS) viene inviato alcun messaggio di richiesta di disconnessione ("wsignout1.0"). Per la disconnessione al servizio token di sicurezza utilizzando il protocollo WS-Federation, usare il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (metodo).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberSignature Language="F#" Value="abstract member SignOut : unit -&gt; unit&#xA;override this.SignOut : unit -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esce dalla sessione corrente e richiede un reindirizzamento all'URL specificato nella richiesta HTTP corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elimina la sessione corrente e reindirizza il browser all'URL specificato nella richiesta HTTP corrente.  
  
 Richiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%29?displayProperty=nameWithType> metodo con il `redirectUrl` parametro impostato per l'URL della richiesta corrente.  
  
 Per il servizio token di sicurezza (STS) viene inviato alcun messaggio di richiesta di disconnessione ("wsignout1.0"). Per la disconnessione al servizio token di sicurezza utilizzando il protocollo WS-Federation, usare il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (metodo).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (bool isIPRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(bool isIPRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (isIPRequest As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(bool isIPRequest);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : bool -&gt; unit&#xA;override this.SignOut : bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut isIPRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isIPRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isIPRequest">
          <see langword="true" /> se la richiesta è stata avviata dal servizio token di sicurezza del provider di identità usando un messaggio di richiesta di pulizia di disconnessione WS-Federation ("wsignoutcleanup1.0"), in caso contrario <see langword="false" />.</param>
        <summary>Esce dalla sessione corrente e genera gli eventi appropriati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo esegue l'effettiva operazione di eliminazione della sessione corrente e genera gli eventi di disconnessione appropriati. Il metodo esegue le operazioni seguenti:  
  
1.  Richiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> metodo per generare il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut> evento. Un gestore eventi può fornire qualsiasi elaborazione necessaria prima che la sessione viene eliminata. Il <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated%2A?displayProperty=nameWithType> viene impostata in base al `isIPRequest` parametro.  
  
2.  Le chiamate di <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> metodo nel gestore di autenticazione della sessione corrente per eliminare il cookie di sessione.  
  
     Richiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> metodo per generare il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut> evento.  
  
3.  Se si verifica un errore durante l'elaborazione della disconnessione, richiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> metodo per generare il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> evento. Un gestore eventi può annullare l'elaborazione ed evitare un'eccezione venga restituita al chiamante di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>  
  
 È possibile chiamare il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A?displayProperty=nameWithType> metodo con il `isIPRequest` set di parametri `false` per disconnettersi da una sessione senza eseguire un reindirizzamento. Il metodo viene chiamato in definitiva da tutti gli altri overload <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> metodi (con il `isIPRequest` parametro impostato su `false`) per eseguire la gestione di disconnessione. Il metodo viene chiamato dal <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> metodo con il `isIPRequest` set di parametri `true` a disconnette la sessione quando elabora un messaggio di pulizia disconnessione WS-Federation ("wsignoutcleanup1.0").  
  
 Per il servizio token di sicurezza (STS) viene inviato alcun messaggio di richiesta di disconnessione ("wsignout1.0"). Per la disconnessione al servizio token di sicurezza utilizzando il protocollo WS-Federation, usare il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (metodo).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string -&gt; unit&#xA;override this.SignOut : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut redirectUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">URL cui deve essere reindirizzato il browser dopo l'eliminazione della sessione.</param>
        <summary>Esce dalla sessione corrente e richiede un reindirizzamento all'URL specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elimina la sessione corrente e reindirizza il browser all'URL specificato.  
  
 Richiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> metodo con il `redirectUrl` parametro e con la `initiateSignoutCleanup` impostare `false`.  
  
 Per il servizio token di sicurezza (STS) viene inviato alcun messaggio di richiesta di disconnessione ("wsignout1.0"). Per la disconnessione al servizio token di sicurezza utilizzando il protocollo WS-Federation, usare il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="redirectUrl" /> non è un URI valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl, bool initiateSignoutCleanup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String, initiateSignoutCleanup As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string * bool -&gt; unit&#xA;override this.SignOut : string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut (redirectUrl, initiateSignoutCleanup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
        <Parameter Name="initiateSignoutCleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">URL cui deve essere reindirizzato il browser dopo la disconnessione.</param>
        <param name="initiateSignoutCleanup">Sempre impostato su <see langword="false" />. L'impostazione di questo parametro su <see langword="true" /> non è supportata.</param>
        <summary>Esce dalla sessione corrente e richiede un reindirizzamento all'URL specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elimina la sessione corrente e reindirizza il browser all'URL specificato.  
  
 Richiama il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metodo con il `initiateSignoutCleanup` set di parametri `false`.  
  
 Per il servizio token di sicurezza (STS) viene inviato alcun messaggio di richiesta di disconnessione ("wsignout1.0"). Per la disconnessione al servizio token di sicurezza utilizzando il protocollo WS-Federation, usare il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="redirectUrl" /> non è un URI valido.</exception>
        <exception cref="T:System.NotImplementedException">La classe <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> genera questa eccezione se <paramref name="initiateSignoutCleanup" /> è <see langword="true" />. Non impostare questo parametro su <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberSignature Language="F#" Value="member this.SignOutError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignOutError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Generato quando si verifica un errore durante la disconnessione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato tramite una chiamata ai <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> metodo dall'interno di <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metodo mentre cessare sessione alla relying party (RP). L'evento non viene generato quando tale operazione federato disconnessione con i <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (metodo).  
  
 Il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> evento è un evento annullabile. È possibile impostare il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà in un gestore eventi per evitare l'eccezione che ha causato l'errore venga restituita all'iniziatore la disconnessione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutQueryString">
      <MemberSignature Language="C#" Value="public string SignOutQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una stringa di query contenente eventuali parametri aggiuntivi da inviare nelle richieste di disconnessione WS-Federation ("wsignout1.0").</summary>
        <value>Un frammento di URL che contiene i parametri di messaggi aggiuntivi nel formato seguente: <c>param1 = value1&amp;param2 = value2&amp;paramN = valueN</c>. Il valore predefinito è una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, questa proprietà viene inizializzata dal `signOutQueryString` attributo del [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elemento nel file di configurazione. Si è destinato a contenere tutti i parametri specifici dell'applicazione da inviare una richiesta di disconnessione WS-Federation. Per rimuovere questi parametri, è possibile impostare la proprietà su una stringa vuota.  
  
 Il WSFAM non utilizza questa proprietà direttamente. Tuttavia, è possibile passarlo al <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> metodo per creare un URL di disconnessione WS-Federation completo che può quindi essere utilizzato dal codice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Tentativo di impostare la proprietà su <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutReply">
      <MemberSignature Language="C#" Value="public string SignOutReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutReply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutReply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutReply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutReply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore del parametro wreply da usare durante le richieste di disconnessione WS-Federation ("wsignout1.0").</summary>
        <value>URL cui deve essere reindirizzato il client dal servizio token di sicurezza in seguito alla disconnessione con il protocollo WS-Federation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, questa proprietà viene inizializzata dal `signOutReply` attributo del [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elemento nel file di configurazione. Consente di rappresentare il parametro wreply in una richiesta di disconnessione WS-Federation.  
  
 Il parametro wreply è facoltativo. Se il <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply%2A> è impostata su `null` oppure una stringa vuota, il parametro wreply non è incluso nella richiesta di disconnessione.  
  
 Il WSFAM non usa direttamente questa proprietà. Tuttavia, è possibile passarlo al <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metodo durante l'esecuzione di disconnessione WS-Federation dal codice oppure è possibile passarlo al <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> metodo per creare un URL di disconnessione WS-Federation completo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyProperties">
      <MemberSignature Language="C#" Value="public void VerifyProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyProperties();" />
      <MemberSignature Language="F#" Value="member this.VerifyProperties : unit -&gt; unit" Usage="wSFederationAuthenticationModule.VerifyProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verifica che le proprietà <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> e <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> non sono vuote e, se la proprietà <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> è <see langword="true" />, che gli URI specificati per <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> e <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> sono conformi a HTTPS.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> è <see langword="null" /> o una stringa vuota.  
  
oppure 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> è <see langword="null" /> o una stringa vuota.  
  
oppure 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> è <see langword="true" /> e <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> non è conforme a HTTPS.  
  
oppure 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> è <see langword="true" /> e <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> non è conforme a HTTPS.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlDictionaryReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDictionaryReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ XmlDictionaryReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDictionaryReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da utilizzare per la deserializzazione di messaggi di risposta di accesso WS-Federation per ottenere il token generato dal servizio token di sicurezza (STS).</summary>
        <value>Oggetto <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da utilizzare per la deserializzazione di messaggi di risposta di accesso WS-Federation per ottenere il token generato dal servizio token di sicurezza (STS).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Tentativo di impostare la proprietà su <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>