<Type Name="RegistryAccessRule" FullName="System.Security.AccessControl.RegistryAccessRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="53807a30e81a5ee41228f200a61fc6dc40878e42" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37467048" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistryAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type RegistryAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="766ab-101">Represents a set of access rights allowed or denied for a user or group.</span>
      <span class="sxs-lookup">
        <span data-stu-id="766ab-101">Represents a set of access rights allowed or denied for a user or group.</span>
      </span>
      <span data-ttu-id="766ab-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="766ab-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="766ab-103">Il <xref:System.Security.AccessControl.RegistryAccessRule> classe fa parte di un set di classi .NET Framework fornisce per la gestione del controllo di accesso di Windows nelle chiavi del Registro di sistema.</span><span class="sxs-lookup"><span data-stu-id="766ab-103">The <xref:System.Security.AccessControl.RegistryAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</span></span> <span data-ttu-id="766ab-104">Per una panoramica di queste classi e la loro relazione con le strutture di controllo di accesso Windows, vedere <xref:System.Security.AccessControl.RegistrySecurity>.</span><span class="sxs-lookup"><span data-stu-id="766ab-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.RegistrySecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="766ab-105">Controllo di accesso di Windows è applicabile solo alle chiavi del Registro di sistema.</span><span class="sxs-lookup"><span data-stu-id="766ab-105">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="766ab-106">Non può essere applicato alle coppie chiave/valore singoli archiviate in una chiave.</span><span class="sxs-lookup"><span data-stu-id="766ab-106">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="766ab-107">Per ottenere un elenco delle regole attualmente applicato a una chiave del Registro di sistema, usare il <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> metodo per ottenere un <xref:System.Security.AccessControl.RegistrySecurity> dell'oggetto e quindi usare relativo <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> metodo per ottenere una raccolta di <xref:System.Security.AccessControl.RegistryAccessRule> oggetti.</span><span class="sxs-lookup"><span data-stu-id="766ab-107">To get a list of the rules currently applied to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.RegistryAccessRule> objects.</span></span>  
  
 <span data-ttu-id="766ab-108"><xref:System.Security.AccessControl.RegistryAccessRule> gli oggetti non viene eseguito il mapping uno a uno con voci di controllo di accesso nell'elenco di accesso di controllo discrezionale (DACL) sottostante.</span><span class="sxs-lookup"><span data-stu-id="766ab-108"><xref:System.Security.AccessControl.RegistryAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary control access list (DACL).</span></span> <span data-ttu-id="766ab-109">Quando si ottiene l'insieme di tutte le regole di accesso per una chiave del Registro di sistema, il set contiene il numero minimo di regole necessarie per esprimere tutte le voci di controllo di accesso.</span><span class="sxs-lookup"><span data-stu-id="766ab-109">When you get the set of all access rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="766ab-110">Le voci di controllo accesso cambiano durante l'applicazione e rimuovere le regole.</span><span class="sxs-lookup"><span data-stu-id="766ab-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="766ab-111">Le informazioni nelle regole vengono unite se possibile, per mantenere il minor numero di voci di controllo di accesso.</span><span class="sxs-lookup"><span data-stu-id="766ab-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="766ab-112">Di conseguenza, quando si legge l'elenco corrente delle regole, potrebbe non apparire esattamente come l'elenco di tutte le regole di cui che è stato aggiunto.</span><span class="sxs-lookup"><span data-stu-id="766ab-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="766ab-113">Usare <xref:System.Security.AccessControl.RegistryAccessRule> oggetti per specificare i diritti di accesso per consentire o negare a un utente o gruppo.</span><span class="sxs-lookup"><span data-stu-id="766ab-113">Use <xref:System.Security.AccessControl.RegistryAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="766ab-114">Oggetto <xref:System.Security.AccessControl.RegistryAccessRule> oggetto sempre rappresenta l'accesso consentito o negato l'accesso, non entrambi.</span><span class="sxs-lookup"><span data-stu-id="766ab-114">A <xref:System.Security.AccessControl.RegistryAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="766ab-115">Per applicare una regola a una chiave del Registro di sistema, usare il <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> metodo per ottenere il <xref:System.Security.AccessControl.RegistrySecurity> oggetto.</span><span class="sxs-lookup"><span data-stu-id="766ab-115">To apply a rule to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="766ab-116">Modificare il <xref:System.Security.AccessControl.RegistrySecurity> oggetto usando i metodi per aggiungere la regola e quindi usare il <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> metodo riconnettere l'oggetto di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="766ab-116">Modify the <xref:System.Security.AccessControl.RegistrySecurity> object by using its methods to add the rule, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="766ab-117">Le modifiche apportate a un <xref:System.Security.AccessControl.RegistrySecurity> oggetto non influiscono sui livelli di accesso della chiave del Registro di sistema finché non si chiama il <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> metodo a cui assegnare l'oggetto di sicurezza modificato per la chiave del Registro di sistema.</span><span class="sxs-lookup"><span data-stu-id="766ab-117">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="766ab-118"><xref:System.Security.AccessControl.RegistryAccessRule> gli oggetti non sono modificabili.</span><span class="sxs-lookup"><span data-stu-id="766ab-118"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="766ab-119">Modificare la protezione per una chiave del Registro di sistema usando i metodi del <xref:System.Security.AccessControl.RegistrySecurity> classe per aggiungere o rimuovere le regole, come in questo caso, le voci di controllo di accesso sottostante vengono modificate.</span><span class="sxs-lookup"><span data-stu-id="766ab-119">Security for a registry key is modified using the methods of the <xref:System.Security.AccessControl.RegistrySecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="766ab-120">L'esempio di codice seguente illustra le regole di accesso con ereditarietà e propagazione.</span><span class="sxs-lookup"><span data-stu-id="766ab-120">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="766ab-121">Nell'esempio viene creata una <xref:System.Security.AccessControl.RegistrySecurity> dell'oggetto, quindi crea e aggiunge due regole contenenti il <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span><span class="sxs-lookup"><span data-stu-id="766ab-121">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="766ab-122">La prima regola non dispone di alcun flag di propagazione, mentre il secondo contiene <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> e <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span><span class="sxs-lookup"><span data-stu-id="766ab-122">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="766ab-123">Il programma visualizza le regole nel <xref:System.Security.AccessControl.RegistrySecurity> dell'oggetto e quindi Usa l'oggetto per creare una sottochiave.</span><span class="sxs-lookup"><span data-stu-id="766ab-123">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the object to create a subkey.</span></span> <span data-ttu-id="766ab-124">Il programma crea un elemento figlio sottochiave e una sottochiave nipote e quindi Visualizza la sicurezza per ogni sottochiave.</span><span class="sxs-lookup"><span data-stu-id="766ab-124">The program creates a child subkey and a grandchild subkey, and then displays the security for each subkey.</span></span> <span data-ttu-id="766ab-125">Infine, il programma Elimina le chiavi di prova.</span><span class="sxs-lookup"><span data-stu-id="766ab-125">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="766ab-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="766ab-127">The user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-127">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="766ab-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="766ab-129">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-129">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="766ab-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="766ab-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="766ab-132">Questo costruttore viene specificato l'ereditarietà e propagazione predefinito.</span><span class="sxs-lookup"><span data-stu-id="766ab-132">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="766ab-133">Vale a dire <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> e <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="766ab-133">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="766ab-134">
            <paramref name="registryRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-134">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="766ab-135">-or-  <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-135">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="766ab-136">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-136">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="766ab-137">-or-  <paramref name="eventRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-137">-or-  <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="766ab-138">
            <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-138">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="766ab-139">The name of the user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-139">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="766ab-140">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-140">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="766ab-141">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-141">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="766ab-142">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-142">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="766ab-143">Questo costruttore viene specificato l'ereditarietà e propagazione predefinito.</span><span class="sxs-lookup"><span data-stu-id="766ab-143">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="766ab-144">Vale a dire <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> e <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="766ab-144">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="766ab-145">Questo costruttore è equivalente alla creazione di un <xref:System.Security.Principal.NTAccount> oggetti, passando `identity` per il <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> costruttore e passando l'oggetto appena creato <xref:System.Security.Principal.NTAccount> dell'oggetto per il <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="766ab-145">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="766ab-146">Esempio di codice seguente crea le regole di accesso del Registro di sistema e li aggiunge a un <xref:System.Security.AccessControl.RegistrySecurity> oggetto, mostrando come le regole che consentono la negano di diritti restano separate, mentre le regole compatibili dello stesso tipo viene unito.</span><span class="sxs-lookup"><span data-stu-id="766ab-146">The following code example creates registry access rules and adds them to a <xref:System.Security.AccessControl.RegistrySecurity> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="766ab-147">
            <paramref name="registryRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-147">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="766ab-148">-or-  <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-148">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="766ab-149">
            <paramref name="registryRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-149">
              <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="766ab-150">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-150">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="766ab-151">-or-  <paramref name="identity" /> is a zero-length string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-151">-or-  <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="766ab-152">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-152">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="766ab-153">The user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-153">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="766ab-154">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-154">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="766ab-155">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-155">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the rights allowed or denied.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="766ab-156">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-156">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="766ab-157">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-157">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="766ab-158">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-158">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="766ab-159">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-159">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="766ab-160">Tutte le chiavi del Registro di sistema sono contenitori, pertanto è l'unico flag di ereditarietà significativo per le chiavi del Registro di sistema di <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="766ab-160">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="766ab-161">Se questo flag non è specificato, il flag di propagazione sono ignorati ed è interessata solo la chiave di controllo immediata.</span><span class="sxs-lookup"><span data-stu-id="766ab-161">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="766ab-162">Se il flag è presente, la regola viene propagata come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="766ab-162">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="766ab-163">La tabella presuppone sia presente una sottochiave S con sottochiave figlio CS e sottochiave nipote GS.</span><span class="sxs-lookup"><span data-stu-id="766ab-163">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="766ab-164">Il percorso della sottochiave nipote è S\CS\GS.</span><span class="sxs-lookup"><span data-stu-id="766ab-164">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="766ab-165">Flag di propagazione</span><span class="sxs-lookup"><span data-stu-id="766ab-165">Propagation flags</span></span>|<span data-ttu-id="766ab-166">S</span><span class="sxs-lookup"><span data-stu-id="766ab-166">S</span></span>|<span data-ttu-id="766ab-167">CS</span><span class="sxs-lookup"><span data-stu-id="766ab-167">CS</span></span>|<span data-ttu-id="766ab-168">GS</span><span class="sxs-lookup"><span data-stu-id="766ab-168">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="766ab-169">x</span><span class="sxs-lookup"><span data-stu-id="766ab-169">X</span></span>|<span data-ttu-id="766ab-170">X</span><span class="sxs-lookup"><span data-stu-id="766ab-170">X</span></span>|<span data-ttu-id="766ab-171">X</span><span class="sxs-lookup"><span data-stu-id="766ab-171">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="766ab-172">X</span><span class="sxs-lookup"><span data-stu-id="766ab-172">X</span></span>|<span data-ttu-id="766ab-173">X</span><span class="sxs-lookup"><span data-stu-id="766ab-173">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="766ab-174">X</span><span class="sxs-lookup"><span data-stu-id="766ab-174">X</span></span>|<span data-ttu-id="766ab-175">x</span><span class="sxs-lookup"><span data-stu-id="766ab-175">X</span></span>|  
|<span data-ttu-id="766ab-176"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="766ab-176"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="766ab-177">x</span><span class="sxs-lookup"><span data-stu-id="766ab-177">X</span></span>||  
  
 <span data-ttu-id="766ab-178">Il modello predefinito della sottochiave nipote gestisce tutte le sottochiavi della sottochiave nipote contenute.</span><span class="sxs-lookup"><span data-stu-id="766ab-178">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="766ab-179">Ad esempio, se il <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> viene specificato il flag `inheritanceFlags` e il <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> viene specificato il flag di propagazione `propagationFlags`, questa regola non è valida per la sottochiave immediata, ma si applicano a tutte le relative sottochiavi figlio immediati e a tutte le sottochiavi Queste immagini contengono.</span><span class="sxs-lookup"><span data-stu-id="766ab-179">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="766ab-180">Sebbene sia possibile specificare il <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag per `inheritanceFlags`, non ha senso in questo modo.</span><span class="sxs-lookup"><span data-stu-id="766ab-180">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="766ab-181">Ai fini di controllo di accesso, le coppie nome/valore in una sottochiave non sono oggetti separati.</span><span class="sxs-lookup"><span data-stu-id="766ab-181">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="766ab-182">Diritti di accesso alle coppie nome/valore vengono controllati in base ai diritti della sottochiave.</span><span class="sxs-lookup"><span data-stu-id="766ab-182">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="766ab-183">Inoltre, poiché tutte le sottochiavi sono contenitori (vale a dire possono contenere altri sottochiavi), non vengono influenzati dal <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span><span class="sxs-lookup"><span data-stu-id="766ab-183">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="766ab-184">Infine, se si specifica il <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag inutilmente complica la gestione delle regole, perché interferisce con la combinazione di regole in caso contrario compatibile.</span><span class="sxs-lookup"><span data-stu-id="766ab-184">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="766ab-185">
            <paramref name="registryRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-185">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="766ab-186">-or-  <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-186">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="766ab-187">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-187">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="766ab-188">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-188">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="766ab-189">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-189">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="766ab-190">-or-  <paramref name="registryRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-190">-or-  <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="766ab-191">
            <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-191">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="766ab-192">The name of the user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-192">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="766ab-193">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-193">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="766ab-194">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-194">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="766ab-195">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-195">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="766ab-196">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-196">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="766ab-197">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-197">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="766ab-198">Tutte le chiavi del Registro di sistema sono contenitori, pertanto è l'unico flag di ereditarietà significativo per le chiavi del Registro di sistema di <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="766ab-198">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="766ab-199">Se questo flag non è specificato, il flag di propagazione sono ignorati ed è interessata solo la chiave di controllo immediata.</span><span class="sxs-lookup"><span data-stu-id="766ab-199">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="766ab-200">Se il flag è presente, la regola viene propagata come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="766ab-200">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="766ab-201">La tabella presuppone sia presente una sottochiave S con sottochiave figlio CS e sottochiave nipote GS.</span><span class="sxs-lookup"><span data-stu-id="766ab-201">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="766ab-202">Il percorso della sottochiave nipote è S\CS\GS.</span><span class="sxs-lookup"><span data-stu-id="766ab-202">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="766ab-203">Flag di propagazione</span><span class="sxs-lookup"><span data-stu-id="766ab-203">Propagation flags</span></span>|<span data-ttu-id="766ab-204">S</span><span class="sxs-lookup"><span data-stu-id="766ab-204">S</span></span>|<span data-ttu-id="766ab-205">CS</span><span class="sxs-lookup"><span data-stu-id="766ab-205">CS</span></span>|<span data-ttu-id="766ab-206">GS</span><span class="sxs-lookup"><span data-stu-id="766ab-206">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="766ab-207">x</span><span class="sxs-lookup"><span data-stu-id="766ab-207">X</span></span>|<span data-ttu-id="766ab-208">X</span><span class="sxs-lookup"><span data-stu-id="766ab-208">X</span></span>|<span data-ttu-id="766ab-209">X</span><span class="sxs-lookup"><span data-stu-id="766ab-209">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="766ab-210">X</span><span class="sxs-lookup"><span data-stu-id="766ab-210">X</span></span>|<span data-ttu-id="766ab-211">X</span><span class="sxs-lookup"><span data-stu-id="766ab-211">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="766ab-212">X</span><span class="sxs-lookup"><span data-stu-id="766ab-212">X</span></span>|<span data-ttu-id="766ab-213">x</span><span class="sxs-lookup"><span data-stu-id="766ab-213">X</span></span>|  
|<span data-ttu-id="766ab-214"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="766ab-214"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="766ab-215">x</span><span class="sxs-lookup"><span data-stu-id="766ab-215">X</span></span>||  
  
 <span data-ttu-id="766ab-216">Il modello predefinito della sottochiave nipote gestisce tutte le sottochiavi della sottochiave nipote contenute.</span><span class="sxs-lookup"><span data-stu-id="766ab-216">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="766ab-217">Ad esempio, se il <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> viene specificato il flag `inheritanceFlags` e il <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> viene specificato il flag di propagazione `propagationFlags`, questa regola non è valida per la sottochiave immediata, ma si applicano a tutte le relative sottochiavi figlio immediati e a tutte le sottochiavi Queste immagini contengono.</span><span class="sxs-lookup"><span data-stu-id="766ab-217">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="766ab-218">Sebbene sia possibile specificare il <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag per `inheritanceFlags`, non ha senso in questo modo.</span><span class="sxs-lookup"><span data-stu-id="766ab-218">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="766ab-219">Ai fini di controllo di accesso, le coppie nome/valore in una sottochiave non sono oggetti separati.</span><span class="sxs-lookup"><span data-stu-id="766ab-219">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="766ab-220">Diritti di accesso alle coppie nome/valore vengono controllati in base ai diritti della sottochiave.</span><span class="sxs-lookup"><span data-stu-id="766ab-220">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="766ab-221">Inoltre, poiché tutte le sottochiavi sono contenitori (vale a dire possono contenere altri sottochiavi), non vengono influenzati dal <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span><span class="sxs-lookup"><span data-stu-id="766ab-221">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="766ab-222">Infine, se si specifica il <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag inutilmente complica la gestione delle regole, perché interferisce con la combinazione di regole in caso contrario compatibile.</span><span class="sxs-lookup"><span data-stu-id="766ab-222">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 <span data-ttu-id="766ab-223">Questo costruttore è equivalente alla creazione di un <xref:System.Security.Principal.NTAccount> oggetti, passando `identity` per il <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> costruttore e passando l'oggetto appena creato <xref:System.Security.Principal.NTAccount> dell'oggetto per il <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="766ab-223">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="766ab-224">L'esempio di codice seguente illustra le regole di accesso con ereditarietà e propagazione.</span><span class="sxs-lookup"><span data-stu-id="766ab-224">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="766ab-225">Nell'esempio viene creata una <xref:System.Security.AccessControl.RegistrySecurity> dell'oggetto, quindi crea e aggiunge due regole contenenti il <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span><span class="sxs-lookup"><span data-stu-id="766ab-225">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, and then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="766ab-226">La prima regola non dispone di alcun flag di propagazione, mentre il secondo contiene <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> e <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span><span class="sxs-lookup"><span data-stu-id="766ab-226">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="766ab-227">Il programma visualizza le regole nel <xref:System.Security.AccessControl.RegistrySecurity> oggetto e quindi Usa il <xref:System.Security.AccessControl.RegistrySecurity> oggetto per creare una sottochiave.</span><span class="sxs-lookup"><span data-stu-id="766ab-227">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the <xref:System.Security.AccessControl.RegistrySecurity> object to create a subkey.</span></span> <span data-ttu-id="766ab-228">Il programma crea un elemento figlio sottochiave e una sottochiave nipote e quindi Visualizza le regole per ogni sottochiave.</span><span class="sxs-lookup"><span data-stu-id="766ab-228">The program creates a child subkey and a grandchild subkey, and then displays the rules for each subkey.</span></span> <span data-ttu-id="766ab-229">Infine, il programma Elimina le chiavi di prova.</span><span class="sxs-lookup"><span data-stu-id="766ab-229">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="766ab-230">
            <paramref name="registryRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-230">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="766ab-231">-or-  <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-231">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="766ab-232">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-232">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="766ab-233">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-233">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="766ab-234">
            <paramref name="eventRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-234">
              <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="766ab-235">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-235">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="766ab-236">-or-  <paramref name="identity" /> is a zero-length string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-236">-or-  <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="766ab-237">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-237">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="766ab-238">Gets the rights allowed or denied by the access rule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-238">Gets the rights allowed or denied by the access rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="766ab-239">Una combinazione bit per bit di <see cref="T:System.Security.AccessControl.RegistryRights" /> valori che indicano i diritti concessi o negati dalla regola di accesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="766ab-239">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied by the access rule.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="766ab-240"><xref:System.Security.AccessControl.RegistryAccessRule> gli oggetti non sono modificabili.</span><span class="sxs-lookup"><span data-stu-id="766ab-240"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="766ab-241">È possibile creare una nuova regola di accesso che rappresenta un utente diverso, diritti differenti o un altro <xref:System.Security.AccessControl.AccessControlType>, ma non è possibile modificare una regola di accesso esistente.</span><span class="sxs-lookup"><span data-stu-id="766ab-241">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>