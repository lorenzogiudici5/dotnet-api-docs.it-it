<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MutexSecurity.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac532296db222ea6141fe27393ef3e6f899d0231f0f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32296db222ea6141fe27393ef3e6f899d0231f0f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Represents the Windows access control security for a named mutex.</source>
          <target state="translated">Rappresenta la sicurezza del controllo di accesso di Windows per un mutex denominato.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>This class cannot be inherited.</source>
          <target state="translated">Questa classe non può essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object specifies access rights for a named system mutex, and also specifies how access attempts are audited.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto specifica i diritti di accesso per un mutex di sistema denominato e inoltre specifica come vengono controllati i tentativi di accesso.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Access rights to the mutex are expressed as rules, with each access rule represented by a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> object.</source>
          <target state="translated">Diritti di accesso per il mutex sono espressi come regole, con ogni regola di accesso rappresentato da un <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Each auditing rule is represented by a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> object.</source>
          <target state="translated">Ogni regola di controllo è rappresentato da un <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</source>
          <target state="translated">Questa situazione rispecchia il sistema di sicurezza di Windows sottostante, in cui ogni oggetto a protezione diretta dispone al massimo un controllo di accesso discrezionale elenco di controllo (DACL) che controlla l'accesso per l'oggetto protetto e al massimo un accesso elenco di controllo sistema (SACL) che specifica che l'accesso vengono controllati i tentativi.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</source>
          <target state="translated">Gli elenchi DACL e SACL sono elenchi ordinati di voci di controllo di accesso (ACE) che specificano l'accesso e controllo per utenti e gruppi.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> object might represent more than one ACE.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> o <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> oggetto potrebbe rappresentare più di una voce ACE.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object can represent a local mutex or a named system mutex.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> oggetto può rappresentare un mutex locale o un mutex di sistema denominato.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Windows access control security is meaningful only for named system mutexes.</source>
          <target state="translated">Controllo di accesso di Windows è significativo solo per i mutex di sistema denominato.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> classes hide the implementation details of ACLs and ACEs.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>, e <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> classi nascondono i dettagli di implementazione degli elenchi ACL e ACE.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</source>
          <target state="translated">Consentono di ignorare i diversi tipi ACE diciassette e la complessità della gestione corretta di ereditarietà e propagazione di diritti di accesso.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>These objects are also designed to prevent the following common access control errors:</source>
          <target state="translated">Questi oggetti sono progettati anche per evitare gli errori di controllo accesso comuni seguenti:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Creating a security descriptor with a null DACL.</source>
          <target state="translated">Creazione di un descrittore di sicurezza con un elenco DACL.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</source>
          <target state="translated">Un riferimento null a un elenco DACL consente agli utenti di aggiungere le regole di accesso a un oggetto, potenzialmente la creazione di un attacco denial of service.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A new <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object always starts with an empty DACL, which denies all access for all users.</source>
          <target state="translated">Un nuovo <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto inizia sempre con un elenco DACL vuoto, con cui viene negato l'accesso per tutti gli utenti.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Violating the canonical ordering of ACEs.</source>
          <target state="translated">Violazione dell'ordine canonico delle voci ACE.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</source>
          <target state="translated">Se l'elenco di voci ACE nell'elenco DACL non viene mantenuta in ordine canonico, potrebbe essere inavvertitamente concesso l'accesso all'oggetto protetto.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>For example, denied access rights must always appear before allowed access rights.</source>
          <target state="translated">Ad esempio, i diritti di accesso negato devono trovarsi sempre prima diritti di accesso consentito.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objects maintain the correct order internally.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> gli oggetti mantengono l'ordine corretto internamente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Manipulating security descriptor flags, which should be under resource manager control only.</source>
          <target state="translated">La manipolazione dei flag del descrittore di sicurezza, che deve essere controllata resource manager solo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Creating invalid combinations of ACE flags.</source>
          <target state="translated">Creazione di combinazioni di flag ACE non valide.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Manipulating inherited ACEs.</source>
          <target state="translated">Modifica di voci ACE ereditate.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</source>
          <target state="translated">Ereditarietà e propagazione vengono gestiti dal gestore delle risorse, in risposta alle modifiche apportate alle regole di accesso e controllo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Inserting meaningless ACEs into ACLs.</source>
          <target state="translated">Inserimento di voci ACE non significative in ACL.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</source>
          <target state="translated">Le uniche funzionalità non supportate dagli oggetti di sicurezza .NET sono le attività pericolose che dovrebbero essere evitate dalla maggior parte degli sviluppatori di applicazioni, ad esempio le operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Low-level tasks that are normally performed by the resource manager.</source>
          <target state="translated">Attività di basso livello che sono in genere eseguita dal gestore delle risorse.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Adding or removing access control entries in ways that do not maintain the canonical ordering.</source>
          <target state="translated">Aggiunta o rimozione di voci di controllo di accesso in modo che non manutenzione l'ordinamento canonico.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>To modify Windows access control security for a named mutex, use the <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">Per modificare il controllo di accesso di Windows per un mutex denominato, usare il <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> metodo per ottenere il <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Modify the security object by adding and removing rules, and then use the <ph id="ph1">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to reattach it.</source>
          <target state="translated">Modificare l'oggetto di sicurezza aggiungendo e rimuovendo le regole e quindi utilizzare il <ph id="ph1">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> metodo per collegarlo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Changes you make to a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object do not affect the access levels of the named mutex until you call the <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to assign the altered security object to the named mutex.</source>
          <target state="translated">Le modifiche apportate a un <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto non influiscono sui livelli di accesso del mutex denominato finché non si chiama il <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> metodo a cui assegnare l'oggetto di sicurezza modificato al mutex denominato.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>To copy access control security from one mutex to another, use the <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get a <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object representing the access and audit rules for the first mutex, and then use the <ph id="ph3">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method, or a constructor that accepts a <ph id="ph4">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, to assign those rules to the second mutex.</source>
          <target state="translated">Per copiare la sicurezza del controllo di accesso da un mutex a un altro, utilizzare il <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> metodo per ottenere un <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto che rappresenta le regole di accesso e controllo per il primo mutex e quindi utilizzare il <ph id="ph3">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> metodo o un costruttore che accetta un <ph id="ph4">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>oggetto, per assegnare tali regole al secondo mutex.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Users with an investment in the security descriptor definition language (SDDL) can use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> method to set access rules for a named mutex, and the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> method to obtain a string that represents the access rules in SDDL format.</source>
          <target state="translated">Gli utenti con un investimento nel linguaggio di definizione descrittore di sicurezza (SDDL) possono usare il <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> per impostare regole di accesso per un mutex denominato e il <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> metodo per ottenere una stringa che rappresenta le regole di accesso in formato SDDL.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>This is not recommended for new development.</source>
          <target state="translated">Questa operazione è sconsigliata per i nuovi sviluppi.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">Sicurezza degli oggetti di sincronizzazione non è supportata per Windows 98 o Windows Millennium Edition.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The following code example demonstrates the separation between <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules, and shows the combination of rights in compatible rules.</source>
          <target state="translated">L'esempio di codice seguente illustra la separazione tra <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regole e <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> regole e Mostra la combinazione di diritti nelle regole compatibili.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto, vengono aggiunte regole che concedono e negano diversi diritti per l'utente corrente e consente di visualizzare la coppia di regole risultante.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">Nell'esempio viene quindi concessi nuovi diritti per l'utente corrente e viene visualizzato il risultato, che mostra i nuovi diritti vengono uniti con esistente <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regola.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Questo esempio non viene associato l'oggetto di sicurezza per un <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Esempi di oggetti di sicurezza possono essere individuati <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class with default values.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> con i valori predefiniti.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</source>
          <target state="translated">Un nuovo <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto inizia sempre con un elenco vuoto di accesso discrezionale (DACL), che nega l'accesso per tutti gli utenti.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor">
          <source>This class is not supported on Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">Questa classe non è supportata in Windows 98 o Windows Millennium Edition.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The name of the system mutex whose access control security rules are to be retrieved.</source>
          <target state="translated">Nome del mutex di sistema di cui verranno recuperate le regole di sicurezza del controllo di accesso.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>A combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> flags specifying the sections to retrieve.</source>
          <target state="translated">Combinazione di flag <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> che specificano le sezioni da recuperare.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class with the specified sections of the access control security rules from the system mutex with the specified name.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> con le sezioni specificate delle regole di sicurezza del controllo di accesso relative al mutex di sistema con il nome specificato.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>This constructor allows you to obtain the access control security for a named system mutex without first creating a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Questo costruttore consente di ottenere la sicurezza del controllo di accesso per un mutex di sistema denominato senza prima creare un <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Caution must be exercised when working with named system objects.</source>
          <target state="translated">Occorre prestare attenzione quando si utilizzano oggetti di sistema denominato.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>If there is a system object named <ph id="ph1">`name`</ph> that is not a mutex, its control access security might be retrieved.</source>
          <target state="translated">Se è disponibile un oggetto di sistema denominato <ph id="ph1">`name`</ph> che non rappresenta un mutex, potrebbe essere recuperata la sicurezza del controllo di accesso.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>There is no system object with the specified name.</source>
          <target state="translated">Non è presente alcun oggetto di sistema con il nome specificato.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>This class is not supported on Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">Questa classe non è supportata in Windows 98 o Windows Millennium Edition.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
          <source>Gets the enumeration that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class uses to represent access rights.</source>
          <target state="translated">Ottiene l'enumerazione utilizzata dalla classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> per rappresentare i diritti di accesso.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> enumeration.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che rappresenta l'enumerazione <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph> property and return the type they use to represent access rights.</source>
          <target state="translated">Le classi che derivano dal <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> classe sostituzione il <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph> proprietà e restituiscono il tipo utilizzato per rappresentare i diritti di accesso.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di enumerazione appropriata da utilizzare con ogni oggetto di sicurezza.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> that identifies the user or group the rule applies to.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> che identifica l'utente o il gruppo a cui viene applicata la regola.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> values specifying the access rights to allow or deny, cast to an integer.</source>
          <target state="translated">Combinazione bit per bit di valori <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> che specificano i diritti di accesso da concedere o negare, per effettuare il cast in un intero.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Meaningless for named mutexes, because they have no hierarchy.</source>
          <target state="translated">Non significativo per i mutex denominati, perché non hanno gerarchia.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Meaningless for named mutexes, because they have no hierarchy.</source>
          <target state="translated">Non significativo per i mutex denominati, perché non hanno gerarchia.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Meaningless for named mutexes, because they have no hierarchy.</source>
          <target state="translated">Non significativo per i mutex denominati, perché non hanno gerarchia.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> che specificano se i diritti sono concessi o negati.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</source>
          <target state="translated">Crea una nuova regola di controllo di accesso per l'utente specificato, con i diritti di accesso, il controllo di accesso e i flag specificati.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> object representing the specified rights for the specified user.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> che rappresenta i diritti specificati per l'utente specificato.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The recommended way to create access control rules is to use the constructors of the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> class.</source>
          <target state="translated">Il metodo consigliato per creare le regole di controllo di accesso consiste nell'utilizzare i costruttori del <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Although inheritance and propagation flags are meaningless for named mutexes, it is still possible to specify them.</source>
          <target state="translated">Anche se i flag di ereditarietà e propagazione sono significativi per i mutex, è comunque possibile specificarli.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">Questa opzione non è consigliata perché complica inutilmente la gestione delle regole, ad esempio da interferire con la combinazione di regole che verrebbero altrimenti compatibili.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph> o <ph id="ph4">&lt;paramref name="type" /&gt;</ph> specifica un valore non valido.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> è zero.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>, nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> non è di tipo <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> né di un tipo quale <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> convertibile nel tipo <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
          <source>Gets the type that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class uses to represent access rules.</source>
          <target state="translated">Ottiene il tipo utilizzato dalla classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> per rappresentare le regole di accesso.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> class.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che rappresenta la classe <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph> property and return the type they use to represent access rules.</source>
          <target state="translated">Le classi che derivano dal <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> classe sostituzione il <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph> proprietà e restituiscono il tipo utilizzato per rappresentare le regole di accesso.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</source>
          <target state="translated">Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di regola di accesso corretto da utilizzare con ogni oggetto di sicurezza.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The access control rule to add.</source>
          <target state="translated">Regola di controllo di accesso da aggiungere.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Searches for a matching access control rule with which the new rule can be merged.</source>
          <target state="translated">Cerca una regola di controllo di accesso corrispondente a cui è possibile unire la nuova regola.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">Se non viene trovata alcuna regola, viene aggiunta la nuova regola.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AddAccessRule%2A&gt;</ph> method searches for rules with the same user or group and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AddAccessRule%2A&gt;</ph> metodo cerca le regole con lo stesso utente o gruppo e lo stesso <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> come <ph id="ph3">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Se non vengono rilevati, <ph id="ph1">`rule`</ph> viene aggiunto.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If a matching rule is found, the rights in <ph id="ph1">`rule`</ph> are merged with the existing rule.</source>
          <target state="translated">Se una regola di corrispondenza viene trovato, i diritti in <ph id="ph1">`rule`</ph> vengono unite con la regola esistente.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example demonstrates the separation between <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules, and shows the combination of rights in compatible rules.</source>
          <target state="translated">L'esempio di codice seguente illustra la separazione tra <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regole e <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> regole e Mostra la combinazione di diritti nelle regole compatibili.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto, vengono aggiunte regole che concedono e negano diversi diritti per l'utente corrente e consente di visualizzare la coppia di regole risultante.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">Nell'esempio viene quindi concessi nuovi diritti per l'utente corrente e viene visualizzato il risultato, che mostra i nuovi diritti vengono uniti con esistente <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regola.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Questo esempio non viene associato l'oggetto di sicurezza per un <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Esempi di oggetti di sicurezza possono essere individuati <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> cannot be mapped to a known identity.</source>
          <target state="translated">Non è possibile eseguire il mapping di <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> a un'identità nota.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The audit rule to add.</source>
          <target state="translated">Regola di controllo da aggiungere.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The user specified by this rule determines the search.</source>
          <target state="translated">L'utente specificato dalla regola determina la ricerca.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Searches for an audit rule with which the new rule can be merged.</source>
          <target state="translated">Cerca una regola di controllo a cui è possibile unire la nuova regola.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">Se non viene trovata alcuna regola, viene aggiunta la nuova regola.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AddAuditRule%2A&gt;</ph> method searches for rules with the same user or group as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AddAuditRule%2A&gt;</ph> il metodo di ricerca per le regole con lo stesso utente o gruppo come <ph id="ph2">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Se non vengono rilevati, <ph id="ph1">`rule`</ph> viene aggiunto.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If a matching rule is found, the flags in <ph id="ph1">`rule`</ph> are merged into the existing rule.</source>
          <target state="translated">Se una regola di corrispondenza viene trovato, il flag in <ph id="ph1">`rule`</ph> vengono unite alla regola esistente.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> that identifies the user or group the rule applies to.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> che identifica l'utente o il gruppo a cui viene applicata la regola.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> values specifying the access rights to audit, cast to an integer.</source>
          <target state="translated">Combinazione bit per bit di valori <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> che specificano i diritti di accesso da controllare, per effettuare il cast in un intero.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> values that specify whether to audit successful access, failed access, or both.</source>
          <target state="translated">Combinazione bit per bit di valori <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> che specificano se controllare l'accesso riuscito, l'accesso non riuscito o entrambi.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</source>
          <target state="translated">Crea una nuova regola di controllo che specifica l'utente a cui viene applicata la regola, i diritti di accesso da controllare e il risultato che attiva la regola di controllo.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> object representing the specified audit rule for the specified user.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> che rappresenta la regola di controllo specificata per l'utente specificato.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The return type of the method is the base class, <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph>, but the return value can be cast safely to the derived class.</source>
          <target state="translated">Il tipo restituito del metodo è la classe base, <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph>, ma è possibile effettuare in maniera sicura il cast del valore restituito nella classe derivata.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The recommended way to create audit rules is to use the constructors of the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> class.</source>
          <target state="translated">Il metodo consigliato per creare regole di controllo consiste nell'utilizzare i costruttori del <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Although inheritance and propagation flags are meaningless for named mutexes, it is still possible to specify them.</source>
          <target state="translated">Anche se i flag di ereditarietà e propagazione sono significativi per i mutex, è comunque possibile specificarli.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">Questa opzione non è consigliata perché complica inutilmente la gestione delle regole, ad esempio da interferire con la combinazione di regole che verrebbero altrimenti compatibili.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="flags" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph> o <ph id="ph4">&lt;paramref name="flags" /&gt;</ph> specifica un valore non valido.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> è zero.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>, nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> non è di tipo <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> né di un tipo quale <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> convertibile nel tipo <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
          <source>Gets the type that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class uses to represent audit rules.</source>
          <target state="translated">Ottiene il tipo utilizzato dalla classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> per rappresentare le regole di controllo.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> class.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che rappresenta la classe <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph> property and return the type they use to represent audit rights.</source>
          <target state="translated">Le classi che derivano dal <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> classe sostituzione il <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph> proprietà e restituiscono il tipo utilizzato per rappresentare i diritti di controllo.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</source>
          <target state="translated">Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di regola di controllo appropriata da utilizzare con ogni oggetto di sicurezza.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> that specifies the user and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> che specifica l'utente e la classe <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> da ricercare, nonché un insieme di flag di ereditarietà e propagazione con cui deve essere compatibile una regola corrispondente, se trovata.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">Specifica i diritti da rimuovere dalla regola compatibile, se trovati.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Searches for an access control rule with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</source>
          <target state="translated">Cerca una regola di controllo di accesso con lo stesso utente e la stessa classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (consenso o negazione) della regola specificata e con i flag di ereditarietà e propagazione compatibili. Se viene trovata una regola simile, i diritti contenuti nella regola di accesso specificata vengono rimossi da essa.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a compatible rule is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se viene trovata una regola compatibile; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> is searched for a rule that has the same user and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> value as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated">Corrente <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> viene cercata una regola con lo stesso utente e la stessa <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> valore come <ph id="ph3">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se non viene trovata alcuna tale regola viene eseguita alcuna azione e il metodo restituisce <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">Se vengono rilevate le regole di corrispondenza, ereditarietà e compatibilità vengono controllati per garantire la compatibilità con i flag specificati in <ph id="ph1">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se viene trovata alcuna regola compatibile, viene eseguita alcuna azione e il metodo restituisce <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Se viene trovata una regola con flag compatibili, i diritti specificati <ph id="ph1">`rule`</ph> vengono rimossi dalla regola compatibile, e il metodo restituisce <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">Se <ph id="ph1">`rule`</ph> specifica i diritti non contenuti nella regola compatibile, viene eseguita alcuna azione relativamente a tali diritti.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">Se tutti i diritti vengono rimossi dalla regola compatibile, l'intera regola viene rimosso dall'oggetto corrente <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Although you can specify inheritance and propagation flags for mutex access rules, by creating them with the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A&gt;</ph> method, this is not recommended.</source>
          <target state="translated">Sebbene sia possibile specificare flag di ereditarietà e propagazione per le regole di accesso mutex creandoli con il <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A&gt;</ph> (metodo), questa operazione è sconsigliata.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Inheritance and propagation have no meaning for named mutexes, and they make the maintenance of access rules more complicated.</source>
          <target state="translated">Ereditarietà e propagazione non hanno alcun significato per i mutex e rendono più complessa la gestione delle regole di accesso.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A&gt;</ph> method to remove rights from an <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule in a <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A&gt;</ph> metodo per rimuovere diritti da un <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regola in un <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>It also shows that other rights in <ph id="ph1">`rule`</ph> are ignored.</source>
          <target state="translated">Viene inoltre illustrato che gli altri diritti in <ph id="ph1">`rule`</ph> vengono ignorati.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> dell'oggetto e aggiunge le regole che concedono e negano diversi diritti per l'utente corrente.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The rights allowed include <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.Modify&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize&gt;</ph>.</source>
          <target state="translated">I diritti concessi sono <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.Modify&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph>, e <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then creates a new rule for the current user, including <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.TakeOwnership&gt;</ph> rights, and uses that rule with the <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A&gt;</ph> method to remove <ph id="ph4">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph> from the <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule in the <ph id="ph6">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">Nell'esempio viene quindi creata una nuova regola per l'utente corrente, inclusi <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph> e <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.TakeOwnership&gt;</ph> diritti e utilizzata con la <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A&gt;</ph> metodo per rimuovere <ph id="ph4">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph> dal <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regola nel <ph id="ph6">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The extraneous <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.TakeOwnership&gt;</ph> right in <ph id="ph2">`rule`</ph> is ignored.</source>
          <target state="translated">L'estranei <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.TakeOwnership&gt;</ph> direttamente in <ph id="ph2">`rule`</ph> viene ignorato.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Questo esempio non viene associato l'oggetto di sicurezza per un <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Esempi di oggetti di sicurezza possono essere individuati <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> that specifies the user and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> to search for.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> che specifica l'utente e la classe <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> da ricercare.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>Any rights specified by this rule are ignored.</source>
          <target state="translated">Qualsiasi diritto specificato da questa regola viene ignorato.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>Searches for all access control rules with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule and, if found, removes them.</source>
          <target state="translated">Cerca tutte le regole di controllo di accesso con lo stesso utente e la stessa classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (consenso o negazione) della regola specificata e, se trovate, le rimuove.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object is searched for rules that have the same user and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> value as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated">Corrente <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> viene eseguita la ricerca per le regole che presentano lo stesso utente e lo stesso oggetto <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> valore come <ph id="ph3">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">Qualsiasi diritto specificato da <ph id="ph1">`rule`</ph> vengono ignorati quando si esegue la ricerca.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">Se non è stata trovata alcuna regola corrispondente, viene eseguita alcuna azione.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example shows that the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll%2A&gt;</ph> method removes all rules that match user and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, ignoring rights.</source>
          <target state="translated">Esempio di codice seguente mostra che il <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll%2A&gt;</ph> metodo rimuove tutte le regole che corrispondono a utente e <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, ignorando i diritti.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto, vengono aggiunte regole che concedono e negano diversi diritti per l'utente corrente e quindi unisce diritti aggiuntivi nel <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regola.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then creates a new rule that allows the current user to take ownership, and uses that rule to remove the <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule from the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">Nell'esempio viene quindi creata una nuova regola che consente all'utente di assumere la proprietà corrente e tale regola viene utilizzata per rimuovere il <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regola dal <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Questo esempio non viene associato l'oggetto di sicurezza per un <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Esempi di oggetti di sicurezza possono essere individuati <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> to remove.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> da rimuovere.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">Cerca una regola di controllo di accesso che corrisponde esattamente alla regola specificata e, se trovata, la rimuove.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">La regola viene rimosso solo se corrisponde esattamente a <ph id="ph1">`rule`</ph> in tutti i dettagli, compresi i flag.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>Other rules with the same user and <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> are not affected.</source>
          <target state="translated">Le altre regole con lo stesso utente e <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> non sono interessate.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</source>
          <target state="translated">Una regola rappresenta uno o più voci di controllo di accesso (ACE) sottostanti e tali voci vengono suddivise o combinate necessarie quando si modificano le regole di sicurezza di accesso per un utente.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method cannot remove it.</source>
          <target state="translated">Di conseguenza, una regola potrebbe non esistere più nel formato che aveva al momento dell'aggiunta e in tal caso il <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> (metodo) non è possibile rimuoverlo.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example shows that the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method requires an exact match in order to remove a rule, and that rules to allow and deny rights are independent of each other.</source>
          <target state="translated">Esempio di codice seguente mostra che il <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> metodo richiede una corrispondenza esatta per rimuovere una regola, e che le regole per consentire e negare i diritti sono indipendenti tra loro.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> access rule.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto, vengono aggiunte regole che concedono e negano diversi diritti per l'utente corrente e quindi unisce diritti aggiuntivi nel <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regola di accesso.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then passes the original <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule to the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method, and displays the results, showing that nothing is deleted.</source>
          <target state="translated">Nell'esempio viene quindi passato originale <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regola per il <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> metodo e consente di visualizzare i risultati, che mostra che non viene eliminato.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then constructs a rule that matches the <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule in the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, and successfully uses the <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method to remove the rule.</source>
          <target state="translated">L'esempio crea quindi una regola che corrisponde il <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regola nel <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto e, completato, viene utilizzato il <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> metodo per rimuovere la regola.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Questo esempio non viene associato l'oggetto di sicurezza per un <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Esempi di oggetti di sicurezza possono essere individuati <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> che specifica l'utente da ricercare e un insieme di flag di ereditarietà e propagazione con cui deve essere compatibile una regola corrispondente, se trovata.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">Specifica i diritti da rimuovere dalla regola compatibile, se trovati.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</source>
          <target state="translated">Cerca una regola di controllo con lo stesso utente della regola specificata e con i flag di ereditarietà e propagazione compatibili. Se viene trovata una regola simile, i diritti contenuti nella regola specificata vengono rimossi da essa.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a compatible rule is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se viene trovata una regola compatibile; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> is searched for an audit rule that has the same user as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated">Corrente <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> viene cercata una regola di controllo con lo stesso utente <ph id="ph2">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se non viene trovata alcuna tale regola viene eseguita alcuna azione e il metodo restituisce <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">Se vengono rilevate le regole di corrispondenza, ereditarietà e compatibilità vengono controllati per garantire la compatibilità con i flag specificati in <ph id="ph1">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se viene trovata alcuna regola compatibile, viene eseguita alcuna azione e il metodo restituisce <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Se viene trovata una regola con flag compatibili, i diritti specificati <ph id="ph1">`rule`</ph> vengono rimossi dalla regola compatibile, e il metodo restituisce <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">Se <ph id="ph1">`rule`</ph> specifica i diritti non contenuti nella regola compatibile, viene eseguita alcuna azione relativamente a tali diritti.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">Se tutti i diritti vengono rimossi dalla regola compatibile, l'intera regola viene rimosso dall'oggetto corrente <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Although you can specify inheritance and propagation flags for mutex audit rules, by creating them with the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A&gt;</ph> method, this is not recommended.</source>
          <target state="translated">Sebbene sia possibile specificare flag di ereditarietà e propagazione per le regole di controllo dei mutex creandoli con il <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A&gt;</ph> (metodo), questa operazione è sconsigliata.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Inheritance and propagation have no meaning for named mutexes, and they make the maintenance of audit rules more complicated.</source>
          <target state="translated">Ereditarietà e propagazione non hanno alcun significato per i mutex e rendono più complessa la gestione delle regole di controllo.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> that specifies the user to search for.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> che specifica l'utente da ricercare.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>Any rights specified by this rule are ignored.</source>
          <target state="translated">Qualsiasi diritto specificato da questa regola viene ignorato.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>Searches for all audit rules with the same user as the specified rule and, if found, removes them.</source>
          <target state="translated">Cerca tutte le regole di controllo in cui l'utente sia identico a quello della regola specificata e rimuove le regole trovate.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> is searched for audit rules that have the same user as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated">Corrente <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> viene eseguita la ricerca per le regole di controllo con lo stesso utente <ph id="ph2">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">Qualsiasi diritto specificato da <ph id="ph1">`rule`</ph> vengono ignorati quando si esegue la ricerca.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>All matching rules are removed.</source>
          <target state="translated">Tutte le regole corrispondenti vengono rimossi.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">Se non è stata trovata alcuna regola corrispondente, viene eseguita alcuna azione.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> to be removed.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> da rimuovere.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">Cerca una regola di controllo che corrisponde esattamente alla regola specificata e, se trovata, la rimuove.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">La regola viene rimosso solo se corrisponde esattamente a <ph id="ph1">`rule`</ph> in tutti i dettagli, compresi i flag.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>Other audit rules for the same user are not affected.</source>
          <target state="translated">Altre regole di controllo per lo stesso utente non sono interessate.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</source>
          <target state="translated">Una regola rappresenta uno o più voci di controllo di accesso (ACE) sottostanti e tali voci vengono suddivise o combinate necessarie quando si modificano le regole di sicurezza di controllo per un utente.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> method cannot remove it.</source>
          <target state="translated">Di conseguenza, una regola potrebbe non esistere più nel formato che aveva al momento dell'aggiunta e in tal caso il <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> (metodo) non è possibile rimuoverlo.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> to add.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> da aggiungere.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">L'utente specificato dalla regola determina le regole da rimuovere prima di aggiungere questa regola.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Removes all access control rules with the same user as the specified rule, regardless of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph>, and then adds the specified rule.</source>
          <target state="translated">Rimuove tutte le regole di controllo di accesso con lo stesso utente della regola specificata, a prescindere dalla classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph>, quindi aggiunge la regola specificata.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If there are no access rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Se non sono presenti regole di accesso il cui utente corrisponde a quello della regola specificata, <ph id="ph1">`rule`</ph> viene aggiunto.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example shows how the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A&gt;</ph> method replaces all rules for the matching user with the rule specified for the match.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene illustrato come la <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A&gt;</ph> metodo sostituisce tutte le regole per l'utente corrispondente con la regola specificata per la corrispondenza.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> dell'oggetto e aggiunge le regole che concedono e negano diversi diritti per l'utente corrente.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then creates a new rule that allows the current user full control, and uses the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A&gt;</ph> method to replace both of the existing rules with the new rule.</source>
          <target state="translated">Nell'esempio viene quindi creata una nuova regola che consente il controllo completo all'utente corrente e viene utilizzato il <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A&gt;</ph> metodo per sostituire le regole esistenti con la nuova regola.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Questo esempio non viene associato l'oggetto di sicurezza per un <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Esempi di oggetti di sicurezza possono essere individuati <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> to add.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> da aggiungere.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> of this rule determine the rules to remove before this rule is added.</source>
          <target state="translated">L'utente e la classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> della regola determinano le regole da rimuovere prima di aggiungere questa regola.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Removes all access control rules with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule, and then adds the specified rule.</source>
          <target state="translated">Rimuove tutte le regole di controllo di accesso con lo stesso utente e la stessa classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (consenso o negazione) della regola specificata, quindi aggiunge la regola specificata.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If the specified rule has <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>, the effect of this method is to remove all <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules for the specified user, replacing them with the specified rule.</source>
          <target state="translated">Se la regola specificata è <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>, l'effetto di questo metodo consiste nel rimuovere tutti <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regole per l'utente specificato, sostituirli con la regola specificata.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If the specified rule has <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>, all <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules for the specified user are replaced with the specified rule.</source>
          <target state="translated">Se la regola specificata è <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>tutti <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> vengono sostituite le regole per l'utente specificato con la regola specificata.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If there are no rules whose user and <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> match the specified rule, <ph id="ph2">`rule`</ph> is added.</source>
          <target state="translated">Se non esistono regole il cui utente e <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> corrispondono alla regola specificata, <ph id="ph2">`rule`</ph> viene aggiunto.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example shows how the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A&gt;</ph> method removes all rules that match both the user and the <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> of <ph id="ph3">`rule`</ph>, replacing them with <ph id="ph4">`rule`</ph>.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene illustrato come la <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A&gt;</ph> metodo rimuove tutte le regole che corrispondono all'utente e la <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> di <ph id="ph3">`rule`</ph>, sostituirli con <ph id="ph4">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> dell'oggetto e aggiunge le regole che concedono e negano diversi diritti per l'utente corrente.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then creates a new rule that allows the current user full control, and uses the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A&gt;</ph> method to replace the existing Allow rule with the new rule.</source>
          <target state="translated">Nell'esempio viene quindi creata una nuova regola che consente il controllo completo all'utente corrente e viene utilizzato il <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A&gt;</ph> metodo sostituire consentire regola con la nuova regola.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The rule that denies access is not affected.</source>
          <target state="translated">La regola che nega l'accesso non è stata interessata.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Questo esempio non viene associato l'oggetto di sicurezza per un <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Esempi di oggetti di sicurezza possono essere individuati <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> to add.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> da aggiungere.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">L'utente specificato dalla regola determina le regole da rimuovere prima di aggiungere questa regola.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Removes all audit rules with the same user as the specified rule, regardless of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> value, and then adds the specified rule.</source>
          <target state="translated">Rimuove tutte le regole di controllo con lo stesso utente della regola specificata, a prescindere dal valore di <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph>, quindi aggiunge la regola specificata.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If there are no audit rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Se non sono presenti regole di controllo il cui utente corrisponde a quello della regola specificata, <ph id="ph1">`rule`</ph> viene aggiunto.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>