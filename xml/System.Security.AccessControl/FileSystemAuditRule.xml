<Type Name="FileSystemAuditRule" FullName="System.Security.AccessControl.FileSystemAuditRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2b8d5a82afbc230ceadd8ba4d7b1a4a47b87307" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="it-IT" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52360174" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileSystemAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystemAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSystemAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type FileSystemAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un'astrazione di una voce di controllo di accesso (ACE, Access Control Entry) che definisce una regola di controllo per un file o una directory. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSystemAuditRule> classe rappresenta un'astrazione di una voce di controllo di accesso sottostante (ACE) che specifica un account utente, il tipo di accesso per fornire (lettura, scrittura e così via) e se si desidera eseguire il controllo.  Questa classe è inoltre possibile specificare come le regole di controllo vengono ereditate e propagate agli oggetti.  
  
 Per consentire a controllo di file e directory in Windows NT o versioni successive, è necessario abilitare i criteri di sicurezza dall'accesso di controllo nel computer.  Per impostazione predefinita, questo criterio è impostato su Nessun controllo.  
  
 Per abilitare i criteri di sicurezza dall'accesso di controllo, seguire i passaggi seguenti:  
  
1.  Aprire il **impostazioni protezione locale** snap-in Microsoft Management Console (MMC), che si trova nella cartella Strumenti di amministrazione.  
  
2.  Espandere la cartella Criteri locali e fare clic sulla cartella Criteri di controllo.  
  
3.  Fare doppio clic sul **Controlla accesso agli oggetti** voce nel riquadro di destra dello snap-in MMC, o fare doppio clic e scegliere Proprietà per visualizzare i **proprietà accesso oggetto controllo** nella finestra di dialogo.  
  
4.  Selezionare il **esito positivo** oppure **errore** caselle di controllo di registrazione riuscite o errori.  
  
 Si noti che una regola di controllo per un account utente richiede una regola di accesso corrispondente per lo stesso account utente.  
  
 Usare il <xref:System.Security.AccessControl.FileSystemAuditRule> classe per creare una nuova regola di controllo.  È possibile mantenere questa regola utilizzando il <xref:System.Security.AccessControl.FileSecurity> o <xref:System.Security.AccessControl.DirectorySecurity> classe.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Security.AccessControl.FileSystemAuditRule> classe per aggiungere e quindi rimuovere una regola di controllo da un file.  È necessario specificare un utente valido o un account di gruppo per eseguire questo esempio.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.FileSystemAuditRule" Usage="new System.Security.AccessControl.FileSystemAuditRule (identity, fileSystemRights, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Oggetto <see cref="T:System.Security.Principal.IdentityReference" /> che incapsula un riferimento a un account utente.</param>
        <param name="fileSystemRights">Uno dei valori <see cref="T:System.Security.AccessControl.FileSystemRights" /> che specificano il tipo di operazione associata alla regola di controllo.</param>
        <param name="flags">Uno dei valori <see cref="T:System.Security.AccessControl.AuditFlags" /> che specifica quando eseguire il controllo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> utilizzando un riferimento a un account utente, un valore che specifica il tipo di operazione associata alla regola di controllo e un valore che specifica quando eseguire il controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per creare una regola di controllo che è possibile mantenere utilizzando il <xref:System.Security.AccessControl.FileSecurity> o <xref:System.Security.AccessControl.DirectorySecurity> classe.  Le regole di controllo determinano quando e come azioni eseguite su oggetti di sistema, ad esempio file e cartelle, vengono registrate.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="identity" /> non è un oggetto <see cref="T:System.Security.Principal.IdentityReference" />.</exception>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="identity" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">È stata passata un'enumerazione errata al parametro <paramref name="flags" />.  
  
oppure 
È stato passato il valore <see cref="F:System.Security.AccessControl.AuditFlags.None" /> al parametro <paramref name="flags" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAuditRule(System::String ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAuditRule : string * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.FileSystemAuditRule" Usage="new System.Security.AccessControl.FileSystemAuditRule (identity, fileSystemRights, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Nome di un account utente.</param>
        <param name="fileSystemRights">Uno dei valori <see cref="T:System.Security.AccessControl.FileSystemRights" /> che specificano il tipo di operazione associata alla regola di controllo.</param>
        <param name="flags">Uno dei valori <see cref="T:System.Security.AccessControl.AuditFlags" /> che specifica quando eseguire il controllo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> utilizzando un nome di account utente, un valore che specifica il tipo di operazione associata alla regola di controllo e un valore che specifica quando eseguire il controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per creare una regola di controllo che è possibile mantenere utilizzando il <xref:System.Security.AccessControl.FileSecurity> o <xref:System.Security.AccessControl.DirectorySecurity> classe.  Le regole di controllo determinano quando e come azioni eseguite su oggetti di sistema, ad esempio file e cartelle, vengono registrate.  
  
 Il `identity` parametro deve identificare un account valido per il computer corrente o il dominio.  La stringa assume il formato seguente, dove `DOMAIN` è il nome di un nome di dominio o computer valido e `account` è il nome di un account utente valido in un dominio o computer: `DOMAIN\account`.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Security.AccessControl.FileSystemAuditRule> classe per aggiungere e quindi rimuovere una regola di controllo da un file.  È necessario specificare un utente valido o un account di gruppo per eseguire questo esempio.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">È stata passata un'enumerazione errata al parametro <paramref name="flags" />.  
  
oppure 
È stato passato il valore <see cref="F:System.Security.AccessControl.AuditFlags.None" /> al parametro <paramref name="flags" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.FileSystemAuditRule" Usage="new System.Security.AccessControl.FileSystemAuditRule (identity, fileSystemRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Oggetto <see cref="T:System.Security.Principal.IdentityReference" /> che incapsula un riferimento a un account utente.</param>
        <param name="fileSystemRights">Uno dei valori <see cref="T:System.Security.AccessControl.FileSystemRights" /> che specificano il tipo di operazione associata alla regola di controllo.</param>
        <param name="inheritanceFlags">Uno dei valori <see cref="T:System.Security.AccessControl.InheritanceFlags" /> che specificano come vengono propagate le maschere di accesso agli oggetti figlio.</param>
        <param name="propagationFlags">Uno dei valori <see cref="T:System.Security.AccessControl.PropagationFlags" /> che specificano come vengono propagate le voci di controllo di accesso agli oggetti figlio.</param>
        <param name="flags">Uno dei valori <see cref="T:System.Security.AccessControl.AuditFlags" /> che specifica quando eseguire il controllo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> utilizzando il nome di un riferimento a un account utente, un valore che specifica il tipo di operazione associata alla regola di controllo, un valore che determina come vengono ereditati i diritti, un valore che determina come vengono propagati i diritti e un valore che specifica quando eseguire il controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per creare una regola di controllo che è possibile mantenere utilizzando il <xref:System.Security.AccessControl.FileSecurity> o <xref:System.Security.AccessControl.DirectorySecurity> classe.  Le regole di controllo determinano quando e come azioni eseguite su oggetti di sistema, ad esempio file e cartelle, vengono registrate.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="identity" /> non è un oggetto <see cref="T:System.Security.Principal.IdentityReference" />.</exception>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="identity" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">È stata passata un'enumerazione errata al parametro <paramref name="flags" />.  
  
oppure 
È stato passato il valore <see cref="F:System.Security.AccessControl.AuditFlags.None" /> al parametro <paramref name="flags" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAuditRule(System::String ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAuditRule : string * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.FileSystemAuditRule" Usage="new System.Security.AccessControl.FileSystemAuditRule (identity, fileSystemRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Nome di un account utente.</param>
        <param name="fileSystemRights">Uno dei valori <see cref="T:System.Security.AccessControl.FileSystemRights" /> che specificano il tipo di operazione associata alla regola di controllo.</param>
        <param name="inheritanceFlags">Uno dei valori <see cref="T:System.Security.AccessControl.InheritanceFlags" /> che specificano come vengono propagate le maschere di accesso agli oggetti figlio.</param>
        <param name="propagationFlags">Uno dei valori <see cref="T:System.Security.AccessControl.PropagationFlags" /> che specificano come vengono propagate le voci di controllo di accesso agli oggetti figlio.</param>
        <param name="flags">Uno dei valori <see cref="T:System.Security.AccessControl.AuditFlags" /> che specifica quando eseguire il controllo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> utilizzando il nome di un account utente, un valore che specifica il tipo di operazione associata alla regola di controllo, un valore che determina come vengono ereditati i diritti, un valore che determina come vengono propagati i diritti e un valore che specifica quando eseguire il controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per creare una regola di controllo che è possibile mantenere utilizzando il <xref:System.Security.AccessControl.FileSecurity> o <xref:System.Security.AccessControl.DirectorySecurity> classe.  Le regole di controllo determinano quando e come azioni eseguite su oggetti di sistema, ad esempio file e cartelle, vengono registrate.  
  
 Il `identity` parametro deve identificare un account valido per il computer corrente o il dominio.  La stringa assume il formato seguente, dove `DOMAIN` è il nome di un nome di dominio o computer valido e `account` è il nome di un account utente valido in un dominio o computer: `DOMAIN\account`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.ArgumentOutOfRangeException">È stata passata un'enumerazione errata al parametro <paramref name="flags" />.  
  
oppure 
È stato passato il valore <see cref="F:System.Security.AccessControl.AuditFlags.None" /> al parametro <paramref name="flags" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="FileSystemRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.FileSystemRights FileSystemRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemAuditRule.FileSystemRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSystemRights As FileSystemRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::FileSystemRights FileSystemRights { System::Security::AccessControl::FileSystemRights get(); };" />
      <MemberSignature Language="F#" Value="member this.FileSystemRights : System.Security.AccessControl.FileSystemRights" Usage="System.Security.AccessControl.FileSystemAuditRule.FileSystemRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSystemRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene i flag <see cref="T:System.Security.AccessControl.FileSystemRights" /> associati all'oggetto <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> corrente.</summary>
        <value>Flag <see cref="T:System.Security.AccessControl.FileSystemRights" /> associati all'oggetto <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> corrente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>