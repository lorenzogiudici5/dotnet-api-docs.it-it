<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SemaphoreAccessRule.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b72c9fc4a0941955630b26ee94d6981d6c7654fc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b72c9fc4a0941955630b26ee94d6981d6c7654fc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Represents a set of access rights allowed or denied for a user or group.</source>
          <target state="translated">Rappresenta un insieme di diritti di accesso concessi o negati per un utente o gruppo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>This class cannot be inherited.</source>
          <target state="translated">Questa classe non può essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system semaphores.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> classe fa parte di un set di classi .NET Framework fornisce per la gestione del controllo di accesso di Windows sui semafori di sistema denominato.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>For an overview of these classes, and their relationship to the underlying Windows access control structures, see <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph>.</source>
          <target state="translated">Per una panoramica di queste classi e la loro relazione con le strutture di controllo di accesso Windows, vedere <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Windows access control security is meaningful only for named system semaphores.</source>
          <target state="translated">Controllo di accesso di Windows è significativo solo per i semafori di sistema denominato.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>If a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object represents a local semaphore, access control is irrelevant.</source>
          <target state="translated">Se un <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> oggetto rappresenta un semaforo locale, il controllo di accesso è irrilevante.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>To get a list of the rules currently applied to a named semaphore, use the <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get a <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, then use its <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A&gt;</ph> method to obtain a collection of <ph id="ph4">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objects.</source>
          <target state="translated">Per ottenere un elenco di regole attualmente applicate a un semaforo denominato, usare il <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> metodo per ottenere un <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> , quindi specificare il relativo <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A&gt;</ph> per ottenere una raccolta di <ph id="ph4">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> gli oggetti non eseguano il mapping uno a uno con le voci di controllo di accesso nell'elenco di controllo di accesso discrezionale (DACL) sottostante.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>When you get the set of all access rules for a semaphore, the set contains the minimum number of rules currently required to express all the access control entries.</source>
          <target state="translated">Quando si ottiene il set di tutte le regole di accesso per un semaforo, il set contiene il numero minimo di regole necessarie per esprimere tutte le voci di controllo di accesso.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>The underlying access control entries change as you apply and remove rules.</source>
          <target state="translated">Le voci di controllo accesso modificare quando si applicano e rimuovere le regole.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>The information in rules is merged if possible, to maintain the smallest number of access control entries.</source>
          <target state="translated">Le informazioni nelle regole vengono unite, se possibile, per mantenere il più piccolo numero di voci di controllo di accesso.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</source>
          <target state="translated">Pertanto, quando si legge l'elenco corrente delle regole, potrebbe non apparire esattamente come l'elenco di tutte le regole di cui che è stato aggiunto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Use <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objects to specify access rights to allow or deny to a user or group.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> oggetti per specificare i diritti di accesso per consentire o negare a un utente o gruppo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> object always represents either allowed access or denied access, never both.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> oggetto sempre rappresenta l'accesso consentito o negato l'accesso, non entrambi.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>To apply a rule to a named system semaphore, use the <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get the <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object.</source>
          <target state="translated">Per applicare una regola a un semaforo di sistema denominato, utilizzare il <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> metodo per ottenere il <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Modify the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object by using its methods to add the rule, and then use the <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to reattach the security object.</source>
          <target state="translated">Modificare il <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> oggetto mediante i metodi per aggiungere la regola e quindi usare il <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> metodo per ricollegare l'oggetto di sicurezza.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Changes you make to a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object do not affect the access levels of the named semaphore until you call the <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to assign the altered security object to the named semaphore.</source>
          <target state="translated">Le modifiche apportate a un <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> oggetto non influiscono sui livelli di accesso del semaforo denominato finché non si chiama il <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> metodo a cui assegnare l'oggetto di sicurezza modificato al semaforo denominato.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objects are immutable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> gli oggetti non sono modificabili.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Security for a semaphore is modified using the methods of the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> class to add or remove rules; as you do this, the underlying access control entries are modified.</source>
          <target state="translated">Per modificare la protezione per un semaforo utilizzano i metodi del <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> classe per aggiungere o rimuovere regole; in tal caso, le voci di controllo di accesso vengono modificate.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">Sicurezza degli oggetti di sincronizzazione non è supportata per Windows 98 o Windows Millennium Edition.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>The following code example demonstrates the separation between <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules, and shows the combination of rights in compatible rules.</source>
          <target state="translated">L'esempio di codice seguente illustra la separazione tra <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regole e <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> regole e Mostra la combinazione di diritti nelle regole compatibili.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> oggetto, vengono aggiunte regole che concedono e negano diversi diritti per l'utente corrente e consente di visualizzare la coppia di regole risultante.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">Nell'esempio viene quindi concessi nuovi diritti per l'utente corrente e viene visualizzato il risultato, che mostra i nuovi diritti vengono uniti con esistente <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regola.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">Questo esempio non viene associato l'oggetto di sicurezza per un <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Esempi di oggetti di sicurezza possono essere individuati <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>The user or group the rule applies to.</source>
          <target state="translated">Utente o gruppo a cui viene applicata la regola.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>Must be of type <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> or a type such as <ph id="ph2">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph3">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated">Deve essere di tipo <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> o di un tipo quale <ph id="ph2">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> che può essere convertito nel tipo <ph id="ph3">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> values specifying the rights allowed or denied.</source>
          <target state="translated">Combinazione bit per bit di valori <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> che specificano i diritti concessi o negati.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> che specificano se i diritti sono concessi o negati.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> specificando l'utente o il gruppo a cui la regola viene applicata, i diritti di accesso e se i diritti di accesso specificati sono concessi o negati.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>To enter a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph>, for example by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> method, a user must have <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">Immettere un <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph>, ad esempio chiamando il <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> metodo, un utente deve avere <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType&gt;</ph> accesso.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>To exit the semaphore, by calling the <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph> method, the user must have <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">Per uscire dal semaforo chiamando il <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph> (metodo), l'utente deve disporre <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType&gt;</ph> accesso.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> specifica un valore non valido.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> specifica un valore non valido.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> è zero.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> non è di tipo <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> né di un tipo quale <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> che può essere convertito nel tipo <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>The name of the user or group the rule applies to.</source>
          <target state="translated">Nome dell'utente o del gruppo a cui la regola viene applicata.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> values specifying the rights allowed or denied.</source>
          <target state="translated">Combinazione bit per bit di valori <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> che specificano i diritti concessi o negati.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> che specificano se i diritti sono concessi o negati.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> specificando il nome dell'utente o del gruppo a cui la regola viene applicata, i diritti di accesso e se i diritti di accesso specificati sono concessi o negati.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>To enter a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph>, for example by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> method, a user must have <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">Immettere un <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph>, ad esempio chiamando il <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> metodo, un utente deve avere <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType&gt;</ph> accesso.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>To exit the semaphore, by calling the <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph> method, the user must have <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">Per uscire dal semaforo chiamando il <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph> (metodo), l'utente deve disporre <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType&gt;</ph> accesso.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>This constructor is equivalent to creating an <ph id="ph1">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object, by passing <ph id="ph2">`identity`</ph> to the <ph id="ph3">&lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, and passing the newly created <ph id="ph4">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object to the <ph id="ph5">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.SemaphoreRights%2CSystem.Security.AccessControl.AccessControlType%29&gt;</ph> constructor.</source>
          <target state="translated">Questo costruttore è equivalente alla creazione di un <ph id="ph1">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> oggetto, passando <ph id="ph2">`identity`</ph> per il <ph id="ph3">&lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> costruttore e passando l'oggetto appena creato <ph id="ph4">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> dell'oggetto per il <ph id="ph5">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.SemaphoreRights%2CSystem.Security.AccessControl.AccessControlType%29&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>The following code example demonstrates the use of this constructor to create <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objects.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di questo costruttore per creare <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> oggetto, vengono aggiunte regole che concedono e negano diversi diritti per l'utente corrente e consente di visualizzare la coppia di regole risultante.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">Nell'esempio viene quindi concessi nuovi diritti per l'utente corrente e viene visualizzato il risultato, che mostra i nuovi diritti vengono uniti con esistente <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regola.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">Questo esempio non viene associato l'oggetto di sicurezza per un <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Esempi di oggetti di sicurezza possono essere individuati <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> specifica un valore non valido.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> specifica un valore non valido.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> è zero.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is a zero-length string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> è una stringa di lunghezza zero.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is longer than 512 characters.</source>
          <target state="translated">La lunghezza di <ph id="ph1">&lt;paramref name="identity" /&gt;</ph> supera i 512 caratteri.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>Gets the rights allowed or denied by the access rule.</source>
          <target state="translated">Ottiene i diritti concessi o negati dalla regola di accesso.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> values indicating the rights allowed or denied by the access rule.</source>
          <target state="translated">Combinazione bit per bit di valori <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> che indicano i diritti concessi o negati dalla regola di accesso.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objects are immutable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> gli oggetti non sono modificabili.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>You can create a new access rule representing a different user, different rights, or a different <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, but you cannot modify an existing access rule.</source>
          <target state="translated">È possibile creare una nuova regola di accesso che rappresenta un utente diverso, diritti diversi o un altro <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, ma non è possibile modificare una regola di accesso esistente.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights%2A&gt;</ph> property to display the rights in the set of rules contained in a <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights%2A&gt;</ph> proprietà per visualizzare i diritti nel set di regole contenute un <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">Nell'esempio viene creato un <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> oggetto, vengono aggiunte regole che concedono e negano diversi diritti per l'utente corrente e consente di visualizzare la coppia di regole risultante.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">Nell'esempio viene quindi concessi nuovi diritti per l'utente corrente e viene visualizzato il risultato, che mostra i nuovi diritti vengono uniti con esistente <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regola.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">Questo esempio non viene associato l'oggetto di sicurezza per un <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Esempi di oggetti di sicurezza possono essere individuati <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>