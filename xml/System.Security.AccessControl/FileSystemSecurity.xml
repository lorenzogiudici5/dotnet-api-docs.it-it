<Type Name="FileSystemSecurity" FullName="System.Security.AccessControl.FileSystemSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ad7c36a80e44026b71817bfa78a8c6b89aeaf95" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30490825" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystemSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileSystemSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemSecurity abstract : System::Security::AccessControl::NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta il controllo di accesso e la sicurezza di controllo di un file o una directory.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSystemSecurity> classe è la classe base per il <xref:System.Security.AccessControl.FileSecurity> e <xref:System.Security.AccessControl.DirectorySecurity> classi.  Queste classi rappresentano tutti i diritti di accesso per un file di sistema o una directory e definiscono come vengono controllati i tentativi di accesso.  
  
 La <xref:System.Security.AccessControl.FileSystemSecurity> classe rappresenta i diritti di accesso e controllo come un set di regole. Ogni regola di accesso è rappresentato da un <xref:System.Security.AccessControl.FileSystemAccessRule> dell'oggetto, mentre ogni regola è rappresentata da un <xref:System.Security.AccessControl.FileSystemAuditRule> oggetto.  
  
 La <xref:System.Security.AccessControl.FileSystemSecurity> classe è un'astrazione di sistema di sicurezza file di Microsoft Windows sottostante. In questo sistema, ogni file o directory include un elenco di controllo di accesso discrezionale (DACL), che controlla l'accesso al file o directory, e un elenco di controllo di accesso di sistema (SACL), che specifica i tentativi di accesso da controllare.  Il <xref:System.Security.AccessControl.FileSystemAccessRule> e <xref:System.Security.AccessControl.FileSystemAuditRule> classi sono astrazioni delle voci di controllo di accesso (ACE) che comprendono DACL e SACL.  
  
 La <xref:System.Security.AccessControl.FileSystemSecurity> classe nasconde molti dettagli degli elenchi DACL e SACL; non è necessario preoccuparsi ACE ordinamento o DACL null.  
  
 Per rendere persistenti le informazioni di elenco (ACL) di controllo di accesso nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  
  
 Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A> o <xref:System.IO.FileInfo.GetAccessControl%2A> metodo.  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A> o <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare la <xref:System.Security.AccessControl.FileSecurity> classe per aggiungere e rimuovere una voce di elenco (ACL) di controllo di accesso da un file.  È necessario specificare un utente valido o un account di gruppo per eseguire questo esempio.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'enumerazione utilizzata dalla classe <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> per rappresentare i diritti di accesso.</summary>
        <value>Oggetto <see cref="T:System.Type" /> che rappresenta l'enumerazione <see cref="T:System.Security.AccessControl.FileSystemRights" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che derivano dal <xref:System.Security.AccessControl.FileSystemSecurity> classe sostituzione il <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> proprietà e restituiscono il tipo utilizzato per rappresentare i diritti di accesso. Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di enumerazione appropriata da utilizzare con ogni oggetto di sicurezza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">Oggetto <see cref="T:System.Security.Principal.IdentityReference" /> che rappresenta un account utente.</param>
        <param name="accessMask">Numero intero che specifica un tipo di accesso.</param>
        <param name="isInherited">
          <see langword="true" /> se la regola di accesso è ereditata; in caso contrario <see langword="false" />.</param>
        <param name="inheritanceFlags">Uno dei valori <see cref="T:System.Security.AccessControl.InheritanceFlags" /> che specificano come propagare le maschere di accesso agli oggetti figlio.</param>
        <param name="propagationFlags">Uno dei valori <see cref="T:System.Security.AccessControl.PropagationFlags" /> che specificano come propagare le voci di controllo di accesso (ACE, Access Control Entry) agli oggetti figlio.</param>
        <param name="type">Uno dei valori <see cref="T:System.Security.AccessControl.AccessControlType" /> che specificano se l'accesso è concesso o negato.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> che rappresenta una nuova regola di controllo di accesso per l'utente specificato, con i diritti di accesso, il controllo di accesso e i flag specificati.</summary>
        <returns>Nuovo oggetto <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> che rappresenta una nuova regola di controllo di accesso per l'utente specificato, con i diritti di accesso, il controllo di accesso e i flag specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo consigliato per creare le regole di controllo di accesso consiste nell'utilizzare i costruttori del <xref:System.Security.AccessControl.FileSystemAccessRule> classe.  
  
 Il tipo restituito del <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> metodo è la classe base, <xref:System.Security.AccessControl.AccessRule>, ma il valore restituito può essere cast alla classe derivata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">I parametri <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="type" /> specificano un valore non valido.</exception>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="identityReference" /> è <see langword="null" />.  
  
 oppure  
  
 Il parametro <paramref name="accessMask" /> è zero.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="identityReference" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> convertibile nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'enumerazione utilizzata dalla classe <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> per rappresentare le regole di accesso.</summary>
        <value>Oggetto <see cref="T:System.Type" /> che rappresenta la classe <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che derivano dal <xref:System.Security.AccessControl.FileSystemSecurity> classe sostituzione il <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> proprietà e restituiscono il tipo utilizzato per rappresentare le regole di accesso. Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di regola di accesso corretto da utilizzare con ogni oggetto di sicurezza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> che rappresenta un'autorizzazione ACL da aggiungere a un file o a una directory.</param>
        <summary>Aggiunge l'autorizzazione ACL (Access Control List, elenco di controllo di accesso) specificata al file o alla directory corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> metodo aggiunge una nuova regola all'elenco di regole contenute all'interno di un <xref:System.Security.AccessControl.FileSystemSecurity> oggetto.  
  
 Se per la regola specificata esiste già un elenco di controllo di accesso (ACL) di <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> metodo aggiunge comunque la regola, con una sola eccezione: un <xref:System.Security.AccessControl.FileSystemAccessRule> oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType.Deny> valore di enumerazione sostituisce un oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType.Allow> valore di enumerazione.  
  
 Per mantenere informazioni ACL nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  
  
 Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A> o <xref:System.IO.FileInfo.GetAccessControl%2A> metodo.  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A> o <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metodo.  
  
 Quando si aggiunge una regola di accesso senza impostare il <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, il <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag verrà aggiunto automaticamente alla regola.  Se si rimuove la regola in un secondo momento senza specificare il <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, il flag verrà rimosso automaticamente.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare la <xref:System.Security.AccessControl.FileSecurity> classe per aggiungere e rimuovere una voce di elenco (ACL) di controllo di accesso da un file.  È necessario specificare un utente valido o un account di gruppo per eseguire questo esempio.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> che rappresenta una regola di controllo da aggiungere a un file o a una directory.</param>
        <summary>Aggiunge la regola di controllo specificata al file o alla directory corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> metodo aggiunge una nuova regola di controllo all'elenco di regole contenute all'interno di un <xref:System.Security.AccessControl.FileSystemSecurity> oggetto.  
  
 Se per la regola specificata esiste già una regola di controllo di <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> metodo aggiunge comunque la regola.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> metodo per aggiungere una regola di controllo in un file e viene utilizzato il <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> metodo per rimuovere la regola di controllo dal file.  È necessario specificare un utente valido o un account di gruppo per eseguire questo esempio.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">Oggetto <see cref="T:System.Security.Principal.IdentityReference" /> che rappresenta un account utente.</param>
        <param name="accessMask">Numero intero che specifica un tipo di accesso.</param>
        <param name="isInherited">
          <see langword="true" /> se la regola di accesso è ereditata; in caso contrario <see langword="false" />.</param>
        <param name="inheritanceFlags">Uno dei valori <see cref="T:System.Security.AccessControl.InheritanceFlags" /> che specificano come propagare le maschere di accesso agli oggetti figlio.</param>
        <param name="propagationFlags">Uno dei valori <see cref="T:System.Security.AccessControl.PropagationFlags" /> che specificano come propagare le voci di controllo di accesso (ACE, Access Control Entry) agli oggetti figlio.</param>
        <param name="flags">Uno dei valori <see cref="T:System.Security.AccessControl.AuditFlags" /> che specificano il tipo di controllo da eseguire.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> che rappresenta la regola di controllo specificata per l'utente specificato.</summary>
        <returns>Nuovo oggetto <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> che rappresenta la regola di controllo specificata per l'utente specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo consigliato per creare regole di controllo consiste nell'utilizzare i costruttori del <xref:System.Security.AccessControl.FileSystemAuditRule> classe.  
  
 Il tipo restituito del <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> metodo è la classe base, <xref:System.Security.AccessControl.AuditRule>, ma il valore restituito può essere cast alla classe derivata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La proprietà <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="flags" /> specifica un valore non valido.</exception>
        <exception cref="T:System.ArgumentNullException">La proprietà <paramref name="identityReference" /> è <see langword="null" />.  
  
 oppure  
  
 La proprietà <paramref name="accessMask" /> è zero.</exception>
        <exception cref="T:System.ArgumentException">La proprietà <paramref name="identityReference" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> convertibile nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo utilizzato dalla classe <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> per rappresentare le regole di controllo.</summary>
        <value>Oggetto <see cref="T:System.Type" /> che rappresenta la classe <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che derivano dal <xref:System.Security.AccessControl.FileSystemSecurity> classe sostituzione il <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> proprietà e restituiscono il tipo utilizzato per rappresentare i diritti di controllo. Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di regola di controllo appropriata da utilizzare con ogni oggetto di sicurezza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As FileSystemAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> che rappresenta un'autorizzazione ACL da rimuovere da un file o da una directory.</param>
        <summary>Rimuove tutte le autorizzazioni ACL (Access Control List, elenco di controllo di accesso) corrispondenti di concessione o negazione di diritti dal file o dalla directory corrente.</summary>
        <returns>
          <see langword="true" /> se la regola di accesso è stata rimossa; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> metodo rimuove tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType.Deny> regole di accesso o tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType.Allow> le regole di accesso dall'oggetto corrente <xref:System.Security.AccessControl.FileSystemSecurity> oggetto.  Ad esempio, è possibile utilizzare questo metodo per rimuovere tutti <xref:System.Security.AccessControl.AccessControlType.Deny> regole di accesso per un utente passando un <xref:System.Security.AccessControl.FileSystemAccessRule> oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType.Deny> valore, il <xref:System.Security.AccessControl.FileSystemRights.Read> valore e un account utente.  Quando si esegue questa operazione, il <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> metodo rimuove le regole di negazione che specificano il <xref:System.Security.AccessControl.FileSystemRights.Read> valore o <xref:System.Security.AccessControl.FileSystemRights.Write> valore.  
  
 Per rendere persistenti le informazioni di elenco (ACL) di controllo di accesso nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  
  
 Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A> o <xref:System.IO.FileInfo.GetAccessControl%2A> metodo.  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A> o <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metodo.  
  
 Quando si aggiunge una regola di accesso senza impostare il <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, il <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag verrà aggiunto automaticamente alla regola.  Se si rimuove la regola in un secondo momento senza specificare il <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, il flag verrà rimosso automaticamente.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare la <xref:System.Security.AccessControl.FileSecurity> classe per aggiungere e rimuovere una voce di elenco (ACL) di controllo di accesso da un file.  È necessario specificare un utente valido o un account di gruppo per eseguire questo esempio.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> che specifica l'utente le cui autorizzazioni ACL devono essere rimosse da un file o da una directory.</param>
        <summary>Rimuove tutte le autorizzazioni ACL (Access Control List, elenco di controllo di accesso) per l'utente specificato dal file o dalla directory corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> metodo rimuove tutte le autorizzazioni elenco (ACL) per l'utente specificato.  Il metodo ignora tutti i valori di <xref:System.Security.AccessControl.FileSystemAccessRule> oggetto tranne l'account utente.  
  
 Per mantenere informazioni ACL nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  
  
 Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A> o <xref:System.IO.FileInfo.GetAccessControl%2A> metodo.  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A> o <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metodo.  
  
 Quando si aggiunge una regola di accesso senza impostare il <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, il <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag verrà aggiunto automaticamente alla regola.  Se si rimuove la regola in un secondo momento senza specificare il <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, il flag verrà rimosso automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> che specifica l'utente le cui autorizzazioni ACL devono essere rimosse da un file o da una directory.</param>
        <summary>Rimuove una singola autorizzazione ACL (Access Control List, elenco di controllo di accesso) corrispondente di concessione o negazione di diritti dal file o dalla directory corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> metodo rimuove l'oggetto specificato <xref:System.Security.AccessControl.AccessControlType.Deny> accesso regola o il corrispondente specificata <xref:System.Security.AccessControl.AccessControlType.Allow> regola di accesso dall'oggetto corrente <xref:System.Security.AccessControl.FileSystemSecurity> oggetto.  Ad esempio, è possibile utilizzare questo metodo per rimuovere un oggetto specificato <xref:System.Security.AccessControl.AccessControlType.Deny> regola di accesso per un utente passando un <xref:System.Security.AccessControl.FileSystemAccessRule> oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType.Deny> valore, il <xref:System.Security.AccessControl.FileSystemRights.Read> valore e un account utente.  Quando si esegue questa operazione, il <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> metodo rimuove solo la regola di negazione che specifica il <xref:System.Security.AccessControl.FileSystemRights.Read> valore.  Non rimuove le regole di negazione che specificano il <xref:System.Security.AccessControl.FileSystemRights.Write> valore.  
  
 Per rendere persistenti le informazioni di elenco (ACL) di controllo di accesso nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  
  
 Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A> o <xref:System.IO.FileInfo.GetAccessControl%2A> metodo.  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A> o <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metodo.  
  
 Quando si aggiunge una regola di accesso senza impostare il <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, il <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag verrà aggiunto automaticamente alla regola.  Se si rimuove la regola in un secondo momento senza specificare il <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flag, il flag verrà rimosso automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As FileSystemAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> che rappresenta una regola di controllo da rimuovere da un file o da una directory.</param>
        <summary>Rimuove tutte le regole di controllo corrispondenti di concessione o negazione di diritti dal file o dalla directory corrente.</summary>
        <returns>
          <see langword="true" /> se la regola di accesso è stata rimossa. In caso contrario, <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> metodo rimuove tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType.Deny> regole di controllo o tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType.Allow> audit regole corrente <xref:System.Security.AccessControl.FileSystemSecurity> oggetto.  Ad esempio, è possibile utilizzare questo metodo per rimuovere tutti <xref:System.Security.AccessControl.AccessControlType.Deny> controllare le regole per un utente passando un <xref:System.Security.AccessControl.FileSystemAuditRule> oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType.Deny> valore, il <xref:System.Security.AccessControl.AuditFlags.Failure> valore e un account utente.  Quando si esegue questa operazione, il <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> metodo rimuove le regole di negazione che specificano il <xref:System.Security.AccessControl.AuditFlags.Failure> valore o <xref:System.Security.AccessControl.AuditFlags.Success> valore.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> metodo per aggiungere una regola di controllo in un file e viene utilizzato il <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> metodo per rimuovere la regola di controllo dal file.  È necessario specificare un utente valido o un account di gruppo per eseguire questo esempio.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> che specifica l'utente le cui regole di controllo devono essere rimosse da un file o da una directory.</param>
        <summary>Rimuove tutte le regole di controllo per l'utente specificato dal file o dalla directory corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> metodo rimuove tutte le regole di controllo per l'utente specificato.  Ignora tutti i valori di <xref:System.Security.AccessControl.FileSystemAuditRule> oggetto tranne l'account utente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> che rappresenta una regola di controllo da rimuovere da un file o da una directory.</param>
        <summary>Rimuove una singola regola di controllo corrispondente di concessione o negazione di diritti dal file o dalla directory corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> metodo rimuove il corrispondente specificata <xref:System.Security.AccessControl.AccessControlType.Deny> controllo regola o il corrispondente specificata <xref:System.Security.AccessControl.AccessControlType.Allow> regola di controllo dall'oggetto corrente <xref:System.Security.AccessControl.FileSystemSecurity> oggetto.  Ad esempio, è possibile utilizzare questo metodo per rimuovere un oggetto specificato <xref:System.Security.AccessControl.AccessControlType.Deny> regola di controllo per un utente passando un <xref:System.Security.AccessControl.FileSystemAuditRule> oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType.Deny> valore, il <xref:System.Security.AccessControl.AuditFlags.Failure> valore e un account utente.  Quando si esegue questa operazione, il <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> metodo rimuove solo una regola che specifica il <xref:System.Security.AccessControl.AuditFlags.Failure> valore.  Non rimuove le regole di negazione che specificano il <xref:System.Security.AccessControl.AuditFlags.Success> valore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> che rappresenta un'autorizzazione ACL da aggiungere a un file o a una directory.</param>
        <summary>Aggiunge l'autorizzazione ACL (Access Control List, elenco di controllo di accesso) specificata al file o alla directory corrente e rimuove tutte le autorizzazioni ACL corrispondenti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> metodo aggiunge la regola di elenco (ACL) di controllo di accesso specificato o sovrascrive qualsiasi regola ACL identica corrispondente il `rule` parametro.  Ad esempio, se il `rule` parametro specifica un <xref:System.Security.AccessControl.FileSystemRights.Read> valore e <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> metodo individua una regola ACL identica che specifica il <xref:System.Security.AccessControl.FileSystemRights.Read> valore, la regola identica verrà sovrascritta.  Se il <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> metodo individua una regola ACL identica che specifica il <xref:System.Security.AccessControl.FileSystemRights.Write> valore, la regola identica anche verrà sovrascritta.  
  
 Per mantenere informazioni ACL nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  
  
 Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A> o <xref:System.IO.FileInfo.GetAccessControl%2A> metodo.  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A> o <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> che rappresenta un'autorizzazione ACL da impostare per un file o una directory.</param>
        <summary>Imposta l'autorizzazione ACL (Access Control List, elenco di controllo di accesso) specificata per il file o la directory corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> metodo aggiunge la regola di elenco (ACL) di controllo di accesso specificato o sovrascrive qualsiasi regola ACL identica corrispondente il <xref:System.Security.AccessControl.FileSystemRights> valore il `rule` parametro.  Ad esempio, se il `rule` parametro specifica un <xref:System.Security.AccessControl.FileSystemRights.Read> valore e <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> metodo individua una regola ACL identica che specifica il <xref:System.Security.AccessControl.FileSystemRights.Read> valore, la regola identica verrà sovrascritta.  Se il <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> metodo individua una regola ACL identica che specifica il <xref:System.Security.AccessControl.FileSystemRights.Write> valore, la regola identica non verrà sovrascritta.  
  
 Per mantenere informazioni ACL nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> metodo.  
  
 Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A> o <xref:System.IO.FileInfo.GetAccessControl%2A> metodo.  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A> o <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> che rappresenta una regola di controllo da impostare per un file o una directory.</param>
        <summary>Imposta la regola di controllo specificata per il file o la directory corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> metodo aggiunge la regola di controllo specificata o sovrascrive qualsiasi regola di controllo identica corrispondente il <xref:System.Security.AccessControl.FileSystemRights> valore il `rule` parametro.  Ad esempio, se il `rule` parametro specifica un <xref:System.Security.AccessControl.FileSystemRights.Read> valore e <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> metodo individua una regola di controllo identica che specifica il <xref:System.Security.AccessControl.FileSystemRights.Read> valore, la regola identica verrà sovrascritta.  Se il <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> metodo individua una regola di controllo identica che specifica il <xref:System.Security.AccessControl.FileSystemRights.Write> valore, la regola identica non verrà sovrascritta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>