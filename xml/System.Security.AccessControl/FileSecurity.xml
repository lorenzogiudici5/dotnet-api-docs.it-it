<Type Name="FileSecurity" FullName="System.Security.AccessControl.FileSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3005dafda0c923b2bb765200bc6632caed2b422a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37633051" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileSecurity : System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSecurity extends System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSecurity&#xA;Inherits FileSystemSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSecurity sealed : System::Security::AccessControl::FileSystemSecurity" />
  <TypeSignature Language="F#" Value="type FileSecurity = class&#xA;    inherit FileSystemSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.FileSystemSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta il controllo di accesso e la sicurezza di controllo di un file. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.AccessControl.FileSecurity> classe specifica i diritti di accesso per un file di sistema e come vengono controllati i tentativi di accesso.  Questa classe rappresenta i diritti di accesso e controllo come un set di regole. Ogni regola di accesso è rappresentato da un <xref:System.Security.AccessControl.FileSystemAccessRule> dell'oggetto, mentre ogni regola di controllo è rappresentato da un <xref:System.Security.AccessControl.FileSystemAuditRule> oggetto.  
  
 Il <xref:System.Security.AccessControl.FileSecurity> classe è un'astrazione del sistema di protezione file Windows Microsoft sottostante. In questo sistema, ogni file ha un elenco di controllo di accesso discrezionale (DACL), che controlla l'accesso al file e un elenco di controllo di accesso di sistema (SACL), che specifica i tentativi di accesso che vengono controllati.  Il <xref:System.Security.AccessControl.FileSystemAccessRule> e <xref:System.Security.AccessControl.FileSystemAuditRule> classi sono astrazioni di voci di controllo di accesso (ACE) che costituiscono gli elenchi DACL e i SACL.  
  
 Il <xref:System.Security.AccessControl.FileSecurity> classe consente di nascondere molti dettagli di DACL e i SACL; non è necessario preoccuparsi di voce ACE ordinamento o di DACL null.  
  
 Usare il <xref:System.Security.AccessControl.FileSecurity> classe da recuperare, aggiungere o modificare le regole di accesso che rappresentano il DACL e un SACL di un file.  
  
 Per rendere persistenti accesso nuove o modificate o le regole in un file di controllo, usare il <xref:System.IO.FileInfo.SetAccessControl%2A> (metodo). Per recuperare le regole di accesso o controllo da un file esistente, usare il metodo <xref:System.IO.FileInfo.GetAccessControl%2A>.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Security.AccessControl.FileSecurity> classe per aggiungere e quindi rimuovere una voce di elenco (ACL) di controllo di accesso da un file.  È necessario specificare un utente valido o un account di gruppo per eseguire questo esempio.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.FileSecurity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.FileSecurity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore quando si desidera creare un oggetto vuoto <xref:System.Security.AccessControl.FileSecurity> oggetti che non si basa su un file esistente.  È quindi possibile popolare l'oggetto con le informazioni di controllo di accesso e applicarla a un file.  
  
 È possibile aggiungere l'accesso o controllare le regole per la <xref:System.Security.AccessControl.FileSecurity> utilizzando il <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> (metodo). È possibile rimuovere l'accesso o tramite le regole di controllo di <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> (metodo).  
  
 Per rendere persistenti accesso nuove o modificate o le regole in un file di controllo, usare il <xref:System.IO.File.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> (metodo).  Per recuperare l'accesso o controllare le regole da un file esistente, usare il <xref:System.IO.File.GetAccessControl%2A> o <xref:System.IO.FileInfo.GetAccessControl%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Microsoft Windows 2000 o versioni successive.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity (string fileName, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity(System::String ^ fileName, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSecurity : string * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.FileSecurity" Usage="new System.Security.AccessControl.FileSecurity (fileName, includeSections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="fileName">Percorso del file da cui creare un oggetto <see cref="T:System.Security.AccessControl.FileSecurity" />.</param>
        <param name="includeSections">Uno dei valori <see cref="T:System.Security.AccessControl.AccessControlSections" /> che specifica il tipo di informazioni relative all'elenco di controllo di accesso da recuperare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.FileSecurity" /> da un file specificato utilizzando i valori specificati dell'enumerazione <see cref="T:System.Security.AccessControl.AccessControlSections" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore consente di recuperare le informazioni di controllo di accesso per il file specificato e crea quindi un <xref:System.Security.AccessControl.FileSecurity> oggetto che incapsula le informazioni.  È quindi possibile controllare, aggiungere o eliminare le informazioni di controllo di accesso per il file specificato.  
  
 È possibile aggiungere l'accesso o controllare le regole per la <xref:System.Security.AccessControl.FileSecurity> utilizzando il <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> (metodo). È possibile rimuovere l'accesso o tramite le regole di controllo di <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> (metodo).  
  
 Per rendere persistenti accesso nuove o modificate o le regole in un file di controllo, usare il <xref:System.IO.File.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> (metodo).  Per recuperare l'accesso o controllare le regole da un file esistente, usare il <xref:System.IO.File.GetAccessControl%2A> o <xref:System.IO.FileInfo.GetAccessControl%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="fileName" /> è una stringa di lunghezza zero, contiene solo spazi vuoti o contiene uno o più caratteri non validi definiti da <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Impossibile trovare il file specificato dal parametro <paramref name="fileName" />.</exception>
        <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O durante l'apertura del file.</exception>
        <exception cref="T:System.NotSupportedException">Il formato di <paramref name="path" /> non è valido.</exception>
        <exception cref="T:System.Runtime.InteropServices.SEHException">Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Microsoft Windows 2000 o versioni successive.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">L'account di sistema corrente non ha privilegi amministrativi.</exception>
        <exception cref="T:System.SystemException">Il file non è stato trovato.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il parametro <paramref name="fileName" /> specifica un file di sola lettura.  - oppure - L'operazione non è supportata sulla piattaforma corrente.  -oppure-  Il parametro <paramref name="fileName" /> specifica una directory.  - oppure - Il chiamante non ha l'autorizzazione richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">l'autorizzazione accedere al file specificato da di <paramref name="name" /> parametro. Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> , <see cref="F:System.Security.AccessControl.AccessControlActions.View" /> azione di sicurezza: richiesta</permission>
        <block subset="none" type="usage">
          <para>Il <see cref="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" /> costruttore richiede che l'account corrente dispone di privilegi amministrativi. Per creare una nuova istanza di <see cref="T:System.Security.AccessControl.FileSecurity" /> classe per un file specifico tramite un account che non dispone di privilegi amministrativi, usare il <see cref="M:System.IO.FileStream.GetAccessControl" /> (metodo).</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>