<Type Name="WebScriptServiceHostFactory" FullName="System.ServiceModel.Activation.WebScriptServiceHostFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="05f4aa436efb89845f12b395b90b167221e48f65" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34313707" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebScriptServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebScriptServiceHostFactory extends System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class WebScriptServiceHostFactory&#xA;Inherits ServiceHostFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebScriptServiceHostFactory : System::ServiceModel::Activation::ServiceHostFactory" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activation.ServiceHostFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Aggiunge automaticamente un endpoint ASP.NET AJAX a un servizio, senza bisogno di configurazione, in un ambiente host gestito in cui le istanze host per il servizio vengono attivate dinamicamente in risposta ai messaggi in ingresso.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa factory consente di aggiungere un endpoint ASP.NET AJAX a un servizio senza bisogno di configurazione. L'endpoint viene aggiunto agli altri endpoint definiti nella configurazione, se presenti. Gli ambienti host gestiti che supportano tale tipo di attivazione host dinamica sono gli ambienti ISS (Internet Information Services) e WAS (Windows Process Activation Service).  
  
 Per usare questa factory, specificare il <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory> nel `Factory` attributo del [ @ServiceHost ](~/docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md) direttiva.  
  
 L'endpoint ASP.NET AJAX creato dalla factory viene configurato con <xref:System.ServiceModel.WebHttpBinding> e <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>, con tutte le impostazioni predefinite. Tale endpoint viene creato a un indirizzo vuoto relativo al file con estensione svc. Se la configurazione del servizio già definisce un endpoint a questo indirizzo, viene generata un'eccezione <xref:System.InvalidOperationException> e non sarà possibile avviare il servizio.  
  
   
  
## Examples  
 Specificare il <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory> per il valore della `Factory` attributo il [ @ServiceHost ](~/docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md) direttiva per attivare un endpoint ASP.NET AJAX per il `MyService` del servizio come illustrato nell'esempio seguente.  
  
```  
<% @ServiceHost   
Service="MyService"  
Language="C#"  
Debug="true"  
Factory="WebScriptServiceHostFactory"  
%>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebScriptServiceHostFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebScriptServiceHostFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, questo costruttore viene chiamato automaticamente da Windows Communication Foundation (WCF) come parte dell'attivazione del servizio, non c'è alcuna necessità di chiamare il metodo manualmente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceHost">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.ServiceHost CreateServiceHost(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateServiceHost (serviceType As Type, baseAddresses As Uri()) As ServiceHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::ServiceHost ^ CreateServiceHost(Type ^ serviceType, cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="serviceType">Tipo di servizio da ospitare.</param>
        <param name="baseAddresses">Matrice <see cref="T:System.Array" /> di tipo <see cref="T:System.Uri" /> contenente gli indirizzi di base del servizio ospitato.</param>
        <summary>Crea una classe derivata di <see cref="T:System.ServiceModel.ServiceHost" /> per un tipo di servizio specificato con un indirizzo di base specifico, che può essere utilizzata per abilitare automaticamente gli endpoint ASP.NET AJAX in determinati scenari.</summary>
        <returns>Classe <see cref="T:System.ServiceModel.ServiceHost" /> per il tipo di servizio specificato con l'indirizzo di base specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, questo metodo viene chiamato automaticamente da Windows Communication Foundation (WCF) come parte dell'attivazione del servizio, non c'è alcuna necessità di chiamare il metodo manualmente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Un altro servizio utilizza lo stesso indirizzo di base o un altro endpoint sta utilizzando lo stesso indirizzo dell'endpoint ASP.NET AJAX che la factory sta tentando di creare.</exception>
      </Docs>
    </Member>
  </Members>
</Type>