<Type Name="SqlFileStream" FullName="System.Data.SqlTypes.SqlFileStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3af2bf75a41edc5608981174d1777eca50b9a010" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48592533" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlFileStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlFileStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlTypes.SqlFileStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlFileStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlFileStream sealed : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type SqlFileStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Espone i dati SQL Server archiviati con l'attributo della colonna FILESTREAM come sequenza di byte.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.SqlTypes.SqlFileStream> classe viene usata per lavorare con `varbinary(max)` i dati archiviati con l'attributo FILESTREAM in un database di SQL Server 2008. È necessario installare .NET Framework 3.5 SP1 (o versioni successive) da usare <xref:System.Data.SqlTypes.SqlFileStream> per lavorare con dati FILESTREAM.  
  
 Specifica di FILESTREAM dell'attributo su un `varbinary(max)` colonna fa in modo che SQL Server archiviare i dati nel locale file system NTFS anziché nel file di database. Istruzioni Transact-SQL forniscono funzionalità di modifica dei dati all'interno del server e interfacce del file system Win32 forniscono accesso tramite flusso ai dati.  
  
> [!NOTE]
>  I singoli file archiviati in una colonna FILESTREAM non possono essere aperti direttamente dal file system NTFS. Flusso di dati FILESTREAM funziona solo nel contesto di una transazione di SQL Server.  
  
 Il <xref:System.Data.SqlTypes.SqlFileStream> classe è derivata dal <xref:System.IO.Stream> classe, che rappresenta un'astrazione di una sequenza di byte da un'origine dati arbitrari, ad esempio un file o un blocco di memoria. È possibile leggere da un oggetto FILESTREAM per il trasferimento di dati da un flusso in una struttura di dati, ad esempio una matrice di byte. È possibile scrivere in un oggetto FILESTREAM trasferendo i dati da una struttura di dati in un flusso. È anche possibile cercare all'interno del flusso, che consente di eseguire una query e modificare i dati in corrispondenza della posizione corrente all'interno del flusso.  
  
 Per visualizzare la documentazione concettuale ed esempi di codice, vedere [i dati FILESTREAM](~/docs/framework/data/adonet/sql/filestream-data.md).  
  
 Per informazioni sull'impostazione e configurazione di dati FILESTREAM in SQL Server, vedere [progettazione ed implementazione dell'archiviazione FILESTREAM](http://go.microsoft.com/fwlink/?LinkId=121499) nella documentazione Online di SQL Server 2008.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
    <related type="Article" href="http://msdn.microsoft.com/library/fafdc31a-f435-4cd3-883f-1dfadd971277">Mapping dei tipi di dati SQL Server (ADO.NET)</related>
    <related type="Article" href="http://msdn.microsoft.com/library/e00827b3-7511-4b2d-91d7-851ca86cc6b5">Dati binari e con valori elevati SQL Server (ADO.NET)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente sono elencate le autorizzazioni di sicurezza dall'accesso codice tutti i chiamanti nello stack devono disporre per utilizzare il `SqlFileStream` costruttori.  
  
|Accesso ai file|Autorizzazioni|  
|-----------------|----------------|  
|Lettura|<xref:System.Security.Permissions.FileIOPermissionAccess.Read>|  
|Write|<xref:System.Security.Permissions.FileIOPermissionAccess.Write>|  
|Lettura/scrittura|<xref:System.Security.Permissions.FileIOPermissionAccess.Read> e <xref:System.Security.Permissions.FileIOPermissionAccess.Write>|  
  
 Per altre informazioni, vedere [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, unsigned int8[] transactionContext, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, transactionContext As Byte(), access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlFileStream(System::String ^ path, cli::array &lt;System::Byte&gt; ^ transactionContext, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlTypes.SqlFileStream : string * byte[] * System.IO.FileAccess -&gt; System.Data.SqlTypes.SqlFileStream" Usage="new System.Data.SqlTypes.SqlFileStream (path, transactionContext, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="transactionContext" Type="System.Byte[]" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">Percorso logico del file. Il percorso può essere recuperato usando la funzione Transact-SQL Pathname o la colonna FILESTREAM sottostante nella tabella.</param>
        <param name="transactionContext">Contesto di transazione per l'oggetto <see langword="SqlFileStream" />. Le applicazioni devono restituire la matrice di byte restituita dalla chiamata del metodo GET_FILESTREAM_TRANSACTION_CONTEXT.</param>
        <param name="access">Modalità di accesso usata per l'apertura del file. I valori dell'enumerazione <see cref="T:System.IO.FileAccess" /> supportati sono <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" /> e <see cref="F:System.IO.FileAccess.ReadWrite" />.  
  
Quando si usa <see langword="FileAccess.Read" />, l'oggetto <see langword="SqlFileStream" /> può essere usato per leggere tutti i dati esistenti.  
  
Quando si usa <see langword="FileAccess.Write" />, <see langword="SqlFileStream" /> punta a un file di zero byte. I dati esistenti verranno sovrascritti quando l'oggetto viene chiuso e viene eseguito il commit della transazione.  
  
Quando si usa <see langword="FileAccess.ReadWrite" />, <see langword="SqlFileStream" /> punta a un file che contiene tutti i dati esistenti. L'handle è posizionato all'inizio del file. È possibile usare uno dei metodi <see langword="System.IO" /><see langword="Seek" /> per spostare la posizione dell'handle all'interno del file per scrivere o aggiungere nuovi dati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se viene generata un'eccezione, devono essere il rollback delle transazioni aperte. In caso contrario, può verificarsi una perdita di dati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è un riferimento Null oppure <paramref name="transactionContext" /> è Null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="path" /> è una stringa vuota (""), contiene solo spazi vuoti oppure contiene uno o più caratteri non validi.  
  
 <paramref name="path" /> inizia con "\\\\.\\", ad esempio "\\\\.\PHYSICALDRIVE0 ".  
  
L'handle restituito dalla chiamata a NTCreateFile non è di tipo FILE_TYPE_DISK.  
  
 <paramref name="options" /> contiene un valore non supportato.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Impossibile trovare il file.</exception>
        <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">L'oggetto <paramref name="path" /> specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'accesso richiesto non è consentito dal sistema operativo per il percorso specificato. Questo problema si verifica quando è specificato l'accesso Write o ReadWrite e la directory o il file è impostato per l'accesso in sola lettura.</exception>
        <exception cref="T:System.InvalidOperationException">NtCreateFile non riesce con codice di errore impostato su ERROR_SHARING_VIOLATION.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access, System.IO.FileOptions options, long allocationSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, unsigned int8[] transactionContext, valuetype System.IO.FileAccess access, valuetype System.IO.FileOptions options, int64 allocationSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, transactionContext As Byte(), access As FileAccess, options As FileOptions, allocationSize As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlFileStream(System::String ^ path, cli::array &lt;System::Byte&gt; ^ transactionContext, System::IO::FileAccess access, System::IO::FileOptions options, long allocationSize);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlTypes.SqlFileStream : string * byte[] * System.IO.FileAccess * System.IO.FileOptions * int64 -&gt; System.Data.SqlTypes.SqlFileStream" Usage="new System.Data.SqlTypes.SqlFileStream (path, transactionContext, access, options, allocationSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="transactionContext" Type="System.Byte[]" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="options" Type="System.IO.FileOptions" />
        <Parameter Name="allocationSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path">Percorso logico del file. Il percorso può essere recuperato usando la funzione Transact-SQL Pathname o la colonna FILESTREAM sottostante nella tabella.</param>
        <param name="transactionContext">Contesto di transazione per l'oggetto <see langword="SqlFileStream" />. Se impostato su null, per l'oggetto <see langword="SqlFileStream" /> verrà usata una transazione implicita. Le applicazioni devono restituire la matrice di byte restituita dalla chiamata del metodo GET_FILESTREAM_TRANSACTION_CONTEXT.</param>
        <param name="access">Modalità di accesso usata per l'apertura del file. I valori dell'enumerazione <see cref="T:System.IO.FileAccess" /> supportati sono <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" /> e <see cref="F:System.IO.FileAccess.ReadWrite" />.  
  
Quando si usa <see langword="FileAccess.Read" />, l'oggetto <see langword="SqlFileStream" /> può essere usato per leggere tutti i dati esistenti.  
  
Quando si usa <see langword="FileAccess.Write" />, <see langword="SqlFileStream" /> punta a un file di zero byte. I dati esistenti verranno sovrascritti quando l'oggetto viene chiuso e viene eseguito il commit della transazione.  
  
Quando si usa <see langword="FileAccess.ReadWrite" />, <see langword="SqlFileStream" /> punta a un file che contiene tutti i dati esistenti. L'handle è posizionato all'inizio del file. È possibile usare uno dei metodi <see langword="System.IO" /><see langword="Seek" /> per spostare la posizione dell'handle all'interno del file per scrivere o aggiungere nuovi dati.</param>
        <param name="options">Specifica l'opzione da usare durante l'apertura del file. I valori di <see cref="T:System.IO.FileOptions" /> supportati sono <see cref="F:System.IO.FileOptions.Asynchronous" />, <see cref="F:System.IO.FileOptions.WriteThrough" />, <see cref="F:System.IO.FileOptions.SequentialScan" /> e <see cref="F:System.IO.FileOptions.RandomAccess" />.</param>
        <param name="allocationSize">Dimensioni di allocazione da usare durante la creazione di un file. Se impostato su 0, viene usato il valore predefinito.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se viene generata un'eccezione, devono essere il rollback delle transazioni aperte. In caso contrario, può verificarsi una perdita di dati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è un riferimento Null oppure <paramref name="transactionContext" /> è Null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="path" /> è una stringa vuota (""), contiene solo spazi vuoti oppure contiene uno o più caratteri non validi.  
  
 <paramref name="path" /> inizia con "\\\\.\\", ad esempio "\\\\.\PHYSICALDRIVE0 ".  
  
L'handle restituito dalla chiamata a NTCreateFile non è di tipo FILE_TYPE_DISK.  
  
 <paramref name="options" /> contiene un valore non supportato.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Impossibile trovare il file.</exception>
        <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">L'oggetto <paramref name="path" /> specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'accesso richiesto non è consentito dal sistema operativo per il percorso specificato. Questo problema si verifica quando è specificato l'accesso Write o ReadWrite e la directory o il file è impostato per l'accesso in sola lettura.</exception>
        <exception cref="T:System.InvalidOperationException">NtCreateFile non riesce con codice di errore impostato su ERROR_SHARING_VIOLATION.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlFileStream.BeginRead (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer in cui leggere i dati.</param>
        <param name="offset">Offset di byte in <c>buffer</c> in corrispondenza del quale iniziare a scrivere i dati letti dal flusso.</param>
        <param name="count">Numero massimo di byte da leggere.</param>
        <param name="callback">Callback asincrono facoltativo, da chiamare quando la lettura è completa.</param>
        <param name="state">Oggetto fornito dall'utente che distingue questa specifica richiesta di lettura asincrona da altre richieste.</param>
        <summary>Inizia un'operazione di lettura asincrona.</summary>
        <returns>Oggetto <see cref="T:System.IAsyncResult" /> che rappresenta la lettura asincrona, che può essere ancora in sospeso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la lettura.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La lettura di dati non è supportata sul flusso.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlFileStream.BeginWrite (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer da cui scrivere i dati.</param>
        <param name="offset">Offset di byte in <c>buffer</c> da cui iniziare la scrittura.</param>
        <param name="count">Numero massimo di byte da scrivere.</param>
        <param name="callback">Callback asincrono facoltativo, da chiamare quando la scrittura è completa.</param>
        <param name="state">Oggetto fornito dall'utente che distingue questa specifica richiesta di scrittura asincrona da altre richieste.</param>
        <summary>Inizia un'operazione di scrittura asincrona.</summary>
        <returns>Oggetto <see cref="T:System.IAsyncResult" /> che rappresenta la scrittura asincrona, che può essere ancora in sospeso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La scrittura di dati non è supportata sul flusso.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Data.SqlTypes.SqlFileStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il flusso corrente supporta la lettura.</summary>
        <value>
          <see langword="true" /> se il flusso corrente supporta la lettura; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Data.SqlTypes.SqlFileStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il flusso corrente supporta la ricerca.</summary>
        <value>
          <see langword="true" /> se il flusso corrente supporta la ricerca; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Data.SqlTypes.SqlFileStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il flusso corrente prevede il timeout.</summary>
        <value>
          <see langword="true" /> se il flusso corrente prevede il timeout; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Data.SqlTypes.SqlFileStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il flusso corrente supporta la scrittura.</summary>
        <value>
          <see langword="true" /> se il flusso corrente supporta la scrittura; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlFileStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="sqlFileStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Riferimento alla richiesta asincrona in sospeso da completare.</param>
        <summary>Attende il completamento della lettura asincrona in sospeso.</summary>
        <returns>Numero di byte letti dal flusso, tra zero (0) e il numero di byte richiesto. I flussi restituiscono zero (0) solo alla fine del flusso; in caso contrario, si devono bloccare fino a quando non è disponibile almeno 1 byte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.IAsyncResult" /> non proviene dal metodo <see langword="BeginRead" /> corrispondente.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="sqlFileStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Riferimento alla richiesta di I/O asincrona in sospeso.</param>
        <summary>Termina un'operazione di scrittura asincrona.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.IAsyncResult" /> non proviene dal metodo <see langword="BeginWrite" /> corrispondente.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SqlFileStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SqlFileStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="sqlFileStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Garantisce che le risorse vengano liberate e le altre operazioni di pulizia vengano completate quando l'oggetto <see cref="T:System.Data.SqlTypes.SqlFileStream" /> viene recuperato da Garbage Collector.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="sqlFileStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancella tutti i buffer relativi al flusso e determina la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Data.SqlTypes.SqlFileStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica la lunghezza del flusso corrente in byte.</summary>
        <value>
          <see cref="T:System.Int64" /> che indica la lunghezza del flusso corrente in byte.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.SqlTypes.SqlFileStream.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il percorso logico dell'oggetto <see cref="T:System.Data.SqlTypes.SqlFileStream" /> passato al costruttore.</summary>
        <value>Valore stringa che indica il nome di <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Data.SqlTypes.SqlFileStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la posizione all'interno del flusso corrente.</summary>
        <value>Posizione corrente all'interno di <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="sqlFileStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Matrice di byte. Quando questo metodo viene restituito, il buffer contiene la matrice di byte specificata con i valori compresi tra offset e (offset + count - 1) sostituiti con i byte letti dall'origine corrente.</param>
        <param name="offset">Offset dei byte in base zero nel buffer in corrispondenza del quale iniziare l'archiviazione dei dati letti dal flusso corrente.</param>
        <param name="count">Numero massimo di byte da leggere dal flusso corrente.</param>
        <summary>Legge una sequenza di byte dal flusso corrente e fa avanzare la posizione nel flusso del numero di byte letti.</summary>
        <returns>Numero complessivo di byte letti nel buffer. È possibile che questo numero sia inferiore a quello dei byte richiesti se la quantità di byte disponibili è minore oppure che corrisponda a zero (0) se è stata raggiunta la fine del flusso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">L'oggetto non supporta la lettura di dati.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="sqlFileStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legge un byte dal flusso e sposta in avanti la posizione corrente all'interno del flusso di un byte o restituisce -1 se si trova alla fine del flusso.</summary>
        <returns>Cast di byte senza segno in un parametro <see cref="T:System.Int32" /> oppure -1 se si trova alla fine del flusso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la lettura.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">L'oggetto non supporta la lettura di dati.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Data.SqlTypes.SqlFileStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore, in millisecondi, che determina per quanto tempo il flusso tenterà la lettura prima del timeout.</summary>
        <value>Valore in millisecondi che determina per quanto tempo il flusso tenterà la lettura prima del timeout.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="sqlFileStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Offset di byte relativo al parametro <c>origin</c></param>
        <param name="origin">Valore di tipo <see cref="T:System.IO.SeekOrigin" /> che indica il punto di riferimento utilizzato per ottenere la nuova posizione.</param>
        <summary>Imposta la posizione all'interno del flusso corrente.</summary>
        <returns>Nuova posizione all'interno del flusso corrente.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="sqlFileStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">Lunghezza desiderata del flusso corrente in byte.</param>
        <summary>Imposta la lunghezza del flusso corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la lettura.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">L'oggetto non supporta la lettura di dati.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="TransactionContext">
      <MemberSignature Language="C#" Value="public byte[] TransactionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] TransactionContext" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.TransactionContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionContext As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ TransactionContext { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionContext : byte[]" Usage="System.Data.SqlTypes.SqlFileStream.TransactionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il contesto di transazione per l'oggetto <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</summary>
        <value>Matrice <paramref name="transactionContext" /> passata al costruttore per l'oggetto <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="sqlFileStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Matrice di byte. Questo metodo copia i byte di <c>count</c> da <c>buffer</c> nel flusso corrente.</param>
        <param name="offset">Offset di byte in base zero in <c>buffer</c> da cui iniziare la copia dei byte nel flusso corrente.</param>
        <param name="count">Numero di byte da scrivere nel flusso corrente.</param>
        <summary>Scrive una sequenza di byte nel flusso corrente e fa avanzare la posizione corrente nel flusso del numero di byte scritti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">L'oggetto non supporta la scrittura di dati.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="sqlFileStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">Byte da scrivere nel flusso.</param>
        <summary>Scrive un byte nella posizione corrente del flusso e sposta in avanti di un byte la posizione del flusso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">L'oggetto non supporta la scrittura di dati.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Data.SqlTypes.SqlFileStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore, in millisecondi, che determina per quanto tempo il flusso tenterà la scrittura prima del timeout.</summary>
        <value>Valore in millisecondi che determina per quanto tempo il flusso tenterà la scrittura prima del timeout.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/bd8b845c-0f09-4295-b466-97ef106eefa8">Dati FILESTREAM in SQL Server 2008 (ADO.NET)</related>
      </Docs>
    </Member>
  </Members>
</Type>