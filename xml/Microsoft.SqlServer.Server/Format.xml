<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fdaea72a401dc0cc4feb93c1c0d35596b66b010f" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46594947" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Utilizzato dalle classi <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> e <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> per indicare il formato di serializzazione di un tipo definito dall'utente (UDT) o di un aggregato definito dall'utente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzato dalle classi <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> e <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> per indicare il formato di serializzazione di un tipo definito dall'utente (UDT) o di un aggregato definito dall'utente.  
  
   
  
## Examples  
 L'esempio seguente illustra il `UserDefinedType` attributo definito dall'utente che il punto.  Il tipo definito dall'utente è ordinato per byte, è denominata "Point", ha un metodo di convalida denominato "ValidatePoint" e utilizza il formato di serializzazione nativa.  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Nel formato di serializzazione <see langword="Native" /> viene utilizzato un algoritmo molto semplice che consente a SQL Server di memorizzare una rappresentazione efficace dell'UDT su disco. I tipi contrassegnati per la serializzazione <see langword="Native" /> possono avere come membri solo tipi di valore (struct in Microsoft Visual C# e strutture in Microsoft Visual Basic .NET). I membri di tipi di riferimento (come le classi in Visual C# e Visual Basic), definiti dall'utente o già presenti nella struttura (come <see cref="T:System.String" />), non sono supportati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I requisiti per questo formato sono:  
  
-   Il `StructLayout.LayoutKindSequential` attributo deve essere applicato per la funzione di aggregazione o tipo definito dall'utente se è definito in una classe e non una struttura. Controlla il layout fisico dei campi dati e viene utilizzato per forzare i membri devono essere disposti in sequenza in ordine che vengono visualizzati. SQL Server Usa questo attributo per determinare l'ordine dei campi per i tipi UDT con più campi.  
  
-   Il tipo deve contenere almeno un membro (valori serializzati non possono essere una dimensione pari a zero byte).  
  
-   Tutti i campi della funzione di aggregazione devono essere *copiabile da blt*, vale a dire, è necessario hanno una rappresentazione comune nella memoria gestita ed e non richiedono una gestione speciale per il marshalling di interoperabilità.  
  
-   Tutti i campi del tipo in questione devono essere di uno dei seguenti tipi che possono essere serializzati: `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float` , `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, o altri tipi di valore definiti dall'utente che contengono campi di uno di questi tipi.  
  
-   La funzione di aggregazione non è necessario specificare un valore per `MaxByteSize`.  
  
-   La funzione di aggregazione non deve avere campi [NonSerialized].  
  
-   I campi non devono essere contrassegnati con un layout esplicito (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Il formato di serializzazione è sconosciuto.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Il formato di serializzazione <see langword="UserDefined" /> fornisce allo sviluppatore il controllo completo sul formato binario mediante i metodi <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> e <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La funzione di aggregazione è necessario specificare un valore per `MaxByteSize`.  
  
 Specificare il <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> proprietà dell'attributo. Il valore predefinito è false.  
  
 Se si omette un qualsiasi campo la <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> o <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> metodi, lo stato di quel campo non è serializzato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>