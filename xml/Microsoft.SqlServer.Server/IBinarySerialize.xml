<Type Name="IBinarySerialize" FullName="Microsoft.SqlServer.Server.IBinarySerialize">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aa6d2af7371832ccbdde5ed90bb40f43e554dba4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBinarySerialize" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBinarySerialize" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.IBinarySerialize" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBinarySerialize" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBinarySerialize" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="69db3-101">Fornisce l'implementazione personalizzata per la serializzazione e la deserializzazione dei tipi definiti dall'utente (UDT) e degli aggregati definiti dall'utente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69db3-101">Provides custom implementation for user-defined type (UDT) and user-defined aggregate serialization and deserialization.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69db3-102">Tipi definiti dall'utente (UDT) e le aggregazioni definite dall'utente sono necessari per definire un formato di archiviazione, che può essere <xref:Microsoft.SqlServer.Server.Format>.`Native`</span><span class="sxs-lookup"><span data-stu-id="69db3-102">User-defined types (UDTs) and user-defined aggregates are required to define a storage format, which can be either <xref:Microsoft.SqlServer.Server.Format>.`Native`</span></span> <span data-ttu-id="69db3-103">o <xref:Microsoft.SqlServer.Server.Format>.`UserDefined`.</span><span class="sxs-lookup"><span data-stu-id="69db3-103">or <xref:Microsoft.SqlServer.Server.Format>.`UserDefined`.</span></span>  
  
 <span data-ttu-id="69db3-104"><xref:Microsoft.SqlServer.Server.Format>.`Native`</span><span class="sxs-lookup"><span data-stu-id="69db3-104"><xref:Microsoft.SqlServer.Server.Format>.`Native`</span></span> <span data-ttu-id="69db3-105">consente a SQL Server gestire la serializzazione e deserializzazione automaticamente, ma il formato presenta limitazioni sui tipi che è possibile gestire.</span><span class="sxs-lookup"><span data-stu-id="69db3-105">allows SQL Server to handle serialization and deserialization automatically, but the format has restrictions on the kind of types it can handle.</span></span> <span data-ttu-id="69db3-106"><xref:Microsoft.SqlServer.Server.Format>.`UserDefined`</span><span class="sxs-lookup"><span data-stu-id="69db3-106"><xref:Microsoft.SqlServer.Server.Format>.`UserDefined`</span></span> <span data-ttu-id="69db3-107">consente ai tipi definiti dall'utente e aggregati gestire la propria serializzazione.</span><span class="sxs-lookup"><span data-stu-id="69db3-107">allows user-defined types and aggregates to handle their own serialization.</span></span> <span data-ttu-id="69db3-108">Tipi definiti dall'utente e funzioni di aggregazione deve essere contrassegnati con <xref:Microsoft.SqlServer.Server.Format>.`UserDefined`</span><span class="sxs-lookup"><span data-stu-id="69db3-108">User-defined types and aggregates must be marked with <xref:Microsoft.SqlServer.Server.Format>.`UserDefined`</span></span> <span data-ttu-id="69db3-109">nel `SqlUserDefinedType` o `SqlUserDefinedAggregate` attributo e deve implementare il <xref:Microsoft.SqlServer.Server.IBinarySerialize> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="69db3-109">in the `SqlUserDefinedType` or `SqlUserDefinedAggregate` attribute, and must implement the <xref:Microsoft.SqlServer.Server.IBinarySerialize> interface.</span></span>  
  
 <span data-ttu-id="69db3-110">Si noti che anche con la serializzazione personalizzata, la dimensione totale di ogni istanza deve essere sotto il limite massimo consentito, è di 8000 byte.</span><span class="sxs-lookup"><span data-stu-id="69db3-110">Note that even with custom serialization, the total size of each instance must be under the maximum allowed limit, currently 8000 bytes.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public void Read (System.IO.BinaryReader r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Read(class System.IO.BinaryReader r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Read (r As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Read(System::IO::BinaryReader ^ r);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="r">
          <span data-ttu-id="69db3-111">Flusso di <see cref="T:System.IO.BinaryReader" /> da cui viene deserializzato l'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69db3-111">The <see cref="T:System.IO.BinaryReader" /> stream from which the object is deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69db3-112">Genera un tipo definito dall'utente (UDT) o un aggregato definito dall'utente dalla relativa forma binaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69db3-112">Generates a user-defined type (UDT) or user-defined aggregate from its binary form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69db3-113">Il <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> metodo deve ricostituire l'oggetto utilizzando le informazioni scritte dal <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="69db3-113">The <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> method must reconstitute your object using the information written by the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69db3-114">Nell'esempio seguente viene illustrata l'implementazione del <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> metodo di un tipo definito dall'utente, che utilizza un <xref:System.IO.BinaryReader> deserializzare un tipo definito dall'utente memorizzata in precedenza.</span><span class="sxs-lookup"><span data-stu-id="69db3-114">The following example shows the implementation of the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> method of a UDT, which uses a <xref:System.IO.BinaryReader> to de-serialize a previously persisted UDT.</span></span> <span data-ttu-id="69db3-115">Questo esempio si presuppone che il tipo definito dall'utente ha due proprietà di dati: `StringValue` e `DoubleValue`.</span><span class="sxs-lookup"><span data-stu-id="69db3-115">This example assumes that the UDT has two data properties: `StringValue` and `DoubleValue`.</span></span>  
  
 [!code-csharp[DataWorks IBinarySerialize Samples#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks IBinarySerialize Samples/CS/source.cs#1)]
 [!code-vb[DataWorks IBinarySerialize Samples#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks IBinarySerialize Samples/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.IO.BinaryWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.IO.BinaryWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (w As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::IO::BinaryWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="69db3-116">Flusso <see cref="T:System.IO.BinaryWriter" /> in cui il tipo definito dall'utente o l'aggregato definito dall'utente viene serializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69db3-116">The <see cref="T:System.IO.BinaryWriter" /> stream to which the UDT or user-defined aggregate is serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69db3-117">Converte un UDT oppure un aggregato definito dall'utente nel relativo formato binario in modo da garantirne la persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69db3-117">Converts a user-defined type (UDT) or user-defined aggregate into its binary format so that it may be persisted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69db3-118">Scrivere informazioni sufficienti per il flusso binario per consentire il <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> metodo per ricostituire l'UDT o l'aggregazione definita dall'utente.</span><span class="sxs-lookup"><span data-stu-id="69db3-118">Write sufficient information to the binary stream to allow the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> method to reconstitute your UDT or user-defined aggregate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69db3-119">Nell'esempio seguente viene illustrata l'implementazione del <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> metodo di un tipo definito dall'utente, che utilizza un <xref:System.IO.BinaryWriter> per serializzare il tipo definito dall'utente nel formato binario definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="69db3-119">The following example shows the implementation of the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> method of a UDT, which uses a <xref:System.IO.BinaryWriter> to serialize the UDT in the user-defined binary format.</span></span> <span data-ttu-id="69db3-120">Lo scopo del riempimento carattere null consiste nel verificare che il valore stringa è completamente separato dal valore double, in modo che un tipo definito dall'utente viene confrontato con un altro codice Transact-SQL, byte della stringa vengono confrontati con i byte della stringa e vengono confrontati due byte in un tipo double byte.</span><span class="sxs-lookup"><span data-stu-id="69db3-120">The purpose of the null character padding is to ensure that the string value is completely separated from the double value, so that one UDT is compared to another in Transact-SQL code, string bytes are compared to string bytes and double bytes are compared to double bytes.</span></span>  
  
 [!code-csharp[DataWorks IBinarySerialize Samples#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks IBinarySerialize Samples/CS/source.cs#2)]
 [!code-vb[DataWorks IBinarySerialize Samples#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks IBinarySerialize Samples/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>