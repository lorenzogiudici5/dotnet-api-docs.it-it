<Type Name="IBinarySerialize" FullName="Microsoft.SqlServer.Server.IBinarySerialize">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc0de35fff36a636e335a171d1b43b734cc9184b" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52907873" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBinarySerialize" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBinarySerialize" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.IBinarySerialize" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBinarySerialize" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBinarySerialize" />
  <TypeSignature Language="F#" Value="type IBinarySerialize = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fornisce l'implementazione personalizzata per la serializzazione e la deserializzazione dei tipi definiti dall'utente (UDT) e degli aggregati definiti dall'utente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tipi definiti dall'utente (UDT) e aggregazioni definite dall'utente sono necessarie per definire un formato di archiviazione, che può essere <xref:Microsoft.SqlServer.Server.Format>.`Native` oppure <xref:Microsoft.SqlServer.Server.Format>.`UserDefined`.  
  
 <xref:Microsoft.SqlServer.Server.Format>.`Native` consente a SQL Server gestire la serializzazione e deserializzazione automaticamente, ma il formato presenta restrizioni sul tipo di tipi che è possibile gestire. <xref:Microsoft.SqlServer.Server.Format>.`UserDefined` consente ai tipi definiti dall'utente e aggregati gestire la propria serializzazione. Tipi definiti dall'utente e le aggregazioni devono essere contrassegnate con <xref:Microsoft.SqlServer.Server.Format>.`UserDefined` nel `SqlUserDefinedType` oppure `SqlUserDefinedAggregate` dell'attributo e deve implementare il <xref:Microsoft.SqlServer.Server.IBinarySerialize> interfaccia.  
  
 Si noti che anche con la serializzazione personalizzata, la dimensione totale di ogni istanza deve essere sotto il limite massimo consentito, è di 8000 byte.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public void Read (System.IO.BinaryReader r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Read(class System.IO.BinaryReader r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Read (r As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Read(System::IO::BinaryReader ^ r);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.IO.BinaryReader -&gt; unit" Usage="iBinarySerialize.Read r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="r">Flusso <see cref="T:System.IO.BinaryReader" /> da cui viene deserializzato l'oggetto.</param>
        <summary>Genera un tipo definito dall'utente (UDT) o un aggregato definito dall'utente dalla relativa forma binaria.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> metodo necessario ricostituire l'oggetto utilizzando le informazioni scritte dal <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> (metodo).  
  
   
  
## Examples  
 L'esempio seguente illustra l'implementazione del <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> metodo di un tipo definito dall'utente, che usa un <xref:System.IO.BinaryReader> deserializzare un tipo definito dall'utente precedentemente impostata come persistente. Questo esempio si presuppone che il tipo definito dall'utente ha due proprietà di dati: `StringValue` e `DoubleValue`.  
  
 [!code-csharp[DataWorks IBinarySerialize Samples#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks IBinarySerialize Samples/CS/source.cs#1)]
 [!code-vb[DataWorks IBinarySerialize Samples#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks IBinarySerialize Samples/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.IO.BinaryWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.IO.BinaryWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (w As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::IO::BinaryWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.IO.BinaryWriter -&gt; unit" Usage="iBinarySerialize.Write w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="w">Flusso <see cref="T:System.IO.BinaryWriter" /> in cui il tipo definito dall'utente o l'aggregato definito dall'utente viene serializzato.</param>
        <summary>Converte un UDT oppure un aggregato definito dall'utente nel relativo formato binario in modo da garantirne la persistenza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Scrivere informazioni sufficienti per il flusso binario per consentire il <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> metodo per ricostituire il tipo definito dall'utente o l'aggregazione definita dall'utente.  
  
   
  
## Examples  
 L'esempio seguente illustra l'implementazione del <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> metodo di un tipo definito dall'utente, che usa un <xref:System.IO.BinaryWriter> per serializzare il tipo definito dall'utente nel formato binario definito dall'utente. Lo scopo del riempimento carattere null è per garantire che il valore della stringa verrà separato completamente dal valore double, in modo che un tipo definito dall'utente viene confrontato a un altro nel codice Transact-SQL, i byte della stringa vengono confrontati con i byte della stringa e double byte vengono confrontati a double byte.  
  
 [!code-csharp[DataWorks IBinarySerialize Samples#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks IBinarySerialize Samples/CS/source.cs#2)]
 [!code-vb[DataWorks IBinarySerialize Samples#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks IBinarySerialize Samples/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>