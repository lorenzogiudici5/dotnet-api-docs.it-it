<Type Name="SqlContext" FullName="Microsoft.SqlServer.Server.SqlContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="615df0eaca86a5edeca13d521a3b4f48b3b51400" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30338915" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un'astrazione del contesto del chiamante, che fornisce accesso agli oggetti <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> e <see cref="T:System.Security.Principal.WindowsIdentity" />. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:Microsoft.SqlServer.Server.SqlContext> oggetto può essere utilizzato per ottenere il contesto di trigger (per l'esecuzione di codice in un trigger) e l'oggetto pipe (quando disponibile, ad esempio nelle stored procedure). E può essere utilizzato per ottenere un <xref:System.Security.Principal.WindowsIdentity> oggetto che rappresenta l'identità di Microsoft Windows del client chiamante, se il client autenticato al server usando l'autenticazione integrata.  
  
   
  
## Examples  
 L'esempio seguente crea un nuovo <xref:Microsoft.SqlServer.Server.SqlDataRecord> e il relativo <xref:Microsoft.SqlServer.Server.SqlMetaData>. Nell'esempio viene quindi contrassegna l'inizio di un set di risultati utilizzando il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metodo, invia i record con i dati di esempio al client utilizzando il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> metodo e contrassegni la fine del risultato è impostata con il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> (metodo).  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica se il codice chiamante viene eseguito in SQL Server e se è possibile accedere alla context connection.</summary>
        <value>
          <see langword="True" /> se la context connection è disponibile ed è possibile accedere agli altri membri della classe <see cref="T:Microsoft.SqlServer.Server.SqlContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questa proprietà restituisce false, tutti gli altri <xref:Microsoft.SqlServer.Server.SqlContext> membri generano un <xref:System.InvalidOperationException> se utilizzato.  
  
 Se questa proprietà restituisce false, qualsiasi tentativo di aprire un oggetto connessione contenente "connessione di contesto = true" nella stringa di connessione ha esito negativo.  
  
 Questa proprietà è di sola lettura.  
  
 Quando si utilizza ADO.NET per accedere ai dati, se un frammento di codice è in esecuzione all'interno di SQL Server (utilizzando l'integrazione common language runtime) e all'esterno di SQL Server, questa proprietà può essere utilizzata per controllare se la connessione di contesto è disponibile.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipe">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlPipe Pipe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pipe As SqlPipe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlPipe ^ Pipe { Microsoft::SqlServer::Server::SqlPipe ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlPipe</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto pipe che consente al chiamante di restituire al client gruppi di risultati, messaggi e i risultati dell'esecuzione dei comandi.</summary>
        <value>Istanza di <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> se è disponibile un pipe oppure <see langword="null" /> se la chiamata avviene in un contesto in cui il pipe non è disponibile (ad esempio in una funzione definita dall'utente).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se chiamato da fuori di SQL Server, un <xref:System.NotSupportedException> viene generata un'eccezione.  
  
 Questa proprietà è di sola lettura.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerContext">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TriggerContext As SqlTriggerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlTriggerContext ^ TriggerContext { Microsoft::SqlServer::Server::SqlTriggerContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlTriggerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il contesto del trigger utilizzato per fornire al chiamante informazioni sull'evento che ha provocato l'attivazione del trigger e una mappa delle colonne aggiornate.</summary>
        <value>Istanza di <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> se è disponibile il contesto di un trigger oppure <see langword="null" /> se la chiamata è avvenuta al di fuori della chiamata del trigger.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:Microsoft.SqlServer.Server.SqlTriggerContext> oggetto può essere recuperato solo dall'interno di un trigger CLR.  
  
 Se il <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> si accede alla proprietà da esterno a SQL Server, un <xref:System.NotSupportedException> viene generata un'eccezione.  
  
 Questa proprietà è di sola lettura.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identità Microsoft Windows del chiamante.</summary>
        <value>Istanza di <see cref="T:System.Security.Principal.WindowsIdentity" /> che rappresenta l'identità Windows del chiamante oppure <see langword="null" /> se il client è stato autenticato mediante l'autenticazione di SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Codice di Common language runtime (CLR) all'interno di SQL Server viene sempre richiamato nel contesto dell'account del processo. Se è necessario per il codice eseguire un'azione utilizzando l'identità dell'utente chiamante anziché l'identità del processo di SQL Server, un token di rappresentazione deve essere ottenuto tramite questa proprietà. Dopo aver ottenuto l'oggetto <xref:System.Security.Principal.WindowsIdentity>, i chiamanti possono rappresentare l'account del client ed eseguire azioni per suo conto.  
  
 Se chiamato da fuori di SQL Server, un <xref:System.NotSupportedException> viene generata un'eccezione.  
  
 Solo le assembly contrassegnate con l'autorizzazione `EXTERNAL_ACCESS` o `UNSAFE` possono accedere a questa proprietà.  
  
 Questa proprietà è di sola lettura.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere l'identità Windows del client chiamante e rappresentare il client. Vedere "Esempio di rappresentazione" nella documentazione Online di SQL Server per un esempio di rappresentazione che utilizza il <xref:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity%2A> proprietà.  
  
 [!code-csharp[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>