<Type Name="SqlUserDefinedTypeAttribute" FullName="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b905bc12e7688d2e853f6b20f8c4b15a188c423" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48753928" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlUserDefinedTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlUserDefinedTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlUserDefinedTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlUserDefinedTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SqlUserDefinedTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="46daa-101">Utilizzata per contrassegnare la definizione di un tipo in un assembly come tipo definito dall'utente (UDT) in SQL Server.</span>
      <span class="sxs-lookup">
        <span data-stu-id="46daa-101">Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server.</span>
      </span>
      <span data-ttu-id="46daa-102">Le proprietà dell'attributo riflettono le caratteristiche fisiche utilizzate quando il tipo viene registrato con SQL Server.</span>
      <span class="sxs-lookup">
        <span data-stu-id="46daa-102">The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server.</span>
      </span>
      <span data-ttu-id="46daa-103">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="46daa-103">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46daa-104">SQL Server crea un tipo definito dall'utente che è associato alla definizione del tipo che ha il <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="46daa-104">SQL Server creates a user-defined type that is bound to the type definition that has the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> custom attribute.</span></span> <span data-ttu-id="46daa-105">Ogni tipo definito dall'utente deve essere annotata con questo attributo.</span><span class="sxs-lookup"><span data-stu-id="46daa-105">Every UDT must be annotated with this attribute.</span></span> <span data-ttu-id="46daa-106">Visualizzare [i tipi CLR definiti dall'utente](http://go.microsoft.com/fwlink/?LinkId=128028) per altre informazioni sui tipi definiti dall'utente, incluso un esempio di un tipo definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="46daa-106">See [CLR User-Defined Types](http://go.microsoft.com/fwlink/?LinkId=128028) for more information about UDTs, including an example of a UDT.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46daa-107">L'esempio seguente illustra il `UserDefinedType` attributo definito dall'utente che il punto.</span><span class="sxs-lookup"><span data-stu-id="46daa-107">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="46daa-108">Il tipo definito dall'utente è ordinato per byte, è denominata "Point", ha un metodo di convalida denominato "ValidatePoint" e utilizza il formato di serializzazione nativa.</span><span class="sxs-lookup"><span data-stu-id="46daa-108">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.SqlServer.Server.Format format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlUserDefinedTypeAttribute(Microsoft::SqlServer::Server::Format format);" />
      <MemberSignature Language="F#" Value="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute : Microsoft.SqlServer.Server.Format -&gt; Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" Usage="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute format" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.SqlServer.Server.Format" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="46daa-109">Valore dell'enumerazione <see cref="T:Microsoft.SqlServer.Server.Format" /> che rappresenta il formato di serializzazione del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-109">One of the <see cref="T:Microsoft.SqlServer.Server.Format" /> values representing the serialization format of the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46daa-110">Attributo obbligatorio per un tipo definito dall'utente (UDT), utilizzato per confermare che il tipo specificato è un UDT e per indicare il formato di memorizzazione dell'UDT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-110">A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46daa-111">Nell'esempio seguente specifica che il `Format` del tipo definito dall'utente viene `SerializedDataWithMetadata` e il `MaxByteSize` è di 8000 byte.</span><span class="sxs-lookup"><span data-stu-id="46daa-111">The following example specifies that the `Format` of the user-defined type is `SerializedDataWithMetadata` and the `MaxByteSize` is 8000 bytes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[VbRaddataSQLObjects#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Type1.cs#12)]
 [!code-vb[VbRaddataSQLObjects#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Type1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.Format Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.Format Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::Format Format { Microsoft::SqlServer::Server::Format get(); };" />
      <MemberSignature Language="F#" Value="member this.Format : Microsoft.SqlServer.Server.Format" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46daa-112">Formato di serializzazione come <see cref="T:Microsoft.SqlServer.Server.Format" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-112">The serialization format as a <see cref="T:Microsoft.SqlServer.Server.Format" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46daa-113">Un valore <see cref="T:Microsoft.SqlServer.Server.Format" /> che rappresenta il formato di serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-113">A <see cref="T:Microsoft.SqlServer.Server.Format" /> value representing the serialization format.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByteOrdered">
      <MemberSignature Language="C#" Value="public bool IsByteOrdered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByteOrdered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsByteOrdered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByteOrdered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsByteOrdered : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46daa-114">Indica se il tipo definito dall'utente è ordinato in base al numero di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-114">Indicates whether the user-defined type is byte ordered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46daa-115">
            <see langword="true" /> se il tipo definito dall'utente è ordinato in base al numero di byte; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-115">
              <see langword="true" /> if the user-defined type is byte ordered; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46daa-116">Se impostato su `true`, il <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> proprietà garantisce che i dati binari serializzati sono utilizzabile per l'ordinamento semantico delle informazioni.</span><span class="sxs-lookup"><span data-stu-id="46daa-116">When set to `true`, the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> property in effect guarantees that the serialized binary data can be used for semantic ordering of the information.</span></span> <span data-ttu-id="46daa-117">Di conseguenza, ogni istanza di un oggetto di tipo definito dall'utente ordinato per byte può avere solo una rappresentazione serializzata.</span><span class="sxs-lookup"><span data-stu-id="46daa-117">Thus, each instance of a byte-ordered UDT object can only have one serialized representation.</span></span> <span data-ttu-id="46daa-118">Quando in SQL Server viene eseguita un'operazione di confronto sui byte serializzati, i relativi risultati devono essere lo stesso come se la stessa operazione di confronto ha avuto luogo nel codice gestito...</span><span class="sxs-lookup"><span data-stu-id="46daa-118">When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code..</span></span>  
  
 <span data-ttu-id="46daa-119">Le funzionalità seguenti sono supportate quando <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> è impostata su `true`:</span><span class="sxs-lookup"><span data-stu-id="46daa-119">The following features are supported when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="46daa-120">La possibilità di creare indici su colonne di questo tipo.</span><span class="sxs-lookup"><span data-stu-id="46daa-120">The ability to create indexes on columns of this type.</span></span>  
  
-   <span data-ttu-id="46daa-121">Possibilità di creare chiavi primarie ed esterne, nonché vincoli CHECK e UNIQUE sulle colonne di questo tipo.</span><span class="sxs-lookup"><span data-stu-id="46daa-121">The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.</span></span>  
  
-   <span data-ttu-id="46daa-122">La possibilità di utilizzare le clausole di Transact-SQL ORDER BY, GROUP BY e PARTITION BY.</span><span class="sxs-lookup"><span data-stu-id="46daa-122">The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses.</span></span> <span data-ttu-id="46daa-123">In questi casi, la rappresentazione binaria del tipo viene utilizzata per determinare l'ordine.</span><span class="sxs-lookup"><span data-stu-id="46daa-123">In these cases, the binary representation of the type is used to determine the order.</span></span>  
  
-   <span data-ttu-id="46daa-124">La possibilità di usare gli operatori di confronto in istruzioni Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="46daa-124">The ability to use comparison operators in Transact-SQL statements.</span></span>  
  
-   <span data-ttu-id="46daa-125">La possibilità di rendere persistenti le colonne calcolate di questo tipo.</span><span class="sxs-lookup"><span data-stu-id="46daa-125">The ability to persist computed columns of this type.</span></span>  
  
 <span data-ttu-id="46daa-126">Si noti che sia la `Native` e `UserDefined` formati di serializzazione supportano gli operatori di confronto seguenti quando <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> è impostata su `true`:</span><span class="sxs-lookup"><span data-stu-id="46daa-126">Note that both the `Native` and `UserDefined` serialization formats support the following comparison operators when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="46daa-127">Uguale a (=)</span><span class="sxs-lookup"><span data-stu-id="46daa-127">Equal to (=)</span></span>  
  
-   <span data-ttu-id="46daa-128">Diverso da (!=)</span><span class="sxs-lookup"><span data-stu-id="46daa-128">Not equal to (!=)</span></span>  
  
-   <span data-ttu-id="46daa-129">Maggiore di (>)</span><span class="sxs-lookup"><span data-stu-id="46daa-129">Greater than (>)</span></span>  
  
-   <span data-ttu-id="46daa-130">Minore di (\<)</span><span class="sxs-lookup"><span data-stu-id="46daa-130">Less than (\<)</span></span>  
  
-   <span data-ttu-id="46daa-131">Maggiore o uguale a (>=)</span><span class="sxs-lookup"><span data-stu-id="46daa-131">Greater than or equal to (>=)</span></span>  
  
-   <span data-ttu-id="46daa-132">Minore o uguale a (<=)</span><span class="sxs-lookup"><span data-stu-id="46daa-132">Less than or equal to (<=)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public bool IsFixedLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFixedLength As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedLength { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedLength : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46daa-133">Indica se tutte le istanze del tipo definito dall'utente sono della stessa lunghezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-133">Indicates whether all instances of this user-defined type are the same length.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46daa-134">
            <see langword="true" /> se tutte le istanze di questo tipo sono della stessa lunghezza; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-134">
              <see langword="true" /> if all instances of this type are the same length; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46daa-135">Se impostato su `true`, tutte le istanze di tipi definiti dall'utente corrispondente a questo tipo di common language runtime (CLR) devono avere una lunghezza in byte esattamente uguale alla <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="46daa-135">If set to `true`, all instances of UDTs corresponding to this common language runtime (CLR) type must have a length in bytes exactly equal to <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</span></span> <span data-ttu-id="46daa-136">Questo attributo è rilevante solo per tipi definiti dall'utente con `UserDefined` serializzazione <xref:Microsoft.SqlServer.Server.Format>.</span><span class="sxs-lookup"><span data-stu-id="46daa-136">This attribute is only relevant for UDTs with `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxByteSize">
      <MemberSignature Language="C#" Value="public int MaxByteSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxByteSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxByteSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxByteSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxByteSize : int with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46daa-137">Dimensione massima, in byte, dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-137">The maximum size of the instance, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46daa-138">Un valore <see cref="T:System.Int32" /> che rappresenta la dimensione massima dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-138">An <see cref="T:System.Int32" /> value representing the maximum size of the instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46daa-139">È necessario specificare il <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> proprietà con il `UserDefined` serializzazione <xref:Microsoft.SqlServer.Server.Format>.</span><span class="sxs-lookup"><span data-stu-id="46daa-139">You must specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> property with the `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 <span data-ttu-id="46daa-140">Quando ci si connette a SQL Server 2005 o versioni precedenti, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> deve essere compreso tra 1 e 8000.</span><span class="sxs-lookup"><span data-stu-id="46daa-140">When connecting to SQL Server 2005 or earlier, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> must be between 1 and 8000.</span></span>  
  
 <span data-ttu-id="46daa-141">Quando ci si connette a SQL Server 2008 o versione successiva, impostare <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> compreso tra 1 e 8000, per un tipo le cui istanze sono sempre pari a 8.000 byte o meno.</span><span class="sxs-lookup"><span data-stu-id="46daa-141">When connecting to SQL Server 2008 or later, set <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> between 1 and 8000, for a type whose instances are always 8,000 bytes or less.</span></span> <span data-ttu-id="46daa-142">Per i tipi che possono esistere istanze maggiori di 8000, specificare -1.</span><span class="sxs-lookup"><span data-stu-id="46daa-142">For types that can have instances larger than 8000, specify -1.</span></span>  
  
 <span data-ttu-id="46daa-143">Per un tipo definito dall'utente con serializzazione definita dall'utente specificata, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> si riferisce alle dimensioni totali dell'UDT nella sua forma serializzata come definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="46daa-143">For a UDT with user-defined serialization specified, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> refers to the total size of the UDT in its serialized form as defined by the user.</span></span> <span data-ttu-id="46daa-144">Si consideri un tipo definito dall'utente con una proprietà di una stringa di 10 caratteri (<xref:System.Char>).</span><span class="sxs-lookup"><span data-stu-id="46daa-144">Consider a UDT with a property of a string of 10 characters (<xref:System.Char>).</span></span> <span data-ttu-id="46daa-145">Quando il tipo definito dall'utente viene serializzato utilizzando un <xref:System.IO.BinaryWriter>, la dimensione totale della stringa serializzata è 22 byte: 2 byte per carattere UTF-16 Unicode, moltiplicato per il numero massimo di caratteri, più 2 byte di controllo di overhead generato dalla serializzazione di un flusso binario.</span><span class="sxs-lookup"><span data-stu-id="46daa-145">When the UDT is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream.</span></span> <span data-ttu-id="46daa-146">Quando si determina il valore di <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, le dimensioni totali del tipo serializzato in questione devono essere considerata: le dimensioni dei dati serializzati in formato binario più l'overhead generato dalla serializzazione.</span><span class="sxs-lookup"><span data-stu-id="46daa-146">So, when determining the value of <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, the total size of the serialized UDT must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.</span></span>  
  
 <span data-ttu-id="46daa-147">Questa proprietà non deve essere utilizzata con `Native` serializzazione <xref:Microsoft.SqlServer.Server.Format>.</span><span class="sxs-lookup"><span data-stu-id="46daa-147">This property should not be used with `Native` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46daa-148">Nome SQL Server del tipo definito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-148">The SQL Server name of the user-defined type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46daa-149">Un valore <see cref="T:System.String" /> che rappresenta il nome del server SQL del tipo definito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-149">A <see cref="T:System.String" /> value representing the SQL Server name of the user-defined type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46daa-150">Il <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> proprietà non viene usato all'interno di SQL Server, ma viene usato dall'ambiente di sviluppo integrato (IDE) di Microsoft Visual Studio .NET.</span><span class="sxs-lookup"><span data-stu-id="46daa-150">The <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> property is not used within SQL Server, but is used by the Microsoft Visual Studio .NET Integrated Development Environment (IDE).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMethodName">
      <MemberSignature Language="C#" Value="public string ValidationMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationMethodName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationMethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationMethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationMethodName : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46daa-151">Nome del metodo utilizzato per convalidare le istanze del tipo definito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-151">The name of the method used to validate instances of the user-defined type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46daa-152">
            <see cref="T:System.String" /> che rappresenta il nome del metodo utilizzato per convalidare le istanze del tipo definito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46daa-152">A <see cref="T:System.String" /> representing the name of the method used to validate instances of the user-defined type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46daa-153">Il metodo specificato da questo attributo viene convalidato le istanze del tipo in questione quando il tipo definito dall'utente è stato deserializzato da un valore binario che non è attendibile.</span><span class="sxs-lookup"><span data-stu-id="46daa-153">The method specified by this attribute validates instances of the UDT when the UDT has been deserialized from a binary value that is not trusted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>