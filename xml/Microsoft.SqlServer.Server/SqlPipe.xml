<Type Name="SqlPipe" FullName="Microsoft.SqlServer.Server.SqlPipe">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f715fd742165d7d4ffbc7cb2e9be3f2dfa6d157e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37715748" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlPipe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlPipe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlPipe" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlPipe" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPipe sealed" />
  <TypeSignature Language="F#" Value="type SqlPipe = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="85047-101">Consente la restituzione dei risultati al chiamante da parte delle stored procedure gestite in esecuzione in-process su SQL Server.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85047-101">Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller.</span>
      </span>
      <span data-ttu-id="85047-102">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85047-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85047-103">Un'istanza di questa classe viene reso disponibile per le stored procedure gestite tramite il <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> proprietà del <xref:Microsoft.SqlServer.Server.SqlContext> classe.</span><span class="sxs-lookup"><span data-stu-id="85047-103">An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85047-104">L'esempio seguente usa <xref:System.Data.SqlClient.SqlConnection> e <xref:System.Data.SqlClient.SqlCommand> selezionare le righe da un'origine dati in una stored procedure.</span><span class="sxs-lookup"><span data-stu-id="85047-104">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="85047-105">L'esempio Usa quindi un <xref:Microsoft.SqlServer.Server.SqlPipe> per eseguire il comando e inviare i risultati al client.</span><span class="sxs-lookup"><span data-stu-id="85047-105">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteAndSend">
      <MemberSignature Language="C#" Value="public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAndSend(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteAndSend (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteAndSend(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAndSend : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlPipe.ExecuteAndSend command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="85047-106">Oggetto <see cref="T:System.Data.SqlClient.SqlCommand" /> da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-106">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to be executed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85047-107">Esegue il comando passato come parametro e invia i risultati al client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-107">Executes the command passed as a parameter and sends the results to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85047-108">Oltre a eventuali risultati effettivi, gli altri messaggi e gli errori vengono inoltre inviati direttamente al client.</span><span class="sxs-lookup"><span data-stu-id="85047-108">In addition to any actual results, other messages and errors are also sent directly to the client.</span></span>  
  
 <span data-ttu-id="85047-109">I parametri di output e valori restituiti non vengono inviati al client. sono disponibili al chiamante, la raccolta di parametri dell'oggetto comando.</span><span class="sxs-lookup"><span data-stu-id="85047-109">Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.</span></span>  
  
 <span data-ttu-id="85047-110">Se il comando non è associato a una connessione in-process, un <xref:System.InvalidOperationException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="85047-110">If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="85047-111">Questo metodo non è supportato sui comandi associati a connessioni out-of-process.</span><span class="sxs-lookup"><span data-stu-id="85047-111">This method is not supported on commands bound to out-of-process connections.</span></span>  
  
 <span data-ttu-id="85047-112">Se sono presenti errori nel <xref:System.Data.SqlClient.SqlCommand> oggetto che è stato inviato, le eccezioni vengono inviate alla pipe, ma una copia viene inviata anche al codice gestito chiamante.</span><span class="sxs-lookup"><span data-stu-id="85047-112">If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code.</span></span> <span data-ttu-id="85047-113">Se il codice chiamante non rileva l'eccezione, verrà propaga lo stack per il codice Transact-SQL e vengono visualizzati due volte nell'output.</span><span class="sxs-lookup"><span data-stu-id="85047-113">If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice.</span></span> <span data-ttu-id="85047-114">Se il codice chiamante rileva l'eccezione, il consumer della pipe verrà comunque visualizzato l'errore, ma non ci sarà un errore di duplicato.</span><span class="sxs-lookup"><span data-stu-id="85047-114">If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85047-115">L'esempio seguente usa <xref:System.Data.SqlClient.SqlConnection> e <xref:System.Data.SqlClient.SqlCommand> selezionare le righe da un'origine dati in una stored procedure.</span><span class="sxs-lookup"><span data-stu-id="85047-115">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="85047-116">L'esempio Usa quindi un <xref:Microsoft.SqlServer.Server.SqlPipe> per eseguire il comando e inviare i risultati al client.</span><span class="sxs-lookup"><span data-stu-id="85047-116">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85047-117">L'elemento <paramref name="command" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-117">The <paramref name="command" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85047-118">Questo metodo non è supportato sui comandi associati a connessioni out-of-process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-118">This method is not supported on commands bound to out-of-process connections.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSendingResults">
      <MemberSignature Language="C#" Value="public bool IsSendingResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSendingResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSendingResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSendingResults { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSendingResults : bool" Usage="Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85047-119">Ottiene un valore che indica se la classe <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> è in modalità di invio di singoli set di risultati al client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-119">Gets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client.</span>
          </span>
          <span data-ttu-id="85047-120">Questa proprietà è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-120">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85047-121">
            <see langword="true" /> se è stato chiamato il metodo <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> e la classe <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> si trova nella modalità di invio di singoli set di risultati al client; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-121">
              <see langword="true" /> if the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method has been called and the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85047-122">Invia i risultati direttamente al client o al consumer dell'output corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-122">Sends results directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85047-123">Il **inviare** metodo invia i dati direttamente al client o al chiamante.</span><span class="sxs-lookup"><span data-stu-id="85047-123">The **Send** method sends data straight to the client or caller.</span></span> <span data-ttu-id="85047-124">In genere è il client che utilizza l'output dal **Pipe** (metodo), ma nel caso di CLR nidificate stored procedure di consumer dell'output può anche essere una stored procedure.</span><span class="sxs-lookup"><span data-stu-id="85047-124">It is usually the client that consumes the output from the **Pipe** method, but in the case of nested CLR stored procedures the output consumer can also be a stored procedure.</span></span> <span data-ttu-id="85047-125">Procedure1 chiama ad esempio <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> con il testo del comando "EXEC Procedure2".</span><span class="sxs-lookup"><span data-stu-id="85047-125">For example, Procedure1 calls <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the command text "EXEC Procedure2".</span></span> <span data-ttu-id="85047-126">Procedure2 è anche una stored procedure gestita.</span><span class="sxs-lookup"><span data-stu-id="85047-126">Procedure2 is also a managed stored procedure.</span></span> <span data-ttu-id="85047-127">Se Procedure2 chiama <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, la riga viene inviata al lettore di Procedure1, non al client.</span><span class="sxs-lookup"><span data-stu-id="85047-127">If Procedure2 now calls <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, the row is sent to Procedure1's reader, not to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.Send : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.Send record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="85047-128">Gruppo di risultati a riga singola inviato al client: oggetto <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-128">The single-row result set sent to the client: a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85047-129">Invia un gruppo di risultati a riga singola direttamente al client o al consumer dell'output corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-129">Sends a single-row result set directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85047-130">L'elemento <paramref name="record" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-130">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Data.SqlClient.SqlDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Data.SqlClient.SqlDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (reader As SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Data::SqlClient::SqlDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Data.SqlClient.SqlDataReader -&gt; unit" Usage="sqlPipe.Send reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.SqlClient.SqlDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="85047-131">Il set di risultati a riga multipla da inviare al client: oggetto <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-131">The multirow result set to be sent to the client: a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85047-132">Invia un gruppo di risultati a riga multipla direttamente al client o al consumer dell'output corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-132">Sends a multirow result set directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85047-133">Se il <xref:System.Data.SqlClient.SqlDataReader> oggetto passato come parametro dispone di colonne nascoste, tali colonne non vengono propagate al set di risultati inviati al client.</span><span class="sxs-lookup"><span data-stu-id="85047-133">If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85047-134">L'elemento <paramref name="reader" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-134">The <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : string -&gt; unit" Usage="sqlPipe.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="85047-135">Stringa di messaggio da inviare al client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-135">The message string to be sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85047-136">Invia un messaggio stringa direttamente al client o al consumer dell'output corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-136">Sends a string message directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85047-137">La stringa di messaggio viene inviata come messaggio informativo al client.</span><span class="sxs-lookup"><span data-stu-id="85047-137">The message string is sent as an informational message to the client.</span></span> <span data-ttu-id="85047-138">Le applicazioni client possono ascoltare i messaggi tramite meccanismi diversi, a seconda di dati accesso API application programming interface () che usano.</span><span class="sxs-lookup"><span data-stu-id="85047-138">Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use.</span></span> <span data-ttu-id="85047-139">Ad esempio, se il client utilizza ADO.NET, i messaggi vengono trasmessi attraverso il <xref:System.Data.SqlClient.SqlConnection.InfoMessage> evento.</span><span class="sxs-lookup"><span data-stu-id="85047-139">For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85047-140">L'esempio seguente usa il <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> metodo per inviare una stringa di messaggio direttamente al client.</span><span class="sxs-lookup"><span data-stu-id="85047-140">The following example uses the <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> method to send a message string directly to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.Send#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.Send#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85047-141">L'oggetto <paramref name="message" /> è composto da più di 4.000 caratteri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-141">The <paramref name="message" /> is greater than 4,000 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85047-142">L'elemento <paramref name="message" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-142">The <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendResultsEnd">
      <MemberSignature Language="C#" Value="public void SendResultsEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsEnd();" />
      <MemberSignature Language="F#" Value="member this.SendResultsEnd : unit -&gt; unit" Usage="sqlPipe.SendResultsEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85047-143">Contrassegna la fine di un gruppo di risultati e riporta l'istanza di <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> allo stato iniziale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-143">Marks the end of a result set, and returns the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> instance back to the initial state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85047-144">Le stored procedure gestite possono inviare set di risultati per i client che non si implementa un <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="85047-144">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="85047-145">Questo metodo, insieme a <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> e <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, consente alle stored procedure per l'invio di set di risultati personalizzati al client.</span><span class="sxs-lookup"><span data-stu-id="85047-145">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85047-146">L'esempio seguente crea una nuova <xref:Microsoft.SqlServer.Server.SqlDataRecord> e il relativo <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="85047-146">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="85047-147">Nell'esempio viene quindi contrassegna l'inizio di un set di risultati utilizzando il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metodo, invia i record con i dati di esempio al client usando il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> metodo e contrassegni la fine del risultato del set con il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="85047-147">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85047-148">Il metodo <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> non è stato chiamato precedentemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-148">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsRow">
      <MemberSignature Language="C#" Value="public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsRow(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsRow (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsRow(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsRow : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsRow record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="85047-149">Oggetto <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> con i valori di colonna relativi alla riga da inviare al client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-149">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object with the column values for the row to be sent to the client.</span>
          </span>
          <span data-ttu-id="85047-150">Lo schema del record dovrà corrispondere allo schema descritto dai metadati della classe <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passata al metodo <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-150">The schema for the record must match the schema described by the metadata of the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passed to the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85047-151">Invia direttamente al client una riga singola di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-151">Sends a single row of data back to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85047-152">Le stored procedure gestite possono inviare set di risultati per i client che non si implementa un <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="85047-152">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="85047-153">Questo metodo, insieme a <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> e <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, consente alle stored procedure per l'invio di set di risultati personalizzati al client.</span><span class="sxs-lookup"><span data-stu-id="85047-153">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="85047-154">Il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> metodo invia una singola riga di dati al client.</span><span class="sxs-lookup"><span data-stu-id="85047-154">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method sends a single row of data back to the client.</span></span> <span data-ttu-id="85047-155">Le righe possono essere restituite al chiamante successivamente chiamando <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, una volta per ogni riga inviata.</span><span class="sxs-lookup"><span data-stu-id="85047-155">Rows can subsequently be returned to the caller by calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, one time for each row being sent.</span></span> <span data-ttu-id="85047-156">Dopo che tutte le righe sono state inviate, una chiamata al <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> metodo è necessario per contrassegnare la fine del set di risultati.</span><span class="sxs-lookup"><span data-stu-id="85047-156">After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85047-157">L'esempio seguente crea una nuova <xref:Microsoft.SqlServer.Server.SqlDataRecord> e il relativo <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="85047-157">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="85047-158">Nell'esempio viene quindi contrassegna l'inizio di un set di risultati utilizzando il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metodo, invia i record con i dati di esempio al client usando il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> metodo e contrassegni la fine del risultato del set con il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="85047-158">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85047-159">L'elemento <paramref name="record" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-159">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85047-160">Il metodo <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> non è stato chiamato precedentemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-160">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsStart">
      <MemberSignature Language="C#" Value="public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsStart(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsStart (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsStart(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsStart : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsStart record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="85047-161">Oggetto <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> da cui i metadati vengono estratti e utilizzati per descrivere il gruppo di risultati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-161">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object from which metadata is extracted and used to describe the result set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85047-162">Contrassegna l'inizio di un set di risultati da inviare al client e utilizza il parametro record per costruire i metadati che descrivono il set di risultati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-162">Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85047-163">Le stored procedure gestite possono inviare set di risultati per i client che non si implementa un <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="85047-163">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="85047-164">Questo metodo, insieme a <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> e <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, consente alle stored procedure per l'invio di set di risultati personalizzati al client.</span><span class="sxs-lookup"><span data-stu-id="85047-164">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="85047-165">Il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metodo contrassegna l'inizio di un set di risultati e utilizza il parametro record per costruire i metadati che descrivono il set di risultati.</span><span class="sxs-lookup"><span data-stu-id="85047-165">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set.</span></span> <span data-ttu-id="85047-166">Tutte le righe successive, inviate tramite il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> metodo, deve corrispondere definizione dei metadati.</span><span class="sxs-lookup"><span data-stu-id="85047-166">All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition.</span></span>  
  
 <span data-ttu-id="85047-167">Si noti che la chiamata successiva <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, solo <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> e <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> può essere chiamato.</span><span class="sxs-lookup"><span data-stu-id="85047-167">Note that after calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called.</span></span> <span data-ttu-id="85047-168">Qualsiasi altro metodo nella stessa istanza di <xref:Microsoft.SqlServer.Server.SqlPipe> genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="85047-168">Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="85047-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> imposta <xref:Microsoft.SqlServer.Server.SqlPipe> allo stato iniziale in cui è possibile chiamare altri metodi.</span><span class="sxs-lookup"><span data-stu-id="85047-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called.</span></span>  
  
 <span data-ttu-id="85047-170">Dopo il controllo torna a Transact-SQL in seguito all'esecuzione di CLR, non tentare di usare una variabile statica o locale inizializzata per la memoria CLR.</span><span class="sxs-lookup"><span data-stu-id="85047-170">After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory.</span></span> <span data-ttu-id="85047-171">Ad esempio, non archiviare un'istanza di un processo in classe, ad esempio `SQLDataRecord`, che verrà usato dopo la restituzione del controllo da CLR.</span><span class="sxs-lookup"><span data-stu-id="85047-171">For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR.</span></span> <span data-ttu-id="85047-172">Unica eccezione è rappresentata la `SQLMetaData` nella classe process.</span><span class="sxs-lookup"><span data-stu-id="85047-172">One exception is the `SQLMetaData` in process class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85047-173">L'esempio seguente crea una nuova <xref:Microsoft.SqlServer.Server.SqlDataRecord> e il relativo <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="85047-173">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="85047-174">Nell'esempio viene quindi contrassegna l'inizio di un set di risultati utilizzando il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metodo, invia i record con i dati di esempio al client usando il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> metodo e contrassegni la fine del risultato del set con il <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="85047-174">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85047-175">L'elemento <paramref name="record" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-175">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85047-176">Il <paramref name="record" /> non contiene colonne oppure non è stato inizializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-176">The <paramref name="record" /> has no columns or has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85047-177">È stato specificato un metodo diverso da <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> oppure è stato chiamato il metodo <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> dopo il metodo <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85047-177">A method other than <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> or <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> was called after the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
  </Members>
</Type>