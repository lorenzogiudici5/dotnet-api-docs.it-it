<Type Name="SqlTriggerContext" FullName="Microsoft.SqlServer.Server.SqlTriggerContext">
  <TypeSignature Language="C#" Value="public sealed class SqlTriggerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTriggerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlTriggerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTriggerContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTriggerContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2b76e-101">Fornisce informazioni contestuali sul trigger che è stato attivato.</span><span class="sxs-lookup"><span data-stu-id="2b76e-101">Provides contextual information about the trigger that was fired.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76e-102">Le informazioni contestuali fornite includono il tipo di azione che ha causato l'attivazione del trigger, le colonne modificate in un'operazione di aggiornamento, e, nel caso di una definizione di dati (trigger DDL language), una struttura XML EventData (vedere "Riferimenti di Transact-SQL" nella documentazione SQL Server in linea) che descrive l'operazione di attivazione.</span><span class="sxs-lookup"><span data-stu-id="2b76e-102">The contextual information provided includes the type of action that caused the trigger to fire, which columns were modified in an UPDATE operation, and, in the case of a data definition language (DDL) trigger, an XML EventData structure (see "Transact-SQL Reference" in SQL Server Books Online) that describes the triggering operation.</span></span>  
  
 <span data-ttu-id="2b76e-103">Un'istanza di <xref:Microsoft.SqlServer.Server.SqlTriggerContext> è disponibile il <xref:Microsoft.SqlServer.Server.SqlContext> (classe), quando il codice è in esecuzione all'interno di un trigger tramite la <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="2b76e-103">An instance of <xref:Microsoft.SqlServer.Server.SqlTriggerContext> is available from the <xref:Microsoft.SqlServer.Server.SqlContext> class, when the code is running inside a trigger through the <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b76e-104">Nell'esempio seguente un <xref:Microsoft.SqlServer.Server.SqlTriggerContext> oggetto utilizzato per determinare se un <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> un'azione.</span><span class="sxs-lookup"><span data-stu-id="2b76e-104">The following example shows a <xref:Microsoft.SqlServer.Server.SqlTriggerContext> object being used to determine if an <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> action occurred.</span></span> <span data-ttu-id="2b76e-105">Se è stata inserita una riga nel `user`della tabella, il nome utente e il nome reale vengono recuperati dalla riga inserita e quindi aggiunti al **UserNameAudit** tabella.</span><span class="sxs-lookup"><span data-stu-id="2b76e-105">If a row was inserted into the `user`'s table, the user name and real name are retrieved from the inserted row and then added to the **UserNameAudit** table.</span></span>  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76e-106">Ottiene il numero di colonne contenute nella tabella dei dati associata al trigger.</span><span class="sxs-lookup"><span data-stu-id="2b76e-106">Gets the number of columns contained by the data table bound to the trigger.</span></span> <span data-ttu-id="2b76e-107">Questa proprietà è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="2b76e-107">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="2b76e-108">Numero di colonne contenute nella tabella dei dati associata al trigger espresso come intero.</span><span class="sxs-lookup"><span data-stu-id="2b76e-108">The number of columns contained by the data table bound to the trigger, as an integer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76e-109"><xref:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount%2A> proprietà è utile per determinare l'ordinale massimo che <xref:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn%2A> consente la chiamata di un trigger specifico.</span><span class="sxs-lookup"><span data-stu-id="2b76e-109"><xref:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount%2A> property is useful to determine the maximum ordinal that <xref:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn%2A> allows for a given trigger invocation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventData">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlXml EventData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlTypes.SqlXml EventData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.EventData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventData As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlXml ^ EventData { System::Data::SqlTypes::SqlXml ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76e-110">Ottiene i dati dell'evento specifici per l'azione che ha attivato il trigger.</span><span class="sxs-lookup"><span data-stu-id="2b76e-110">Gets the event data specific to the action that fired the trigger.</span></span></summary>
        <value><span data-ttu-id="2b76e-111">Dati dell'evento specifici per l'azione che ha attivato il trigger come classe <see cref="T:System.Data.SqlTypes.SqlXml" /> se sono disponibili più informazioni. In caso contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b76e-111">The event data specific to the action that fired the trigger as a <see cref="T:System.Data.SqlTypes.SqlXml" /> if more information is available; <see langword="null" /> otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76e-112">Queste informazioni sono disponibili per i trigger data definition language (DDL).</span><span class="sxs-lookup"><span data-stu-id="2b76e-112">This information is available for data definition language (DDL) triggers.</span></span> <span data-ttu-id="2b76e-113">Non sono disponibili informazioni tramite questa proprietà per i trigger di data manipulation language (DML).</span><span class="sxs-lookup"><span data-stu-id="2b76e-113">No information is available through this property for data manipulation language (DML) triggers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpdatedColumn">
      <MemberSignature Language="C#" Value="public bool IsUpdatedColumn (int columnOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUpdatedColumn(int32 columnOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUpdatedColumn (columnOrdinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUpdatedColumn(int columnOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnOrdinal"><span data-ttu-id="2b76e-114">Ordinale in base zero della colonna.</span><span class="sxs-lookup"><span data-stu-id="2b76e-114">The zero-based ordinal of the column.</span></span></param>
        <summary><span data-ttu-id="2b76e-115">Restituisce <see langword="true" /> se una colonna è stata influenzata da un'istruzione INSERT o UPDATE.</span><span class="sxs-lookup"><span data-stu-id="2b76e-115">Returns <see langword="true" /> if a column was affected by an INSERT or UPDATE statement.</span></span></summary>
        <returns>
          <span data-ttu-id="2b76e-116"><see langword="true" /> se la colonna è stata influenzata da un'operazione INSERT o UPDATE.</span><span class="sxs-lookup"><span data-stu-id="2b76e-116"><see langword="true" /> if the column was affected by an INSERT or UPDATE operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b76e-117">Chiamata nel contesto di un trigger in cui il valore della proprietà <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> non è <see langword="Insert" /> o <see langword="Update" />.</span><span class="sxs-lookup"><span data-stu-id="2b76e-117">Called in the context of a trigger where the value of the <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> property is not <see langword="Insert" /> or <see langword="Update" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerAction">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.TriggerAction TriggerAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.TriggerAction TriggerAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TriggerAction As TriggerAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::TriggerAction TriggerAction { Microsoft::SqlServer::Server::TriggerAction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.TriggerAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76e-118">Indica l'azione che ha attivato il trigger.</span><span class="sxs-lookup"><span data-stu-id="2b76e-118">Indicates what action fired the trigger.</span></span></summary>
        <value><span data-ttu-id="2b76e-119">Azione che ha attivato il trigger come <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />.</span><span class="sxs-lookup"><span data-stu-id="2b76e-119">The action that fired the trigger as a <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b76e-120">Nell'esempio seguente viene illustrato un trigger di controllo.</span><span class="sxs-lookup"><span data-stu-id="2b76e-120">The following example shows an auditing trigger.</span></span> <span data-ttu-id="2b76e-121">Se un <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> o <xref:Microsoft.SqlServer.Server.TriggerAction.Delete> azione si è verificato, le righe vengono recuperate dalle tabelle INSERTED e DELETED.</span><span class="sxs-lookup"><span data-stu-id="2b76e-121">If an <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> or <xref:Microsoft.SqlServer.Server.TriggerAction.Delete> action occurred, the affected rows are retrieved from the INSERTED and DELETED tables.</span></span>  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#2)]
 [!code-vb[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>