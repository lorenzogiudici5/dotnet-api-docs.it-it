<Type Name="IWsdlExportExtension" FullName="System.ServiceModel.Description.IWsdlExportExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="57aa2ed58df44268d84647be33d0fe5e65e04ae3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37617230" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlExportExtension" />
  <TypeSignature Language="F#" Value="type IWsdlExportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce comportamenti dell'endpoint o del contratto che possono esportare metadati personalizzati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per modificare ed estendere il WSDL (Web Services Description Language) esportato da oggetti <xref:System.ServiceModel.Description.WsdlExporter>, implementare l'interfaccia <xref:System.ServiceModel.Description.IWsdlExportExtension> su un endpoint, contratto o comportamento dell'operazione (un oggetto che implementa <xref:System.ServiceModel.Description.IContractBehavior>, <xref:System.ServiceModel.Description.IEndpointBehavior> o <xref:System.ServiceModel.Description.IOperationBehavior>) e aggiungere il comportamento alla proprietà <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>, <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> o <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A>. In aggiunta, è anche possibile implementare <xref:System.ServiceModel.Description.IWsdlExportExtension> su un <xref:System.ServiceModel.Channels.BindingElement>.  
  
> [!NOTE]
>  Le implementazioni <xref:System.ServiceModel.Description.IWsdlExportExtension> non vengono mai richiamate se sono implementate come <xref:System.ServiceModel.Description.IServiceBehavior>.  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension> non Esporta asserzioni di criteri personalizzate anche se Windows Communication Foundation (WCF) consente di esportare asserzioni di criteri di associazione personalizzata per l'elemento appropriato in WSDL. Se si desidera esportare asserzioni di criteri personalizzate, implementare l'interfaccia <xref:System.ServiceModel.Description.IPolicyExportExtension>.  
  
 Il processo di pubblicazione di metadati inizia chiamando <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=nameWithType> che a sua volta chiama <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=nameWithType> per ciascun endpoint.  
  
 L'endpoint viene esportato esportando prima il relativo contratto. Quando si esporta un contratto <xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType> chiama il metodo <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> su tutte le implementazioni <xref:System.ServiceModel.Description.IWsdlExportExtension> nel contratto e sui comportamenti dell'operazione per quel contratto. Le operazioni che utilizzano azioni jolly non vengono esportate in metadati, quindi le implementazioni di <xref:System.ServiceModel.Description.IWsdlExportExtension> su comportamenti dell'operazione per queste operazioni non vengono esportate.  
  
 Dopo avere esportato il contratto, la porta e l'associazione vengono esportati e vengono allegate le espressioni dei criteri esportate.  
  
 Entrambi i metodi <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> e <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> forniscono l'accesso a <xref:System.ServiceModel.Description.WsdlExporter> così le implementazioni di <xref:System.ServiceModel.Description.IWsdlExportExtension> sono in grado di segnalare gli errori reversibili e gli avvisi per mezzo della proprietà <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A>. Gli oggetti di contesto passati in entrambi i metodi forniscono mapping convenienti tra gli elementi WSDL esportati e le proprietà degli oggetti <xref:System.ServiceModel.Description.ContractDescription> e <xref:System.ServiceModel.Description.ServiceEndpoint>.  
  
 Se un'implementazione di <xref:System.ServiceModel.Description.IWsdlExportExtension> genera un'eccezione di esportazione, i metadati generati sono in un stato incoerente e l'oggetto <xref:System.ServiceModel.Description.WsdlExporter> deve essere ignorato.  
  
> [!NOTE]
>  L'estensione dell'esportazione personalizzata deve andare in esecuzione dopo che il serializzatore incorporato popola la descrizione del servizio.  
  
   
  
## Examples  
 Nell'esempio di codice seguente è mostrato un <xref:System.ServiceModel.Description.IWsdlExportExtension> che aggiunge attributi della documentazione personalizzati al file WSDL come annotazioni WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportContract : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlContractConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportContract (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">Il <see cref="T:System.ServiceModel.Description.WsdlExporter" /> che esporta le informazioni del contratto.</param>
        <param name="context">Fornisce mapping tra gli elementi WSDL esportati e la descrizione del contratto.</param>
        <summary>Scrive elementi WSDL (Web Services Description Language) personalizzati nel WSDL generato per un contratto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> viene chiamato quando il sistema di esportazione dei metadati sta esportando il contratto. Solo il contratto e i comportamenti dell'operazione che implementano <xref:System.ServiceModel.Description.IWsdlExportExtension> ricevono la chiamata di <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>. Tutti i comportamenti che implementano <xref:System.ServiceModel.Description.IWsdlExportExtension> ricevono la chiamata di <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>.  
  
 Utilizzare il parametro `context` per modificare il WSDL da esportare. Per un esempio, vedere la sezione Esempio.  
  
   
  
## Examples  
 Nell'esempio di codice seguente è mostrato un <xref:System.ServiceModel.Description.IWsdlExportExtension> che aggiunge attributi della documentazione personalizzati al file WSDL come annotazioni WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportEndpoint : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlEndpointConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportEndpoint (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">Il <see cref="T:System.ServiceModel.Description.WsdlExporter" /> che esporta le informazioni dell'endpoint.</param>
        <param name="context">Fornisce mapping tra gli elementi WSDL esportati e la descrizione dell'endpoint.</param>
        <summary>Scrive elementi WSDL (Web Services Description Language) personalizzati nel WSDL generato per un endpoint.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementare il metodo <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> per modificare il WSDL esportato per un endpoint. Questo metodo viene chiamato dopo che il contratto è stato esportato da <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>.  
  
   
  
## Examples  
 Nell'esempio di codice seguente è mostrato un <xref:System.ServiceModel.Description.IWsdlExportExtension> che aggiunge attributi della documentazione personalizzati al file WSDL come annotazioni WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>