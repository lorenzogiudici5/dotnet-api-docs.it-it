<Type Name="ServiceEndpointCollection" FullName="System.ServiceModel.Description.ServiceEndpointCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="297ed8b2400f85476ef10e983a6542b85a1c11ff" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36417045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceEndpointCollection : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceEndpointCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceEndpointCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceEndpointCollection&#xA;Inherits Collection(Of ServiceEndpoint)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceEndpointCollection : System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt;" />
  <TypeSignature Language="F#" Value="type ServiceEndpointCollection = class&#xA;    inherit Collection&lt;ServiceEndpoint&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.ServiceModel.Description.ServiceEndpoint</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A collection that contains the endpoints for a service.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa raccolta di endpoint per un servizio viene utilizzata dall'API dei metadati per gestire i servizi con più endpoint. La classe <xref:System.ServiceModel.Description.ServiceEndpointCollection> viene restituita, ad esempio, dalla proprietà <xref:System.ServiceModel.Description.ServiceDescription.Endpoints%2A> e dal metodo <xref:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints%2A> durante la creazione di endpoint del servizio dai tipi di porta WSDL.  
  
 La raccolta consente di applicare il metodo <xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A> agli endpoint di un particolare tipo dotati di un nome o di un indirizzo specifico, oppure di applicare il metodo <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> agli endpoint per un servizio che soddisfano criteri relativi al tipo di contratto o ai nomi specificati.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo dei metodi <xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A> e <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> per enumerare gli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint> che soddisfano i diversi criteri di ricerca.  
  
 [!code-csharp[ServiceEndpointCollection#1](~/samples/snippets/csharp/VS_Snippets_CFX/serviceendpointcollection/cs/proxy.cs#1)]
 [!code-csharp[ServiceEndpointCollection#1](~/samples/snippets/csharp/VS_Snippets_CFX/serviceendpointcollection/cs/serviceendpointcollection.service.overview.cs#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.Description.ServiceEndpoint" />
    <altmember cref="T:System.ServiceModel.Description.ServiceDescription" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns the first service endpoint found that satisfies specific criteria from the collection of service endpoints.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Più endpoint potrebbero soddisfare i criteri. Il metodo restituisce il primo endpoint individuato nella raccolta. Se è necessario cercare tutti gli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint> che soddisfano i criteri specificati, utilizzare invece uno dei metodi <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint Find (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint Find(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (contractType As Type) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ Find(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="member this.Find : Type -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceEndpointCollection.Find contractType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">The <see cref="T:System.Type" /> of contract for the service endpoint.</param>
        <summary>Returns the first service endpoint found that satisfies the specified contract type from the collection of service endpoints.</summary>
        <returns>The first <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> of the specified contract type or <see langword="null" /> if none was found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciò <xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%28System.Type%29> overload è specifico per il modello di programmazione di Windows Communication Foundation (WCF). Individua la proprietà <xref:System.ServiceModel.Description.ContractDescription.ContractType%2A> di ogni endpoint. Il <xref:System.ServiceModel.Description.ContractDescription.ContractType%2A> potrebbe essere `null` se il <xref:System.ServiceModel.Description.ContractDescription> non è stato creato dal modello di programmazione WCF (con i tipi * gli attributi del contratto).  
  
 Più endpoint potrebbero soddisfare i criteri. Il metodo restituisce il primo endpoint individuato nella raccolta. Se è necessario cercare tutti gli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint> che soddisfano i criteri specificati, utilizzare invece uno dei metodi <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contractType" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint Find (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint Find(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (address As Uri) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ Find(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Find : Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceEndpointCollection.Find address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">The <see cref="T:System.Uri" /> for the service endpoint.</param>
        <summary>Returns a service endpoint with a specified address from the collection of service endpoints.</summary>
        <returns>The first <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> of the specified address or <see langword="null" /> if none was found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Più endpoint potrebbero soddisfare i criteri. Il metodo restituisce il primo endpoint individuato nella raccolta. Se è necessario cercare tutti gli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint> che soddisfano i criteri specificati, utilizzare invece uno dei metodi <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint Find (System.Xml.XmlQualifiedName contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint Find(class System.Xml.XmlQualifiedName contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (contractName As XmlQualifiedName) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ Find(System::Xml::XmlQualifiedName ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.Find : System.Xml.XmlQualifiedName -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceEndpointCollection.Find contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="contractName">The <see cref="T:System.Xml.XmlQualifiedName" /> for the contract of the service.</param>
        <summary>Returns a service endpoint with a specified namespace and contract name from the collection of service endpoints.</summary>
        <returns>The first <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> with the specified namespace and contract name or <see langword="null" /> if none was found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Più endpoint potrebbero soddisfare i criteri. Il metodo restituisce il primo endpoint individuato nella raccolta. Se è necessario cercare tutti gli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint> che soddisfano i criteri specificati, utilizzare invece uno dei metodi <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint Find (Type contractType, System.Xml.XmlQualifiedName bindingName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint Find(class System.Type contractType, class System.Xml.XmlQualifiedName bindingName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type,System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (contractType As Type, bindingName As XmlQualifiedName) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ Find(Type ^ contractType, System::Xml::XmlQualifiedName ^ bindingName);" />
      <MemberSignature Language="F#" Value="member this.Find : Type * System.Xml.XmlQualifiedName -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceEndpointCollection.Find (contractType, bindingName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="bindingName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="contractType">The <see cref="T:System.Type" /> of contract for the service endpoint.</param>
        <param name="bindingName">The <see cref="T:System.Xml.XmlQualifiedName" /> for the binding of the service.</param>
        <summary>Returns a service endpoint of a specified contract type and with a specified binding name and namespace from the collection of service endpoints.</summary>
        <returns>The first <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> of the specified contract type and binding name and namespace or <see langword="null" /> if none was found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Più endpoint potrebbero soddisfare i criteri. Il metodo restituisce il primo endpoint individuato nella raccolta. Se è necessario cercare tutti gli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint> che soddisfano i criteri specificati, utilizzare invece uno dei metodi <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contractType" /> or <paramref name="bindingName" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint Find (System.Xml.XmlQualifiedName contractName, System.Xml.XmlQualifiedName bindingName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint Find(class System.Xml.XmlQualifiedName contractName, class System.Xml.XmlQualifiedName bindingName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (contractName As XmlQualifiedName, bindingName As XmlQualifiedName) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ Find(System::Xml::XmlQualifiedName ^ contractName, System::Xml::XmlQualifiedName ^ bindingName);" />
      <MemberSignature Language="F#" Value="member this.Find : System.Xml.XmlQualifiedName * System.Xml.XmlQualifiedName -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceEndpointCollection.Find (contractName, bindingName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractName" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="bindingName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="contractName">The <see cref="T:System.Xml.XmlQualifiedName" /> for the contract of the service.</param>
        <param name="bindingName">The <see cref="T:System.Xml.XmlQualifiedName" /> for the binding of the service.</param>
        <summary>Returns the first service endpoint with the specified contract name and namespace and binding name and namespace from the collection of service endpoints.</summary>
        <returns>The first <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> with the specified binding and contract names and namespaces.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Più endpoint potrebbero soddisfare i criteri. Il metodo restituisce il primo endpoint individuato nella raccolta. Se è necessario cercare tutti gli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint> che soddisfano i criteri specificati, utilizzare invece uno dei metodi <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contractName" /> or <paramref name="bindingName" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAll">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns a collection of all the service endpoints that satisfy specific criteria.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è solamente necessario cercare la prima classe <xref:System.ServiceModel.Description.ServiceEndpoint> che soddisfa i criteri specificati, utilizzare invece uno dei metodi <xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; FindAll (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; FindAll(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll (contractType As Type) As Collection(Of ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ FindAll(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="member this.FindAll : Type -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" Usage="serviceEndpointCollection.FindAll contractType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">The <see cref="T:System.Type" /> of contract for the service endpoint.</param>
        <summary>Returns a collection of all the service endpoints for a specified type of service.</summary>
        <returns>The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> that contains service endpoints of the specified type or the empty collection if none is found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è solamente necessario cercare la prima classe <xref:System.ServiceModel.Description.ServiceEndpoint> che soddisfa i criteri specificati, utilizzare invece uno dei metodi <xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contractType" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; FindAll (System.Xml.XmlQualifiedName contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; FindAll(class System.Xml.XmlQualifiedName contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll (contractName As XmlQualifiedName) As Collection(Of ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ FindAll(System::Xml::XmlQualifiedName ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.FindAll : System.Xml.XmlQualifiedName -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" Usage="serviceEndpointCollection.FindAll contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="contractName">The <see cref="T:System.Xml.XmlQualifiedName" /> for the service.</param>
        <summary>Returns a collection of all the service endpoints for a specified service name.</summary>
        <returns>The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> that contains service endpoints with the specified contract name and namespace or the empty collection if none is found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è solamente necessario cercare la prima classe <xref:System.ServiceModel.Description.ServiceEndpoint> che soddisfa i criteri specificati, utilizzare invece uno dei metodi <xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contractName" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, System.ServiceModel.Description.ServiceEndpoint item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.ServiceModel.Description.ServiceEndpoint item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceEndpointCollection.InsertItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::ServiceModel::Description::ServiceEndpoint ^ item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="serviceEndpointCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index at which the item should be inserted.</param>
        <param name="item">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> item to insert at the specified <c>index</c>.</param>
        <summary>Inserts an item into the collection at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo esegue l'override del metodo <xref:System.Collections.ObjectModel.Collection%601.InsertItem%28System.Int32%2C%600%29> virtuale definito nella classe base ed è fornito per eseguire una convalida dell'input che garantisce che non vengano immessi valori `null` nella raccolta. Non è destinato a essere chiamato dagli utenti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.  -or-  <paramref name="index" /> is greater than the number of items contained in the collection.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="item" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, System.ServiceModel.Description.ServiceEndpoint item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.ServiceModel.Description.ServiceEndpoint item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceEndpointCollection.SetItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::ServiceModel::Description::ServiceEndpoint ^ item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="serviceEndpointCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the element to replace.</param>
        <param name="item">The new value for <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> item at the specified <c>index</c>.</param>
        <summary>Replaces the element in the collection at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo esegue l'override del metodo <xref:System.Collections.ObjectModel.Collection%601.SetItem%28System.Int32%2C%600%29> virtuale definito nella classe base ed è fornito per eseguire una convalida dell'input che garantisce che non vengano immessi valori `null` nella raccolta. Non è destinato a essere chiamato dagli utenti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.  -or-  <paramref name="index" /> is greater than the number of items contained in the collection.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="item" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>