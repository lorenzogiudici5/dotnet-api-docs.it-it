<Type Name="MetadataResolver" FullName="System.ServiceModel.Description.MetadataResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d74ae750b135b6054dad6d8ea0395fce5611640" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37456514" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class MetadataResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MetadataResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataResolver abstract sealed" />
  <TypeSignature Language="F#" Value="type MetadataResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Recupera e importa i metadati come oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la classe <xref:System.ServiceModel.Description.MetadataResolver> per importare rapidamente endpoint per un servizio da metadati. Questa classe scarica e converte metadati in oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>. Per scaricare metadati ed elaborare tali informazioni come <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>, vedere <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato l'utilizzo della classe <xref:System.ServiceModel.Description.MetadataResolver> per restituire i metadati come raccolta di oggetti <xref:System.ServiceModel.Description.ServiceEndpoint> che verranno quindi utilizzati per la connessione a un'istanza del servizio.  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 Nell'esempio di codice seguente viene illustrato l'utilizzo di <xref:System.ServiceModel.Description.MetadataResolver> per scaricare e restituire metadati come raccolta di oggetti <xref:System.ServiceModel.Description.ServiceEndpoint> utilizzando una richiesta HTTP GET anziché WS-Transfer.  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginResolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Avvia una chiamata asincrona che risolve un indirizzo di metadati in una raccolta di oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per tale servizio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questi metodi avviano versioni asincrone dei metodi <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Contratti per i quali scaricare e risolvere metadati.</param>
        <param name="address">Indirizzo dei metadati.</param>
        <param name="callback">Delegato di callback asincrono richiamato quando la chiamata al metodo è completa.</param>
        <param name="asyncState">Stato associato alla chiamata asincrona.</param>
        <summary>Avvia una chiamata  asincrona che risolve un indirizzo di metadati in oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per i contratti specificati, utilizzando l'indirizzo, lo stato asincrono e il delegato specificati.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di risoluzione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vengono utilizzate le impostazioni predefinite in <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> per recuperare i metadati e l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> predefinito è <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Per scaricare i metadati senza risolvere le informazioni contenute negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>, utilizzare direttamente l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Viene restituita una raccolta vuota se non sono stati importati endpoint o se al contratto non corrisponde un endpoint. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'indirizzo, il contratto o il callback è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> è vuoto, almeno un membro di <paramref name="contracts" /> è <see langword="null" /> oppure <paramref name="contracts" /> contiene più di un contratto con lo stesso nome e lo stesso spazio dei nomi.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">Contratto per il quale scaricare e risolvere metadati.</param>
        <param name="address">Indirizzo dei metadati.</param>
        <param name="callback">Delegato di callback asincrono richiamato quando la chiamata al metodo è completa.</param>
        <param name="asyncState">Stato associato alla chiamata asincrona.</param>
        <summary>Avvia una chiamata asincrona che risolve un indirizzo di metadati in oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per il contratto specificato, utilizzando l'indirizzo, lo stato asincrono e il delegato specificati.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di risoluzione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vengono utilizzate le impostazioni predefinite in <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> per recuperare i metadati e l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> predefinito è <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Per scaricare i metadati senza risolvere le informazioni contenute negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>, utilizzare direttamente l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Viene restituita una raccolta vuota se non sono stati importati endpoint o se al contratto non corrisponde un endpoint. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.  
  
 Con questo metodo è necessario specificare un tipo di contratto. È possibile specificare il contratto dichiarando l'interfaccia del servizio nel codice client o tramite un client WCF generato da Svcutil.exe. Se l'interfaccia viene modificato (aggiungendo una nuova operazione, ad esempio) è necessario aggiornare l'interfaccia nel codice client o generare un nuovo client WCF. In caso contrario, viene generata un'eccezione. Si dispone, ad esempio, di un servizio che implementa un contratto di servizio denominato ICalculator che definisce Add(), Sub(), Mult() e Div(). Creare un'applicazione client e generare client WCF. quindi si aggiunge un metodo a ICalculator denominato Echo(). Se si scrive un'applicazione che chiama <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> senza generare un nuovo client WCF è stata generata l'eccezione seguente.  
  
 `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'indirizzo, il contratto o il callback è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Contratti per i quali scaricare e risolvere metadati.</param>
        <param name="address">Indirizzo dei metadati.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> utilizzato per recuperare i metadati.</param>
        <param name="callback">Delegato di callback asincrono richiamato quando la chiamata al metodo è completa.</param>
        <param name="asyncState">Stato associato alla chiamata asincrona.</param>
        <summary>Avvia una chiamata asincrona che risolve un indirizzo di metadati in oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per i contratti specificati, utilizzando l'indirizzo, l'oggetto <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, lo stato asincrono e il delegato specificati.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di risoluzione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore predefinito di <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> è <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Per scaricare i metadati senza risolvere le informazioni contenute negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>, utilizzare direttamente l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Viene restituita una raccolta vuota se non sono stati importati endpoint o se al contratto non corrisponde un endpoint. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'indirizzo, il contratto, il client o il callback è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> è vuoto, almeno un membro di <paramref name="contracts" /> è null o <paramref name="contracts" /> contiene più di un contratto con lo stesso nome e spazio dei nomi.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Contratti per i quali scaricare e risolvere metadati.</param>
        <param name="address">Indirizzo dei metadati.</param>
        <param name="mode">Modalità di recupero.</param>
        <param name="callback">Delegato di callback asincrono richiamato quando la chiamata al metodo è completa.</param>
        <param name="asyncState">Stato associato alla chiamata asincrona.</param>
        <summary>Avvia una chiamata asincrona che risolve un indirizzo di metadati in oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per i contratti specificati, utilizzando l'indirizzo, il valore <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, lo stato asincrono e il delegato specificati.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di risoluzione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vengono utilizzate le impostazioni predefinite in <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> per recuperare i metadati.  
  
 Per scaricare i metadati senza risolvere le informazioni contenute negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>, utilizzare direttamente l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Viene restituita una raccolta vuota se non sono stati importati endpoint o se al contratto non corrisponde un endpoint. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'indirizzo, il contratto o il callback è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> è vuoto, almeno un membro di <paramref name="contracts" /> è null o <paramref name="contracts" /> contiene più di un contratto con lo stesso nome e spazio dei nomi.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">Contratto per il quale scaricare e risolvere metadati.</param>
        <param name="address">Indirizzo dei metadati.</param>
        <param name="mode">Modalità di recupero.</param>
        <param name="callback">Delegato di callback asincrono richiamato quando la chiamata al metodo è completa.</param>
        <param name="asyncState">Stato associato alla chiamata asincrona.</param>
        <summary>Avvia una chiamata asincrona che risolve un indirizzo di metadati in oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per il contratto specificato, utilizzando l'indirizzo, l'oggetto <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, lo stato asincrono e il delegato specificati.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di risoluzione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vengono utilizzate le impostazioni predefinite in <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> per recuperare i metadati.  
  
 Per scaricare i metadati senza risolvere le informazioni contenute negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>, utilizzare direttamente l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Viene restituita una raccolta vuota se non sono stati importati endpoint o se al contratto non corrisponde un endpoint. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'indirizzo, il contratto o il callback è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Contratti per i quali scaricare e risolvere metadati.</param>
        <param name="address">Indirizzo dei metadati.</param>
        <param name="mode">Modalità di recupero.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> utilizzato per recuperare i metadati.</param>
        <param name="callback">Delegato di callback asincrono richiamato quando la chiamata al metodo è completa.</param>
        <param name="asyncState">Stato associato alla chiamata asincrona.</param>
        <summary>Avvia una chiamata asincrona che risolve un indirizzo di metadati in oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per i contratti specificati, utilizzando l'indirizzo, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, lo stato asincrono e il delegato specificati.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di risoluzione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per scaricare i metadati senza risolvere le informazioni contenute negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>, utilizzare direttamente l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Viene restituita una raccolta vuota se non sono stati importati endpoint o se al contratto non corrisponde un endpoint. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'indirizzo, il contratto o il callback è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> è vuoto, almeno un membro di <paramref name="contracts" /> è null o <paramref name="contracts" /> contiene più di un contratto con lo stesso nome e spazio dei nomi.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection EndResolve(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (result As IAsyncResult) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ EndResolve(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.EndResolve result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Oggetto <see cref="T:System.IAsyncResult" /> ricevuto da una chiamata al metodo <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" />.</param>
        <summary>Completa una chiamata asincrona per risolvere i metadati in una raccolta di endpoint.</summary>
        <returns>Raccolta di oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per gli endpoint contenuti nei metadati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Termina una chiamata asincrona a uno dei metodi <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scarica e risolve un indirizzo di metadati in oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per tale servizio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per scaricare i metadati senza risolvere le informazioni contenute negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>, utilizzare direttamente l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
 Per tutti i metodi `Resolve` sia sincroni sia asincroni viene restituita una raccolta vuota se non sono stati importati endpoint o se al contratto non corrisponde un endpoint. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contracts">Contratti per i quali scaricare e risolvere metadati.</param>
        <param name="address">Indirizzo dei metadati.</param>
        <summary>Risolve un indirizzo di metadati in oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per i contratti specificati utilizzando l'indirizzo di metadati specificato.</summary>
        <returns>Raccolta di oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per il contratto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vengono utilizzate le impostazioni predefinite in <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> per recuperare i metadati e l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> predefinito è <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Per scaricare i metadati senza risolvere le informazioni contenute negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>, utilizzare direttamente l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Viene restituita una raccolta vuota se non sono stati importati endpoint o se al contratto non corrisponde un endpoint. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'indirizzo o la raccolta di contratti è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> è vuoto, almeno un membro di <paramref name="contracts" /> è null o <paramref name="contracts" /> contiene più di un contratto con lo stesso nome e spazio dei nomi.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contract">Contratti per i quali scaricare e risolvere metadati.</param>
        <param name="address">Indirizzo dei metadati.</param>
        <summary>Scarica e risolve un indirizzo di metadati in una raccolta di oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per un contratto specificato a un indirizzo specificato.</summary>
        <returns>Raccolta di oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per il contratto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il metodo <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> per specificare il contratto e l'indirizzo di metadati da utilizzare durante il download e la risoluzione dei metadati.  
  
 Vengono utilizzate le impostazioni predefinite in <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> per recuperare i metadati e l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> predefinito è <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Per scaricare i metadati senza risolvere le informazioni contenute negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>, utilizzare direttamente l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Viene restituita una raccolta vuota se non sono stati importati endpoint o se al contratto non corrisponde un endpoint. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.  
  
 Con questo metodo è necessario specificare un tipo di contratto. È possibile specificare il contratto dichiarando l'interfaccia del servizio nel codice client o tramite un client WCF generato da Svcutil.exe. Se l'interfaccia viene modificato (aggiungendo una nuova operazione, ad esempio) è necessario aggiornare l'interfaccia nel codice client o generare un nuovo client WCF. In caso contrario, viene generata un'eccezione. Si dispone, ad esempio, di un servizio che implementa un contratto di servizio denominato ICalculator che definisce Add(), Sub(), Mult() e Div(). Creare un'applicazione client e generare client WCF. quindi si aggiunge un metodo a ICalculator denominato Echo(). Se si scrive un'applicazione che chiama <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> senza generare un nuovo client WCF è stata generata l'eccezione seguente.  
  
 `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato l'utilizzo della classe <xref:System.ServiceModel.Description.MetadataResolver> per restituire i metadati come raccolta di oggetti <xref:System.ServiceModel.Description.ServiceEndpoint> che verranno quindi utilizzati per la connessione a un'istanza del servizio.  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'indirizzo o il contratto è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">Contratti per i quali scaricare e risolvere metadati.</param>
        <param name="address">Indirizzo dei metadati.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> utilizzato per recuperare i metadati.</param>
        <summary>Risolve un indirizzo di metadati in oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per i contratti specificati utilizzando l'indirizzo di metadati e l'oggetto <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> specificati.</summary>
        <returns>Raccolta di oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per il contratto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore predefinito di <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> è <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Per scaricare i metadati senza risolvere le informazioni contenute negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>, utilizzare direttamente l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Viene restituita una raccolta vuota se non sono stati importati endpoint o se al contratto non corrisponde un endpoint. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'indirizzo, la raccolta di contratti o il client è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> è vuoto, almeno un membro di <paramref name="contracts" /> è null o <paramref name="contracts" /> contiene più di un contratto con lo stesso nome e spazio dei nomi.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contracts">Contratti per i quali scaricare e risolvere metadati.</param>
        <param name="address">Indirizzo dei metadati.</param>
        <param name="mode">Modalità di recupero.</param>
        <summary>Risolve un indirizzo di metadati in oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per i contratti specificati utilizzando l'indirizzo e la modalità di trasferimento specificati.</summary>
        <returns>Raccolta di oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per il contratto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vengono utilizzate le impostazioni predefinite in <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> per recuperare i metadati.  
  
 Per scaricare i metadati senza risolvere le informazioni contenute negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>, utilizzare direttamente l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Viene restituita una raccolta vuota se non sono stati importati endpoint o se al contratto non corrisponde un endpoint. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'indirizzo o la raccolta di contratti è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> è vuoto, almeno un membro di <paramref name="contracts" /> è null o <paramref name="contracts" /> contiene più di un contratto con lo stesso nome e spazio dei nomi.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contract">Contratto per il quale scaricare e risolvere metadati.</param>
        <param name="address">Indirizzo dei metadati.</param>
        <param name="mode">Modalità di recupero.</param>
        <summary>Risolve un indirizzo di metadati in oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per il contratto specificato utilizzando l'indirizzo e la modalità di trasferimento specificati.</summary>
        <returns>Raccolta di oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per il contratto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il metodo <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> per specificare un contratto, un indirizzo e il meccanismo di download da utilizzare.  
  
 Vengono utilizzate le impostazioni predefinite in <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> per recuperare i metadati.  
  
 Per scaricare i metadati senza risolvere le informazioni contenute negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>, utilizzare direttamente l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Viene restituita una raccolta vuota se non sono stati importati endpoint o se al contratto non corrisponde un endpoint. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato l'utilizzo di <xref:System.ServiceModel.Description.MetadataResolver> per scaricare e restituire metadati come raccolta di oggetti <xref:System.ServiceModel.Description.ServiceEndpoint> utilizzando una richiesta HTTP GET anziché WS-Transfer.  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'indirizzo o il contratto è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">Contratti per i quali scaricare e risolvere metadati.</param>
        <param name="address">Indirizzo dei metadati.</param>
        <param name="mode">Modalità di recupero.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> utilizzato per recuperare i metadati.</param>
        <summary>Risolve un indirizzo di metadati in oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per i contratti specificati utilizzando l'indirizzo, nonché la modalità e il client di trasferimento specificati.</summary>
        <returns>Raccolta di oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> per il contratto specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per scaricare i metadati senza risolvere le informazioni contenute negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint>, utilizzare direttamente l'oggetto <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Viene restituita una raccolta vuota se non sono stati importati endpoint o se al contratto non corrisponde un endpoint. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'indirizzo, la raccolta di contratti o il client è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> è vuoto, almeno un membro di <paramref name="contracts" /> è null o <paramref name="contracts" /> contiene più di un contratto con lo stesso nome e spazio dei nomi.</exception>
      </Docs>
    </Member>
  </Members>
</Type>