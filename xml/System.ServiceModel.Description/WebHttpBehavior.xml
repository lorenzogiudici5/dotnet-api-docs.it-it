<Type Name="WebHttpBehavior" FullName="System.ServiceModel.Description.WebHttpBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0a91f214c6ca6b07c15b235df4647d9eae71e926" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37455833" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebHttpBehavior : System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebHttpBehavior extends System.Object implements class System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.WebHttpBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class WebHttpBehavior&#xA;Implements IEndpointBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebHttpBehavior : System::ServiceModel::Description::IEndpointBehavior" />
  <TypeSignature Language="F#" Value="type WebHttpBehavior = class&#xA;    interface IEndpointBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IEndpointBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Abilita il modello di programmazione Web per un servizio Windows Communication Foundation (WCF).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ServiceModel.Description.WebHttpBehavior> comportamento, quando viene usato in combinazione con la <xref:System.ServiceModel.WebHttpBinding> associazione, consente a WCF di esporre e accedere ai servizi in stile Web. <xref:System.ServiceModel.Web.WebServiceHost> aggiunge automaticamente questo comportamento agli endpoint che utilizzano <xref:System.ServiceModel.WebHttpBinding>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebHttpBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebHttpBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.WebHttpBehavior" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public virtual void AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddBindingParameters (endpoint As ServiceEndpoint, bindingParameters As BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddBindingParameters(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.AddBindingParameters : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="webHttpBehavior.AddBindingParameters (endpoint, bindingParameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="endpoint">L'endpoint.</param>
        <param name="bindingParameters">Parametri dell'associazione che supportano la modifica delle associazioni.</param>
        <summary>Implementa il metodo <see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> per passare dati alle associazioni in fase di esecuzione, al fine di supportare il comportamento personalizzato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClientErrorInspector">
      <MemberSignature Language="C#" Value="protected virtual void AddClientErrorInspector (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddClientErrorInspector(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.AddClientErrorInspector(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddClientErrorInspector(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberSignature Language="F#" Value="abstract member AddClientErrorInspector : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit&#xA;override this.AddClientErrorInspector : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit" Usage="webHttpBehavior.AddClientErrorInspector (endpoint, clientRuntime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="endpoint">Endpoint del servizio.</param>
        <param name="clientRuntime">Fase di esecuzione del client.</param>
        <summary>Aggiunge un controllo dell'errore client all'endpoint del servizio specificato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddServerErrorHandlers">
      <MemberSignature Language="C#" Value="protected virtual void AddServerErrorHandlers (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddServerErrorHandlers(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.AddServerErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddServerErrorHandlers(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher);" />
      <MemberSignature Language="F#" Value="abstract member AddServerErrorHandlers : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit&#xA;override this.AddServerErrorHandlers : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit" Usage="webHttpBehavior.AddServerErrorHandlers (endpoint, endpointDispatcher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="endpoint">Endpoint del servizio.</param>
        <param name="endpointDispatcher">Dispatcher dell'endpoint.</param>
        <summary>Eseguire l'override di questo metodo per modificare la gestione degli errori che si verificano nel servizio.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public virtual void ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyClientBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberSignature Language="F#" Value="abstract member ApplyClientBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit&#xA;override this.ApplyClientBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit" Usage="webHttpBehavior.ApplyClientBehavior (endpoint, clientRuntime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="endpoint">Endpoint che espone il contratto.</param>
        <param name="clientRuntime">Client al quale viene applicato il comportamento personalizzato.</param>
        <summary>Implementa il metodo <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> per supportare una modifica o un'estensione del client all'interno di un endpoint.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo metodo <xref:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29> e <xref:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29> vengono chiamati per ogni operazione per determinare l'oggetto <xref:System.ServiceModel.Dispatcher.IClientMessageFormatter> da installare.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public virtual void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit&#xA;override this.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit" Usage="webHttpBehavior.ApplyDispatchBehavior (endpoint, endpointDispatcher)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="endpoint">Endpoint che espone il contratto.</param>
        <param name="endpointDispatcher">Dispatcher dell'endpoint al quale è applicato il comportamento.</param>
        <summary>Implementa il metodo <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> per supportare una modifica o un'estensione del client all'interno di un endpoint.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo metodo <xref:System.ServiceModel.Description.WebHttpBehavior.GetRequestDispatchFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29> e <xref:System.ServiceModel.Description.WebHttpBehavior.GetReplyDispatchFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29> vengono chiamati per ogni operazione per determinare l'oggetto <xref:System.ServiceModel.Dispatcher.IDispatchMessageFormatter> da installare.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticFormatSelectionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticFormatSelectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticFormatSelectionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebHttpBehavior.AutomaticFormatSelectionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutomaticFormatSelectionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutomaticFormatSelectionEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticFormatSelectionEnabled : bool with get, set" Usage="System.ServiceModel.Description.WebHttpBehavior.AutomaticFormatSelectionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che determina se la selezione del formato automatica è abilitata.</summary>
        <value>
          <see langword="true" /> se la selezione automatica del formato è abilitata; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sulla selezione automatica del formato, vedere [formattazione HTTP Web WCF](~/docs/framework/wcf/feature-details/wcf-web-http-formatting.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBodyStyle">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Web.WebMessageBodyStyle DefaultBodyStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageBodyStyle DefaultBodyStyle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebHttpBehavior.DefaultBodyStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultBodyStyle As WebMessageBodyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Web::WebMessageBodyStyle DefaultBodyStyle { System::ServiceModel::Web::WebMessageBodyStyle get(); void set(System::ServiceModel::Web::WebMessageBodyStyle value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultBodyStyle : System.ServiceModel.Web.WebMessageBodyStyle with get, set" Usage="System.ServiceModel.Description.WebHttpBehavior.DefaultBodyStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageBodyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene e imposta il lo stile predefinito per il corpo del messaggio.</summary>
        <value>Uno dei valori definiti nell'enumerazione <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.ServiceModel.Web.WebGetAttribute> o <xref:System.ServiceModel.Web.WebInvokeAttribute> non imposta in modo esplicito la proprietà <xref:System.ServiceModel.Web.WebInvokeAttribute.BodyStyle%2A>, il valore di questa proprietà viene utilizzato come stile del corpo del messaggio per l'operazione. Il valore predefinito è <xref:System.ServiceModel.Web.WebMessageBodyStyle.Bare>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOutgoingRequestFormat">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Web.WebMessageFormat DefaultOutgoingRequestFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageFormat DefaultOutgoingRequestFormat" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingRequestFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultOutgoingRequestFormat As WebMessageFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Web::WebMessageFormat DefaultOutgoingRequestFormat { System::ServiceModel::Web::WebMessageFormat get(); void set(System::ServiceModel::Web::WebMessageFormat value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOutgoingRequestFormat : System.ServiceModel.Web.WebMessageFormat with get, set" Usage="System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingRequestFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene e imposta il formato predefinito della richiesta in uscita.</summary>
        <value>Uno dei valori definiti nell'enumerazione <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.ServiceModel.Web.WebGetAttribute> o <xref:System.ServiceModel.Web.WebInvokeAttribute> non imposta in modo esplicito la proprietà `OutgoingRequestFormat`, il valore di questa proprietà viene utilizzato come formato della richiesta per l'operazione. Il valore predefinito è <xref:System.ServiceModel.Web.WebMessageFormat.Xml>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOutgoingResponseFormat">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Web.WebMessageFormat DefaultOutgoingResponseFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageFormat DefaultOutgoingResponseFormat" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingResponseFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultOutgoingResponseFormat As WebMessageFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Web::WebMessageFormat DefaultOutgoingResponseFormat { System::ServiceModel::Web::WebMessageFormat get(); void set(System::ServiceModel::Web::WebMessageFormat value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOutgoingResponseFormat : System.ServiceModel.Web.WebMessageFormat with get, set" Usage="System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingResponseFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene e imposta il formato predefinito della risposta in uscita.</summary>
        <value>Uno dei valori definiti nell'enumerazione <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.ServiceModel.Web.WebGetAttribute> o <xref:System.ServiceModel.Web.WebInvokeAttribute> non imposta in modo esplicito la proprietà `OutgoingResponseFormat`, il valore di questa proprietà viene utilizzato come formato della risposta per l'operazione. Il valore predefinito è <xref:System.ServiceModel.Web.WebMessageFormat.Xml>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultExceptionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool FaultExceptionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FaultExceptionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebHttpBehavior.FaultExceptionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FaultExceptionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool FaultExceptionEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FaultExceptionEnabled : bool with get, set" Usage="System.ServiceModel.Description.WebHttpBehavior.FaultExceptionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il flag che specifica se viene generata un'eccezione FaultException quando si verifica un errore del server interno (codice di stato HTTP: 500).</summary>
        <value>Restituisce <see langword="true" /> se il flag è abilitato. In caso contrario, restituisce <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationSelector">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector GetOperationSelector (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector GetOperationSelector(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.GetOperationSelector(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetOperationSelector (endpoint As ServiceEndpoint) As WebHttpDispatchOperationSelector" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Dispatcher::WebHttpDispatchOperationSelector ^ GetOperationSelector(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member GetOperationSelector : System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector&#xA;override this.GetOperationSelector : System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" Usage="webHttpBehavior.GetOperationSelector endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">Endpoint che espone il contratto.</param>
        <summary>Crea un nuovo oggetto <see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />.</summary>
        <returns>Istanza di <see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" /> contenente il selettore delle operazioni per l'endpoint specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector> esegue il mapping di chiamate a operazioni del servizio WCF basate sul suffisso del Uniform Resource Identifier (URI) e il metodo HTTP usato. Si tratta di un punto di estensibilità che i comportamenti derivati possono utilizzare per fornire la propria implementazione di <xref:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector>, il quale esegue il mapping della richiesta HTTP in ingresso a un'operazione del servizio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryStringConverter">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Dispatcher.QueryStringConverter GetQueryStringConverter (System.ServiceModel.Description.OperationDescription operationDescription);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.QueryStringConverter GetQueryStringConverter(class System.ServiceModel.Description.OperationDescription operationDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.GetQueryStringConverter(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Dispatcher::QueryStringConverter ^ GetQueryStringConverter(System::ServiceModel::Description::OperationDescription ^ operationDescription);" />
      <MemberSignature Language="F#" Value="abstract member GetQueryStringConverter : System.ServiceModel.Description.OperationDescription -&gt; System.ServiceModel.Dispatcher.QueryStringConverter&#xA;override this.GetQueryStringConverter : System.ServiceModel.Description.OperationDescription -&gt; System.ServiceModel.Dispatcher.QueryStringConverter" Usage="webHttpBehavior.GetQueryStringConverter operationDescription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.QueryStringConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="operationDescription">Operazione del servizio.</param>
        <summary>Ottiene il convertitore della stringa di query.</summary>
        <returns>Istanza di <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta di un punto di estensibilità che i comportamenti derivati possono utilizzare per fornire la propria implementazione di <xref:System.ServiceModel.Dispatcher.QueryStringConverter>, il quale è in grado di convertire i tipi di parametri delle operazioni di servizio da e in stringhe di query dell'URL di richieste HTTP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReplyClientFormatter">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Dispatcher.IClientMessageFormatter GetReplyClientFormatter (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IClientMessageFormatter GetReplyClientFormatter(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Dispatcher::IClientMessageFormatter ^ GetReplyClientFormatter(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member GetReplyClientFormatter : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.Dispatcher.IClientMessageFormatter&#xA;override this.GetReplyClientFormatter : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.Dispatcher.IClientMessageFormatter" Usage="webHttpBehavior.GetReplyClientFormatter (operationDescription, endpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IClientMessageFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="operationDescription">Operazione del servizio.</param>
        <param name="endpoint">Endpoint del servizio.</param>
        <summary>Ottiene il formattatore della risposta sul client per l'endpoint e l'operazione del servizio specificati.</summary>
        <returns>Riferimento <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> al formattatore della risposta su un client per l'operazione e l'endpoint specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta di un punto di estensibilità che i comportamenti derivati possono utilizzare per fornire la propria implementazione di <xref:System.ServiceModel.Dispatcher.IClientMessageFormatter>, chiamato per deserializzare il messaggio di risposta in parametri out/valore restituito dell'operazione del servizio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReplyDispatchFormatter">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Dispatcher.IDispatchMessageFormatter GetReplyDispatchFormatter (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IDispatchMessageFormatter GetReplyDispatchFormatter(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Dispatcher::IDispatchMessageFormatter ^ GetReplyDispatchFormatter(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member GetReplyDispatchFormatter : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.Dispatcher.IDispatchMessageFormatter&#xA;override this.GetReplyDispatchFormatter : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.Dispatcher.IDispatchMessageFormatter" Usage="webHttpBehavior.GetReplyDispatchFormatter (operationDescription, endpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IDispatchMessageFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="operationDescription">Operazione del servizio.</param>
        <param name="endpoint">Endpoint del servizio.</param>
        <summary>Ottiene il formattatore della risposta sul servizio per l'endpoint e l'operazione del servizio specificati.</summary>
        <returns>Riferimento <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" /> al formattatore della risposta su un servizio per l'operazione e l'endpoint specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta di un punto di estensibilità che i comportamenti derivati possono utilizzare per fornire la propria implementazione di <xref:System.ServiceModel.Dispatcher.IDispatchMessageFormatter>, chiamato per convertire valore restituito/parametri out dell'operazione del servizio in un messaggio di risposta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestClientFormatter">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Dispatcher.IClientMessageFormatter GetRequestClientFormatter (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IClientMessageFormatter GetRequestClientFormatter(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Dispatcher::IClientMessageFormatter ^ GetRequestClientFormatter(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member GetRequestClientFormatter : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.Dispatcher.IClientMessageFormatter&#xA;override this.GetRequestClientFormatter : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.Dispatcher.IClientMessageFormatter" Usage="webHttpBehavior.GetRequestClientFormatter (operationDescription, endpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IClientMessageFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="operationDescription">Operazione del servizio.</param>
        <param name="endpoint">Endpoint del servizio.</param>
        <summary>Ottiene il formattatore della richiesta sul client per l'operazione del servizio e l'endpoint specificati.</summary>
        <returns>Riferimento <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> al formattatore della richiesta su un client per l'operazione e l'endpoint specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta di un punto di estensibilità che i comportamenti derivati possono utilizzare per fornire la propria implementazione di <xref:System.ServiceModel.Dispatcher.IClientMessageFormatter>, chiamato per convertire i parametri di input della chiamata dell'operazione del servizio in un messaggio di richiesta. I parametri specificati in <xref:System.UriTemplate> dell'operazione del servizio devono essere serializzati nell'URI `To` del messaggio di richiesta e gli altri parametri devono essere serializzati nel corpo del messaggio di richiesta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestDispatchFormatter">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Dispatcher.IDispatchMessageFormatter GetRequestDispatchFormatter (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IDispatchMessageFormatter GetRequestDispatchFormatter(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Dispatcher::IDispatchMessageFormatter ^ GetRequestDispatchFormatter(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member GetRequestDispatchFormatter : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.Dispatcher.IDispatchMessageFormatter&#xA;override this.GetRequestDispatchFormatter : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.Dispatcher.IDispatchMessageFormatter" Usage="webHttpBehavior.GetRequestDispatchFormatter (operationDescription, endpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IDispatchMessageFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="operationDescription">Operazione del servizio.</param>
        <param name="endpoint">Endpoint del servizio.</param>
        <summary>Ottiene il formattatore della richiesta sul servizio per un'operazione e un endpoint del servizio specificati.</summary>
        <returns>Riferimento <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" /> al formattatore della richiesta su un servizio per l'operazione e l'endpoint specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta di un punto di estensibilità che i comportamenti derivati possono utilizzare per fornire la propria implementazione di <xref:System.ServiceModel.Dispatcher.IDispatchMessageFormatter>, chiamato per deserializzare i parametri di input dell'operazione del servizio dal messaggio di richiesta. I parametri specificati in <xref:System.UriTemplate> dell'operazione del servizio devono essere deserializzati dall'URI `To` del messaggio di richiesta e gli altri parametri devono essere deserializzati dal corpo del messaggio di richiesta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpEnabled">
      <MemberSignature Language="C#" Value="public virtual bool HelpEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HelpEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebHttpBehavior.HelpEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HelpEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HelpEnabled : bool with get, set" Usage="System.ServiceModel.Description.WebHttpBehavior.HelpEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che determina se la Guida WCF è abilitata.</summary>
        <value>
          <see langword="true" /> Se la pagina WCFHelp è abilitata. in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sulla pagina della Guida REST WCF, vedere [pagina della Guida del servizio di WCF Web HTTP](~/docs/framework/wcf/feature-details/wcf-web-http-service-help-page.md).  
  
 Per abilitare l'attributo helpEnabled in un file di configurazione:  
  
```  
  
<system.serviceModel>  
    <behaviors>  
        <endpointBehaviors>  
            <behavior name="MyEndpointBehavior">  
                <webHttp helpEnabled="true" />  
            </behavior>  
    </endpointBehaviors>  
</system.serviceModel>  
  
```  
  
 Per abilitare a livello di codice la proprietà HelpEnabled:  
  
```  
  
WebHttpBehavior helpBehavior = new WebHttpBehavior();  
helpBehavior.HelpEnabled = true;  
host.Description.Endpoints[0].Behaviors.Add(helpBehavior);  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavascriptCallbackParameterName">
      <MemberSignature Language="C#" Value="protected internal string JavascriptCallbackParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string JavascriptCallbackParameterName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebHttpBehavior.JavascriptCallbackParameterName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property JavascriptCallbackParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ JavascriptCallbackParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.JavascriptCallbackParameterName : string with get, set" Usage="System.ServiceModel.Description.WebHttpBehavior.JavascriptCallbackParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del parametro di callback JavaScript.</summary>
        <value>Nome del parametro di callback JavaScript.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ServiceEndpoint -&gt; unit&#xA;override this.Validate : System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="webHttpBehavior.Validate endpoint" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">Endpoint del servizio.</param>
        <summary>Conferma che l'endpoint soddisfa i requisiti del modello di programmazione Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verifica quanto segue:  
  
-   Che l'endpoint non sia `null`.  
  
-   Che l'endpoint utilizzi schemi HTTP o HTTPS.  
  
-   Che l'oggetto <xref:System.ServiceModel.Channels.MessageVersion> dell'associazione sia impostato su <xref:System.ServiceModel.Channels.MessageVersion.None%2A>.  
  
-   Che l'associazione contenga un oggetto <xref:System.ServiceModel.Channels.HttpTransportBindingElement> in cui <xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A> è impostato su `true`.  
  
-   Che i parametri specificati in <xref:System.UriTemplate> facciano parte dell'operazione.  
  
-   Che le operazioni che specificano <xref:System.ServiceModel.Web.WebMessageBodyStyle.Bare> dispongano al massimo di un parametro di input e possano non disporre di alcun parametro out.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateBinding">
      <MemberSignature Language="C#" Value="protected virtual void ValidateBinding (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateBinding(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.ValidateBinding(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateBinding (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateBinding(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member ValidateBinding : System.ServiceModel.Description.ServiceEndpoint -&gt; unit&#xA;override this.ValidateBinding : System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="webHttpBehavior.ValidateBinding endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">Endpoint del servizio.</param>
        <summary>Assicura che l'associazione sia valida per l'utilizzo con il modello di programmazione Web WCF.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateOperation">
      <MemberSignature Language="C#" Value="protected void ValidateOperation (System.ServiceModel.Description.OperationDescription operation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ValidateOperation(class System.ServiceModel.Description.OperationDescription operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebHttpBehavior.ValidateOperation(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ValidateOperation (operation As OperationDescription)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ValidateOperation(System::ServiceModel::Description::OperationDescription ^ operation);" />
      <MemberSignature Language="F#" Value="member this.ValidateOperation : System.ServiceModel.Description.OperationDescription -&gt; unit" Usage="webHttpBehavior.ValidateOperation operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>