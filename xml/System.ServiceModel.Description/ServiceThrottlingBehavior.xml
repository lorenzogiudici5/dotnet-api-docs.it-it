<Type Name="ServiceThrottlingBehavior" FullName="System.ServiceModel.Description.ServiceThrottlingBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6450bcb68e969aabb404cf56778433019dcda024" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36616124" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceThrottlingBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceThrottlingBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceThrottlingBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceThrottlingBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceThrottlingBehavior : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceThrottlingBehavior = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Configura le impostazioni di velocità runtime che consentono di ottimizzare le prestazioni del servizio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la classe <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> per controllare varie impostazioni di velocità che consentono di impedire all'applicazione di esaurire la memoria.  
  
 La proprietà <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> limita il numero di messaggi attualmente elaborati attraverso <xref:System.ServiceModel.ServiceHost>.  
  
 La proprietà <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> limita il numero di oggetti <xref:System.ServiceModel.InstanceContext> eseguiti contemporaneamente attraverso <xref:System.ServiceModel.ServiceHost>.  
  
 La proprietà <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A> limita il numero di sessioni che possono essere accettate da un oggetto<xref:System.ServiceModel.ServiceHost>.  
  
 Poiché il bilanciamento del carico in fase di esecuzione richiede esperienza nell'esecuzione dell'applicazione, l'utilizzo di <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> tramite un file di configurazione dell'applicazione è il metodo più comune per modificare l'esecuzione in modo da aumentare al massimo le prestazioni del servizio.  
  
> [!NOTE]
>  Viene scritta una traccia ogni volta che viene raggiunto il valore di questa proprietà. La prima traccia viene scritta come un avviso.  
  
 È inoltre possibile impostare i valori di questo attributo utilizzando il [ &lt;serviceThrottling&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicethrottling.md) elemento in un file di configurazione dell'applicazione.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come utilizzare la classe <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> da un file di configurazione dell'applicazione che imposta le proprietà <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A>, <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> e <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> su 1 a scopo di esempio. L'esperienza in scenari reali determina le impostazioni ottimali per qualsiasi applicazione specifica.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceThrottlingBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceThrottlingBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceThrottlingBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.ServiceThrottlingBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il costruttore quando si aggiunge un oggetto <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> configurato a livello di programmazione  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentCalls">
      <MemberSignature Language="C#" Value="public int MaxConcurrentCalls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentCalls" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentCalls As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentCalls { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentCalls : int with get, set" Usage="System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica il numero massimo di messaggi che vengono attivamente elaborati attraverso un oggetto <see cref="T:System.ServiceModel.ServiceHost" />.</summary>
        <value>Il limite massimo di messaggi attivi nel servizio. Il valore predefinito è 16 volte il conteggio del processore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La proprietà <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> specifica il numero massimo di messaggi che vengono elaborati attivamente attraverso un oggetto <xref:System.ServiceModel.ServiceHost>. Ogni canale può avere un messaggio che non si tiene conto per il valore in sospeso <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> fino a quando non Windows Communication Foundation (WCF) comincia a elaborarlo.  
  
 È inoltre possibile impostare i valori di questo attributo utilizzando il [ &lt;serviceThrottling&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicethrottling.md) elemento in un file di configurazione dell'applicazione.  
  
> [!WARNING]
>  <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> deve essere impostato su inferiore alla dimensione del pool di connessione SQL in scenari in coda.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come utilizzare la classe <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> da un file di configurazione dell'applicazione che imposta le proprietà <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A>, <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> e <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> su 1 a scopo di esempio. L'esperienza in scenari reali determina le impostazioni ottimali per qualsiasi applicazione specifica.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentInstances">
      <MemberSignature Language="C#" Value="public int MaxConcurrentInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentInstances" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentInstances As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentInstances { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentInstances : int with get, set" Usage="System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica il numero massimo di oggetti <see cref="T:System.ServiceModel.InstanceContext" /> del servizio che possono essere eseguiti contemporaneamente.</summary>
        <value>Il numero massimo di oggetti <see cref="T:System.ServiceModel.InstanceContext" /> presenti contemporaneamente nel servizio. Il valore predefinito è la somma del valore del <see cref="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions" /> e il valore di <see cref="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La proprietà <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> specifica il numero massimo di oggetti <xref:System.ServiceModel.InstanceContext> nel servizio. È importante tenere presente la relazione tra la proprietà <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> e la proprietà <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>. Se <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> è <xref:System.ServiceModel.InstanceContextMode.PerSession>, il valore risultante è il numero complessivo di sessioni. Se <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> è <xref:System.ServiceModel.InstanceContextMode.PerCall> il valore risultante è il numero di chiamate simultanee. Se un messaggio arriva quando il numero massimo di oggetti <xref:System.ServiceModel.InstanceContext> è già stato impostato, il messaggio viene messo in attesa fino a che un oggetto <xref:System.ServiceModel.InstanceContext> viene chiuso.  
  
 È inoltre possibile impostare i valori di questo attributo utilizzando il [ &lt;serviceThrottling&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicethrottling.md) elemento in un file di configurazione dell'applicazione.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come utilizzare la classe <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> da un file di configurazione dell'applicazione che imposta le proprietà <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A>, <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> e <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> su 1 a scopo di esempio. L'esperienza in scenari reali determina le impostazioni ottimali per qualsiasi applicazione specifica.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentSessions">
      <MemberSignature Language="C#" Value="public int MaxConcurrentSessions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentSessions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentSessions As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentSessions { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentSessions : int with get, set" Usage="System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica il numero massimo di sessioni accettate contemporaneamente da un oggetto <see cref="T:System.ServiceModel.ServiceHost" />.</summary>
        <value>Il numero massimo di sessioni accettate da un host del servizio. Il valore predefinito è il numero di processori di 100 volte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La proprietà <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A> specifica il numero massimo di sessioni accettate da un oggetto <xref:System.ServiceModel.ServiceHost>. È importante comprendere che in questo caso le sessioni non significano solo canali che supportano sessioni affidabili: ad esempio, <xref:System.ServiceModel.NetNamedPipeBinding?displayProperty=nameWithType> supporta le sessioni ma non include sessioni affidabili.  
  
 Ogni oggetto listener può avere una sessione di canale che non si tiene conto per il valore in sospeso <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A> fino a quando non WCF accetta la sessione di canale e avvia l'elaborazione messaggi su di esso. Questa proprietà è molto utile negli scenari che utilizzano le sessioni.  
  
 Quando questa proprietà viene impostata su un valore inferiore al numero di thread client, è possibile che le richieste di più client possano venire accodate nella stessa connessione del socket. Le richieste del client che non ha creato una sessione con il servizio verranno bloccate finché il servizio non chiude la propria sessione con gli altri client se il numero di sessioni aperte nel servizio ha raggiunto `MaxConcurrentSessions`. Le richieste del client che non vengono soddisfatte scadono e il servizio chiude la sessione improvvisamente.  
  
 Per evitare questa situazione, eseguire i thread client da domini di applicazione diversi, in modo che i messaggi di richiesta confluiscano in connessioni socket diverse.  
  
 È inoltre possibile impostare i valori di questo attributo utilizzando il [ &lt;serviceThrottling&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicethrottling.md) elemento in un file di configurazione dell'applicazione.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come utilizzare la classe <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> da un file di configurazione dell'applicazione che imposta le proprietà <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A>, <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> e <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> su 1 a scopo di esempio. L'esperienza in scenari reali determina le impostazioni ottimali per qualsiasi applicazione specifica.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Descrizione del servizio.</param>
        <param name="serviceHostBase">Host del servizio.</param>
        <param name="endpoints">Endpoint esposti dal servizio.</param>
        <param name="parameters">Parametri di associazione da configurare per il supporto del comportamento del servizio.</param>
        <summary>Configura le associazioni per il supporto del comportamento del servizio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementa il metodo <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Descrizione del servizio da configurare.</param>
        <param name="serviceHostBase">Host del servizio.</param>
        <summary>Configura il servizio per il supporto del comportamento del servizio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementa il metodo <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Descrizione del servizio da convalidare da parte del comportamento del servizio.</param>
        <param name="serviceHostBase">Host del servizio da convalidare da parte del comportamento del servizio.</param>
        <summary>Convalida che il servizio e l'host siano in grado di supportare il comportamento del servizio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementa il metodo <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>