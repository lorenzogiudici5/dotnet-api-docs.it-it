<Type Name="IPolicyImportExtension" FullName="System.ServiceModel.Description.IPolicyImportExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2dafea050ab8f58e92bc123d4611ca1624cfae00" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37456524" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPolicyImportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPolicyImportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IPolicyImportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPolicyImportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPolicyImportExtension" />
  <TypeSignature Language="F#" Value="type IPolicyImportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce un metodo per oggetti che importano asserzioni di criteri personalizzate relative alle associazioni.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementare l'interfaccia <xref:System.ServiceModel.Description.IPolicyImportExtension> per cercare informazioni WSDL esposte da un particolare endpoint per le asserzioni di criteri personalizzate relative alle funzionalità o ai requisiti dell'endpoint. In genere, un'utilità di importazione di criteri cerca un'asserzione specifica e inserisce un elemento dell'associazione, configura un elemento dell'associazione o modifica il contratto per supportare i requisiti dell'asserzione.  
  
 A differenza della controparte, per l'interfaccia <xref:System.ServiceModel.Description.IPolicyExportExtension>, <xref:System.ServiceModel.Description.IPolicyImportExtension> non è necessaria l'implementazione tramite un oggetto <xref:System.ServiceModel.Channels.BindingElement>. È possibile caricarla utilizzando la sezione di configurazione client illustrata nella sezione Esempi oppure aggiungendola a livello di codice al costruttore <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType>.  
  
 Windows Communication Foundation (WCF) passa due oggetti per il <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> metodo, una <xref:System.ServiceModel.Description.MetadataImporter> e un <xref:System.ServiceModel.Description.PolicyConversionContext>. In genere l'oggetto <xref:System.ServiceModel.Description.PolicyConversionContext> contiene già le asserzioni di criteri per ogni ambito dell'associazione.  
  
 Un'implementazione <xref:System.ServiceModel.Description.IPolicyImportExtension> consente di eseguire i passaggi seguenti:  
  
1.  Trovare l'asserzione di criteri personalizzata per la quale è responsabile chiamando i metodi <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> o <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>, a seconda dell'ambito.  
  
2.  Rimuovere l'asserzione di criteri dalla raccolta di asserzioni. Il metodo <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> trova, restituisce e rimuove l'asserzione in un passaggio.  
  
3.  Modificare lo stack dell'associazione o il contratto aggiungendo un elemento <xref:System.ServiceModel.Channels.BindingElement> personalizzato e obbligatorio alla proprietà <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> o modificando la proprietà <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType>.  
  
 Il passaggio 2 è importante. Dopo che tutte le utilità di importazione sono state chiamate, WCF controlla l'esistenza di tutte le asserzioni di criteri rimanenti. Se è presente, WCF si presuppone che l'importazione dei criteri non è riuscita e non importa l'associazione associata.  
  
> [!IMPORTANT]
>  Un fornitore di metadati malintenzionato potrebbe inviare XML non valido come parte dei metadati nel tentativo di sfruttare un'utilità di importazione di criteri. Si consiglia vivamente che le utilità di importazione di criteri personalizzate siano affidabili per tutte le forme di XML che potrebbero passare.  
  
 È necessario che le implementazioni <xref:System.ServiceModel.Description.MetadataImporter> personalizzate implementino l'oggetto <xref:System.ServiceModel.Description.PolicyConversionContext> per estrarre le asserzioni di criteri allegate al formato di metadati personalizzato.  
  
 Se si desidera esportare e importare elementi WSDL personalizzati che non sono asserzioni di criteri, vedere <xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType> e <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType>.  
  
> [!NOTE]
>  È possibile usare unità di importazione dei criteri personalizzati ed esportazione con il [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) usando gli stessi elementi di configurazione in un file di configurazione e la `/svcutilConfig:<configFile>` opzione.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come utilizzare il metodo <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> per individuare, restituire e rimuovere l'asserzione in un passaggio.  
  
 [!code-csharp[CustomPolicySample#1](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyimporter.cs#1)]
 [!code-vb[CustomPolicySample#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyimporter.vb#1)]  
  
 Nell'esempio di codice seguente viene mostrato il file di configurazione dell'applicazione client per caricare l'utilità di importazione di criteri personalizzata quando viene richiamata la classe <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType>.  
  
 [!code-xml[CustomPolicySample#7](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.exe.config#7)]   
  
 Nell'esempio di codice seguente viene illustrato come utilizzare <xref:System.ServiceModel.Description.MetadataResolver> per scaricare e risolvere i metadati in oggetti della descrizione.  
  
 [!code-csharp[CustomPolicySample#10](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.cs#10)]
 [!code-vb[CustomPolicySample#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/client.vb#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ImportPolicy">
      <MemberSignature Language="C#" Value="public void ImportPolicy (System.ServiceModel.Description.MetadataImporter importer, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportPolicy(class System.ServiceModel.Description.MetadataImporter importer, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportPolicy (importer As MetadataImporter, context As PolicyConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportPolicy(System::ServiceModel::Description::MetadataImporter ^ importer, System::ServiceModel::Description::PolicyConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ImportPolicy : System.ServiceModel.Description.MetadataImporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="iPolicyImportExtension.ImportPolicy (importer, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.ServiceModel.Description.MetadataImporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="importer">L'oggetto <see cref="T:System.ServiceModel.Description.MetadataImporter" /> in uso.</param>
        <param name="context">La classe <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> che contiene entrambi le asserzioni di criteri che possono essere importate e le raccolte di elementi dell'associazione a cui è possibile aggiungere gli elementi dell'associazione di implementazione.</param>
        <summary>Definisce un metodo che può importare asserzioni di criteri personalizzate e aggiungere elementi dell'associazione di implementazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementare il metodo `ImportPolicy` per ottenere asserzioni di criteri ed eseguire modifiche del contratto o dell'associazione importati per supportare l'asserzione. In genere, un'utilità di importazione di criteri risponde alla richiesta di trovare un'asserzione di criteri personalizzata configurando o inserendo un elemento dell'associazione nell'associazione in corso di importazione.  
  
 Windows Communication Foundation (WCF) passa due oggetti per il <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> metodo, una <xref:System.ServiceModel.Description.MetadataImporter> e un <xref:System.ServiceModel.Description.PolicyConversionContext>. In genere l'oggetto <xref:System.ServiceModel.Description.PolicyConversionContext> contiene già le asserzioni di criteri per ogni ambito dell'associazione.  
  
 Un'implementazione <xref:System.ServiceModel.Description.IPolicyImportExtension> consente di eseguire i passaggi seguenti:  
  
1.  Trovare l'asserzione di criteri personalizzata per la quale è responsabile chiamando i metodi <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> o <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>, a seconda dell'ambito.  
  
2.  Rimuovere l'asserzione di criteri dalla raccolta di asserzioni. Il metodo <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> trova, restituisce e rimuove l'asserzione in un passaggio.  
  
3.  Modifica lo stack dell'associazione o il contratto aggiungendo un elemento <xref:System.ServiceModel.Channels.BindingElement> personalizzato e obbligatorio alla proprietà <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> o modificando la proprietà <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType>.  
  
 Il passaggio 2 è importante. Dopo che tutte le utilità di importazione sono state chiamate, WCF controlla l'esistenza di tutte le asserzioni di criteri rimanenti. Se è presente, WCF si presuppone che l'importazione dei criteri non è riuscita e non importa l'associazione associata.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come utilizzare il metodo <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> per individuare, restituire e rimuovere l'asserzione in un passaggio.  
  
 [!code-csharp[CustomPolicySample#1](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyimporter.cs#1)]
 [!code-vb[CustomPolicySample#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyimporter.vb#1)]  
  
 Nell'esempio di codice seguente viene mostrato il file di configurazione dell'applicazione client per caricare l'utilità di importazione di criteri personalizzata quando viene richiamata la classe <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType>.  
  
 [!code-xml[CustomPolicySample#7](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.exe.config#7)]   
  
 Nell'esempio di codice seguente viene illustrato come utilizzare <xref:System.ServiceModel.Description.MetadataResolver> per scaricare e risolvere i metadati in oggetti della descrizione.  
  
 [!code-csharp[CustomPolicySample#10](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.cs#10)]
 [!code-vb[CustomPolicySample#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/client.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>