<Type Name="TypedMessageConverter" FullName="System.ServiceModel.Description.TypedMessageConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15875377301d65459de046ffc4eec9701b83b467" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34315176" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TypedMessageConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypedMessageConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.TypedMessageConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypedMessageConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypedMessageConverter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Converte un messaggio tipizzato in un messaggio non tipizzato o viceversa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe fornisce le funzionalità per convertire un messaggio tipizzato in un messaggio non tipizzato o viceversa. Un messaggio tipizzato è un'istanza di un tipo annotata con l'attributo <xref:System.ServiceModel.MessageContractAttribute>. Un messaggio non tipizzato è un'istanza della classe <xref:System.ServiceModel.Channels.Message>.  È possibile annotare un tipo con <xref:System.ServiceModel.MessageContractAttribute> per creare un tipo di messaggio personalizzato e quindi utilizzare i metodi forniti da questa classe per convertirlo in un'istanza <xref:System.ServiceModel.Channels.Message> non tipizzata.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.MessageContractAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypedMessageConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypedMessageConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rappresenta un metodo statico che restituisce un'istanza <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (messageContract As Type, action As String) As TypedMessageConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::TypedMessageConverter ^ Create(Type ^ messageContract, System::String ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="messageContract">Tipo di contratto di messaggio che rappresenta un elemento<see cref="T:System.Type" /> annotato con l'attributo <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
        <param name="action">Una stringa dell'azione.</param>
        <summary>Rappresenta un metodo statico che restituisce un'istanza <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <returns>Istanza di <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Gli argomenti sono <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">Il tipo di contratto specificato del messaggio non ha il MessageContractAttribute applicato</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, System.ServiceModel.DataContractFormatAttribute formatterAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, class System.ServiceModel.DataContractFormatAttribute formatterAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (messageContract As Type, action As String, formatterAttribute As DataContractFormatAttribute) As TypedMessageConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::TypedMessageConverter ^ Create(Type ^ messageContract, System::String ^ action, System::ServiceModel::DataContractFormatAttribute ^ formatterAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="formatterAttribute" Type="System.ServiceModel.DataContractFormatAttribute" />
      </Parameters>
      <Docs>
        <param name="messageContract">Tipo di contratto di messaggio che rappresenta un elemento<see cref="T:System.Type" /> annotato con l'attributo <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
        <param name="action">Una stringa dell'azione.</param>
        <param name="formatterAttribute">Elemento <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> che specifica il formattatore da utilizzare.</param>
        <summary>Rappresenta un metodo statico che restituisce un'istanza <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <returns>Istanza di <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Gli argomenti sono <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">Il tipo di contratto specificato del messaggio non ha il MessageContractAttribute applicato</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, class System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (messageContract As Type, action As String, formatterAttribute As XmlSerializerFormatAttribute) As TypedMessageConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::TypedMessageConverter ^ Create(Type ^ messageContract, System::String ^ action, System::ServiceModel::XmlSerializerFormatAttribute ^ formatterAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="formatterAttribute" Type="System.ServiceModel.XmlSerializerFormatAttribute" />
      </Parameters>
      <Docs>
        <param name="messageContract">Tipo di contratto di messaggio che rappresenta un elemento<see cref="T:System.Type" /> annotato con l'attributo <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
        <param name="action">Una stringa dell'azione.</param>
        <param name="formatterAttribute">Elemento <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> che specifica il formattatore da utilizzare.</param>
        <summary>Rappresenta un metodo statico che restituisce un'istanza <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <returns>Istanza di <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Gli argomenti sono <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">Il tipo di contratto specificato del messaggio non ha il MessageContractAttribute applicato</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (messageContract As Type, action As String, defaultNamespace As String) As TypedMessageConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::TypedMessageConverter ^ Create(Type ^ messageContract, System::String ^ action, System::String ^ defaultNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="messageContract">Tipo di contratto di messaggio che rappresenta un elemento<see cref="T:System.Type" /> annotato con l'attributo <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
        <param name="action">Una stringa dell'azione.</param>
        <param name="defaultNamespace">Spazio dei nomi.</param>
        <summary>Rappresenta un metodo statico che restituisce un'istanza <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <returns>Istanza di <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Gli argomenti sono <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">Il tipo di contratto specificato del messaggio non ha il MessageContractAttribute applicato</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace, System.ServiceModel.DataContractFormatAttribute formatterAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, string defaultNamespace, class System.ServiceModel.DataContractFormatAttribute formatterAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (messageContract As Type, action As String, defaultNamespace As String, formatterAttribute As DataContractFormatAttribute) As TypedMessageConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::TypedMessageConverter ^ Create(Type ^ messageContract, System::String ^ action, System::String ^ defaultNamespace, System::ServiceModel::DataContractFormatAttribute ^ formatterAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="defaultNamespace" Type="System.String" />
        <Parameter Name="formatterAttribute" Type="System.ServiceModel.DataContractFormatAttribute" />
      </Parameters>
      <Docs>
        <param name="messageContract">Tipo di contratto di messaggio che rappresenta un elemento<see cref="T:System.Type" /> annotato con l'attributo <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
        <param name="action">Una stringa dell'azione.</param>
        <param name="defaultNamespace">Spazio dei nomi.</param>
        <param name="formatterAttribute">Elemento <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> che specifica il formattatore da utilizzare.</param>
        <summary>Rappresenta un metodo statico che restituisce un'istanza <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <returns>Istanza di <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Gli argomenti sono <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">Il tipo di contratto specificato del messaggio non ha il MessageContractAttribute applicato</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace, System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, string defaultNamespace, class System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (messageContract As Type, action As String, defaultNamespace As String, formatterAttribute As XmlSerializerFormatAttribute) As TypedMessageConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::TypedMessageConverter ^ Create(Type ^ messageContract, System::String ^ action, System::String ^ defaultNamespace, System::ServiceModel::XmlSerializerFormatAttribute ^ formatterAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="defaultNamespace" Type="System.String" />
        <Parameter Name="formatterAttribute" Type="System.ServiceModel.XmlSerializerFormatAttribute" />
      </Parameters>
      <Docs>
        <param name="messageContract">Tipo di contratto di messaggio che rappresenta un elemento<see cref="T:System.Type" /> annotato con l'attributo <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
        <param name="action">Una stringa dell'azione.</param>
        <param name="defaultNamespace">Spazio dei nomi.</param>
        <param name="formatterAttribute">Elemento <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> che specifica il formattatore da utilizzare.</param>
        <summary>Rappresenta un metodo statico che restituisce un'istanza <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <returns>Istanza di <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Gli argomenti sono <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">Il tipo di contratto specificato del messaggio non ha il MessageContractAttribute applicato</exception>
      </Docs>
    </Member>
    <Member MemberName="FromMessage">
      <MemberSignature Language="C#" Value="public abstract object FromMessage (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FromMessage(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ FromMessage(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Un messaggio non tipizzato.</param>
        <summary>Crea un messaggio tipizzato dall'istanza <see cref="T:System.ServiceModel.Channels.Message" /> specificata.</summary>
        <returns>Un oggetto che è un messaggio tipizzato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo accetta un messaggio di Windows Communication Foundation (WCF) non tipizzato, vale a dire, un'istanza di <xref:System.ServiceModel.Channels.Message>e lo converte in un messaggio tipizzato, vale a dire, un'istanza di un tipo annotata dal <xref:System.ServiceModel.MessageContractAttribute>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToMessage">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un'istanza della classe <see cref="T:System.ServiceModel.Channels.Message" /> a partire dal messaggio tipizzato specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message ToMessage (object typedMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ToMessage(object typedMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToMessage (typedMessage As Object) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::Message ^ ToMessage(System::Object ^ typedMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typedMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typedMessage">Un messaggio tipizzato.</param>
        <summary>Crea un'istanza della classe <see cref="T:System.ServiceModel.Channels.Message" /> a partire dal messaggio tipizzato specificato.</summary>
        <returns>Istanza di <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message ToMessage (object typedMessage, System.ServiceModel.Channels.MessageVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ToMessage(object typedMessage, class System.ServiceModel.Channels.MessageVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToMessage (typedMessage As Object, version As MessageVersion) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::Message ^ ToMessage(System::Object ^ typedMessage, System::ServiceModel::Channels::MessageVersion ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typedMessage" Type="System.Object" />
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
      </Parameters>
      <Docs>
        <param name="typedMessage">Un messaggio tipizzato.</param>
        <param name="version">Un oggetto della classe <see cref="T:System.ServiceModel.Channels.MessageVersion" /> che specifica le versioni di SOAP e WS-Addressing associate a un messaggio.</param>
        <summary>Crea un'istanza <see cref="T:System.ServiceModel.Channels.Message" /> dal messaggio tipizzato specificato utilizzando la versione specificata.</summary>
        <returns>Istanza di <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>