<Type Name="IServiceBehavior" FullName="System.ServiceModel.Description.IServiceBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f26cbbfb79ab6e7cd4db524dfccbb6a72e11474" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37617243" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IServiceBehavior" />
  <TypeSignature Language="F#" Value="type IServiceBehavior = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="eef77-101">Fornisce un meccanismo per modificare o inserire estensioni personalizzate all'interno di un servizio, inclusa la classe <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eef77-101">Provides a mechanism to modify or insert custom extensions across an entire service, including the <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef77-102">Implementare l'interfaccia <xref:System.ServiceModel.Description.IServiceBehavior> per modificare, esaminare o estendere aspetti dell'esecuzione del servizio a livello di applicazione:</span><span class="sxs-lookup"><span data-stu-id="eef77-102">Implement <xref:System.ServiceModel.Description.IServiceBehavior> to modify, examine, or extend some aspect of service-wide execution at the application level:</span></span>  
  
-   <span data-ttu-id="eef77-103">Utilizzare il metodo <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> per modificare i valori delle proprietà della fase di esecuzione o inserire oggetti di estensione personalizzati, ad esempio gestori di errori, intercettatori di messaggi o parametri, estensioni di sicurezza e altri oggetti di estensione personalizzati.</span><span class="sxs-lookup"><span data-stu-id="eef77-103">Use the <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> method to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</span></span>  
  
-   <span data-ttu-id="eef77-104">Usare il <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> metodo per esaminare la descrizione prima che Windows Communication Foundation (WCF) crea il servizio in esecuzione per confermare che può essere eseguito correttamente.</span><span class="sxs-lookup"><span data-stu-id="eef77-104">Use the <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> method to examine the description before Windows Communication Foundation (WCF) constructs the executing service to confirm that it can execute properly.</span></span>  
  
-   <span data-ttu-id="eef77-105">Utilizzare il metodo <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> per passare le informazioni personalizzate per il servizio a un elemento dell'associazione, in modo che possa supportare il servizio correttamente.</span><span class="sxs-lookup"><span data-stu-id="eef77-105">Use the <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> method to pass to a binding element the custom information for the service so that it can support the service correctly.</span></span>  
  
 <span data-ttu-id="eef77-106">Gli oggetti <xref:System.ServiceModel.Description.IServiceBehavior> possono utilizzare uno o più di questi metodi, ma spesso soltanto uno di essi è importante. In questi casi, è possibile che i metodi non utilizzati non restituiscano un valore.</span><span class="sxs-lookup"><span data-stu-id="eef77-106"><xref:System.ServiceModel.Description.IServiceBehavior> objects can make use of any of these methods, but often only one is important; in such cases the unused methods can return without a value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eef77-107">Tutti i metodi <xref:System.ServiceModel.Description.IServiceBehavior> passano gli oggetti <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> e <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> come parametri.</span><span class="sxs-lookup"><span data-stu-id="eef77-107">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="eef77-108">Il parametro <xref:System.ServiceModel.Description.ServiceDescription> è utilizzabile solo per attività di esame. Se gli oggetti vengono modificati, il comportamento di esecuzione sarà indefinito.</span><span class="sxs-lookup"><span data-stu-id="eef77-108">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination only; if you modify these objects the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="eef77-109">Per eseguire un'attività di personalizzazione specificata, è necessario aggiungere l'oggetto <xref:System.ServiceModel.Description.IServiceBehavior> alla proprietà <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> prima della costruzione della fase di esecuzione del servizio.</span><span class="sxs-lookup"><span data-stu-id="eef77-109">To perform the customization task for which it is intended, the <xref:System.ServiceModel.Description.IServiceBehavior> object must be added to the <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> property prior to the construction of the service runtime.</span></span> <span data-ttu-id="eef77-110">A questo scopo, è possibile eseguire tre operazioni:</span><span class="sxs-lookup"><span data-stu-id="eef77-110">There are three ways to do this:</span></span>  
  
-   <span data-ttu-id="eef77-111">Aggiungere il comportamento del servizio personalizzato a livello di programmazione alla proprietà <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> prima che il metodo <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> venga chiamato sull'oggetto <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eef77-111">Programmatically add the custom service behavior to the <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> property prior to the point where the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> object.</span></span>  
  
-   <span data-ttu-id="eef77-112">Creare un attributo personalizzato che implementi <xref:System.ServiceModel.Description.IServiceBehavior> e utilizzarlo per contrassegnare le classi del servizio da modificare.</span><span class="sxs-lookup"><span data-stu-id="eef77-112">Create a custom attribute that implements <xref:System.ServiceModel.Description.IServiceBehavior> and use it to mark service classes that are to be modified.</span></span> <span data-ttu-id="eef77-113">Quando un <xref:System.ServiceModel.ServiceHost> costruito, WCF Usa la reflection per individuare gli attributi sul tipo di servizio.</span><span class="sxs-lookup"><span data-stu-id="eef77-113">When a <xref:System.ServiceModel.ServiceHost> object is constructed, WCF uses reflection to discover the attributes on the service type.</span></span> <span data-ttu-id="eef77-114">Se gli attributi implementano <xref:System.ServiceModel.Description.IServiceBehavior>, vengono aggiunti alla raccolta di comportamenti su <xref:System.ServiceModel.Description.ServiceDescription>.</span><span class="sxs-lookup"><span data-stu-id="eef77-114">If any attributes implement <xref:System.ServiceModel.Description.IServiceBehavior>, they are added to the behaviors collection on <xref:System.ServiceModel.Description.ServiceDescription>.</span></span>  
  
-   <span data-ttu-id="eef77-115">Estendere la classe <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> per supportare la specifica del comportamento in un'applicazione o in un file di configurazione del computer.</span><span class="sxs-lookup"><span data-stu-id="eef77-115">Extend the <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> class to support the specification of the behavior in an application or machine configuration file.</span></span> <span data-ttu-id="eef77-116">Per ulteriori informazioni, vedere la sezione relativa agli esempi.</span><span class="sxs-lookup"><span data-stu-id="eef77-116">See the Example section for more information.</span></span>  
  
 <span data-ttu-id="eef77-117">Esempi di comportamenti del servizio in WCF il <xref:System.ServiceModel.ServiceBehaviorAttribute> attributo, il <xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType>, il <xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType> e il <xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType> comportamento.</span><span class="sxs-lookup"><span data-stu-id="eef77-117">Examples of service behaviors in WCF include the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute, the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType>, the <xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType> and the <xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType> behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eef77-118">Nell'esempio di codice seguente viene illustrato come utilizzare un comportamento del servizio specificato in un file di configurazione per inserire un gestore di errori personalizzato in un'applicazione del servizio.</span><span class="sxs-lookup"><span data-stu-id="eef77-118">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="eef77-119">In questo esempio, il gestore di errori intercetta tutte le eccezioni e le converte in un errore SOAP `GreetingFault` personalizzato che verrà quindi restituito al client.</span><span class="sxs-lookup"><span data-stu-id="eef77-119">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="eef77-120">La seguente implementazione di <xref:System.ServiceModel.Description.IServiceBehavior> non aggiunge alcun oggetto parametro di associazione, aggiunge invece l'oggetto personalizzato <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> a ogni proprietà <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType>, convalida ogni operazione del servizio al quale viene applicato il comportamento del servizio e dispone di <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> di tipo `GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="eef77-120">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="eef77-121">In questo esempio, la classe di comportamento implementa anche <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> che consente al comportamento del servizio di essere inserito utilizzandolo in un file di configurazione dell'applicazione, come dimostra l'esempio di codice seguente.</span><span class="sxs-lookup"><span data-stu-id="eef77-121">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="iServiceBehavior.AddBindingParameters (serviceDescription, serviceHostBase, endpoints, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">
          <span data-ttu-id="eef77-122">La descrizione del servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef77-122">The service description of the service.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="eef77-123">L'host del servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef77-123">The host of the service.</span>
          </span>
        </param>
        <param name="endpoints">
          <span data-ttu-id="eef77-124">Gli endpoint del servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef77-124">The service endpoints.</span>
          </span>
        </param>
        <param name="bindingParameters">
          <span data-ttu-id="eef77-125">Gli oggetti personalizzati ai quali hanno accesso gli elementi di associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef77-125">Custom objects to which binding elements have access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eef77-126">Consente di passare i dati personalizzati agli elementi di associazione per supportare l'implementazione del contratto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef77-126">Provides the ability to pass custom data to binding elements to support the contract implementation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef77-127">Utilizzare il metodo <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> per aggiungere oggetti dati personalizzati alla raccolta `parameters` utilizzabile dagli elementi di associazione per acquisire informazioni aggiuntive per abilitare il supporto del contratto.</span><span class="sxs-lookup"><span data-stu-id="eef77-127">Use the <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> method to add custom data objects to the `parameters` collection that binding elements can use to acquire extra information to enable them to support the contract.</span></span>  
  
 <span data-ttu-id="eef77-128">Questo metodo viene chiamato una volta per ogni URI di ascolto.</span><span class="sxs-lookup"><span data-stu-id="eef77-128">This method is called once for each listen URI.</span></span> <span data-ttu-id="eef77-129">Ad esempio, se un servizio è dotato di quattro endpoint e due di loro hanno lo stesso URI di ascolto, questo metodo viene chiamato tre volte.</span><span class="sxs-lookup"><span data-stu-id="eef77-129">For example, if a service has four endpoints, and two of them have the same listen URI, then this method gets called three times.</span></span> <span data-ttu-id="eef77-130">Questo succede perché i `bindingParameters` fanno riferimento a ogni stack del canale ed esiste uno stack del canale per ogni URI di ascolto.</span><span class="sxs-lookup"><span data-stu-id="eef77-130">The reason is that the `bindingParameters` target each channel stack and there is one channel stack for each listen URI.</span></span> <span data-ttu-id="eef77-131">Poiché ogni chiamata riceve gli endpoint dell'URI di ascolto, ognuna della due chiamate ottiene un singolo oggetto <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType>  e una chiamata ottiene una raccolta di due oggetti <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eef77-131">Because each call receives those endpoints at that listen URI, two calls each get a single <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType>, and one call gets a collection of two <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eef77-132">Tutti i metodi <xref:System.ServiceModel.Description.IServiceBehavior> passano gli oggetti <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> e <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> come parametri.</span><span class="sxs-lookup"><span data-stu-id="eef77-132">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="eef77-133">Il parametro <xref:System.ServiceModel.Description.ServiceDescription> è utilizzabile solo per esaminare e inserire le personalizzazioni. Se questi oggetti vengono modificati in altro modo, il comportamento di esecuzione sarà indefinito.</span><span class="sxs-lookup"><span data-stu-id="eef77-133">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="iServiceBehavior.ApplyDispatchBehavior (serviceDescription, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">
          <span data-ttu-id="eef77-134">Descrizione del servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef77-134">The service description.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="eef77-135">L'host in fase di generazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef77-135">The host that is currently being built.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eef77-136">Consente di modificare i valori delle proprietà della fase di esecuzione o inserire oggetti di estensione personalizzati, ad esempio gestori di errori, intercettatori di messaggi o parametri, estensioni di sicurezza e altri oggetti di estensione personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef77-136">Provides the ability to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef77-137">Implementare il metodo <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> per controllare o modificare l'oggetto <xref:System.ServiceModel.ServiceHostBase> in fase di costruzione per supportare uno scenario di esecuzione personalizzata.</span><span class="sxs-lookup"><span data-stu-id="eef77-137">Implement the <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> method to inspect or modify the <xref:System.ServiceModel.ServiceHostBase> object that is being constructed in order to support some custom execution scenario.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eef77-138">Tutti i metodi <xref:System.ServiceModel.Description.IServiceBehavior> passano gli oggetti <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> e <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> come parametri.</span><span class="sxs-lookup"><span data-stu-id="eef77-138">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="eef77-139">Il parametro <xref:System.ServiceModel.Description.ServiceDescription> è utilizzabile solo per esaminare e inserire le personalizzazioni. Se questi oggetti vengono modificati in altro modo, il comportamento di esecuzione sarà indefinito.</span><span class="sxs-lookup"><span data-stu-id="eef77-139">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eef77-140">Nell'esempio di codice seguente viene illustrato come utilizzare un comportamento del servizio specificato in un file di configurazione per inserire un gestore di errori personalizzato in un'applicazione del servizio.</span><span class="sxs-lookup"><span data-stu-id="eef77-140">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="eef77-141">In questo esempio, il gestore di errori intercetta tutte le eccezioni e le converte in un errore SOAP `GreetingFault` personalizzato che verrà quindi restituito al client.</span><span class="sxs-lookup"><span data-stu-id="eef77-141">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="eef77-142">La seguente implementazione di <xref:System.ServiceModel.Description.IServiceBehavior> non aggiunge alcun oggetto parametro di associazione, aggiunge invece l'oggetto personalizzato <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> a ogni proprietà <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType>, convalida ogni operazione del servizio al quale viene applicato il comportamento del servizio e dispone di <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> di tipo `GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="eef77-142">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="eef77-143">In questo esempio, la classe di comportamento implementa anche <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> che consente al comportamento del servizio di essere inserito utilizzandolo in un file di configurazione dell'applicazione, come dimostra l'esempio di codice seguente.</span><span class="sxs-lookup"><span data-stu-id="eef77-143">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="iServiceBehavior.Validate (serviceDescription, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">
          <span data-ttu-id="eef77-144">Descrizione del servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef77-144">The service description.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="eef77-145">L'host del servizio in fase di costruzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef77-145">The service host that is currently being constructed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eef77-146">Consente di controllare l'host del servizio e la descrizione del servizio per verificare che il servizio può essere eseguito correttamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef77-146">Provides the ability to inspect the service host and the service description to confirm that the service can run successfully.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef77-147">Utilizzare il metodo <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> per verificare se il servizio corrente può essere eseguito correttamente nello scenario.</span><span class="sxs-lookup"><span data-stu-id="eef77-147">Use the <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> method to confirm whether the current service can execute properly according to your scenario.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eef77-148">Tutti i metodi <xref:System.ServiceModel.Description.IServiceBehavior> passano gli oggetti <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> e <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> come parametri.</span><span class="sxs-lookup"><span data-stu-id="eef77-148">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="eef77-149">Il parametro <xref:System.ServiceModel.Description.ServiceDescription> è utilizzabile solo per esaminare e inserire le personalizzazioni. Se questi oggetti vengono modificati in altro modo, il comportamento di esecuzione sarà indefinito.</span><span class="sxs-lookup"><span data-stu-id="eef77-149">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eef77-150">Nell'esempio di codice seguente viene illustrato come utilizzare un comportamento del servizio specificato in un file di configurazione per inserire un gestore di errori personalizzato in un'applicazione del servizio.</span><span class="sxs-lookup"><span data-stu-id="eef77-150">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="eef77-151">In questo esempio, il gestore di errori intercetta tutte le eccezioni e le converte in un errore SOAP `GreetingFault` personalizzato che verrà quindi restituito al client.</span><span class="sxs-lookup"><span data-stu-id="eef77-151">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="eef77-152">La seguente implementazione di <xref:System.ServiceModel.Description.IServiceBehavior> non aggiunge alcun oggetto parametro di associazione, aggiunge invece l'oggetto personalizzato <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> a ogni proprietà <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType>, convalida ogni operazione del servizio al quale viene applicato il comportamento del servizio e dispone di <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> di tipo `GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="eef77-152">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="eef77-153">In questo esempio, la classe di comportamento implementa anche <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> che consente al comportamento del servizio di essere inserito utilizzandolo in un file di configurazione dell'applicazione, come dimostra l'esempio di codice seguente.</span><span class="sxs-lookup"><span data-stu-id="eef77-153">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>