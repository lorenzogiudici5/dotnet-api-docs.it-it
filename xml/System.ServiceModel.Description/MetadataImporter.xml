<Type Name="MetadataImporter" FullName="System.ServiceModel.Description.MetadataImporter">
  <TypeSignature Language="C#" Value="public abstract class MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataImporter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b3e48-101">Importa i metadati in oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</span><span class="sxs-lookup"><span data-stu-id="b3e48-101">Imports metadata into <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e48-102">Utilizza un'implementazione della classe astratta <xref:System.ServiceModel.Description.MetadataImporter> per importare i metadati del servizio.</span><span class="sxs-lookup"><span data-stu-id="b3e48-102">Use an implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class to import service metadata.</span></span> <span data-ttu-id="b3e48-103">I tipi che derivano dalla classe <xref:System.ServiceModel.Description.MetadataImporter> implementano il supporto per l'importazione dei formati di metadati che si basano sulla logica di importazione di WS-Policy di [!INCLUDE[indigo1](~/includes/indigo1-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b3e48-103">Types that derive from the <xref:System.ServiceModel.Description.MetadataImporter> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in [!INCLUDE[indigo1](~/includes/indigo1-md.md)].</span></span>  
  
 <span data-ttu-id="b3e48-104">Un'implementazione di <xref:System.ServiceModel.Description.MetadataImporter> raccoglie le espressioni di criteri collegate ai metadati del servizio in un oggetto <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b3e48-104">A <xref:System.ServiceModel.Description.MetadataImporter> implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="b3e48-105"><xref:System.ServiceModel.Description.MetadataImporter> elabora quindi i criteri come parte dell'importazione dei metadati chiamando le implementazioni dell'interfaccia <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> nella proprietà <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b3e48-105">The <xref:System.ServiceModel.Description.MetadataImporter> then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b3e48-106">È possibile aggiungere il supporto per importare nuove asserzioni di criteri in un oggetto <xref:System.ServiceModel.Description.MetadataImporter> aggiungendo la propria implementazione dell'interfaccia <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> alla proprietà <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> in un'istanza <xref:System.ServiceModel.Description.MetadataImporter>.</span><span class="sxs-lookup"><span data-stu-id="b3e48-106">You can add support for importing new policy assertions to a <xref:System.ServiceModel.Description.MetadataImporter> by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property on a <xref:System.ServiceModel.Description.MetadataImporter> instance.</span></span> <span data-ttu-id="b3e48-107">In alternativa, è possibile registrare l'estensione di importazione dei criteri nel file di configurazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="b3e48-107">Alternatively, you can register your policy import extension in your application configuration file.</span></span>  
  
 <span data-ttu-id="b3e48-108">Il <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> il tipo è l'implementazione del <xref:System.ServiceModel.Description.MetadataImporter> astratta incluso con WCF.</span><span class="sxs-lookup"><span data-stu-id="b3e48-108">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type is the implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class included with WCF.</span></span> <span data-ttu-id="b3e48-109">Il tipo <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> importa metadati WSDL insieme ai relativi criteri allegati. Questi elementi vengono quindi raggruppati in un oggetto <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b3e48-109">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> object.</span></span>  
  
 <span data-ttu-id="b3e48-110">Per aggiungere il supporto per l'importazione di estensioni WSDL, implementare l'interfaccia <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType>, quindi aggiungere tale implementazione alla proprietà <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> nell'istanza di <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b3e48-110">You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> instance.</span></span> <span data-ttu-id="b3e48-111">È inoltre possibile utilizzare il tipo <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> per caricare implementazioni dell'interfaccia <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> registrate nel file di configurazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="b3e48-111">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface registered in your application configuration file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3e48-112">Poiché il costruttore <xref:System.ServiceModel.Description.MetadataImporter> è interno, non è possibile derivare da <xref:System.ServiceModel.Description.MetadataImporter> in questa versione.</span><span class="sxs-lookup"><span data-stu-id="b3e48-112">Because the <xref:System.ServiceModel.Description.MetadataImporter> constructor is internal, you cannot derive from <xref:System.ServiceModel.Description.MetadataImporter> in this version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e48-113">Nell'esempio seguente viene illustrato l'utilizzo della classe derivata <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> per importare metadati utilizzando uno stato personalizzato, controllando la proprietà <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>, compilando metadati importati in tipi gestiti e salvando il risultato in un file di codice.</span><span class="sxs-lookup"><span data-stu-id="b3e48-113">The following example shows the use of the <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> derived class to import metadata using custom state, checking the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property, compiling imported metadata to managed types and saving the result to a code file.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt; Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.MetadataConversionError&gt; Errors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Collection(Of MetadataConversionError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ Errors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e48-114">Ottiene un valore che indica se si sono verificati errori durante l'importazione dei metadati.</span><span class="sxs-lookup"><span data-stu-id="b3e48-114">Gets a value that indicates whether there were errors importing the metadata.</span></span></summary>
        <value><span data-ttu-id="b3e48-115">Raccolta di oggetti <see cref="T:System.ServiceModel.Description.MetadataConversionError" />.</span><span class="sxs-lookup"><span data-stu-id="b3e48-115">A collection of <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e48-116">Controllare sempre la proprietà <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> dopo l'importazione dei metadati e prima di utilizzarli.</span><span class="sxs-lookup"><span data-stu-id="b3e48-116">Always check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property after importing metadata and before using the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3e48-117">Quando viene sottoposto a override in una classe derivata, restituisce una raccolta di contratti importati dai metadati.</span><span class="sxs-lookup"><span data-stu-id="b3e48-117">When overridden in a derived class, returns a collection of contracts imported from the metadata.</span></span></summary>
        <returns><span data-ttu-id="b3e48-118">Contratti importati dai metadati.</span><span class="sxs-lookup"><span data-stu-id="b3e48-118">The contracts imported from the metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3e48-119">Quando viene sottoposto a override in una classe derivata, restituisce tutti gli endpoint nei metadati.</span><span class="sxs-lookup"><span data-stu-id="b3e48-119">When overridden in a derived class, returns all endpoints in the metadata.</span></span></summary>
        <returns><span data-ttu-id="b3e48-120">Raccolta di oggetti <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pubblicati da un servizio.</span><span class="sxs-lookup"><span data-stu-id="b3e48-120">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects that are published by a service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e48-121">Implementare il metodo <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> per restituire tutti gli endpoint nei metadati importati.</span><span class="sxs-lookup"><span data-stu-id="b3e48-121">Implement the <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> method to return all endpoints in the imported metadata.</span></span> <span data-ttu-id="b3e48-122">I metadati importati come endpoint del servizio non possono essere utilizzati per creare metadati di runtime o di esportazione perché gli endpoint importati non contengono informazioni sui tipi gestiti.</span><span class="sxs-lookup"><span data-stu-id="b3e48-122">Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information.</span></span> <span data-ttu-id="b3e48-123">Per utilizzare i metadati per creare un runtime del client o del servizio o per generare metadati, è necessario innanzitutto generare e compilare codice dai metadati e utilizzare tali informazioni sui tipi per creare un nuovo oggetto <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> utilizzando <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</span><span class="sxs-lookup"><span data-stu-id="b3e48-123">To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KnownContracts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt; KnownContracts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, class System.ServiceModel.Description.ContractDescription&gt; KnownContracts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.KnownContracts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KnownContracts As Dictionary(Of XmlQualifiedName, ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ KnownContracts { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e48-124">Ottiene un dizionario di contratti in base al nome noto all'utilità di importazione.</span><span class="sxs-lookup"><span data-stu-id="b3e48-124">Gets a dictionary of contracts by name that the importer knows about.</span></span></summary>
        <value><span data-ttu-id="b3e48-125">Dizionario di contratti elencati in base al nome XML completo.</span><span class="sxs-lookup"><span data-stu-id="b3e48-125">A dictionary of contracts listed by XML qualified name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e48-126">Utilizzare la proprietà <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> per aggiungere o rimuovere le descrizioni dei contratti e i relativi nomi XML associati ai quali l'utilità di importazione può fare riferimento.</span><span class="sxs-lookup"><span data-stu-id="b3e48-126">Use the <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> property to add or remove contract descriptions and their associated XML names that the importer can reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PolicyImportExtensions As KeyedByTypeCollection(Of IPolicyImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ PolicyImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e48-127">Ottiene una raccolta di utilità di importazione dei criteri chiamate dall'utilità di importazione per elaborare le asserzioni dei criteri.</span><span class="sxs-lookup"><span data-stu-id="b3e48-127">Gets a collection of policy importers that the importer calls to process policy assertions.</span></span></summary>
        <value><span data-ttu-id="b3e48-128">Raccolta di utilità di importazione utilizzate da <see cref="T:System.ServiceModel.Description.MetadataImporter" /> per elaborare le asserzioni dei criteri.</span><span class="sxs-lookup"><span data-stu-id="b3e48-128">A collection of policy importers that the <see cref="T:System.ServiceModel.Description.MetadataImporter" /> uses to process policy assertions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e48-129">Utilizzare la proprietà <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> per aggiungere o rimuovere utilità di importazione dei criteri richiamate per elaborare asserzioni di criteri nei metadati.</span><span class="sxs-lookup"><span data-stu-id="b3e48-129">Use the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> property to add or remove policy importers that are invoked to process policy assertions in the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;object,object&gt; State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;object, object&gt; State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Dictionary(Of Object, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ State { System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e48-130">Ottiene o imposta una raccolta di oggetti utilizzata nell'importazione di metadati.</span><span class="sxs-lookup"><span data-stu-id="b3e48-130">Gets or sets a collection of objects used in the importing of metadata.</span></span></summary>
        <value><span data-ttu-id="b3e48-131">Dizionario di oggetti con chiave in base al tipo.</span><span class="sxs-lookup"><span data-stu-id="b3e48-131">A dictionary of objects keyed by type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e48-132">Utilizzare la proprietà `State` per aggiungere o rimuovere oggetti utilizzati nell'importazione di metadati.</span><span class="sxs-lookup"><span data-stu-id="b3e48-132">Use the `State` property to add or remove objects used in the importing of metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e48-133">Nell'esempio seguente viene illustrato l'utilizzo della proprietà <xref:System.ServiceModel.Description.MetadataImporter.State%2A> per aggiungere un oggetto <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType> personalizzato al fine di importare strutture di dati in un modo particolare.</span><span class="sxs-lookup"><span data-stu-id="b3e48-133">The following example shows the use of the <xref:System.ServiceModel.Description.MetadataImporter.State%2A> property to add a custom <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType> to import data structures in a particular way.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>