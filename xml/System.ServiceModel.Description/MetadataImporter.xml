<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MetadataImporter.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72a3a723198a4ad2a03956b8bc484957a70c328923.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3a723198a4ad2a03956b8bc484957a70c328923</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Imports metadata into <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> objects.</source>
          <target state="translated">Importa i metadati in oggetti <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Use an implementation of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> abstract class to import service metadata.</source>
          <target state="translated">Utilizza un'implementazione della classe astratta <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> per importare i metadati del servizio.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Types that derive from the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</source>
          <target state="translated">I tipi che derivano dalla classe <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> implementano il supporto per l'importazione dei formati di metadati che si basano sulla logica di importazione di WS-Policy di <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> implementation collects the policy expressions attached to the service metadata in a <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">Un'implementazione di <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> raccoglie le espressioni di criteri collegate ai metadati del servizio in un oggetto <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> then processes the policies as part of importing the metadata by calling the implementations of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> interface in the <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> elabora quindi i criteri come parte dell'importazione dei metadati chiamando le implementazioni dell'interfaccia <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> nella proprietà <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>You can add support for importing new policy assertions to a <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> by adding your own implementation of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> interface to the <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType&gt;</ph> property on a <ph id="ph4">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> instance.</source>
          <target state="translated">È possibile aggiungere il supporto per importare nuove asserzioni di criteri in un oggetto <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> aggiungendo la propria implementazione dell'interfaccia <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> alla proprietà <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType&gt;</ph> in un'istanza <ph id="ph4">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Alternatively, you can register your policy import extension in your application configuration file.</source>
          <target state="translated">In alternativa, è possibile registrare l'estensione di importazione dei criteri nel file di configurazione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> type is the implementation of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> abstract class included with WCF.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> il tipo è l'implementazione del <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> astratta incluso con WCF.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> type imports WSDL metadata with attached policies that are bundled in a <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">Il tipo <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> importa metadati WSDL insieme ai relativi criteri allegati. Questi elementi vengono quindi raggruppati in un oggetto <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>You can add support for importing WSDL extensions by implementing the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph> interface and then adding your implementation to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType&gt;</ph> property on your <ph id="ph3">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> instance.</source>
          <target state="translated">Per aggiungere il supporto per l'importazione di estensioni WSDL, implementare l'interfaccia <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph>, quindi aggiungere tale implementazione alla proprietà <ph id="ph2">&lt;xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType&gt;</ph> nell'istanza di <ph id="ph3">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> can also load implementations of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph> interface registered in your application configuration file.</source>
          <target state="translated">È inoltre possibile utilizzare il tipo <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> per caricare implementazioni dell'interfaccia <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph> registrate nel file di configurazione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Because the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> constructor is internal, you cannot derive from <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> in this version.</source>
          <target state="translated">Poiché il costruttore <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> è interno, non è possibile derivare da <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> in questa versione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The following example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> derived class to import metadata using custom state, checking the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter.Errors%2A&gt;</ph> property, compiling imported metadata to managed types and saving the result to a code file.</source>
          <target state="translated">Nell'esempio seguente viene illustrato l'utilizzo della classe derivata <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> per importare metadati utilizzando uno stato personalizzato, controllando la proprietà <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter.Errors%2A&gt;</ph>, compilando metadati importati in tipi gestiti e salvando il risultato in un file di codice.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.MetadataImporter.Errors">
          <source>Gets a value that indicates whether there were errors importing the metadata.</source>
          <target state="translated">Ottiene un valore che indica se si sono verificati errori durante l'importazione dei metadati.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.Errors">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataConversionError" /&gt;</ph> objects.</source>
          <target state="translated">Raccolta di oggetti <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataConversionError" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.Errors">
          <source>Always check the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.Errors%2A&gt;</ph> property after importing metadata and before using the metadata.</source>
          <target state="translated">Controllare sempre la proprietà <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.Errors%2A&gt;</ph> dopo l'importazione dei metadati e prima di utilizzarli.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts">
          <source>When overridden in a derived class, returns a collection of contracts imported from the metadata.</source>
          <target state="translated">Quando viene sottoposto a override in una classe derivata, restituisce una raccolta di contratti importati dai metadati.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts">
          <source>The contracts imported from the metadata.</source>
          <target state="translated">Contratti importati dai metadati.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>When overridden in a derived class, returns all endpoints in the metadata.</source>
          <target state="translated">Quando viene sottoposto a override in una classe derivata, restituisce tutti gli endpoint nei metadati.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> objects that are published by a service.</source>
          <target state="translated">Raccolta di oggetti <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> pubblicati da un servizio.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A&gt;</ph> method to return all endpoints in the imported metadata.</source>
          <target state="translated">Implementare il metodo <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A&gt;</ph> per restituire tutti gli endpoint nei metadati importati.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information.</source>
          <target state="translated">I metadati importati come endpoint del servizio non possono essere utilizzati per creare metadati di runtime o di esportazione perché gli endpoint importati non contengono informazioni sui tipi gestiti.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph> object using <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.GetContract%2A&gt;</ph>.</source>
          <target state="translated">Per utilizzare i metadati per creare un runtime del client o del servizio o per generare metadati, è necessario innanzitutto generare e compilare codice dai metadati e utilizzare tali informazioni sui tipi per creare un nuovo oggetto <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph> utilizzando <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.GetContract%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.MetadataImporter.KnownContracts">
          <source>Gets a dictionary of contracts by name that the importer knows about.</source>
          <target state="translated">Ottiene un dizionario di contratti in base al nome noto all'utilità di importazione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.KnownContracts">
          <source>A dictionary of contracts listed by XML qualified name.</source>
          <target state="translated">Dizionario di contratti elencati in base al nome XML completo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.KnownContracts">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A&gt;</ph> property to add or remove contract descriptions and their associated XML names that the importer can reference.</source>
          <target state="translated">Utilizzare la proprietà <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A&gt;</ph> per aggiungere o rimuovere le descrizioni dei contratti e i relativi nomi XML associati ai quali l'utilità di importazione può fare riferimento.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions">
          <source>Gets a collection of policy importers that the importer calls to process policy assertions.</source>
          <target state="translated">Ottiene una raccolta di utilità di importazione dei criteri chiamate dall'utilità di importazione per elaborare le asserzioni dei criteri.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions">
          <source>A collection of policy importers that the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataImporter" /&gt;</ph> uses to process policy assertions.</source>
          <target state="translated">Raccolta di utilità di importazione utilizzate da <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataImporter" /&gt;</ph> per elaborare le asserzioni dei criteri.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A&gt;</ph> property to add or remove policy importers that are invoked to process policy assertions in the metadata.</source>
          <target state="translated">Utilizzare la proprietà <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A&gt;</ph> per aggiungere o rimuovere utilità di importazione dei criteri richiamate per elaborare asserzioni di criteri nei metadati.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.MetadataImporter.State">
          <source>Gets or sets a collection of objects used in the importing of metadata.</source>
          <target state="translated">Ottiene o imposta una raccolta di oggetti utilizzata nell'importazione di metadati.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.State">
          <source>A dictionary of objects keyed by type.</source>
          <target state="translated">Dizionario di oggetti con chiave in base al tipo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.State">
          <source>Use the <ph id="ph1">`State`</ph> property to add or remove objects used in the importing of metadata.</source>
          <target state="translated">Utilizzare la proprietà <ph id="ph1">`State`</ph> per aggiungere o rimuovere oggetti utilizzati nell'importazione di metadati.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.State">
          <source>The following example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.State%2A&gt;</ph> property to add a custom <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType&gt;</ph> to import data structures in a particular way.</source>
          <target state="translated">Nell'esempio seguente viene illustrato l'utilizzo della proprietà <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.State%2A&gt;</ph> per aggiungere un oggetto <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType&gt;</ph> personalizzato al fine di importare strutture di dati in un modo particolare.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>