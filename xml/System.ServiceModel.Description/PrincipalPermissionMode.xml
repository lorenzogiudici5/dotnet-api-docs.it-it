<Type Name="PrincipalPermissionMode" FullName="System.ServiceModel.Description.PrincipalPermissionMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="934786ff06cfe618d94325aea85eda8de373b501" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37455846" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PrincipalPermissionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PrincipalPermissionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.PrincipalPermissionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum PrincipalPermissionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class PrincipalPermissionMode" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Imposta la modalità per i controlli delle autorizzazioni quando si utilizza la classe <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> per controllare l'accesso a un metodo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene applicata la classe <xref:System.Security.Permissions.PrincipalPermissionAttribute> a un metodo, la presente modalità specifica quale set di ruoli utilizzare per l'autorizzazione dell'accesso. Per impostazione predefinita, l'attributo utilizza gruppi di Windows (ad esempio `Administrator` o `Users`) per specificare il ruolo al quale è necessario che appartenga l'utente.  
  
 Per impostare la modalità a livello di programmazione, creare un'istanza della classe `ServiceHost`, quindi individuare la classe <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> nella raccolta dei comportamenti corrispondente e impostare la proprietà <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> sull'enumerazione appropriata. Nell'esempio seguente imposta la proprietà UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#1)]
 [!code-vb[PrincipalPermissionMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#1)]  
  
 È anche possibile impostare il comportamento nella configurazione aggiungendo un [ &lt;serviceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) per il [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) di un file di configurazione, come illustrato nel codice seguente.  
  
 [!code-csharp[PrincipalPermissionMode#10](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#10)]
 [!code-vb[PrincipalPermissionMode#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#10)]  
  
 L'enumerazione influisce su come l'attributo <xref:System.Security.Permissions.PrincipalPermissionAttribute> assegna l'autorizzazione a un utente quando viene applicato a un metodo. L'esempio seguente applica l'attributo a un metodo e richiede che l'utente appartenga al gruppo Users del computer. Questo codice funziona solo se la proprietà <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> è impostata su `UseWindowsGroup` (impostazione predefinita).  
  
 [!code-csharp[PrincipalPermissionMode#2](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#2)]
 [!code-vb[PrincipalPermissionMode#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#2)]  
  
## <a name="useaspnetroles"></a>UseAspNetRoles  
 Il valore UseAspNetRoles viene utilizzato per tutti i tipi di credenziali. Questa modalità consente a Windows Communication Foundation (WCF) per usare il provider di ruoli ASP.NET per prendere decisioni di autorizzazione.  
  
 Quando la credenziale di un servizio è un certificato X.509, è possibile impostare la proprietà `Name` della classe <xref:System.Security.Permissions.PrincipalPermissionAttribute> su una stringa che è costituita dai valori concatenati del campo Oggetto e del campo Identificazione digitale, come illustrato nell'esempio seguente.  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 La stringa concatenata è costituita dai valori dell'oggetto e dell'identificazione digitale separati da un punto e virgola e da uno spazio.  
  
 È inoltre possibile il campo Oggetto di un certificato sia impostato su una stringa vuota. In questo caso, è possibile impostare la proprietà `Name` su un punto e virgola seguito da un spazio e quindi dall'identificazione digitale, come illustrato nell'esempio seguente.  
  
 [!code-csharp[PrincipalPermissionMode#4](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#4)]
 [!code-vb[PrincipalPermissionMode#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#4)]  
  
 Se un provider di ruoli ASP.NET è presente, è inoltre possibile impostare la proprietà <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> su un ruolo nel database. Per impostazione predefinita, il database è rappresentato dalla classe <xref:System.Web.Security.SqlRoleProvider>. È inoltre possibile impostare un provider di ruoli personalizzato con la proprietà <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> della classe <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>. Il codice seguente consente di impostare il ruolo su `Administrators`. Si noti che è necessario che il provider di ruoli esegua il mapping dell'account utente a quel ruolo.  
  
 [!code-csharp[PrincipalPermissionMode#13](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#13)]
 [!code-vb[PrincipalPermissionMode#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#13)]  
  
 Per altre informazioni sul provider di ruoli ASP.NET, vedere [How To: utilizzo di gestione ruoli in ASP.NET 2.0](http://go.microsoft.com/fwlink/?LinkId=96692).  
  
 Per altre informazioni sull'utilizzo di WCF e il provider di ruoli, vedere [procedura: usare il Provider di ruoli ASP.NET con un servizio](~/docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md).  
  
## <a name="custom"></a>Custom (Personalizzati)  
 Quando la proprietà è impostata su Custom, è necessario fornire anche una classe personalizzata che implementa il <xref:System.IdentityModel.Policy.IAuthorizationPolicy> classe. Questa classe ha lo scopo di fornire la rappresentazione del chiamante `IPrincipal` all'interno della raccolta <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A>. È necessario che l'istanza `IPrincipal` venga memorizzata nella raccolta delle proprietà utilizzando la chiave stringa "Principal", come illustrato nell'esempio seguente.  
  
```  
evaluationContext.Properties["Principal"]=new CustomPrincipal(identity);  
```  
  
## <a name="background"></a>Sfondo  
 La sicurezza basata sui ruoli di [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] consente alle applicazioni di specificare le autorizzazioni tramite il codice. Specificando la richiesta <xref:System.Security.Permissions.PrincipalPermission>, la proprietà <xref:System.Threading.Thread.CurrentPrincipal%2A> deve soddisfare il requisito `PrincipalPermission`. Ad esempio, è necessario che l'utente faccia parte di un ruolo o un gruppo specifico  In caso contrario, il thread non viene autorizzato a eseguire il codice e viene generata un'eccezione. WCF fornisce un set di <xref:System.ServiceModel.Description.PrincipalPermissionMode> selezioni per specificare il <xref:System.Threading.Thread.CurrentPrincipal%2A> base <xref:System.Security.SecurityContext> conseguenza.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come specificare UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#7](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#7)]
 [!code-vb[PrincipalPermissionMode#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#7)]  
  
 Nell'esempio seguente viene illustrato come specificare personalizzata.  
  
 [!code-csharp[PrincipalPermissionMode#8](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#8)]
 [!code-vb[PrincipalPermissionMode#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Always = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberSignature Language="F#" Value="Always = 4" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Consente sempre all'utente di specificare una classe <see cref="T:System.Security.Principal.IPrincipal" /> per <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Custom = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberSignature Language="F#" Value="Custom = 3" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Consente all'utente di specificare una classe <see cref="T:System.Security.Principal.IPrincipal" /> personalizzata per la proprietà <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>La proprietà <see cref="P:System.Threading.Thread.CurrentPrincipal" /> non è impostata.</summary>
      </Docs>
    </Member>
    <Member MemberName="UseAspNetRoles">
      <MemberSignature Language="C#" Value="UseAspNetRoles" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseAspNetRoles = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberSignature Language="VB.NET" Value="UseAspNetRoles" />
      <MemberSignature Language="C++ CLI" Value="UseAspNetRoles" />
      <MemberSignature Language="F#" Value="UseAspNetRoles = 2" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>La proprietà <see cref="P:System.Threading.Thread.CurrentPrincipal" /> viene impostata in base al provider di ruoli [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] (<see cref="T:System.Web.Security.RoleProvider" />).</summary>
      </Docs>
    </Member>
    <Member MemberName="UseWindowsGroups">
      <MemberSignature Language="C#" Value="UseWindowsGroups" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseWindowsGroups = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="UseWindowsGroups" />
      <MemberSignature Language="C++ CLI" Value="UseWindowsGroups" />
      <MemberSignature Language="F#" Value="UseWindowsGroups = 1" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>La proprietà <see cref="P:System.Threading.Thread.CurrentPrincipal" /> viene impostata in base a Windows (<see cref="T:System.Security.Principal.WindowsPrincipal" />). Se l'identità dell'utente non è associata a un account di Windows, viene utilizzata l'identità anonima di Windows.</summary>
      </Docs>
    </Member>
  </Members>
</Type>