<Type Name="IWsdlImportExtension" FullName="System.ServiceModel.Description.IWsdlImportExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="faa33c2c4a70231f623e36d4b42a17c0594ade2a" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32690369" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWsdlImportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlImportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlImportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlImportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlImportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Implementare e allegare a un oggetto <see cref="T:System.ServiceModel.Description.WsdlImporter" /> per controllare come l'utilità di importazione esegue il mapping delle parti di linguaggio di descrizione dei servizi Web (WSDL, Web Services Description Language) a quelli di un oggetto <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementare l'interfaccia <xref:System.ServiceModel.Description.IWsdlImportExtension> per controllare il mapping tra WSDL e oggetti <xref:System.ServiceModel.Description.ServiceEndpoint> e <xref:System.ServiceModel.Description.ContractDescription>, in particolare durante la lettura di estensioni WSDL personalizzate per modificare le informazioni relative al contratto o all'endpoint. Allegare quindi l'oggetto <xref:System.ServiceModel.Description.IWsdlImportExtension> personalizzato a una classe <xref:System.ServiceModel.Description.WsdlImporter> a livello di programmazione o utilizzando un file di configurazione dell'applicazione. È inoltre possibile allegare personalizzato <xref:System.ServiceModel.Description.IWsdlImportExtension> oggetto interno <xref:System.ServiceModel.Description.WsdlImporter> utilizzato il [strumento ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) utilizzando un file di configurazione dell'applicazione.  
  
 Il metodo <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A> viene chiamato per importare un contratto.  
  
 Utilizzare il metodo <xref:System.ServiceModel.Description.IWsdlImportExtension.BeforeImport%2A> per modificare i metadati che vengono quindi importati negli oggetti <xref:System.ServiceModel.Description.ServiceEndpoint> e <xref:System.ServiceModel.Description.ContractDescription>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di <xref:System.ServiceModel.Description.IWsdlImportExtension> per aggiungere un' <xref:System.ServiceModel.Description.IServiceContractGenerationExtension?displayProperty=nameWithType> e un <xref:System.ServiceModel.Description.IOperationContractGenerationExtension?displayProperty=nameWithType> (il `WsdlDocumentationImporter`, in questo caso) per modificare codice client WCF generato a livello di interfaccia e operazione.  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 Nell'esempio di codice seguente viene illustrato come configurare il sistema metadati client per utilizzare l'interfaccia <xref:System.ServiceModel.Description.IWsdlImportExtension> personalizzata da un file di configurazione dell'applicazione.  
  
 [!code-xml[C_CustomWSDLExtensions#9](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.exe.config#9)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeforeImport">
      <MemberSignature Language="C#" Value="public void BeforeImport (System.Web.Services.Description.ServiceDescriptionCollection wsdlDocuments, System.Xml.Schema.XmlSchemaSet xmlSchemas, System.Collections.Generic.ICollection&lt;System.Xml.XmlElement&gt; policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeImport(class System.Web.Services.Description.ServiceDescriptionCollection wsdlDocuments, class System.Xml.Schema.XmlSchemaSet xmlSchemas, class System.Collections.Generic.ICollection`1&lt;class System.Xml.XmlElement&gt; policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlImportExtension.BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeforeImport (wsdlDocuments As ServiceDescriptionCollection, xmlSchemas As XmlSchemaSet, policy As ICollection(Of XmlElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforeImport(System::Web::Services::Description::ServiceDescriptionCollection ^ wsdlDocuments, System::Xml::Schema::XmlSchemaSet ^ xmlSchemas, System::Collections::Generic::ICollection&lt;System::Xml::XmlElement ^&gt; ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlDocuments" Type="System.Web.Services.Description.ServiceDescriptionCollection" />
        <Parameter Name="xmlSchemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="policy" Type="System.Collections.Generic.ICollection&lt;System.Xml.XmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="wsdlDocuments">Le descrizioni dei servizi da modificare.</param>
        <param name="xmlSchemas">La raccolta di schemi da utilizzare durante l'importazione.</param>
        <param name="policy">Le asserzioni di criteri utilizzate durante l'importazione.</param>
        <summary>Chiamato prima di importare documenti di metadati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I metodi <xref:System.ServiceModel.Description.IWsdlImportExtension.BeforeImport%2A> di tutti gli oggetti <xref:System.ServiceModel.Description.IWsdlImportExtension> registrati vengono chiamati prima di eseguire importazioni dai metadati forniti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportContract">
      <MemberSignature Language="C#" Value="public void ImportContract (System.ServiceModel.Description.WsdlImporter importer, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportContract(class System.ServiceModel.Description.WsdlImporter importer, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlImportExtension.ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportContract (importer As WsdlImporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportContract(System::ServiceModel::Description::WsdlImporter ^ importer, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.ServiceModel.Description.WsdlImporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" />
      </Parameters>
      <Docs>
        <param name="importer">L'utilità di importazione.</param>
        <param name="context">Il contesto di importazione da modificare.</param>
        <summary>Chiamato durante l'importazione di un contratto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A> viene chiamato durante l'importazione di un contratto. È possibile modificare il contratto o inserire gli altri comportamenti di esportazione, ad esempio gli oggetti <xref:System.ServiceModel.Description.IServiceContractGenerationExtension?displayProperty=nameWithType> e <xref:System.ServiceModel.Description.IOperationContractGenerationExtension?displayProperty=nameWithType> per modificare il codice generato per il contratto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di <xref:System.ServiceModel.Description.IWsdlImportExtension> per aggiungere un' <xref:System.ServiceModel.Description.IServiceContractGenerationExtension?displayProperty=nameWithType> e un <xref:System.ServiceModel.Description.IOperationContractGenerationExtension?displayProperty=nameWithType> (il `WsdlDocumentationImporter`, in questo caso) per modificare codice client WCF generato a livello di interfaccia e operazione.  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 Nell'esempio di codice seguente viene illustrato come configurare il sistema metadati client per utilizzare l'interfaccia <xref:System.ServiceModel.Description.IWsdlImportExtension> personalizzata da un file di configurazione dell'applicazione.  
  
 [!code-xml[C_CustomWSDLExtensions#9](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.exe.config#9)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoint">
      <MemberSignature Language="C#" Value="public void ImportEndpoint (System.ServiceModel.Description.WsdlImporter importer, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportEndpoint(class System.ServiceModel.Description.WsdlImporter importer, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportEndpoint (importer As WsdlImporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportEndpoint(System::ServiceModel::Description::WsdlImporter ^ importer, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.ServiceModel.Description.WsdlImporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
      </Parameters>
      <Docs>
        <param name="importer">L'utilità di importazione.</param>
        <param name="context">Il contesto di importazione da modificare.</param>
        <summary>Chiamato durante l'importazione di un endpoint.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A> viene chiamato durante l'importazione di un endpoint. Modificare le proprietà del contesto per personalizzare l'endpoint importato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>