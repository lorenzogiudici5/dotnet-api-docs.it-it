<Type Name="ClockController" FullName="System.Windows.Media.Animation.ClockController">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7f5db2fabcb7d8bd16865ae93253c3f12de7ee2" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52209607" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClockController : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClockController extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ClockController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClockController&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClockController sealed : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type ClockController = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Controlla in modo interattivo un oggetto <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare un <xref:System.Windows.Media.Animation.ClockController> per avviare, sospendere, riprendere, seek, ignorare, arrestare e rimuovere in modo interattivo un <xref:System.Windows.Media.Animation.Clock>. È possibile controllare solo in modo interattivo gli orologi di livello radice.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.Clock" />
    <altmember cref="P:System.Windows.Media.Animation.Clock.Controller" />
  </Docs>
  <Members>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="clockController.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imposta l'oggetto <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> di destinazione in modo che inizi al tick successivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo fa in modo che la destinazione <xref:System.Windows.Media.Animation.Clock> si comporta come se relativi <xref:System.Windows.Media.Animation.Timeline> dell'oggetto <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> sono state impostate per il tempo di tick successivo. La sequenza temporale dell'effettiva <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> impostazione viene ignorata (ma non modificata).  
  
 Questo metodo modifica dell'orologio di destinazione <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> a <xref:System.Windows.Media.Animation.ClockState.Active>. Il <xref:System.Windows.Media.Animation.ClockController.Begin%2A> (metodo) non lo riprende un orologio in pausa.  
  
 Questo metodo non ha effetto sull'albero di temporizzazione fino alla successiva che elaborazione di un segno di graduazione. Come effetto collaterale, gli eventi appropriati anche non essere generati fino a quel momento. Chiamando questo metodo attiva le <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> e <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> eventi.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Clock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.Clock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clock As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Clock { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.Animation.Clock" Usage="System.Windows.Media.Animation.ClockController.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il <see cref="T:System.Windows.Media.Animation.Clock" /> controllato da questo <see cref="T:System.Windows.Media.Animation.ClockController" />.</summary>
        <value>Il <see cref="T:System.Windows.Media.Animation.Clock" /> controllato da questo <see cref="T:System.Windows.Media.Animation.ClockController" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="clockController.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Arresta l'avanzamento del <see cref="T:System.Windows.Media.Animation.Clock" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile sospendere un <xref:System.Windows.Media.Animation.Clock> indipendentemente dal relativo stato corrente e la sospensione non modificherà lo stato corrente. Un orologio può essere sospeso durante <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, o <xref:System.Windows.Media.Animation.ClockState.Filling>. L'unico modo per riattivare un clock consiste nell'usare il <xref:System.Windows.Media.Animation.ClockController.Resume%2A> (metodo). La sospensione di un orologio in modo implicito sospende i relativi elementi figlio.  
  
 Chiamare questo metodo quando l'orologio di destinazione è già in pausa ha alcun effetto.  
  
 La sospensione di un trigger di orologio di <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> evento.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="clockController.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove il <see cref="T:System.Windows.Media.Animation.Clock" /> associato a questo <see cref="T:System.Windows.Media.Animation.ClockController" /> dalle proprietà che crea l’animazione. Il clock e gli elementi figlio non influiranno più su queste proprietà.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo attiva il <xref:System.Windows.Media.Animation.Clock.RemoveRequested> evento.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come rimuovere e controllare in modo interattivo un orologio.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="clockController.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consente a un oggetto <see cref="T:System.Windows.Media.Animation.Clock" /> precedentemente sospeso di riprendere l'avanzamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile sospendere o riprendere un <xref:System.Windows.Media.Animation.Clock> indipendentemente dal relativo stato corrente e la sospensione o ripresa non modificherà lo stato corrente. Un orologio può essere sospeso durante <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, o <xref:System.Windows.Media.Animation.ClockState.Filling>. L'unico modo per riprendere un orologio in pausa consiste nell'usare il <xref:System.Windows.Media.Animation.ClockController.Resume%2A> (metodo). Ripresa di un orologio in modo implicito riprende i relativi elementi figlio. Chiamando questo metodo su un orologio che è stata sospesa non ha alcun effetto.  
  
 Ripresa di un trigger di orologio in pausa il <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> evento.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">L'offset della ricerca, misurata in base all'ora dell'orologio di destinazione. Questo offset è relativo al valore <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> o <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> dell'orologio, a seconda del valore di <paramref name="origin" />.</param>
        <param name="origin">Un valore che indica se l'offset specificato è relativo all'enumerazione <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> o <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> dell'orologio di destinazione.</param>
        <summary>Cerca la proprietà <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> di destinazione in base al valore specificato quando si verifica il tick successivo. Se l'orologio di destinazione viene arrestato, la ricerca lo riattiva di nuovo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Seek operazioni non accettano il <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> oppure <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> in considerazione le impostazioni di temporale questa sequenza: l'orologio viene trattato come se la sequenza temporale abbia un <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> di 1 e nessun <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Questo metodo modifica l'orologio <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> a <xref:System.Windows.Media.Animation.ClockState.Active>. Questo metodo non ha effetto sull'albero di temporizzazione fino alla successiva che elaborazione di un segno di graduazione. Come effetto collaterale, gli eventi appropriati anche non essere generati fino a quel momento.  
  
 La ricerca di uno storyboard il <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> e <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventi.  
  
 Se l'orologio di destinazione dispone di figli, l'ora corrente viene aggiornato di conseguenza.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ricerca utilizzando un <xref:System.Windows.Media.Animation.ClockController>.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.TimeSeekOrigin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">L'offset della ricerca, misurata in base all'ora dell'orologio di destinazione. Questo offset è relativo al valore <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> o <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> dell'orologio, a seconda del valore di <paramref name="origin" />.</param>
        <param name="origin">Un valore che indica se l'offset specificato è relativo all'enumerazione <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> o <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> dell'orologio di destinazione.</param>
        <summary>Cerca immediatamente il <see cref="T:System.Windows.Media.Animation.Clock" /> di destinazione in base alla quantità specificata. Se l'orologio di destinazione viene arrestato, la ricerca lo riattiva di nuovo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Seek operazioni non accettano il <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> oppure <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> in considerazione le impostazioni di temporale questa sequenza: l'orologio viene trattato come se la sequenza temporale abbia un <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> di 1 e nessun <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> Allinea il tempo di ricercato dell'orologio con l'ultimo ciclo macchina. I valori vengono immediatamente aggiornati per riflettere le modifiche a causa dell'errore <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, anche se la schermata non rifletterà le modifiche fino al successivo aggiornamento dello schermo.  
  
 Se l'orologio di destinazione dispone di figli, l'ora corrente viene aggiornato di conseguenza.  
  
 Questo metodo modifica l'orologio <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> a <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 La ricerca di uno storyboard il <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> e <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventi.  
  
   
  
## Examples  
 L'esempio seguente illustra entrambi i <xref:System.Windows.Media.Animation.ClockController.Seek%2A> e <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> metodi di un <xref:System.Windows.Media.Animation.ClockController>.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="clockController.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sposta l'ora corrente dell'oggetto <see cref="T:System.Windows.Media.Animation.Clock" /> di destinazione alla fine del periodo attivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo fa avanzare dell'orologio di destinazione ora corrente alla fine del periodo attivo; a questo punto, il comportamento del clock è specificato dal <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> impostazione del relativo <xref:System.Windows.Media.Animation.Timeline>. Se la sequenza temporale <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> è impostata su <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, l'orologio viene compilata; se la proprietà è impostata su <xref:System.Windows.Media.Animation.FillBehavior.Stop>, viene arrestata l'orologio.  
  
 Questo metodo non ha effetto solo se l'orologio di destinazione <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> è <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Questo metodo non ha effetto sull'albero di temporizzazione fino alla successiva che elaborazione di un segno di graduazione. Come effetto collaterale, gli eventi appropriati anche non essere generati fino a quel momento.  
  
 Avanzamento uno storyboard per il riempimento del trigger periodo il <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> e <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la velocità interattiva dell'oggetto <see cref="T:System.Windows.Media.Animation.Clock" /> di destinazione.</summary>
        <value>Valore finito maggiore di zero che descrive la velocità interattiva dell'orologio di destinazione. Questo valore viene moltiplicato per il valore di <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> dell'oggetto <see cref="T:System.Windows.Media.Animation.Timeline" /> dell'orologio. Ad esempio, se il valore <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> della sequenza temporale è 0,5 e il valore <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> dell'oggetto <see cref="T:System.Windows.Media.Animation.ClockController" /> è 3,0, la sequenza temporale si sposta a 1,5 volte la velocità normale (0,5 * 3,0). Il valore predefinito è 1,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostazione di questa proprietà ha effetto fino al tick successivo. Se si imposta questa proprietà e quindi ottenere il relativo valore prima si verifica il tick successivo, si otterrà il valore precedente. Questa proprietà restituirà il nuovo valore dopo il tick successivo.  
  
 Impostazione di questa proprietà non modifica il valore della sequenza temporale di sottostante <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>.  
  
 Impostazione di questa proprietà attiva dell'orologio di destinazione <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> evento.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="clockController.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Arresta l'oggetto <see cref="T:System.Windows.Media.Animation.Clock" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo modifica dell'orologio di destinazione <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> a <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 Oggetto <xref:System.Windows.Media.Animation.Clock.Stopped%2A> orologio può essere riavviato usando il <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, o <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> (metodo).  
  
 Questo metodo non ha effetto sull'albero di temporizzazione fino alla successiva che elaborazione di un segno di graduazione. Come effetto collaterale, gli eventi appropriati anche non essere generati fino a quel momento.  
  
 L'arresto di un orologio il <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> e <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventi, ma non la <xref:System.Windows.Media.Animation.Clock.Completed> evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>