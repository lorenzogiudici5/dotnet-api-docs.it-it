<Type Name="ClockController" FullName="System.Windows.Media.Animation.ClockController">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6a94d8bd0079bc66770268c57d92f5d1bd9a1c57" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659815" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClockController : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClockController extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ClockController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClockController&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClockController sealed : System::Windows::Threading::DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Controlla in modo interattivo un oggetto <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare un <xref:System.Windows.Media.Animation.ClockController> per iniziare, sospendere, riprendere, cercare, ignorare, arrestare e rimuovere in modo interattivo un <xref:System.Windows.Media.Animation.Clock>. È possibile controllare solo in modo interattivo gli orologi di livello radice.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.Clock" />
    <altmember cref="P:System.Windows.Media.Animation.Clock.Controller" />
  </Docs>
  <Members>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imposta l'oggetto <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> di destinazione in modo che inizi al tick successivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo determina la destinazione <xref:System.Windows.Media.Animation.Clock> si comporterà come se il relativo <xref:System.Windows.Media.Animation.Timeline> dell'oggetto <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> sono state impostate sull'ora del segno di graduazione successivo. La sequenza temporale dell'effettiva <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> impostazione viene ignorata (ma non modificata).  
  
 Questo metodo modifica dell'orologio di destinazione <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> a <xref:System.Windows.Media.Animation.ClockState.Active>. Il <xref:System.Windows.Media.Animation.ClockController.Begin%2A> metodo riprende un clock sospeso.  
  
 Questo metodo non ha effetto sull'albero di temporizzazione fino alla successiva che elaborazione di un segno di graduazione. Come effetto collaterale, gli eventi appropriati anche non essere generati fino a quel momento. Chiamare questo metodo avvia la <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> e <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> eventi.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Clock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.Clock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clock As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Clock { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il <see cref="T:System.Windows.Media.Animation.Clock" /> controllato da questo <see cref="T:System.Windows.Media.Animation.ClockController" />.</summary>
        <value>Il <see cref="T:System.Windows.Media.Animation.Clock" /> controllato da questo <see cref="T:System.Windows.Media.Animation.ClockController" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Arresta l’avanzamento del <see cref="T:System.Windows.Media.Animation.Clock" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile sospendere un <xref:System.Windows.Media.Animation.Clock> indipendentemente dal relativo stato corrente e la sospensione non modificherà lo stato corrente. Un clock può essere sospeso mentre <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, o <xref:System.Windows.Media.Animation.ClockState.Filling>. L'unico modo per riattivare un clock è utilizzando il <xref:System.Windows.Media.Animation.ClockController.Resume%2A> metodo. La sospensione di un orologio in modo implicito, viene sospeso nei relativi elementi figlio.  
  
 Chiamare questo metodo quando l'orologio di destinazione è già in pausa non ha alcun effetto.  
  
 La sospensione di un clock genera il <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> evento.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove il <see cref="T:System.Windows.Media.Animation.Clock" /> associato a questo <see cref="T:System.Windows.Media.Animation.ClockController" /> dalle proprietà che crea l’animazione. Il clock e gli elementi figlio non influiranno più su queste proprietà.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo attiva il <xref:System.Windows.Media.Animation.Clock.RemoveRequested> evento.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come rimuovere e controllare in modo interattivo un orologio.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abilita l’avanzamento di un <see cref="T:System.Windows.Media.Animation.Clock" /> precedentemente messo in pausa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile sospendere o riprendere un <xref:System.Windows.Media.Animation.Clock> indipendentemente dal relativo stato corrente e la sospensione o ripresa non modificherà lo stato corrente. Un clock può essere sospeso mentre <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, o <xref:System.Windows.Media.Animation.ClockState.Filling>. È l'unico modo per riprendere un clock sospeso utilizzando il <xref:System.Windows.Media.Animation.ClockController.Resume%2A> metodo. Ripresa in modo implicito un orologio riprende nei relativi elementi figlio. Chiamare questo metodo su un orario in formato non sospeso non ha alcun effetto.  
  
 Ripresa di un trigger di clock messo in pausa il <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> evento.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">L'offset della ricerca, misurata in base all'ora dell'orologio di destinazione. Questo offset è relativo al valore <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> o <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> dell'orologio, a seconda del valore di <c>origin</c>.</param>
        <param name="origin">Un valore che indica se l'offset specificato è relativo al <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> o alla <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> del clock di destinazione.</param>
        <summary>Cerca il <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> di destinazione in base alla quantità specificata quando si verifica il successivo ciclo macchina. Se l'orologio di destinazione viene arrestato, la ricerca lo riattiva di nuovo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ricerca operazioni non accettano la <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> o <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> in considerazione le impostazioni di temporale questa sequenza: l'orologio viene trattato come se la sequenza temporale abbia un <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 e n <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Questo metodo modifica l'orologio <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> a <xref:System.Windows.Media.Animation.ClockState.Active>. Questo metodo non ha effetto sull'albero di temporizzazione fino alla successiva che elaborazione di un segno di graduazione. Come effetto collaterale, gli eventi appropriati anche non essere generati fino a quel momento.  
  
 La ricerca di uno storyboard di <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> e <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventi.  
  
 Se l'orologio di destinazione dispone di figli, viene aggiornato di conseguenza l'ora corrente.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ricerca utilizzando un <xref:System.Windows.Media.Animation.ClockController>.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.TimeSeekOrigin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">L'offset della ricerca, misurata in base all'ora dell'orologio di destinazione. Questo offset è relativo al valore <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> o <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> dell'orologio, a seconda del valore di <c>origin</c>.</param>
        <param name="origin">Un valore che indica se l'offset specificato è relativo al <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> o alla <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> del clock di destinazione.</param>
        <summary>Cerca immediatamente il <see cref="T:System.Windows.Media.Animation.Clock" /> di destinazione in base alla quantità specificata. Se l'orologio di destinazione viene arrestato, la ricerca lo riattiva di nuovo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ricerca operazioni non accettano la <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> o <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> in considerazione le impostazioni di temporale questa sequenza: l'orologio viene trattato come se la sequenza temporale abbia un <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 e n <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> Allinea il tempo ricercato del clock con l'ultimo ciclo macchina. I valori vengono immediatamente aggiornati per riflettere le modifiche a causa di <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, anche se la schermata non rifletterà le modifiche fino a quando gli aggiornamenti dello schermo.  
  
 Se l'orologio di destinazione dispone di figli, viene aggiornato di conseguenza l'ora corrente.  
  
 Questo metodo modifica l'orologio <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> a <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 La ricerca di uno storyboard di <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> e <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventi.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato il <xref:System.Windows.Media.Animation.ClockController.Seek%2A> e <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> metodi di un <xref:System.Windows.Media.Animation.ClockController>.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sposta il tempo corrente del <see cref="T:System.Windows.Media.Animation.Clock" /> di destinazione alla fine del periodo di attività.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo fa avanzare l'orologio di destinazione ora corrente alla fine del periodo attivo; a questo punto, il comportamento del clock è specificato da di <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> l'impostazione del relativo <xref:System.Windows.Media.Animation.Timeline>. Se la sequenza temporale <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> è impostata su <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, riempie l'orologio; se la proprietà è impostata su <xref:System.Windows.Media.Animation.FillBehavior.Stop>, interrompe l'orologio.  
  
 Questo metodo non ha effetto solo se l'orologio di destinazione <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> è <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Questo metodo non ha effetto sull'albero di temporizzazione fino alla successiva che elaborazione di un segno di graduazione. Come effetto collaterale, gli eventi appropriati anche non essere generati fino a quel momento.  
  
 Spostare uno storyboard per il riempimento trigger periodo il <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> e <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la velocità interattiva del <see cref="T:System.Windows.Media.Animation.Clock" /> di destinazione.</summary>
        <value>Valore finito maggiore di zero che descrive la velocità interattiva dell'orologio di destinazione. Questo valore viene moltiplicato per il valore di <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> della <see cref="T:System.Windows.Media.Animation.Timeline" /> del clock. Ad esempio, se <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> della sequenza temporale è 0,5 e <see cref="T:System.Windows.Media.Animation.ClockController" /> dell'oggetto <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> è 3,0, la sequenza temporale si sposta a una velocità che è 1,5 volte (0,5 * 3,0) quella normale. Il valore predefinito è 1,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostazione di questa proprietà non ha alcun effetto fino a quando il tick successivo. Se si imposta questa proprietà e quindi ottenere il relativo valore prima si verifica il tick successivo, si otterrà il valore precedente. Questa proprietà restituirà il nuovo valore dopo il tick successivo.  
  
 Impostazione di questa proprietà non modifica il valore della sequenza temporale sottostante <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>.  
  
 L'impostazione di questa proprietà attiva dell'orologio di destinazione <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> evento.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Arresta il <see cref="T:System.Windows.Media.Animation.Clock" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo modifica dell'orologio di destinazione <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> a <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 Oggetto <xref:System.Windows.Media.Animation.Clock.Stopped%2A> clock può essere riavviato utilizzando il <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, o <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> metodo.  
  
 Questo metodo non ha effetto sull'albero di temporizzazione fino alla successiva che elaborazione di un segno di graduazione. Come effetto collaterale, gli eventi appropriati anche non essere generati fino a quel momento.  
  
 L'arresto di un orologio di <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> e <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventi, ma non il <xref:System.Windows.Media.Animation.Clock.Completed> evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>