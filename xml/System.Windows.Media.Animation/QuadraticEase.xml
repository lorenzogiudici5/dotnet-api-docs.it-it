<Type Name="QuadraticEase" FullName="System.Windows.Media.Animation.QuadraticEase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="678732977c54703406ed17f86bcc07739e061892" />
    <Meta Name="ms.sourcegitcommit" Value="acac931205d35ffca255adc91935b79b098a7a7a" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/01/2018" />
    <Meta Name="ms.locfileid" Value="39394037" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class QuadraticEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QuadraticEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.QuadraticEase" />
  <TypeSignature Language="VB.NET" Value="Public Class QuadraticEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class QuadraticEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <TypeSignature Language="F#" Value="type QuadraticEase = class&#xA;    inherit EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta una funzione di interpolazione che crea un'animazione che accelera e/o decelera usando la formula *f*(*t*) = *t*<sup>2</sup></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile controllare se l'animazione accelera, rallenta, o entrambi, specificando il <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>. Nel grafico seguente illustra i diversi valori della <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, dove *f*(*t*) rappresenta l'avanzamento dell'animazione e *t* rappresenta l'ora.  
  
 ![QuadraticEase con grafici di EasingMode diversi](~/add/media/quadraticease-graph.png "QuadraticEase con grafici di EasingMode diversi")  
  
 La formula usata per questa funzione è il seguente.  
  
 *f*(*t*) = *t*<sup>2</sup>  
  
> [!NOTE]
>  È possibile usare <xref:System.Windows.Media.Animation.PowerEase> per creare lo stesso comportamento <xref:System.Windows.Media.Animation.CubicEase>, <xref:System.Windows.Media.Animation.QuadraticEase>, <xref:System.Windows.Media.Animation.QuarticEase>, e <xref:System.Windows.Media.Animation.QuinticEase> usando la <xref:System.Windows.Media.Animation.PowerEase.Power%2A> proprietà. Ad esempio, se si desidera utilizzare <xref:System.Windows.Media.Animation.PowerEase> per sostituire <xref:System.Windows.Media.Animation.CubicEase>, specificare un <xref:System.Windows.Media.Animation.PowerEase.Power%2A> valore 3.  
  
 Esistono diverse altre funzioni di interpolazione oltre <xref:System.Windows.Media.Animation.QuadraticEase>.
Oltre a usare le funzioni di interpolazione incluse in fase di esecuzione, è possibile creare funzioni di interpolazione personalizzate ereditando da <xref:System.Windows.Media.Animation.EasingFunctionBase>.  
  
## <a name="xaml-object-element-usage"></a>Utilizzo della sintassi XAML per gli elementi oggetto  
  
```xaml
<QuadraticEase .../>  
```  
  
   
  
## Examples  
 L'esempio seguente applica un' <xref:System.Windows.Media.Animation.QuadraticEase> funzione di interpolazione un <xref:System.Windows.Media.Animation.DoubleAnimation> per creare un'animazione che decelera.  
  
 [!code-xaml[QuadraticEase#QuadraticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/quadraticease/CS/window1.xaml#quadraticease)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuadraticEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.QuadraticEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QuadraticEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.Animation.QuadraticEase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.QuadraticEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="quadraticEase.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una nuova istanza della classe derivata da <see cref="T:System.Windows.Freezable" />. Quando si crea una classe derivata, è necessario eseguire l'override di questo metodo.</summary>
        <returns>Nuova istanza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Classi di animazione ereditano indirettamente da <xref:System.Windows.Freezable>. Per questo motivo, è necessario eseguire l'override di <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> metodo per costruire un oggetto di animazione personalizzata.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione tipica delle <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.QuadraticEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberSignature Language="F#" Value="override this.EaseInCore : double -&gt; double" Usage="quadraticEase.EaseInCore normalizedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">Tempo normalizzato (avanzamento) dell'animazione.</param>
        <summary>Fornisce la parte logica della funzione di interpolazione di cui è possibile eseguire l'override per produrre la modalità <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> della funzione di interpolazione personalizzata.</summary>
        <returns>Valore double che rappresenta lo stato di avanzamento trasformato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di trasformare il tempo normalizzato per controllare la velocità di un'animazione per il <xref:System.Windows.Media.Animation.EasingMode.EaseIn> maiuscole di <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  
  
 È necessario specificare solo la funzione di interpolazione per il <xref:System.Windows.Media.Animation.EasingMode.EaseIn> caso poiché l'implementazione del <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> metodo trasformazioni `normalizedTime` per il <xref:System.Windows.Media.Animation.EasingMode.EaseOut> e <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> casi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>