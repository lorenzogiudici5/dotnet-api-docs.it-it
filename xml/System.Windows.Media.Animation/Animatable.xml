<Type Name="Animatable" FullName="System.Windows.Media.Animation.Animatable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8ea9713148e10c8f9a95421b6bcd7b78a6cb4d56" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659865" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Animatable : System.Windows.Freezable, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Animatable extends System.Windows.Freezable implements class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Animatable&#xA;Inherits Freezable&#xA;Implements IAnimatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Animatable abstract : System::Windows::Freezable, System::Windows::Media::Animation::IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="59036-101">Classe astratta che fornisce il supporto per le animazioni.</span>
      <span class="sxs-lookup">
        <span data-stu-id="59036-101">Abstract class that provides animation support.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Animatable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Animatable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59036-102">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.Animation.Animatable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-102">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Animatable" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59036-103">Aggiunge un'animazione all'oggetto <see cref="T:System.Windows.DependencyProperty" /> specificato utilizzando l'oggetto <see cref="T:System.Windows.Media.Animation.AnimationClock" /> indicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-103">Animates the specified <see cref="T:System.Windows.DependencyProperty" /> using the specified <see cref="T:System.Windows.Media.Animation.AnimationClock" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="59036-104">Proprietà a cui applicare l'animazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-104">The property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="59036-105">Clock su cui basare l'animazione aggiunta alla proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-105">The clock with which to animate the specified property.</span>
          </span>
          <span data-ttu-id="59036-106">Se <c>clock</c> è <see langword="null" />, tutte le animazioni verranno rimosse dalla proprietà specificata (ma non interrotte).</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-106">If <c>clock</c> is <see langword="null" />, all animations will be removed from the specified property (but not stopped).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59036-107">Applica un oggetto <see cref="T:System.Windows.Media.Animation.AnimationClock" /> all'oggetto <see cref="T:System.Windows.DependencyProperty" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-107">Applies an <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to the specified <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
          <span data-ttu-id="59036-108">Se alla proprietà è già stata aggiunta un'animazione, viene utilizzato il comportamento uniforme dell'oggetto <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-108">If the property is already animated, the <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> handoff behavior is used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59036-109">Si noti che l'utilizzo di questo metodo per rimuovere i clock da una proprietà comporta l'interruzione di tali clock.</span><span class="sxs-lookup"><span data-stu-id="59036-109">Note that using this method to removing clocks from a property does not stop those clocks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="59036-110">Proprietà a cui applicare l'animazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-110">The property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="59036-111">Clock su cui basare l'animazione aggiunta alla proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-111">The clock with which to animate the specified property.</span>
          </span>
          <span data-ttu-id="59036-112">Se <c>handoffBehavior</c> è <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> e <c>clock</c> e <see langword="null" />, tutte le animazioni verranno rimosse dalla proprietà specificata (ma non interrotte).</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-112">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and <c>clock</c> is <see langword="null" />, all animations will be removed from the specified property (but not stopped).</span>
          </span>
          <span data-ttu-id="59036-113">Se <c>handoffBehavior</c> è <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /> e clock è <see langword="null" />, questo metodo non ha effetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-113">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /> and clock is <see langword="null" />, this method has no effect.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="59036-114">Valore che specifica il modo in cui la nuova animazione deve interagire con tutte le animazioni correnti che già influiscono sul valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-114">A value that specifies how the new animation should interact with any current animations already affecting the property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59036-115">Applica un oggetto <see cref="T:System.Windows.Media.Animation.AnimationClock" /> all'oggetto <see cref="T:System.Windows.DependencyProperty" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-115">Applies an <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to the specified <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
          <span data-ttu-id="59036-116">Se alla proprietà è già stata aggiunta un'animazione, viene utilizzato l'oggetto <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-116">If the property is already animated, the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> is used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59036-117">Si noti che l'utilizzo di questo metodo per rimuovere gli orologi da una proprietà comporta l'interruzione di tali clock.</span><span class="sxs-lookup"><span data-stu-id="59036-117">Note that using this method to remove clocks from a property does not stop those clocks.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="59036-118">Utilizzo di Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="59036-118">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="59036-119">Quando si applica un <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, o <xref:System.Windows.Media.Animation.AnimationClock> a una proprietà utilizzando il <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, qualsiasi <xref:System.Windows.Media.Animation.Clock> gli oggetti precedentemente associati a tale proprietà continueranno a utilizzare le risorse di sistema in caso il sistema di temporizzazione non rimuovere automaticamente questi orologi.</span><span class="sxs-lookup"><span data-stu-id="59036-119">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="59036-120">Per evitare problemi di prestazioni quando si applica un numero elevato di clock utilizzando <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, è necessario rimuovere clock di composizione dalla proprietà animata dopo il completamento.</span><span class="sxs-lookup"><span data-stu-id="59036-120">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="59036-121">Esistono diverse modalità di rimozione di un orologio.</span><span class="sxs-lookup"><span data-stu-id="59036-121">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="59036-122">Per rimuovere tutti gli orologi da una proprietà, utilizzare il <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> o <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> metodo dell'oggetto animato.</span><span class="sxs-lookup"><span data-stu-id="59036-122">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="59036-123">Specificare la proprietà viene aggiunta un'animazione come primo parametro, e `null` come il secondo.</span><span class="sxs-lookup"><span data-stu-id="59036-123">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="59036-124">In questo modo tutti gli orologi dell'animazione vengono rimossi dalla proprietà.</span><span class="sxs-lookup"><span data-stu-id="59036-124">This will remove all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="59036-125">Per rimuovere un oggetto specifico <xref:System.Windows.Media.Animation.AnimationClock> da un elenco di orologi, utilizzare il <xref:System.Windows.Media.Animation.Clock.Controller%2A> proprietà del <xref:System.Windows.Media.Animation.AnimationClock> per recuperare un <xref:System.Windows.Media.Animation.ClockController>, quindi chiamare il <xref:System.Windows.Media.Animation.ClockController.Remove%2A> metodo il <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="59036-125">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="59036-126">Ciò avviene in genere il <xref:System.Windows.Media.Animation.Clock.Completed> gestore eventi per un orologio.</span><span class="sxs-lookup"><span data-stu-id="59036-126">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="59036-127">Si noti che solo i clock radice possono essere controllati da un <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> proprietà di un clock figlio restituirà `null`.</span><span class="sxs-lookup"><span data-stu-id="59036-127">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`.</span></span> <span data-ttu-id="59036-128">Si noti inoltre che il <xref:System.Windows.Media.Animation.Clock.Completed> evento non verrà chiamato se la durata effettiva dell'orologio è infinita.</span><span class="sxs-lookup"><span data-stu-id="59036-128">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="59036-129">In tal caso, l'utente sarà necessario determinare quando chiamare <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="59036-129">In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="59036-130">Si tratta principalmente di un problema relativo alle animazioni su oggetti di lunga durata.</span><span class="sxs-lookup"><span data-stu-id="59036-130">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="59036-131">Quando un oggetto viene raccolto nel Garbage Collector, anche gli orologi vengono disconnessi e raccolti nel Garbage Collector stesso.</span><span class="sxs-lookup"><span data-stu-id="59036-131">When an object is garbage collected, its clocks will also be disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="59036-132">Per ulteriori informazioni sugli oggetti clock, vedere il [animazione e temporizzazione System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="59036-132">For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59036-133">Nell'esempio seguente viene illustrato come applicare gli orologi di animazione con altro <xref:System.Windows.Media.Animation.HandoffBehavior> impostazioni.</span><span class="sxs-lookup"><span data-stu-id="59036-133">The following example shows how to apply animation clocks using different <xref:System.Windows.Media.Animation.HandoffBehavior> settings.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59036-134">Applica un'animazione all'oggetto <see cref="T:System.Windows.DependencyProperty" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-134">Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="59036-135">Proprietà a cui applicare l'animazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-135">The property to animate.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="59036-136">Animazione applicata alla proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-136">The animation used to animate the specified property.</span>
          </span>
          <span data-ttu-id="59036-137">Se il valore di <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> dell'animazione è <see langword="null" />, tutte le animazioni correnti verranno rimosse e verrà mantenuto il valore attuale della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-137">If the animation's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is <see langword="null" />, any current animations will be removed and the current value of the property will be held.</span>
          </span>
          <span data-ttu-id="59036-138">Se <c>animation</c> è <see langword="null" />, tutte le animazioni verranno rimosse dalla proprietà e verrà ripristinato il valore di base della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-138">If <c>animation</c> is <see langword="null" />, all animations will be removed from the property and the property value will revert back to its base value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59036-139">Applica un'animazione all'oggetto <see cref="T:System.Windows.DependencyProperty" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-139">Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
          <span data-ttu-id="59036-140">L'animazione viene avviata quando viene eseguito il rendering del fotogramma successivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-140">The animation is started when the next frame is rendered.</span>
          </span>
          <span data-ttu-id="59036-141">Se alla proprietà specificata è già stata aggiunta un'animazione, viene utilizzato il comportamento uniforme dell'oggetto <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-141">If the specified property is already animated, the <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> handoff behavior is used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59036-142">Se l'animazione è un <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> che è maggiore di zero, verrà avviata dopo tale periodo di tempo trascorso dal momento in cui viene eseguito il rendering del fotogramma successivo.</span><span class="sxs-lookup"><span data-stu-id="59036-142">If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="59036-143">Proprietà a cui applicare l'animazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-143">The property to animate.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="59036-144">Animazione applicata alla proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-144">The animation used to animate the specified property.</span>
          </span>
          <span data-ttu-id="59036-145">Se <c>handoffBehavior</c> è <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> e il valore di <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> dell'animazione è <see langword="null" />, tutte le animazioni correnti verranno rimosse e verrà mantenuto il valore attuale della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-145">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and the animation's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is <see langword="null" />, any current animations will be removed and the current value of the property will be held.</span>
          </span>
          <span data-ttu-id="59036-146">Se <c>handoffBehavior</c> è <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> e <c>animation</c> è un riferimento <see langword="null" />, tutte le animazioni verranno rimosse dalla proprietà e verrà ripristinato il valore di base della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-146">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and <c>animation</c> is a <see langword="null" /> reference, all animations will be removed from the property and the property value will revert back to its base value.</span>
          </span>
          <span data-ttu-id="59036-147">Se <c>handoffBehavior</c> è <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" />, questo metodo non avrà nessun effetto se il valore dell'animazione o del relativo oggetto <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-147">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" />, this method will have no effect if the animation or its <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is <see langword="null" />.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="59036-148">Valore che specifica il modo in cui la nuova animazione deve interagire con tutte le animazioni correnti che già influiscono sul valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-148">A value that specifies how the new animation should interact with any current animations already affecting the property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59036-149">Applica un'animazione all'oggetto <see cref="T:System.Windows.DependencyProperty" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-149">Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
          <span data-ttu-id="59036-150">L'animazione viene avviata quando viene eseguito il rendering del fotogramma successivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-150">The animation is started when the next frame is rendered.</span>
          </span>
          <span data-ttu-id="59036-151">Se alla proprietà specificata è già stata aggiunta un'animazione, viene utilizzato l'oggetto <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-151">If the specified property is already animated, the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> is used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59036-152">Se l'animazione è un <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> che è maggiore di zero, verrà avviata dopo tale periodo di tempo trascorso dal momento in cui viene eseguito il rendering del fotogramma successivo.</span><span class="sxs-lookup"><span data-stu-id="59036-152">If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="59036-153">Utilizzo di Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="59036-153">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="59036-154">Quando si applica un <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, o <xref:System.Windows.Media.Animation.AnimationClock> a una proprietà utilizzando il <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, qualsiasi <xref:System.Windows.Media.Animation.Clock> gli oggetti precedentemente associati a tale proprietà continueranno a utilizzare le risorse di sistema in caso il sistema di temporizzazione non rimuovere automaticamente questi orologi.</span><span class="sxs-lookup"><span data-stu-id="59036-154">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="59036-155">Per evitare problemi di prestazioni quando si applica un numero elevato di clock utilizzando <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, è necessario rimuovere clock di composizione dalla proprietà animata dopo il completamento.</span><span class="sxs-lookup"><span data-stu-id="59036-155">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="59036-156">Esistono diverse modalità di rimozione di un orologio.</span><span class="sxs-lookup"><span data-stu-id="59036-156">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="59036-157">Per rimuovere tutti gli orologi da una proprietà, utilizzare il <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> o <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> metodo dell'oggetto animato.</span><span class="sxs-lookup"><span data-stu-id="59036-157">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="59036-158">Specificare la proprietà viene aggiunta un'animazione come primo parametro, e `null` come il secondo.</span><span class="sxs-lookup"><span data-stu-id="59036-158">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="59036-159">In questo modo tutti gli orologi dell'animazione vengono rimossi dalla proprietà.</span><span class="sxs-lookup"><span data-stu-id="59036-159">This will remove all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="59036-160">Per rimuovere un oggetto specifico <xref:System.Windows.Media.Animation.AnimationClock> da un elenco di orologi, utilizzare il <xref:System.Windows.Media.Animation.Clock.Controller%2A> proprietà del <xref:System.Windows.Media.Animation.AnimationClock> per recuperare un <xref:System.Windows.Media.Animation.ClockController>, quindi chiamare il <xref:System.Windows.Media.Animation.ClockController.Remove%2A> metodo il <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="59036-160">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="59036-161">Ciò avviene in genere il <xref:System.Windows.Media.Animation.Clock.Completed> gestore eventi per un orologio.</span><span class="sxs-lookup"><span data-stu-id="59036-161">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="59036-162">Si noti che solo i clock radice possono essere controllati da un <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> proprietà di un clock figlio restituirà `null`.</span><span class="sxs-lookup"><span data-stu-id="59036-162">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`.</span></span> <span data-ttu-id="59036-163">Si noti inoltre che il <xref:System.Windows.Media.Animation.Clock.Completed> evento non verrà chiamato se la durata effettiva dell'orologio è infinita.</span><span class="sxs-lookup"><span data-stu-id="59036-163">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="59036-164">In tal caso, l'utente sarà necessario determinare quando chiamare <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="59036-164">In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="59036-165">Si tratta principalmente di un problema relativo alle animazioni su oggetti di lunga durata.</span><span class="sxs-lookup"><span data-stu-id="59036-165">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="59036-166">Quando un oggetto viene raccolto nel Garbage Collector, anche gli orologi vengono disconnessi e raccolti nel Garbage Collector stesso.</span><span class="sxs-lookup"><span data-stu-id="59036-166">When an object is garbage collected, its clocks will also be disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="59036-167">Per ulteriori informazioni sugli oggetti clock, vedere il [animazione e temporizzazione System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="59036-167">For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59036-168">Nell'esempio seguente viene illustrato come applicare le animazioni utilizzando diversi <xref:System.Windows.Media.Animation.HandoffBehavior> impostazioni.</span><span class="sxs-lookup"><span data-stu-id="59036-168">The following example shows how to apply animations using different <xref:System.Windows.Media.Animation.HandoffBehavior> settings.</span></span>  
  
 [!code-cpp[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/cpp/VS_Snippets_Wpf/animateproperty/CPP/InteractiveExample.cpp#interactiveanimationexamplewholepage)]
 [!code-csharp[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animateproperty/CSharp/InteractiveExample.cs#interactiveanimationexamplewholepage)]
 [!code-vb[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animateproperty/VisualBasic/InteractiveExample.vb#interactiveanimationexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Animatable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Animatable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Animatable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Animatable ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Animatable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59036-169">Crea un clone modificabile di questo oggetto <see cref="T:System.Windows.Media.Animation.Animatable" />, eseguendo copie complete dei valori dell'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-169">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Animatable" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="59036-170">Durante la copia delle proprietà di dipendenza di questo oggetto, questo metodo consente di copiare i riferimenti di risorsa e le associazioni dati (che potrebbero non essere più risolti), ma non le animazioni né i relativi valori correnti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-170">When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59036-171">Clone modificabile di questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-171">A modifiable clone of this instance.</span>
          </span>
          <span data-ttu-id="59036-172">Il clone restituito è effettivamente una copia completa dell'oggetto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-172">The returned clone is effectively a deep copy of the current object.</span>
          </span>
          <span data-ttu-id="59036-173">Il valore della proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> del clone è **false**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-173">The clone's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is **false**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59036-174">Il <xref:System.Windows.Media.Animation.Animatable.Clone%2A> metodo può essere utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti.</span><span class="sxs-lookup"><span data-stu-id="59036-174">The <xref:System.Windows.Media.Animation.Animatable.Clone%2A> method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects.</span></span> <span data-ttu-id="59036-175">Per comodità, questo metodo nasconde ereditato <xref:System.Windows.Freezable.Clone%2A> metodo per fornire un'implementazione fortemente tipizzata.</span><span class="sxs-lookup"><span data-stu-id="59036-175">For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="59036-176">
            <see langword="true" /> se questo metodo deve determinare semplicemente se questa istanza può essere bloccata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-176">
              <see langword="true" /> if this method should simply determine whether this instance can be frozen.</span>
          </span>
          <span data-ttu-id="59036-177">
            <see langword="false" /> se questa istanza deve bloccare se stessa quando viene chiamato questo metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-177">
              <see langword="false" /> if this instance should actually freeze itself when this method is called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59036-178">Rende immodificabile questo oggetto <see cref="T:System.Windows.Media.Animation.Animatable" /> o determina se l'oggetto può essere reso immodificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-178">Makes this <see cref="T:System.Windows.Media.Animation.Animatable" /> object unmodifiable or determines whether it can be made unmodifiable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59036-179">Se <paramref name="isChecking" /> è <see langword="true" />, il metodo restituisce <see langword="true" /> se l'oggetto <see cref="T:System.Windows.Media.Animation.Animatable" /> può essere reso immodificabile. In caso contrario, il metodo restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-179">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if this <see cref="T:System.Windows.Media.Animation.Animatable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
          <span data-ttu-id="59036-180">Se <paramref name="isChecking" /> è <see langword="false" />, il metodo restituisce <see langword="true" /> se l'oggetto <see cref="T:System.Windows.Media.Animation.Animatable" /> attualmente è immodificabile o <see langword="false" /> se non può essere reso immodificabile, con l'effetto collaterale di aver iniziato a modificare lo stato bloccato dell'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-180">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if this <see cref="T:System.Windows.Media.Animation.Animatable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59036-181">Questo metodo restituirà **false** quando <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> è **true**.</span><span class="sxs-lookup"><span data-stu-id="59036-181">This method will return **false** when <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> is **true**.</span></span>  
  
 <span data-ttu-id="59036-182">Non chiamare questo metodo direttamente (tranne quando chiamata in un'implementazione di base).</span><span class="sxs-lookup"><span data-stu-id="59036-182">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="59036-183">Questo metodo viene chiamato internamente da <xref:System.Windows.Freezable.CanFreeze%2A> (con `isChecking` uguale a `true`) e <xref:System.Windows.Freezable.Freeze%2A> (con `isChecking` uguale a `false`).</span><span class="sxs-lookup"><span data-stu-id="59036-183">This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="59036-184">Le classi che derivano da <see cref="T:System.Windows.Media.Animation.Animatable" /> deve eseguire l'override di questo metodo quando la classe contiene i dati che non vengono archiviati utilizzando le proprietà di dipendenza.</span>
            <span class="sxs-lookup">
              <span data-stu-id="59036-184">Classes that derive from <see cref="T:System.Windows.Media.Animation.Animatable" /> must override this method when the class contains data that is not stored using dependency properties.</span>
            </span>
            <span data-ttu-id="59036-185">Un'implementazione tipica viene chiamata l'implementazione di base, quindi il metodo statico <see cref="M:System.Windows.Freezable.Freeze" /> metodo su tutti <see cref="T:System.Windows.Freezable" /> le proprietà che contiene la classe, restituendo tipizzate <see langword="true" /> solo se sono state bloccate tutte le proprietà (o potrebbero essere state bloccate di case far passare attraverso un <see langword="false" /> valore per <paramref name="isChecking" />).</span>
            <span class="sxs-lookup">
              <span data-stu-id="59036-185">A typical implementation would call the base implementation, then call the static <see cref="M:System.Windows.Freezable.Freeze" /> method on all <see cref="T:System.Windows.Freezable" /> typed properties that the class contains, returning <see langword="true" /> only if all properties were frozen (or could have been frozen, in the case of passing through a <see langword="false" /> value for <paramref name="isChecking" />).</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="59036-186">Identifica la proprietà di cui è necessario recuperare il valore di base (non animato).</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-186">Identifies the property whose base (non-animated) value should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59036-187">Restituisce il valore non animato dell'oggetto <see cref="T:System.Windows.DependencyProperty" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-187">Returns the non-animated value of the specified <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59036-188">Valore che verrebbe restituito se alla proprietà specificata non fosse stata aggiunta un'animazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-188">The value that would be returned if the specified property were not animated.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59036-189">Se la proprietà specificata non viene aggiunta un'animazione, questo metodo restituisce lo stesso risultato <xref:System.Windows.DependencyObject.GetValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="59036-189">If the specified property is not animated, this method returns the same result as <xref:System.Windows.DependencyObject.GetValue%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59036-190">Nell'esempio seguente, i valori non animati di proprietà animate vengono recuperati e visualizzati.</span><span class="sxs-lookup"><span data-stu-id="59036-190">In the following example, the non-animated values of animated properties are retrieved and displayed.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#GetAnimationBaseValueExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#getanimationbasevalueexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValueExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#getanimationbasevalueexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59036-191">Ottiene un valore che indica se uno o più oggetti <see cref="T:System.Windows.Media.Animation.AnimationClock" /> sono associati a una qualsiasi delle proprietà di dipendenza di questo oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-191">Gets a value that indicates whether one or more <see cref="T:System.Windows.Media.Animation.AnimationClock" /> objects is associated with any of this object's dependency properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59036-192">**true** se uno o più <see cref="T:System.Windows.Media.Animation.AnimationClock" /> oggetti è associata a una delle proprietà di dipendenza di questo oggetto; in caso contrario, **false**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-192">**true** if one or more <see cref="T:System.Windows.Media.Animation.AnimationClock" /> objects is associated with any of this object's dependency properties; otherwise, **false**.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59036-193">Questa proprietà indica se questo oggetto contiene gli oggetti secondari animati.</span><span class="sxs-lookup"><span data-stu-id="59036-193">This property does not indicate whether this object contains animated sub-objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeStoredWeakReference">
      <MemberSignature Language="C#" Value="public static bool ShouldSerializeStoredWeakReference (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSerializeStoredWeakReference(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShouldSerializeStoredWeakReference (target As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ShouldSerializeStoredWeakReference(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="59036-194">Rappresenta un oggetto che fa parte del sistema di proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-194">Represents an object that participates in the dependency property system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59036-195">Indica se un oggetto di dipendenza deve essere serializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-195">Specifies whether a dependency object should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59036-196">
            <see langword="true" /> per serializzar <paramref name="target" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-196">
              <see langword="true" /> to serialize <paramref name="target" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="59036-197">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59036-197">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59036-198">Il <xref:System.ComponentModel.TypeDescriptor> classe Usa il <xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A> metodo per determinare se una proprietà deve essere serializzata.</span><span class="sxs-lookup"><span data-stu-id="59036-198">The <xref:System.ComponentModel.TypeDescriptor> class uses the <xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A> method to determine if a property should be serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>