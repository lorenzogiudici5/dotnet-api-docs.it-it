<Type Name="Consistency" FullName="System.Runtime.ConstrainedExecution.Consistency">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="86faee661102ab911c17e177581e3a1307053286" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36636167" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Consistency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Consistency extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ConstrainedExecution.Consistency" />
  <TypeSignature Language="VB.NET" Value="Public Enum Consistency" />
  <TypeSignature Language="C++ CLI" Value="public enum class Consistency" />
  <TypeSignature Language="F#" Value="type Consistency = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifica un contratto di affidabilità.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Runtime.ConstrainedExecution.Consistency> enumerazione viene utilizzata come parametro per il <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute> attributo per specificare la garanzia di affidabilità in un determinato metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Runtime.ConstrainedExecution.Consistency> enumerazione quando si specifica un'area a esecuzione vincolata per un metodo. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> costruttore.  
  
 [!code-csharp[System.Runtime.ConstrainedExecution#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/cs/program.cs#3)]
 [!code-vb[System.Runtime.ConstrainedExecution#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" />
  </Docs>
  <Members>
    <Member MemberName="MayCorruptAppDomain">
      <MemberSignature Language="C#" Value="MayCorruptAppDomain" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Consistency MayCorruptAppDomain = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Consistency.MayCorruptAppDomain" />
      <MemberSignature Language="VB.NET" Value="MayCorruptAppDomain" />
      <MemberSignature Language="C++ CLI" Value="MayCorruptAppDomain" />
      <MemberSignature Language="F#" Value="MayCorruptAppDomain = 1" Usage="System.Runtime.ConstrainedExecution.Consistency.MayCorruptAppDomain" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Consistency</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>In condizioni eccezionali, il Common Language Runtime (CLR) non offre garanzie relativamente all'uniformità dello stato nel dominio applicazione corrente.</summary>
      </Docs>
    </Member>
    <Member MemberName="MayCorruptInstance">
      <MemberSignature Language="C#" Value="MayCorruptInstance" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Consistency MayCorruptInstance = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance" />
      <MemberSignature Language="VB.NET" Value="MayCorruptInstance" />
      <MemberSignature Language="C++ CLI" Value="MayCorruptInstance" />
      <MemberSignature Language="F#" Value="MayCorruptInstance = 2" Usage="System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Consistency</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>In condizioni eccezionali, il metodo garantisce la limitazione del danneggiamento dello stato per l'istanza corrente.</summary>
      </Docs>
    </Member>
    <Member MemberName="MayCorruptProcess">
      <MemberSignature Language="C#" Value="MayCorruptProcess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Consistency MayCorruptProcess = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Consistency.MayCorruptProcess" />
      <MemberSignature Language="VB.NET" Value="MayCorruptProcess" />
      <MemberSignature Language="C++ CLI" Value="MayCorruptProcess" />
      <MemberSignature Language="F#" Value="MayCorruptProcess = 0" Usage="System.Runtime.ConstrainedExecution.Consistency.MayCorruptProcess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Consistency</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>In condizioni eccezionali, il Common Language Runtime non offre garanzie relativamente all'uniformità dello stato, ossia la condizione potrebbe danneggiare il processo.</summary>
      </Docs>
    </Member>
    <Member MemberName="WillNotCorruptState">
      <MemberSignature Language="C#" Value="WillNotCorruptState" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Consistency WillNotCorruptState = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState" />
      <MemberSignature Language="VB.NET" Value="WillNotCorruptState" />
      <MemberSignature Language="C++ CLI" Value="WillNotCorruptState" />
      <MemberSignature Language="F#" Value="WillNotCorruptState = 3" Usage="System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Consistency</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>In condizioni eccezionali, il metodo garantisce che lo stato non verrà danneggiato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Questo non garantisce che il metodo non avrà mai esito negativo; Tuttavia, garantisce che tale errore non danneggerà mai stato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>