<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CriticalFinalizerObject.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f1d2facb08d43ad654cb2b085fefa826d0c99cd7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1d2facb08d43ad654cb2b085fefa826d0c99cd7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Ensures that all finalization code in derived classes is marked as critical.</source>
          <target state="translated">Assicura che tutto il codice di finalizzazione nelle classi derivate sia contrassegnato come critico.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Classes deriving from the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> class are implicitly treated as a constrained execution region (CER).</source>
          <target state="translated">Le classi che derivano dalla <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> classe in modo implicito vengono considerati come un'area a esecuzione vincolata (CER).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>This requires code in the finalizer to only call code with a strong reliability contract.</source>
          <target state="translated">Questo richiede il codice del finalizzatore deve chiamare solo il codice con un contratto di affidabilità.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>For more information about CERs, see the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution&gt;</ph> namespace.</source>
          <target state="translated">Per ulteriori informazioni su CER, vedere il <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution&gt;</ph> dello spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>In classes derived from the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> class, the common language runtime (CLR) guarantees that all critical finalization code will be given the opportunity to execute, provided the finalizer follows the rules for a CER, even in situations where the CLR forcibly unloads an application domain or aborts a thread.</source>
          <target state="translated">Nelle classi derivate dal <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> (classe), common language runtime (CLR) garantisce che tutto il codice di finalizzazione critica avrà la possibilità di esecuzione, purché il finalizzatore segue le regole per una CER, anche in situazioni in cui il Common Language Runtime forzatamente scaricato il dominio applicazione o si interrompe un thread.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>If a finalizer violates the rules for a CER, it might not successfully execute.</source>
          <target state="translated">Se un finalizzatore viola le regole per una CER, potrebbe non eseguire correttamente.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>In addition, the CLR establishes a weak ordering among normal and critical finalizers: for objects reclaimed by garbage collection at the same time, all the noncritical finalizers are called before any of the critical finalizers.</source>
          <target state="translated">Inoltre, CLR consente di stabilire un ordine debole tra finalizzatori normali e: per gli oggetti recuperati tramite garbage collection contemporaneamente, tutti i finalizzatori non critici vengono chiamati prima di qualsiasi dei finalizzatori.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>For example, a class such as <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>, which holds data in the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> class that is derived from <ph id="ph3">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph>, can run a standard finalizer to flush out existing buffered data.</source>
          <target state="translated">Ad esempio, una classe, ad esempio <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>, che contiene i dati di <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> classe che deriva da <ph id="ph3">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph>, può essere eseguito un finalizzatore standard per cancellare i dati memorizzati nel buffer.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>In most cases, you do not need to write classes that derive from the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> class.</source>
          <target state="translated">Nella maggior parte dei casi, non è necessario scrivere le classi che derivano dalla <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>The .NET Framework class library provides two classes, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;</ph>, that provide critical finalization functionality for handle resources.</source>
          <target state="translated">La libreria di classi .NET Framework fornisce due classi, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> e <ph id="ph2">&lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;</ph>, che forniscono funzionalità di finalizzazione critica per le risorse di handle.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Furthermore, the .NET Framework provides a set of prewritten classes derived from the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> class, and this set is located in the <ph id="ph2">&lt;xref:Microsoft.Win32.SafeHandles&gt;</ph> namespace.</source>
          <target state="translated">Inoltre, .NET Framework fornisce un set di classi prescritte derivate dal <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> classe e questo set si trova nel <ph id="ph2">&lt;xref:Microsoft.Win32.SafeHandles&gt;</ph> dello spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>These classes are designed to provide common functionality for supporting file and operating system handles.</source>
          <target state="translated">Queste classi sono progettate per fornire funzionalità comuni per il supporto di handle di file e sistema operativo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph> class to provide critical finalization for the standard input and output streams.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph> classe finalizzazione critica per l'input standard e i flussi di output.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>The <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph>, derived from the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> class, is passed to the file stream in the <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> constructor.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph>, derivata dal <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> classe, viene passato al flusso di dati di <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">l'autorizzazione per chiamare codice non gestito.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Azione di sicurezza: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>for full trust for inheritors.</source>
          <target state="translated">per l'attendibilità totale per gli eredi.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">Questa classe non può essere utilizzata da codice parzialmente attendibile.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">l'autorizzazione per chiamare codice non gestito.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Azione di sicurezza: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>for full trust for inheritors.</source>
          <target state="translated">per l'attendibilità totale per gli eredi.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">Questa classe non può essere utilizzata da codice parzialmente attendibile.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize">
          <source>Releases all the resources used by the <ph id="ph1">&lt;see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /&gt;</ph> class.</source>
          <target state="translated">Rilascia tutte le risorse usate dalla classe <ph id="ph1">&lt;see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize">
          <source>The finalizer for any types deriving from <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> is given the opportunity to execute and will not be aborted, assuming the finalizer correctly follows the rules for a constrained execution region (CER).</source>
          <target state="translated">Il finalizzatore per i tipi che derivano da <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> è data la possibilità di eseguire e non verrà interrotto, presupponendo che il finalizzatore correttamente segue le regole per un'area a esecuzione vincolata (CER).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>