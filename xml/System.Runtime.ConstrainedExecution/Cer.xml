<Type Name="Cer" FullName="System.Runtime.ConstrainedExecution.Cer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f9eca863655b3ff53abebdbab2c36dcad083194" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51918283" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Cer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Cer extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ConstrainedExecution.Cer" />
  <TypeSignature Language="VB.NET" Value="Public Enum Cer" />
  <TypeSignature Language="C++ CLI" Value="public enum class Cer" />
  <TypeSignature Language="F#" Value="type Cer = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="90a4f-101">Specifica un comportamento per il metodo chiamato all'interno di un'area a esecuzione vincolata (CER, Constrained Execution Region).</span>
      <span class="sxs-lookup">
        <span data-stu-id="90a4f-101">Specifies a method's behavior when called within a constrained execution region.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90a4f-102">Il <xref:System.Runtime.ConstrainedExecution.Cer> enumerazione specifica il comportamento di un metodo, tipo o assembly all'interno di un'area a esecuzione vincolata (CER).</span><span class="sxs-lookup"><span data-stu-id="90a4f-102">The <xref:System.Runtime.ConstrainedExecution.Cer> enumeration specifies the behavior of a method, type, or assembly within a constrained execution region (CER).</span></span> <span data-ttu-id="90a4f-103">Usare uno dei tre valori disponibili per indicare che l'entità avranno esito positivo, non è a conoscenza di una CER, o (in modo deterministico) potrebbe essere in grado di segnalare l'esito positivo o negativo.</span><span class="sxs-lookup"><span data-stu-id="90a4f-103">Use one of the three available values to indicate that the entity will succeed, has no knowledge of a CER, or might (deterministically) be able to report success or failure.</span></span>  
  
 <span data-ttu-id="90a4f-104">Una CER garantisce che l'area di codice verrà eseguito senza interruzioni anche se viene generata un'eccezione asincrona, ad esempio un'eccezione di memoria insufficiente di thread interrotto, o un overflow dello stack.</span><span class="sxs-lookup"><span data-stu-id="90a4f-104">A CER provides guarantees that the region of code will execute uninterrupted even if an asynchronous exception such as an aborted thread out-of-memory exception, or stack overflow is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90a4f-105">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Runtime.ConstrainedExecution.Cer> quando si specifica un'area a esecuzione vincolata per un metodo di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="90a4f-105">The following code example demonstrates the use of the <xref:System.Runtime.ConstrainedExecution.Cer> enumeration when specifying a constrained execution region for a method.</span></span> <span data-ttu-id="90a4f-106">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> costruttore.</span><span class="sxs-lookup"><span data-stu-id="90a4f-106">This code example is part of a larger example provided for the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.</span></span>  
  
 [!code-csharp[System.Runtime.ConstrainedExecution#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/cs/program.cs#3)]
 [!code-vb[System.Runtime.ConstrainedExecution#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions" />
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod(System.RuntimeMethodHandle)" />
    <related type="Article" href="https://msdn.microsoft.com/library/99354547-39c1-4b0b-8553-938e8f8d1808">
      <span data-ttu-id="90a4f-107">aree di esecuzione vincolate</span>
      <span class="sxs-lookup">
        <span data-stu-id="90a4f-107">Constrained Execution Regions</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/cf624c1f-c160-46a1-bb2b-213587688da7">
      <span data-ttu-id="90a4f-108">Procedure consigliate per l'ottimizzazione dell'affidabilità</span>
      <span class="sxs-lookup">
        <span data-stu-id="90a4f-108">Reliability Best Practices</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="MayFail">
      <MemberSignature Language="C#" Value="MayFail" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer MayFail = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberSignature Language="VB.NET" Value="MayFail" />
      <MemberSignature Language="C++ CLI" Value="MayFail" />
      <MemberSignature Language="F#" Value="MayFail = 1" Usage="System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="90a4f-109">In condizioni eccezionali, il metodo può avere esito negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90a4f-109">In the face of exceptional conditions, the method might fail.</span>
          </span>
          <span data-ttu-id="90a4f-110">In tal caso, il metodo segnalerà al metodo chiamante l'esito positivo o negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90a4f-110">In this case, the method will report back to the calling method whether it succeeded or failed.</span>
          </span>
          <span data-ttu-id="90a4f-111">È necessaria la presenza di una CER attorno al corpo del metodo per consentire al metodo di fornire il valore restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90a4f-111">The method must have a CER around the method body to ensure that it can report the return value.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="90a4f-112">Il metodo, il tipo o l'assembly non è a conoscenza di una CER.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90a4f-112">The method, type, or assembly has no concept of a CER.</span>
          </span>
          <span data-ttu-id="90a4f-113">Non usufruisce dei vantaggi delle garanzie di un'area a esecuzione vincolata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90a4f-113">It does not take advantage of CER guarantees.</span>
          </span>
          <span data-ttu-id="90a4f-114">Questo implica quanto segue:</span>
          <span class="sxs-lookup">
            <span data-stu-id="90a4f-114">This implies the following:</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="90a4f-115">In condizioni eccezionali il metodo potrebbe non riuscire.</span><span class="sxs-lookup"><span data-stu-id="90a4f-115">In the face of exceptional conditions the method might fail.</span></span>  
  
-   <span data-ttu-id="90a4f-116">Il metodo forse o forse non i report che non è riuscita (è non deterministica).</span><span class="sxs-lookup"><span data-stu-id="90a4f-116">The method might or might not report that it failed (it is non-deterministic).</span></span>  
  
-   <span data-ttu-id="90a4f-117">Il metodo non viene scritta con aree a esecuzione vincolata presente (che è lo scenario più probabile).</span><span class="sxs-lookup"><span data-stu-id="90a4f-117">The method is not written with CERs in mind (which is the most likely scenario).</span></span>  
  
 <span data-ttu-id="90a4f-118">Se un metodo, tipo o assembly non è contrassegnato in modo esplicito per la corretta, viene contrassegnato in modo implicito come `Cer.None`.</span><span class="sxs-lookup"><span data-stu-id="90a4f-118">If a method, type, or assembly is not explicitly marked to succeed, it is implicitly marked as `Cer.None`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="Success" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer Success = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberSignature Language="VB.NET" Value="Success" />
      <MemberSignature Language="C++ CLI" Value="Success" />
      <MemberSignature Language="F#" Value="Success = 2" Usage="System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="90a4f-119">In condizioni eccezionali, è garantito l'esito positivo del metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90a4f-119">In the face of exceptional conditions, the method is guaranteed to succeed.</span>
          </span>
          <span data-ttu-id="90a4f-120">È sempre necessario costruire una CER attorno al metodo chiamato, anche quando viene chiamato dall'interno di un'area non CER.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90a4f-120">You should always construct a CER around the method that is called, even when it is called from within a non-CER region.</span>
          </span>
          <span data-ttu-id="90a4f-121">Un metodo ha esito positivo se esegue le azioni previste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90a4f-121">A method is successful if it accomplishes what is intended.</span>
          </span>
          <span data-ttu-id="90a4f-122">Ad esempio, contrassegnare <see cref="P:System.Collections.ArrayList.Count" /> con <c>ReliabilityContractAttribute(Cer.Success)</c> implica che quando viene eseguito in una CER, restituisce sempre il conteggio del numero di elementi in <see cref="T:System.Collections.ArrayList" /> e non può mai lasciare i campi interni in uno stato indeterminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90a4f-122">For example, marking <see cref="P:System.Collections.ArrayList.Count" /> with <c>ReliabilityContractAttribute(Cer.Success)</c> implies that when it is run under a CER, it always returns a count of the number of elements in the <see cref="T:System.Collections.ArrayList" /> and it can never leave the internal fields in an undetermined state.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>