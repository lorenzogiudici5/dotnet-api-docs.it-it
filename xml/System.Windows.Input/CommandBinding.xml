<Type Name="CommandBinding" FullName="System.Windows.Input.CommandBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="491e75532c829a84289eae181cb2a21d8c1a14cd" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39920448" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CommandBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CommandBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandBinding" />
  <TypeSignature Language="F#" Value="type CommandBinding = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1b9ad-101">Associa un oggetto <see cref="T:System.Windows.Input.RoutedCommand" /> ai gestori eventi che implementano il comando.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b9ad-101">Binds a <see cref="T:System.Windows.Input.RoutedCommand" /> to the event handlers that implement the command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b9ad-102">Oggetto <xref:System.Windows.Input.CommandBinding> consente di associare un comando con il <xref:System.Windows.Input.CommandBinding.PreviewExecuted> / <xref:System.Windows.Input.CommandBinding.Executed> e <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> / <xref:System.Windows.Input.CommandBinding.CanExecute> eventi che implementano e determinano lo stato del comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-102">A <xref:System.Windows.Input.CommandBinding> associates a command with the <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> and <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> events which implement and determine the status of the command.</span></span>  
  
 <span data-ttu-id="1b9ad-103">Quando la <xref:System.Windows.Input.RoutedCommand.Execute%2A> o <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metodo di un <xref:System.Windows.Input.RoutedCommand> viene chiamato, il <xref:System.Windows.Input.CommandBinding.PreviewExecuted> / <xref:System.Windows.Input.CommandBinding.Executed> o la <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> / <xref:System.Windows.Input.CommandBinding.CanExecute> gli eventi vengono generati sulla destinazione del comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-103">When the <xref:System.Windows.Input.RoutedCommand.Execute%2A> or <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method of a <xref:System.Windows.Input.RoutedCommand> is called, the <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> or the <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> events are raised on the command target.</span></span>  <span data-ttu-id="1b9ad-104">Se la destinazione del comando contiene un <xref:System.Windows.Input.CommandBinding> per il comando, vengono chiamati i gestori appropriati.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-104">If the command target has a <xref:System.Windows.Input.CommandBinding> for the command, the appropriate handlers are called.</span></span>  <span data-ttu-id="1b9ad-105">Se la destinazione del comando non dispone di un <xref:System.Windows.Input.CommandBinding> per il comando, gli eventi sono indirizzati attraverso l'albero degli elementi fino a un elemento con un <xref:System.Windows.Input.CommandBinding> viene trovato.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-105">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command, the events are routed through the element tree until an element that has a <xref:System.Windows.Input.CommandBinding> is found.</span></span>  
  
 <span data-ttu-id="1b9ad-106">Oggetto <xref:System.Windows.Input.CommandBinding> ha un utilizzo limitato con un <xref:System.Windows.Input.ICommand> che non Ã¨ un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-106">A <xref:System.Windows.Input.CommandBinding> has limited use with an <xref:System.Windows.Input.ICommand> that is not a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="1b9ad-107">Infatti, una <xref:System.Windows.Input.CommandBinding> associa il comando per il <xref:System.Windows.Input.ExecutedRoutedEventHandler> e il <xref:System.Windows.Input.CanExecuteRoutedEventHandler> cui restare in attesa il <xref:System.Windows.Input.CommandManager.Executed> e <xref:System.Windows.Input.CommandManager.CanExecute> degli eventi sono indirizzati generato quando il <xref:System.Windows.Input.RoutedCommand.Execute%2A> e <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metodo per il <xref:System.Windows.Input.RoutedCommand>vengono chiamati.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-107">This is because a <xref:System.Windows.Input.CommandBinding> binds the command to the <xref:System.Windows.Input.ExecutedRoutedEventHandler> and the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which listen to the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> routed events which are raised when the <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method of the <xref:System.Windows.Input.RoutedCommand> are called.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1b9ad-108">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.CommandBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-108">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b9ad-109">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.CommandBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-109">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding (System.Windows.Input.ICommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding(System::Windows::Input::ICommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.CommandBinding : System.Windows.Input.ICommand -&gt; System.Windows.Input.CommandBinding" Usage="new System.Windows.Input.CommandBinding command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="1b9ad-110">Il comando su cui basare il nuovo oggetto <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-110">The command to base the new <see cref="T:System.Windows.Input.RoutedCommand" /> on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b9ad-111">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.CommandBinding" /> mediante l'elemento <see cref="T:System.Windows.Input.ICommand" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-111">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class by using the specified <see cref="T:System.Windows.Input.ICommand" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.ExecutedRoutedEventHandler executed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, executed As ExecutedRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::ExecutedRoutedEventHandler ^ executed);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.CommandBinding : System.Windows.Input.ICommand * System.Windows.Input.ExecutedRoutedEventHandler -&gt; System.Windows.Input.CommandBinding" Usage="new System.Windows.Input.CommandBinding (command, executed)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="executed" Type="System.Windows.Input.ExecutedRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="1b9ad-112">Il comando su cui basare il nuovo oggetto <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-112">The command to base the new <see cref="T:System.Windows.Input.RoutedCommand" /> on.</span>
          </span>
        </param>
        <param name="executed">
          <span data-ttu-id="1b9ad-113">Il gestore per l'evento <see cref="E:System.Windows.Input.CommandBinding.Executed" /> in relazione al nuovo oggetto <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-113">The handler for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event on the new <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b9ad-114">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.CommandBinding" /> mediante i gestori eventi <see cref="T:System.Windows.Input.ICommand" /> e <see cref="E:System.Windows.Input.CommandBinding.Executed" /> specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-114">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class by using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event handler.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed, System.Windows.Input.CanExecuteRoutedEventHandler canExecute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.ExecutedRoutedEventHandler executed, class System.Windows.Input.CanExecuteRoutedEventHandler canExecute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, executed As ExecutedRoutedEventHandler, canExecute As CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::ExecutedRoutedEventHandler ^ executed, System::Windows::Input::CanExecuteRoutedEventHandler ^ canExecute);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.CommandBinding : System.Windows.Input.ICommand * System.Windows.Input.ExecutedRoutedEventHandler * System.Windows.Input.CanExecuteRoutedEventHandler -&gt; System.Windows.Input.CommandBinding" Usage="new System.Windows.Input.CommandBinding (command, executed, canExecute)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="executed" Type="System.Windows.Input.ExecutedRoutedEventHandler" />
        <Parameter Name="canExecute" Type="System.Windows.Input.CanExecuteRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="1b9ad-115">Il comando su cui basare il nuovo oggetto <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-115">The command to base the new <see cref="T:System.Windows.Input.RoutedCommand" /> on.</span>
          </span>
        </param>
        <param name="executed">
          <span data-ttu-id="1b9ad-116">Il gestore per l'evento <see cref="E:System.Windows.Input.CommandBinding.Executed" /> in relazione al nuovo oggetto <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-116">The handler for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event on the new <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          </span>
        </param>
        <param name="canExecute">
          <span data-ttu-id="1b9ad-117">Il gestore per l'evento <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> in relazione al nuovo oggetto <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-117">The handler for the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event on the new <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b9ad-118">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.CommandBinding" /> mediante i gestori eventi <see cref="T:System.Windows.Input.ICommand" />, <see cref="E:System.Windows.Input.CommandBinding.Executed" /> e <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-118">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class by using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="E:System.Windows.Input.CommandBinding.Executed" /> and <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event handlers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.CanExecuteRoutedEventHandler CanExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.CanExecuteRoutedEventHandler CanExecute" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.CanExecute" />
      <MemberSignature Language="VB.NET" Value="Public Event CanExecute As CanExecuteRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::CanExecuteRoutedEventHandler ^ CanExecute;" />
      <MemberSignature Language="F#" Value="member this.CanExecute : System.Windows.Input.CanExecuteRoutedEventHandler " Usage="member this.CanExecute : System.Windows.Input.CanExecuteRoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CanExecuteRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1b9ad-119">Si verifica quando il comando associato a <see cref="T:System.Windows.Input.CommandBinding" /> avvia un controllo per determinare se Ã¨ possibile eseguire il comando sulla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-119">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> initiates a check to determine whether the command can be executed on the command target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b9ad-120">Quando la <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metodo su un <xref:System.Windows.Input.RoutedCommand> viene chiamato, il <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> evento viene generato per la destinazione del comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-120">When the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method on a <xref:System.Windows.Input.RoutedCommand> is called, the <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> event is raised on the command target.</span></span>  <span data-ttu-id="1b9ad-121">Se non viene gestito l'evento, il <xref:System.Windows.Input.CommandBinding.CanExecute> viene generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-121">If the event is not handled, the <xref:System.Windows.Input.CommandBinding.CanExecute> event is raised.</span></span>  <span data-ttu-id="1b9ad-122">Se la destinazione del comando Ã¨ un <xref:System.Windows.Input.CommandBinding> per il comando, il <xref:System.Windows.Input.CommandBinding.CanExecute> gestore per tale <xref:System.Windows.Input.CommandBinding> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-122">If the command target has a <xref:System.Windows.Input.CommandBinding> for the command, the <xref:System.Windows.Input.CommandBinding.CanExecute> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="1b9ad-123">Se la destinazione del comando non dispone di un <xref:System.Windows.Input.CommandBinding> per il comando, il <xref:System.Windows.Input.CommandBinding.CanExecute> evento viene propagato nella struttura ad albero la ricerca di un elemento con un <xref:System.Windows.Input.CommandBinding> associato al comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-123">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command, the <xref:System.Windows.Input.CommandBinding.CanExecute> event bubbles up the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  
  
<a name="routedEventInfo_CanExecute"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1b9ad-124">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="1b9ad-124">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1b9ad-125">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="1b9ad-125">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.CanExecuteEvent>|  
|<span data-ttu-id="1b9ad-126">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="1b9ad-126">Routing strategy</span></span>|<span data-ttu-id="1b9ad-127">Bubbling</span><span class="sxs-lookup"><span data-stu-id="1b9ad-127">Bubbling</span></span>|  
|<span data-ttu-id="1b9ad-128">delegato</span><span class="sxs-lookup"><span data-stu-id="1b9ad-128">Delegate</span></span>|<xref:System.Windows.Input.CanExecuteRoutedEventHandler>|  
  
-   <span data-ttu-id="1b9ad-129">L'evento di tunneling corrispondente Ã¨ <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-129">The corresponding tunneling event is <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b9ad-130">L'esempio seguente crea un <xref:System.Windows.Input.CommandBinding> che esegue il mapping di un <xref:System.Windows.Input.ExecutedRoutedEventHandler> e un <xref:System.Windows.Input.CanExecuteRoutedEventArgs> gestore per il <xref:System.Windows.Input.ApplicationCommands.Open%2A> comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-130">The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span>  
  
 [!code-xaml[commandwithhandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 <span data-ttu-id="1b9ad-131">Il seguente viene illustrato il <xref:System.Windows.Input.CanExecuteRoutedEventHandler> che imposta <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-131">The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.</span></span>  
  
 [!code-csharp[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CommandBinding.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Input.CommandBinding.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1b9ad-132">Ottiene o imposta l'oggetto <see cref="T:System.Windows.Input.ICommand" /> associato a <see cref="T:System.Windows.Input.CommandBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-132">Gets or sets the <see cref="T:System.Windows.Input.ICommand" /> associated with this <see cref="T:System.Windows.Input.CommandBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1b9ad-133">Comando associato a questa associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-133">The command associated with this binding.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1b9ad-134">L'esempio seguente crea un <xref:System.Windows.Input.CommandBinding> che esegue il mapping di un <xref:System.Windows.Input.ExecutedRoutedEventHandler> e un <xref:System.Windows.Input.CanExecuteRoutedEventArgs> gestore per il <xref:System.Windows.Input.ApplicationCommands.Open%2A> comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-134">The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 [!code-csharp[commandhandlerprocedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[commandhandlerprocedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 <span data-ttu-id="1b9ad-135">Il seguente viene illustrato il <xref:System.Windows.Input.CanExecuteRoutedEventHandler> che imposta <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-135">The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.</span></span>  
  
 [!code-csharp[commandWithHandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandWithHandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 <span data-ttu-id="1b9ad-136">Il seguente viene illustrato il <xref:System.Windows.Input.ExecutedRoutedEventHandler> che consente di creare un <xref:System.Windows.MessageBox> quando viene eseguito il comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-136">The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.</span></span>  
  
 [!code-csharp[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlerexecutedhandler)]
 [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlerexecutedhandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Executed">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.ExecutedRoutedEventHandler Executed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.ExecutedRoutedEventHandler Executed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.Executed" />
      <MemberSignature Language="VB.NET" Value="Public Event Executed As ExecutedRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::ExecutedRoutedEventHandler ^ Executed;" />
      <MemberSignature Language="F#" Value="member this.Executed : System.Windows.Input.ExecutedRoutedEventHandler " Usage="member this.Executed : System.Windows.Input.ExecutedRoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ExecutedRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1b9ad-137">Si verifica quando viene eseguito il comando associato a <see cref="T:System.Windows.Input.CommandBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-137">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> executes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b9ad-138">Quando un <xref:System.Windows.Input.RoutedCommand> viene eseguita, genera il <xref:System.Windows.Input.CommandBinding.PreviewExecuted> eventi sulla destinazione del comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-138">When a <xref:System.Windows.Input.RoutedCommand> executes, it raises the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event on the command target.</span></span>  <span data-ttu-id="1b9ad-139">Se il <xref:System.Windows.Input.CommandBinding.PreviewExecuted> evento non Ã¨ gestito, il <xref:System.Windows.Input.CommandBinding.Executed> evento viene generato per la destinazione del comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-139">If the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event is not handled, the <xref:System.Windows.Input.CommandBinding.Executed> event is raised on the command target.</span></span>  <span data-ttu-id="1b9ad-140">Se la destinazione del comando Ã¨ un <xref:System.Windows.Input.CommandBinding> per il comando specifico, il <xref:System.Windows.Input.CommandBinding.Executed> gestore tale <xref:System.Windows.Input.CommandBinding> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-140">If the command target has a <xref:System.Windows.Input.CommandBinding> for the specific command, the <xref:System.Windows.Input.CommandBinding.Executed> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="1b9ad-141">Se la destinazione del comando non dispone di un <xref:System.Windows.Input.CommandBinding> per quel comando specifico di <xref:System.Windows.Input.CommandBinding.Executed> evento viene propagato nella struttura ad albero la ricerca di un elemento con un <xref:System.Windows.Input.CommandBinding> associato al comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-141">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for that specific command the <xref:System.Windows.Input.CommandBinding.Executed> event bubbles up the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  <span data-ttu-id="1b9ad-142">Se un <xref:System.Windows.Input.CommandBinding> non viene trovato, il comando non viene gestito.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-142">If a <xref:System.Windows.Input.CommandBinding> is not found, the command is not handled.</span></span>  
  
<a name="routedEventInfo_Executed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1b9ad-143">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="1b9ad-143">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1b9ad-144">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="1b9ad-144">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.ExecutedEvent>|  
|<span data-ttu-id="1b9ad-145">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="1b9ad-145">Routing strategy</span></span>|<span data-ttu-id="1b9ad-146">Bubbling</span><span class="sxs-lookup"><span data-stu-id="1b9ad-146">Bubbling</span></span>|  
|<span data-ttu-id="1b9ad-147">delegato</span><span class="sxs-lookup"><span data-stu-id="1b9ad-147">Delegate</span></span>|<xref:System.Windows.Input.ExecutedRoutedEventHandler>|  
  
-   <span data-ttu-id="1b9ad-148">L'evento di tunneling corrispondente Ã¨ <xref:System.Windows.Input.CommandBinding.PreviewExecuted>.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-148">The corresponding tunneling event is <xref:System.Windows.Input.CommandBinding.PreviewExecuted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b9ad-149">L'esempio seguente crea un <xref:System.Windows.Input.CommandBinding> che esegue il mapping di un <xref:System.Windows.Input.ExecutedRoutedEventHandler> e un <xref:System.Windows.Input.CanExecuteRoutedEventArgs> gestore per il <xref:System.Windows.Input.ApplicationCommands.Open%2A> comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-149">The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span>  
  
 [!code-xaml[commandwithhandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 <span data-ttu-id="1b9ad-150">Il seguente viene illustrato il <xref:System.Windows.Input.ExecutedRoutedEventHandler> che consente di creare un <xref:System.Windows.MessageBox> quando viene eseguito il comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-150">The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.</span></span>  
  
 [!code-csharp[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlerexecutedhandler)]
 [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlerexecutedhandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="PreviewCanExecute">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.CanExecuteRoutedEventHandler PreviewCanExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.CanExecuteRoutedEventHandler PreviewCanExecute" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.PreviewCanExecute" />
      <MemberSignature Language="VB.NET" Value="Public Event PreviewCanExecute As CanExecuteRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::CanExecuteRoutedEventHandler ^ PreviewCanExecute;" />
      <MemberSignature Language="F#" Value="member this.PreviewCanExecute : System.Windows.Input.CanExecuteRoutedEventHandler " Usage="member this.PreviewCanExecute : System.Windows.Input.CanExecuteRoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CanExecuteRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1b9ad-151">Si verifica quando il comando associato a questo oggetto <see cref="T:System.Windows.Input.CommandBinding" /> inizia un controllo per determinare se il comando puÃ² essere eseguito in relazione alla destinazione del comando corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-151">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> initiates a check to determine whether the command can be executed on the current command target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b9ad-152">Quando la <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metodo su un <xref:System.Windows.Input.RoutedCommand> viene chiamato, il <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> evento viene generato il comando sulla destinazione, se la destinazione del comando contiene un <xref:System.Windows.Input.CommandBinding> per il comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-152">When the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method on a <xref:System.Windows.Input.RoutedCommand> is called, the <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> event is raised on the command target if the command target has a <xref:System.Windows.Input.CommandBinding> for the command.</span></span> <span data-ttu-id="1b9ad-153">L'oggetto <xref:System.Windows.Input.CommandBinding.CanExecute> gestore tale <xref:System.Windows.Input.CommandBinding> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-153">Then the <xref:System.Windows.Input.CommandBinding.CanExecute> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="1b9ad-154">Se la destinazione del comando non dispone di un <xref:System.Windows.Input.CommandBinding> per il comando, il <xref:System.Windows.Input.CommandBinding.CanExecute> evento viene propagato nella struttura ad albero la ricerca di un elemento con un <xref:System.Windows.Input.CommandBinding> associato al comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-154">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command, the <xref:System.Windows.Input.CommandBinding.CanExecute> event bubbles up the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  <span data-ttu-id="1b9ad-155">Se non viene gestito l'evento, il <xref:System.Windows.Input.CommandBinding.CanExecute> viene generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-155">If the event is not handled, the <xref:System.Windows.Input.CommandBinding.CanExecute> event is raised.</span></span>  
  
<a name="routedEventInfo_PreviewCanExecute"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1b9ad-156">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="1b9ad-156">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1b9ad-157">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="1b9ad-157">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.PreviewCanExecuteEvent>|  
|<span data-ttu-id="1b9ad-158">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="1b9ad-158">Routing strategy</span></span>|<span data-ttu-id="1b9ad-159">Il tunneling</span><span class="sxs-lookup"><span data-stu-id="1b9ad-159">Tunneling</span></span>|  
|<span data-ttu-id="1b9ad-160">delegato</span><span class="sxs-lookup"><span data-stu-id="1b9ad-160">Delegate</span></span>|<xref:System.Windows.Input.CanExecuteRoutedEventHandler>|  
  
-   <span data-ttu-id="1b9ad-161">L'evento di bubbling corrispondente Ã¨ <xref:System.Windows.Input.CommandBinding.CanExecute>.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-161">The corresponding bubbling event is <xref:System.Windows.Input.CommandBinding.CanExecute>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="PreviewExecuted">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.ExecutedRoutedEventHandler PreviewExecuted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.ExecutedRoutedEventHandler PreviewExecuted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.PreviewExecuted" />
      <MemberSignature Language="VB.NET" Value="Public Event PreviewExecuted As ExecutedRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::ExecutedRoutedEventHandler ^ PreviewExecuted;" />
      <MemberSignature Language="F#" Value="member this.PreviewExecuted : System.Windows.Input.ExecutedRoutedEventHandler " Usage="member this.PreviewExecuted : System.Windows.Input.ExecutedRoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ExecutedRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1b9ad-162">Si verifica quando viene eseguito il comando associato a <see cref="T:System.Windows.Input.CommandBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b9ad-162">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> executes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b9ad-163">Quando un <xref:System.Windows.Input.RoutedCommand> viene eseguita, genera il <xref:System.Windows.Input.CommandBinding.PreviewExecuted> eventi sulla destinazione del comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-163">When a <xref:System.Windows.Input.RoutedCommand> executes, it raises the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event on the command target.</span></span>  <span data-ttu-id="1b9ad-164">Se la destinazione del comando Ã¨ un <xref:System.Windows.Input.CommandBinding> per il comando il <xref:System.Windows.Input.CommandBinding.PreviewExecuted> gestore tale <xref:System.Windows.Input.CommandBinding> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-164">If the command target has a <xref:System.Windows.Input.CommandBinding> for the command the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="1b9ad-165">Se la destinazione del comando non dispone di un <xref:System.Windows.Input.CommandBinding> per il comando il <xref:System.Windows.Input.CommandBinding.PreviewExecuted> tunnel eventi verso il basso nella struttura ad albero la ricerca di un elemento con un <xref:System.Windows.Input.CommandBinding> associato al comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-165">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event tunnels down the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  <span data-ttu-id="1b9ad-166">Se non viene gestito l'evento di anteprima, il <xref:System.Windows.Input.CommandBinding.Executed> evento viene generato nella destinazione del comando.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-166">If the preview event is not handled, the <xref:System.Windows.Input.CommandBinding.Executed> event is raised on command target.</span></span>  
  
<a name="routedEventInfo_PreviewExecuted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1b9ad-167">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="1b9ad-167">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1b9ad-168">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="1b9ad-168">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.PreviewExecutedEvent>|  
|<span data-ttu-id="1b9ad-169">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="1b9ad-169">Routing strategy</span></span>|<span data-ttu-id="1b9ad-170">Il tunneling</span><span class="sxs-lookup"><span data-stu-id="1b9ad-170">Tunneling</span></span>|  
|<span data-ttu-id="1b9ad-171">delegato</span><span class="sxs-lookup"><span data-stu-id="1b9ad-171">Delegate</span></span>|<xref:System.Windows.Input.ExecutedRoutedEventHandler>|  
  
-   <span data-ttu-id="1b9ad-172">L'evento di bubbling corrispondente Ã¨ <xref:System.Windows.Input.CommandBinding.Executed>.</span><span class="sxs-lookup"><span data-stu-id="1b9ad-172">The corresponding bubbling event is <xref:System.Windows.Input.CommandBinding.Executed>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>