<Type Name="MouseWheelEventArgs" FullName="System.Windows.Input.MouseWheelEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bf7fa23eb7098539b41a21329f53a18f6e895cb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37504271" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MouseWheelEventArgs : System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseWheelEventArgs extends System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseWheelEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseWheelEventArgs&#xA;Inherits MouseEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseWheelEventArgs : System::Windows::Input::MouseEventArgs" />
  <TypeSignature Language="F#" Value="type MouseWheelEventArgs = class&#xA;    inherit MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fa9d8-101">Fornisce i dati per i diversi eventi che forniscono un rapporto sulle modifiche del valore delta della rotellina del mouse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa9d8-101">Provides data for various events that report changes to the mouse wheel delta value of a mouse device.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9d8-102"><xref:System.Windows.Input.MouseWheelEventArgs> viene usato con i seguenti eventi:</span><span class="sxs-lookup"><span data-stu-id="fa9d8-102"><xref:System.Windows.Input.MouseWheelEventArgs> is used with the following events:</span></span>  
  
-   <xref:System.Windows.UIElement.MouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseWheel?displayProperty=nameWithType>  
  
-   <span data-ttu-id="fa9d8-103"><xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> (evento)</span><span class="sxs-lookup"><span data-stu-id="fa9d8-103"><xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> (attached event)</span></span>  
  
-   <xref:System.Windows.UIElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <span data-ttu-id="fa9d8-104"><xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> (evento)</span><span class="sxs-lookup"><span data-stu-id="fa9d8-104"><xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> (attached event)</span></span>  
  
 <span data-ttu-id="fa9d8-105">Il <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> proprietà è positivo se la rotellina del mouse viene spostata verso l'alto o in avanti (lontano dall'utente) o negativo se la rotellina del mouse viene spostata verso il basso o all'indietro (verso l'utente).</span><span class="sxs-lookup"><span data-stu-id="fa9d8-105">The <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> property is positive if the mouse wheel is moved upward or forward (away from the user) or negative if the mouse wheel is moved downward or backward (toward the user).</span></span>  
  
 <span data-ttu-id="fa9d8-106">Questo evento viene generato anche per gli spostamenti della rotellina del mouse di piccole dimensioni.</span><span class="sxs-lookup"><span data-stu-id="fa9d8-106">This event is raised even for small mouse wheel movements.</span></span> <span data-ttu-id="fa9d8-107">Per alcuni scenari, è opportuno implementare gestori che limitano i delta della rotellina del mouse di piccole dimensioni, controllare se il valore delta supera una determinata soglia.</span><span class="sxs-lookup"><span data-stu-id="fa9d8-107">For some scenarios, it is appropriate to implement handlers that throttle small mouse wheel deltas by checking whether the delta exceeds a certain threshold.</span></span> <span data-ttu-id="fa9d8-108">In caso contrario, è possibile richiamare il gestore per i casi in cui è stato così piccolo che qualsiasi interfaccia utente di cui è associato il movimento della rotellina del mouse non aggiorna il delta della rotellina del mouse.</span><span class="sxs-lookup"><span data-stu-id="fa9d8-108">Otherwise, you might invoke your handler for cases where the mouse wheel delta was so small that any UI that is tied to the mouse wheel movement would not update.</span></span> <span data-ttu-id="fa9d8-109">Esattamente come si implementa il comportamento di soglia in un gestore e quali deve essere tale soglia viene interamente specifiche dell'implementazione.</span><span class="sxs-lookup"><span data-stu-id="fa9d8-109">Exactly how you implement the threshold behavior in a handler and what that threshold should be is entirely implementation-specific.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa9d8-110">L'esempio seguente sposta un' <xref:System.Windows.Controls.TextBox> backup se la rotellina del mouse <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> è positivo e sposta le <xref:System.Windows.Controls.TextBox> a discesa nel caso la rotellina del mouse <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> è negativo.</span><span class="sxs-lookup"><span data-stu-id="fa9d8-110">The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative.</span></span> <span data-ttu-id="fa9d8-111">Il <xref:System.Windows.Controls.TextBox> è collegato a un <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="fa9d8-111">The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseWheelEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, delta As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseWheelEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, int delta);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseWheelEventArgs : System.Windows.Input.MouseDevice * int * int -&gt; System.Windows.Input.MouseWheelEventArgs" Usage="new System.Windows.Input.MouseWheelEventArgs (mouse, timestamp, delta)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mouse">
          <span data-ttu-id="fa9d8-112">Dispositivo mouse associato a questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9d8-112">The mouse device associated with this event.</span>
          </span>
        </param>
        <param name="timestamp">
          <span data-ttu-id="fa9d8-113">Tempo in cui si è verificato l'input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9d8-113">The time when the input occurred.</span>
          </span>
        </param>
        <param name="delta">
          <span data-ttu-id="fa9d8-114">Quantità modificata dalla rotellina.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9d8-114">The amount the wheel has changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9d8-115">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.MouseWheelEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9d8-115">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delta { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Delta : int" Usage="System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa9d8-116">Ottiene un valore che indica la quantità modificata dalla rotellina del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9d8-116">Gets a value that indicates the amount that the mouse wheel has changed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa9d8-117">Quantità modificata dalla rotellina.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9d8-117">The amount the wheel has changed.</span>
          </span>
          <span data-ttu-id="fa9d8-118">Questo valore è positivo se la rotellina del mouse viene ruotata in avanti (lontano dall'utente); è negativo se viene ruotata verso il basso (verso l'utente).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9d8-118">This value is positive if the mouse wheel is rotated in an upward direction (away from the user) or negative if the mouse wheel is rotated in a downward direction (toward the user).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9d8-119">Gli intervalli efficaci superiori e inferiori di questo valore è potenzialmente provengono da implementazioni di dispositivi o altri chiamanti che ha generato l'evento e pertanto non sono definiti.</span><span class="sxs-lookup"><span data-stu-id="fa9d8-119">The effective upper and lower ranges of this value potentially come from device implementations or other callers that raised the event, and are therefore not defined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa9d8-120">L'esempio seguente sposta un' <xref:System.Windows.Controls.TextBox> backup se la rotellina del mouse <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> è positivo e sposta le <xref:System.Windows.Controls.TextBox> a discesa nel caso la rotellina del mouse <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> è negativo.</span><span class="sxs-lookup"><span data-stu-id="fa9d8-120">The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative.</span></span> <span data-ttu-id="fa9d8-121">Il <xref:System.Windows.Controls.TextBox> è collegato a un <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="fa9d8-121">The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="mouseWheelEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">
          <span data-ttu-id="fa9d8-122">Gestore generico da chiamare nella modalità specifica del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9d8-122">The generic handler to call in a type-specific way.</span>
          </span>
        </param>
        <param name="genericTarget">
          <span data-ttu-id="fa9d8-123">Destinazione sulla quale chiamare il gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9d8-123">The target to call the handler on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9d8-124">Richiama i gestori eventi in una modalità specifica del tipo, che può aumentare l'efficienza del sistema di eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9d8-124">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9d8-125">Questa implementazione viene eseguito il cast del gestore generico come un <xref:System.Windows.Input.MouseWheelEventHandler> e lo richiama.</span><span class="sxs-lookup"><span data-stu-id="fa9d8-125">This implementation casts the generic handler as a <xref:System.Windows.Input.MouseWheelEventHandler> and then invokes it.</span></span> <span data-ttu-id="fa9d8-126">Per informazioni dettagliate su questo modello di implementazione e i relativi motivi, vedere <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> e [Cenni preliminari sugli eventi indirizzati](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="fa9d8-126">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>