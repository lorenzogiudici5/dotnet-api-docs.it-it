<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="547e7b06f12e18ebd34698dc5592b03ee77206cc" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39949647" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <TypeSignature Language="F#" Value="type KeyBinding = class&#xA;    inherit InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Associa <see cref="T:System.Windows.Input.KeyGesture" /> a <see cref="T:System.Windows.Input.RoutedCommand" /> (o a un'altra implementazione <see cref="T:System.Windows.Input.ICommand" />).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.Input.KeyBinding> associa un <xref:System.Windows.Input.KeyGesture> con un <xref:System.Windows.Input.ICommand>, ad esempio un <xref:System.Windows.Input.RoutedCommand>. <xref:System.Windows.Input.RoutedCommand> è l'implementazione del primario il <xref:System.Windows.Input.ICommand> interfaccia di amministrazione del [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] l'esecuzione di comandi di sistema.  In generale, quando la <xref:System.Windows.Input.KeyGesture> viene eseguito il comando viene richiamato, anche se il comportamento del comando è ulteriormente influenzato da fattori specifici del comando, ad esempio il <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> valore.  Per altre informazioni sull'esecuzione di comandi, vedere la [Cenni preliminari](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
 Fatta eccezione per le chiavi di funzione e il tastierino numerico, un valore valido <xref:System.Windows.Input.KeyGesture> deve contenere esattamente uno <xref:System.Windows.Input.Key> e uno o più <xref:System.Windows.Input.ModifierKeys>.  Le chiavi di funzione e tastierino numerico non richiesta un tasto di modifica per poter essere valida <xref:System.Windows.Input.KeyGesture>. È possibile specificare un valore non valido <xref:System.Windows.Input.KeyGesture> e una <xref:System.Windows.Input.KeyBinding> con un valore non valido movimento associato, tramite [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] o code. Ad esempio, non vengono convalidati che impedisce la creazione e binding un <xref:System.Windows.Input.KeyGesture> che contiene solo un tasto funzione, o solo i modificatori ma alcuna chiave. Questo tipo una <xref:System.Windows.Input.KeyBinding> non tenteranno mai di richiamare il comando associato.  
  
 Quando si definisce una <xref:System.Windows.Input.KeyBinding> nelle [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] esistono due modi per specificare il <xref:System.Windows.Input.KeyGesture>. Il primo modo per stabilire un <xref:System.Windows.Input.KeyBinding> nelle [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] consiste nel definire il <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributo del <xref:System.Windows.Input.KeyBinding> elemento, che consente una sintassi per specificare le chiavi e i modificatori come stringa singola, ad esempio "CTRL + P". Il secondo modo consiste nel definire il <xref:System.Windows.Input.KeyBinding.Key%2A> attributo e il <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributi del <xref:System.Windows.Input.KeyBinding> elemento. Entrambe le modalità di impostazione la <xref:System.Windows.Input.KeyGesture> sono equivalenti e modificare lo stesso oggetto sottostante, ma esisterà un conflitto se entrambe vengono utilizzate.  Nel caso quando la <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>e il <xref:System.Windows.Input.KeyBinding.Gesture%2A> gli attributi sono tutti impostati, verrà usato l'attributo definito ultimo per il <xref:System.Windows.Input.KeyGesture>. È possibile avere potenzialmente situazioni in cui, ad esempio un <xref:System.Windows.Input.KeyBinding.Key%2A> set ultima sovrascriverà solo il componente chiave del movimento precedente, ma lasciare i modificatori del movimento lo stesso. In generale, è consigliabile usare solo il <xref:System.Windows.Input.KeyBinding.Gesture%2A> dell'attributo da [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; ciò consente di evitare ambiguità, fornisce la sintassi più semplice e fornisce la rappresentazione più semplice per la serializzazione.  
  
 Oggetto <xref:System.Windows.Input.KeyBinding> possono essere definiti in un oggetto specifico o a livello di classe registrando un <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> nel <xref:System.Windows.Input.CommandManager> classe. Il modo più comune per definire un <xref:System.Windows.Input.KeyBinding> si trova all'interno del modello di controllo, impostando il <xref:System.Windows.UIElement.InputBindings%2A> proprietà nel [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] dichiarando una o più <xref:System.Windows.Input.MouseBinding> o <xref:System.Windows.Input.KeyBinding> elementi.  
  
   
  
## Examples  
 L'esempio seguente crea una <xref:System.Windows.Input.KeyBinding> e lo aggiunge al <xref:System.Windows.Input.InputBindingCollection> della finestra principale.  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.KeyGesture -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command">Comando da associare al parametro <c>gesture</c>.</param>
        <param name="gesture">Combinazione di tasti da associare a <c>comando</c>.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.KeyBinding" /> utilizzando gli oggetti <see cref="T:System.Windows.Input.ICommand" /> e <see cref="T:System.Windows.Input.KeyGesture" /> specificati.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> o <paramref name="gesture" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command">Comando da richiamare.</param>
        <param name="key">Il tasto da associare all'oggetto <c>comando</c>.</param>
        <param name="modifiers">Modificatori da associare a <c>comando</c>.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.KeyBinding" /> mediante gli oggetti <see cref="T:System.Windows.Input.ICommand" /> e <see cref="T:System.Windows.Input.Key" /> specificati e <see cref="T:System.Windows.Input.ModifierKeys" /> che verrà convertito in <see cref="T:System.Windows.Input.KeyGesture" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="keyBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un'istanza di un oggetto <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <returns>Nuovo oggetto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.KeyBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il movimento associato all'oggetto <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <value>Sequenza di tasti. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fatta eccezione per le chiavi di funzione e le chiavi del tastierino numerico, una <xref:System.Windows.Input.KeyGesture> deve contenere un <xref:System.Windows.Input.Key> e uno o più <xref:System.Windows.Input.ModifierKeys>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come associare un <xref:System.Windows.Input.KeyGesture> a un <xref:System.Windows.Input.RoutedCommand> usando un <xref:System.Windows.Input.KeyBinding> (gli esempi di markup e codice specificare chiavi diverse che altrimenti risultano equivalenti).  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">il valore <paramref name="gesture" /> che viene impostato non è un oggetto <see cref="T:System.Windows.Input.KeyGesture" />.</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key with get, set" Usage="System.Windows.Input.KeyBinding.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Input.Key" /> dell'oggetto <see cref="T:System.Windows.Input.KeyGesture" /> associato all'oggetto <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <value>Parte di tasti dell'oggetto <see cref="T:System.Windows.Input.KeyGesture" />. Il valore predefinito è <see cref="F:System.Windows.Input.Key.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fatta eccezione per le chiavi di funzione e le chiavi del tastierino numerico, una <xref:System.Windows.Input.KeyGesture> deve contenere un <xref:System.Windows.Input.Key> e uno o più <xref:System.Windows.Input.ModifierKeys>.  
  
 Quando si definisce una <xref:System.Windows.Input.KeyBinding> nelle [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] esistono due modi per specificare il <xref:System.Windows.Input.KeyGesture>. Il primo modo per stabilire un <xref:System.Windows.Input.KeyBinding> nelle [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] consiste nel definire il <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributo del <xref:System.Windows.Input.KeyBinding> elemento, che consente una sintassi per specificare le chiavi e i modificatori come stringa singola, ad esempio "CTRL + P". Il secondo modo consiste nel definire il <xref:System.Windows.Input.KeyBinding.Key%2A> attributo e il <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributi del <xref:System.Windows.Input.KeyBinding> elemento. Entrambe le modalità di impostazione la <xref:System.Windows.Input.KeyGesture> sono equivalenti e modificare lo stesso oggetto sottostante, ma esisterà un conflitto se entrambe vengono utilizzate.  Nel caso quando la <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>e il <xref:System.Windows.Input.KeyBinding.Gesture%2A> gli attributi sono tutti impostati, verrà usato l'attributo definito ultimo per il <xref:System.Windows.Input.KeyGesture>. È possibile avere potenzialmente situazioni in cui, ad esempio un <xref:System.Windows.Input.KeyBinding.Key%2A> set ultima sovrascriverà solo il componente chiave del movimento precedente, ma lasciare i modificatori del movimento lo stesso. In generale, è consigliabile usare solo il <xref:System.Windows.Input.KeyBinding.Gesture%2A> dell'attributo da [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; ciò consente di evitare ambiguità, fornisce la sintassi più semplice e fornisce la rappresentazione più semplice per la serializzazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Input.KeyBinding.Key" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys with get, set" Usage="System.Windows.Input.KeyBinding.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Input.ModifierKeys" /> dell'oggetto <see cref="T:System.Windows.Input.KeyGesture" /> associato all'oggetto <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <value>I tasti di modifica dell'oggetto <see cref="T:System.Windows.Input.KeyGesture" />.  Il valore predefinito è <see cref="F:System.Windows.Input.ModifierKeys.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fatta eccezione per le chiavi di funzione e le chiavi del tastierino numerico, una <xref:System.Windows.Input.KeyGesture> deve contenere un <xref:System.Windows.Input.Key> e uno o più <xref:System.Windows.Input.ModifierKeys>.  
  
 Quando si definisce una <xref:System.Windows.Input.KeyBinding> nelle [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] esistono due modi per specificare il <xref:System.Windows.Input.KeyGesture>. Il primo modo per stabilire un <xref:System.Windows.Input.KeyBinding> nelle [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] consiste nel definire il <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributo del <xref:System.Windows.Input.KeyBinding> elemento, che consente una sintassi per specificare le chiavi e i modificatori come stringa singola, ad esempio "CTRL + P". Il secondo modo consiste nel definire il <xref:System.Windows.Input.KeyBinding.Key%2A> attributo e il <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributi del <xref:System.Windows.Input.KeyBinding> elemento. Entrambe le modalità di impostazione la <xref:System.Windows.Input.KeyGesture> sono equivalenti e modificare lo stesso oggetto sottostante, ma esisterà un conflitto se entrambe vengono utilizzate.  Nel caso quando la <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>e il <xref:System.Windows.Input.KeyBinding.Gesture%2A> gli attributi sono tutti impostati, verrà usato l'attributo definito ultimo per il <xref:System.Windows.Input.KeyGesture>. È possibile avere potenzialmente situazioni in cui, ad esempio un <xref:System.Windows.Input.KeyBinding.Key%2A> set ultima sovrascriverà solo il componente chiave del movimento precedente, ma lasciare i modificatori del movimento lo stesso. In generale, è consigliabile usare solo il <xref:System.Windows.Input.KeyBinding.Gesture%2A> dell'attributo da [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; ciò consente di evitare ambiguità, fornisce la sintassi più semplice e fornisce la rappresentazione più semplice per la serializzazione.  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *oneOrMoreModifierKeys*  
 Uno o più tasti di modifica, definiti dal <xref:System.Windows.Input.ModifierKeys> enumerati, delimitati con il carattere "+".  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModifiersProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Input.KeyBinding.Modifiers" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>