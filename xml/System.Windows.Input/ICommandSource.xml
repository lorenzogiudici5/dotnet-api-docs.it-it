<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c2cc671612548463db8b444d52a8d84986b73927" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37505171" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandSource" />
  <TypeSignature Language="F#" Value="type ICommandSource = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9aaf2-101">Definisce un oggetto che sa come richiamare un comando.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9aaf2-101">Defines an object that knows how to invoke a command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aaf2-102">L'origine del comando definisce come un comando viene richiamato da un particolare oggetto.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-102">The command source defines how a command is invoked by that particular object.</span></span>  <span data-ttu-id="9aaf2-103">Ad esempio, se un <xref:System.Windows.Controls.Button> è associato a un comando, il comando viene richiamato quando il <xref:System.Windows.Controls.Button> si fa clic.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-103">For example, if a <xref:System.Windows.Controls.Button> is associated with a command, the command is invoked when the <xref:System.Windows.Controls.Button> is clicked.</span></span>  
  
 <span data-ttu-id="9aaf2-104">Un comando di origine verrà in genere disabilitata automaticamente se il comando che è associato non è possibile eseguire il comando sulla destinazione corrente.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-104">A command source will normally disable itself if the command it is associated with cannot execute on the current command target.</span></span>  <span data-ttu-id="9aaf2-105">Ad esempio, un <xref:System.Windows.Controls.MenuItem> associato la <xref:System.Windows.Input.ApplicationCommands.Paste%2A> comandi verranno stesso visualizzati in grigio quando la <xref:System.Windows.Input.ApplicationCommands.Paste%2A> comando non è possibile eseguire il comando sulla destinazione corrente.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-105">For example, a <xref:System.Windows.Controls.MenuItem> associated with the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command will gray itself out when the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command cannot execute on the current command target.</span></span>  
  
 <span data-ttu-id="9aaf2-106">In genere, un'origine comando resterà in ascolto il <xref:System.Windows.Input.ICommand.CanExecuteChanged> evento del comando.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-106">Normally, a command source will listen to the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event on the command.</span></span>  <span data-ttu-id="9aaf2-107">In questo informa l'origine del comando quando cambiano le condizioni sulla destinazione del comando, ad esempio perdita di stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-107">This informs the command source when conditions change on the command target, such as loss of keyboard focus.</span></span>  <span data-ttu-id="9aaf2-108">L'origine del comando può quindi eseguire una query usando il comando di <xref:System.Windows.Input.ICommand.CanExecute%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="9aaf2-108">The command source can then query the command using the <xref:System.Windows.Input.ICommand.CanExecute%2A> method.</span></span>  
  
 <span data-ttu-id="9aaf2-109">Alcune delle classi nello [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] che implementano <xref:System.Windows.Input.ICommandSource> sono: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, e <xref:System.Windows.Documents.Hyperlink>.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-109">Some of the classes in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that implement <xref:System.Windows.Input.ICommandSource> are: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, and <xref:System.Windows.Documents.Hyperlink>.</span></span>  
  
 <span data-ttu-id="9aaf2-110">In Windows Presentation Foundation, l'esecuzione di comandi di sistema, il <xref:System.Windows.Input.InputBinding.CommandTarget%2A> proprietà in un <xref:System.Windows.Input.ICommandSource> è applicabile solo quando il <xref:System.Windows.Input.ICommand> è un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-110">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="9aaf2-111">Se il <xref:System.Windows.Input.InputBinding.CommandTarget%2A> è impostata su una <xref:System.Windows.Input.ICommandSource> e il comando corrispondente non è un <xref:System.Windows.Input.RoutedCommand>, la destinazione del comando verrà ignorata.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-111">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Windows.Input.ICommandSource.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9aaf2-112">Ottiene il comando che verrà eseguito quando viene richiamata l'origine del comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aaf2-112">Gets the command that will be executed when the command source is invoked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9aaf2-113">Comando che verrà eseguito quando viene richiamata l'origine del comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aaf2-113">The command that will be executed when the command source is invoked.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj" Usage="System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9aaf2-114">Rappresenta il valore dei dati definiti dall'utente che può essere passato al comando quando viene eseguito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aaf2-114">Represents a user defined data value that can be passed to the command when it is executed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9aaf2-115">Dati specifici del comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aaf2-115">The command specific data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aaf2-116">In genere, il <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> viene usato per passare informazioni specifiche per il comando quando viene eseguita.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-116">Normally, the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> is used to pass specific information to the command when it is executed.</span></span>  <span data-ttu-id="9aaf2-117">Il tipo di dati è definito dal comando.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-117">The type of the data is defined by the command.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement" Usage="System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9aaf2-118">Oggetto su cui viene eseguito il comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aaf2-118">The object that the command is being executed on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9aaf2-119">Oggetto su cui viene eseguito il comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aaf2-119">The object that the command is being executed on.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aaf2-120">In Windows Presentation Foundation, l'esecuzione di comandi di sistema, il <xref:System.Windows.Input.InputBinding.CommandTarget%2A> proprietà in un <xref:System.Windows.Input.ICommandSource> è applicabile solo quando il <xref:System.Windows.Input.ICommand> è un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-120">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="9aaf2-121">Se il <xref:System.Windows.Input.InputBinding.CommandTarget%2A> è impostata su una <xref:System.Windows.Input.ICommandSource> e il comando corrispondente non è un <xref:System.Windows.Input.RoutedCommand>, la destinazione del comando verrà ignorata.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-121">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 <span data-ttu-id="9aaf2-122">Se usato con un <xref:System.Windows.Input.RoutedCommand>, la destinazione del comando è l'oggetto in cui la <xref:System.Windows.Input.CommandManager.Executed> e <xref:System.Windows.Input.CommandManager.CanExecute> gli eventi vengono generati.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-122">When used with a <xref:System.Windows.Input.RoutedCommand>, the command target is the object on which the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised.</span></span> <span data-ttu-id="9aaf2-123">Se il <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> proprietà non è impostata, verrà utilizzato come destinazione l'elemento con stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="9aaf2-123">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> property is not set, the element with keyboard focus will be used as the target.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>