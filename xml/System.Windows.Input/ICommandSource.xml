<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d4b769aea00916d192fe0ecc8b0cb0ba32aefb0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36507759" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandSource" />
  <TypeSignature Language="F#" Value="type ICommandSource = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce un oggetto che sa come richiamare un comando.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'origine del comando definisce come un comando viene richiamato da tale oggetto specifico.  Ad esempio, se un <xref:System.Windows.Controls.Button> associato a un comando, il comando viene richiamato quando il <xref:System.Windows.Controls.Button> fa.  
  
 Un comando di origine verrà in genere disabilitata automaticamente se il comando che è associato non è possibile eseguire il comando sulla destinazione corrente.  Ad esempio, un <xref:System.Windows.Controls.MenuItem> associata con il <xref:System.Windows.Input.ApplicationCommands.Paste%2A> comando verrà automaticamente visualizzati in grigio quando il <xref:System.Windows.Input.ApplicationCommands.Paste%2A> comando non è possibile eseguire il comando sulla destinazione corrente.  
  
 In genere, un comando di origine resterà in ascolto il <xref:System.Windows.Input.ICommand.CanExecuteChanged> evento del comando.  In questo modo l'origine del comando al variare delle condizioni nella destinazione di comando, ad esempio perdita di stato attivo della tastiera.  L'origine del comando può quindi eseguire una query utilizzando il comando di <xref:System.Windows.Input.ICommand.CanExecute%2A> metodo.  
  
 Alcune delle classi nello [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] che implementano <xref:System.Windows.Input.ICommandSource> sono: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, e <xref:System.Windows.Documents.Hyperlink>.  
  
 In Windows Presentation Foundation dei comandi di sistema, il <xref:System.Windows.Input.InputBinding.CommandTarget%2A> proprietà in un <xref:System.Windows.Input.ICommandSource> è applicabile solo quando il <xref:System.Windows.Input.ICommand> è un <xref:System.Windows.Input.RoutedCommand>.  Se il <xref:System.Windows.Input.InputBinding.CommandTarget%2A> è impostata su un <xref:System.Windows.Input.ICommandSource> e il comando corrispondente non è un <xref:System.Windows.Input.RoutedCommand>, la destinazione del comando viene ignorata.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Windows.Input.ICommandSource.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il comando che verrà eseguito quando viene richiamata l'origine del comando.</summary>
        <value>Comando che verrà eseguito quando viene richiamata l'origine del comando.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj" Usage="System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta il valore dei dati definiti dall'utente che può essere passato al comando quando viene eseguito.</summary>
        <value>Dati specifici del comando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, il <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> viene utilizzata per passare informazioni specifiche per il comando quando viene eseguita.  Il tipo di dati è definito dal comando.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement" Usage="System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Oggetto su cui viene eseguito il comando.</summary>
        <value>Oggetto su cui viene eseguito il comando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In Windows Presentation Foundation dei comandi di sistema, il <xref:System.Windows.Input.InputBinding.CommandTarget%2A> proprietà in un <xref:System.Windows.Input.ICommandSource> è applicabile solo quando il <xref:System.Windows.Input.ICommand> è un <xref:System.Windows.Input.RoutedCommand>.  Se il <xref:System.Windows.Input.InputBinding.CommandTarget%2A> è impostata su un <xref:System.Windows.Input.ICommandSource> e il comando corrispondente non è un <xref:System.Windows.Input.RoutedCommand>, la destinazione del comando viene ignorata.  
  
 Se usato con un <xref:System.Windows.Input.RoutedCommand>, la destinazione del comando è l'oggetto in cui la <xref:System.Windows.Input.CommandManager.Executed> e <xref:System.Windows.Input.CommandManager.CanExecute> vengono generati eventi. Se il <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> non è impostata, l'elemento con stato attivo della tastiera da utilizzare come destinazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>