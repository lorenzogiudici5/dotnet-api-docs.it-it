<Type Name="KeyGesture" FullName="System.Windows.Input.KeyGesture">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bad0a28c8c2e6be4a282aba0b5f688860f65741c" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48677072" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyGesture : System.Windows.Input.InputGesture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyGesture extends System.Windows.Input.InputGesture" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyGesture" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyGesture&#xA;Inherits InputGesture" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyGesture : System::Windows::Input::InputGesture" />
  <TypeSignature Language="F#" Value="type KeyGesture = class&#xA;    inherit InputGesture" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputGesture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="12570-101">Definisce una combinazione di tasti che può essere utilizzata per richiamare un comando.</span>
      <span class="sxs-lookup">
        <span data-stu-id="12570-101">Defines a keyboard combination that can be used to invoke a command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12570-102">Nella maggior parte dei casi, un <xref:System.Windows.Input.KeyGesture> deve essere associato a uno o più <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="12570-102">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="12570-103">Le eccezioni a questa regola sono le chiavi di funzione e il tastierino numerico, che può essere un valore valido <xref:System.Windows.Input.KeyGesture> da soli.</span><span class="sxs-lookup"><span data-stu-id="12570-103">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span> <span data-ttu-id="12570-104">Ad esempio, è possibile creare un <xref:System.Windows.Input.KeyGesture> utilizzando solo il tasto F12, tuttavia, per usare X della chiave un <xref:System.Windows.Input.KeyGesture> deve essere abbinato con un tasto di modifica.</span><span class="sxs-lookup"><span data-stu-id="12570-104">For example, you can create a <xref:System.Windows.Input.KeyGesture> by using only the F12 key, but to use the X key in a <xref:System.Windows.Input.KeyGesture> it must be paired with a modifier key.</span></span>  
  
 <span data-ttu-id="12570-105">In generale, è possibile</span><span class="sxs-lookup"><span data-stu-id="12570-105">In general, you can</span></span>  
  
 <span data-ttu-id="12570-106">È possibile usare una <xref:System.Windows.Input.KeyBinding> per associare un <xref:System.Windows.Input.KeyGesture> a un <xref:System.Windows.Input.ICommand>, in modo che il comando viene richiamato quando il <xref:System.Windows.Input.KeyGesture> si verifica.</span><span class="sxs-lookup"><span data-stu-id="12570-106">You can use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to an <xref:System.Windows.Input.ICommand>, so that the command is invoked when the <xref:System.Windows.Input.KeyGesture> occurs.</span></span>  
  
 <span data-ttu-id="12570-107">Per la <xref:System.Windows.Input.KeyGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] utilizzi, la proprietà che viene in genere impostata nella [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] è <xref:System.Windows.Input.KeyBinding.Gesture%2A>, nei casi in cui il movimento rappresenta una chiave standard sia un tasto di modifica.</span><span class="sxs-lookup"><span data-stu-id="12570-107">For <xref:System.Windows.Input.KeyGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usages, the property that is generally set in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is <xref:System.Windows.Input.KeyBinding.Gesture%2A>, in cases where the gesture represents both a standard key and a modifier key.</span></span> <span data-ttu-id="12570-108">È anche possibile impostare il <xref:System.Windows.Input.KeyBinding.Gesture%2A> proprietà deve essere solo una chiave di funzione o solo un modificatore di combinazione di tasti.</span><span class="sxs-lookup"><span data-stu-id="12570-108">You can also set the <xref:System.Windows.Input.KeyBinding.Gesture%2A> property to be just a function key, or just a modifier key combination.</span></span> <span data-ttu-id="12570-109">Tuttavia, è più comune per impostare il <xref:System.Windows.Input.KeyBinding.Key%2A> proprietà se l'associazione del comando previsto è una chiave di funzione con alcun modificatore, o <xref:System.Windows.Input.KeyBinding.Modifiers%2A> se l'associazione del comando prevista è per solo i tasti di modifica.</span><span class="sxs-lookup"><span data-stu-id="12570-109">However, it is more common to set the <xref:System.Windows.Input.KeyBinding.Key%2A> property if the intended command binding is a function key with no modifiers, or <xref:System.Windows.Input.KeyBinding.Modifiers%2A> if the intended command binding is for modifier keys only.</span></span>  
  
<a name="xamlAttributeUsage_KeyGesture"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="12570-110">Uso della sintassi XAML per gli attributi</span><span class="sxs-lookup"><span data-stu-id="12570-110">XAML Attribute Usage</span></span>  
  
```  
<object property="oneOrMoreModifierKeys+key"/>  
- or -  
<object property="functionKey"/>  
```  
  
<a name="xamlValues_KeyGesture"></a>   
## <a name="xaml-values"></a><span data-ttu-id="12570-111">Valori XAML</span><span class="sxs-lookup"><span data-stu-id="12570-111">XAML Values</span></span>  
 `functionKey`  
 <xref:System.Windows.Input.Key>  
  
 <span data-ttu-id="12570-112">Un singolo valore di chiave, che deve essere uno dei tasti funzione (F1-12) o il tastierino numerico.</span><span class="sxs-lookup"><span data-stu-id="12570-112">A single key value, which must be one of the function keys (F1-12) or numeric keypad keys.</span></span>  
  
 `oneOrMoreModifierKeys`  
 <span data-ttu-id="12570-113">Uno o più tasti di modifica, definiti dal <xref:System.Windows.Input.ModifierKeys> enumerati, delimitati con il carattere "+".</span><span class="sxs-lookup"><span data-stu-id="12570-113">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 `key`  
 <xref:System.Windows.Input.Key>  
  
 <span data-ttu-id="12570-114">Un singolo valore di chiave.</span><span class="sxs-lookup"><span data-stu-id="12570-114">A single key value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12570-115">Nell'esempio seguente viene illustrato come associare le <xref:System.Windows.Input.ApplicationCommands.Close%2A> comando per un <xref:System.Windows.Input.KeyGesture> usando un <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="12570-115">The following example shows how to bind the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command to a <xref:System.Windows.Input.KeyGesture> using a <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 <span data-ttu-id="12570-116">Nell'esempio seguente viene illustrato come utilizzare <xref:System.Windows.Input.KeyGesture> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="12570-116">The following example shows how to use <xref:System.Windows.Input.KeyGesture> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="12570-117">Si noti che il [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] utilizzo non dichiarare direttamente un `<KeyGesture>` elemento.</span><span class="sxs-lookup"><span data-stu-id="12570-117">Note that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage does not directly declare a `<KeyGesture>` element.</span></span> <span data-ttu-id="12570-118">Che utilizzo dell'elemento oggetto non è possibile perché <xref:System.Windows.Input.KeyGesture> non espone un costruttore predefinito pubblico.</span><span class="sxs-lookup"><span data-stu-id="12570-118">That object element usage is not possible because <xref:System.Windows.Input.KeyGesture> does not expose a public default constructor.</span></span> <span data-ttu-id="12570-119">Al contrario, il [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sull'utilizzo si avvale del comportamento per dichiarare un'intera <xref:System.Windows.Input.KeyGesture> inline come il `Gesture` valore dell'attributo.</span><span class="sxs-lookup"><span data-stu-id="12570-119">Instead, the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage uses the typeconverter behavior to declare an entire <xref:System.Windows.Input.KeyGesture> inline as the `Gesture` attribute value.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12570-120">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-120">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyGesture : System.Windows.Input.Key -&gt; System.Windows.Input.KeyGesture" Usage="new System.Windows.Input.KeyGesture key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="12570-121">Tasto associato con questo movimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-121">The key associated with this gesture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12570-122">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.KeyGesture" /> con l'oggetto <see cref="T:System.Windows.Input.Key" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12570-123">Nella maggior parte dei casi, un <xref:System.Windows.Input.KeyGesture> deve essere associato a uno o più <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="12570-123">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="12570-124">Le eccezioni a questa regola sono le chiavi di funzione e il tastierino numerico, che può essere un valore valido <xref:System.Windows.Input.KeyGesture> da soli.</span><span class="sxs-lookup"><span data-stu-id="12570-124">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12570-125">Nell'esempio seguente viene illustrato come utilizzare questo costruttore per creare un <xref:System.Windows.Input.KeyGesture> e associarlo a un <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="12570-125">The following example shows how to use this constructor to create a <xref:System.Windows.Input.KeyGesture> and associate it with a <xref:System.Windows.Input.KeyBinding>.</span></span>  <span data-ttu-id="12570-126">Il <xref:System.Windows.Input.KeyBinding> viene quindi aggiunto al <xref:System.Windows.Input.InputBindingCollection> di un <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="12570-126">The <xref:System.Windows.Input.KeyBinding> is then added to the <xref:System.Windows.Input.InputBindingCollection> of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithNoModifier](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithnomodifier)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithNoModifier](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithnomodifier)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="12570-127">
            <paramref name="key" /> non è un oggetto <see cref="T:System.Windows.Input.Key" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-127">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="12570-128">
            <paramref name="key" /> non è un oggetto <see cref="T:System.Windows.Input.KeyGesture" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-128">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyGesture : System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyGesture" Usage="new System.Windows.Input.KeyGesture (key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="12570-129">Tasto associato al movimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-129">The key associated with the gesture.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="12570-130">Tasti di modifica associati al movimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-130">The modifier keys associated with the gesture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12570-131">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.KeyGesture" /> con gli oggetti <see cref="T:System.Windows.Input.Key" /> e <see cref="T:System.Windows.Input.ModifierKeys" /> specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-131">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12570-132">Nella maggior parte dei casi, un <xref:System.Windows.Input.KeyGesture> deve essere associato a uno o più <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="12570-132">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="12570-133">Le eccezioni a questa regola sono le chiavi di funzione e il tastierino numerico, che può essere un valore valido <xref:System.Windows.Input.KeyGesture> da soli.</span><span class="sxs-lookup"><span data-stu-id="12570-133">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12570-134">Nell'esempio seguente viene illustrato come utilizzare questo costruttore per creare un <xref:System.Windows.Input.KeyGesture> e associarlo a un <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="12570-134">The following example shows how to use this constructor to create a <xref:System.Windows.Input.KeyGesture> and associate it with a <xref:System.Windows.Input.KeyBinding>.</span></span> <span data-ttu-id="12570-135">Il <xref:System.Windows.Input.KeyBinding> viene quindi aggiunto al <xref:System.Windows.Input.InputBindingCollection> di un <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="12570-135">The <xref:System.Windows.Input.KeyBinding> is then added to the <xref:System.Windows.Input.InputBindingCollection> of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="12570-136">
            <paramref name="modifiers" /> non è un oggetto <see cref="T:System.Windows.Input.ModifierKeys" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-136">
              <paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" /></span>
          </span>
          <span data-ttu-id="12570-137">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-137">-or-</span>
          </span>
          <span data-ttu-id="12570-138">
            <paramref name="key" /> non è un oggetto <see cref="T:System.Windows.Input.Key" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-138">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="12570-139">Gli oggetti <paramref name="key" /> e <paramref name="modifiers" /> non formano un valido <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-139">
              <paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers, string displayString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers, string displayString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers, System::String ^ displayString);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyGesture : System.Windows.Input.Key * System.Windows.Input.ModifierKeys * string -&gt; System.Windows.Input.KeyGesture" Usage="new System.Windows.Input.KeyGesture (key, modifiers, displayString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
        <Parameter Name="displayString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="12570-140">Tasto associato al movimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-140">The key associated with the gesture.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="12570-141">Tasti di modifica associati al movimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-141">The modifier keys associated with the gesture.</span>
          </span>
        </param>
        <param name="displayString">
          <span data-ttu-id="12570-142">Rappresentazione di stringa di <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-142">A string representation of the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12570-143">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.KeyGesture" /> con gli oggetti <see cref="T:System.Windows.Input.Key" /> e <see cref="T:System.Windows.Input.ModifierKeys" /> specificati e la stringa di visualizzazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-143">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />, <see cref="T:System.Windows.Input.ModifierKeys" />, and display string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12570-144">Il <xref:System.Windows.Input.KeyGesture.DisplayString%2A> è impostata sul `displayString` parametro.</span><span class="sxs-lookup"><span data-stu-id="12570-144">The <xref:System.Windows.Input.KeyGesture.DisplayString%2A> property is set to the `displayString` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="12570-145">
            <paramref name="modifiers" /> non è un oggetto <see cref="T:System.Windows.Input.ModifierKeys" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-145">
              <paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" /></span>
          </span>
          <span data-ttu-id="12570-146">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-146">-or-</span>
          </span>
          <span data-ttu-id="12570-147">
            <paramref name="key" /> non è un oggetto <see cref="T:System.Windows.Input.Key" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-147">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12570-148">
            <paramref name="displayString" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-148">
              <paramref name="displayString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="12570-149">Gli oggetti <paramref name="key" /> e <paramref name="modifiers" /> non formano un valido <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-149">
              <paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="DisplayString">
      <MemberSignature Language="C#" Value="public string DisplayString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.DisplayString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayString : string" Usage="System.Windows.Input.KeyGesture.DisplayString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12570-150">Ottiene una rappresentazione in forma di stringa di questo oggetto <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-150">Gets a string representation of this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12570-151">Stringa di visualizzazione per l'oggetto <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-151">The display string for this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
          <span data-ttu-id="12570-152">Il valore predefinito è <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-152">The default value is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12570-153">Se una stringa di visualizzazione non è stata impostata nel costruttore, viene restituita una stringa vuota.</span><span class="sxs-lookup"><span data-stu-id="12570-153">If a display string was not set in the constructor, an empty string is returned.</span></span>  
  
 <span data-ttu-id="12570-154">Se questa proprietà è vuota, il <xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A> metodo restituisce una stringa creata dal <xref:System.Windows.Input.KeyGesture.Key%2A> e <xref:System.Windows.Input.KeyGesture.Modifiers%2A>.</span><span class="sxs-lookup"><span data-stu-id="12570-154">If this property is empty, the <xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A> method returns a string created from the <xref:System.Windows.Input.KeyGesture.Key%2A> and <xref:System.Windows.Input.KeyGesture.Modifiers%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplayStringForCulture">
      <MemberSignature Language="C#" Value="public string GetDisplayStringForCulture (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDisplayStringForCulture(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDisplayStringForCulture (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDisplayStringForCulture(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetDisplayStringForCulture : System.Globalization.CultureInfo -&gt; string" Usage="keyGesture.GetDisplayStringForCulture culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="12570-155">Informazioni specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-155">The culture specific information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12570-156">Restituisce una stringa che può essere utilizzata per visualizzare l'oggetto <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-156">Returns a string that can be used to display the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12570-157">Stringa da visualizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-157">The string to display</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12570-158">Se la stringa da visualizzare è stata impostata dal costruttore, che viene restituita una stringa; in caso contrario, viene creata una stringa dal <xref:System.Windows.Input.KeyGesture.Key%2A> e <xref:System.Windows.Input.KeyGesture.Modifiers%2A> con tutte le conversioni necessarie governate dalla classe specificata <xref:System.Globalization.CultureInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="12570-158">If the display string was set by the constructor, that string is returned; otherwise, a string is created from the <xref:System.Windows.Input.KeyGesture.Key%2A> and <xref:System.Windows.Input.KeyGesture.Modifiers%2A> with any necessary conversions being governed by the specified <xref:System.Globalization.CultureInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key" Usage="System.Windows.Input.KeyGesture.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12570-159">Ottiene il tasto associato a questo oggetto <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-159">Gets the key associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12570-160">Tasto associato al movimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-160">The key associated with the gesture.</span>
          </span>
          <span data-ttu-id="12570-161">Il valore predefinito è <see cref="F:System.Windows.Input.Key.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-161">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12570-162">Nella maggior parte dei casi, un <xref:System.Windows.Input.KeyGesture> deve essere associato a uno o più <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="12570-162">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="12570-163">Le eccezioni a questa regola sono le chiavi di funzione e il tastierino numerico, che può essere un valore valido <xref:System.Windows.Input.KeyGesture> da soli.</span><span class="sxs-lookup"><span data-stu-id="12570-163">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (object targetElement, System.Windows.Input.InputEventArgs inputEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(object targetElement, class System.Windows.Input.InputEventArgs inputEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::Object ^ targetElement, System::Windows::Input::InputEventArgs ^ inputEventArgs);" />
      <MemberSignature Language="F#" Value="override this.Matches : obj * System.Windows.Input.InputEventArgs -&gt; bool" Usage="keyGesture.Matches (targetElement, inputEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetElement" Type="System.Object" />
        <Parameter Name="inputEventArgs" Type="System.Windows.Input.InputEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetElement">
          <span data-ttu-id="12570-164">Destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-164">The target.</span>
          </span>
        </param>
        <param name="inputEventArgs">
          <span data-ttu-id="12570-165">I dati degli eventi di input con i quali confrontare questo movimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-165">The input event data to compare this gesture to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12570-166">Determina se l'oggetto <see cref="T:System.Windows.Input.KeyGesture" /> corrisponde all'input associato all'oggetto <see cref="T:System.Windows.Input.InputEventArgs" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-166">Determines whether this <see cref="T:System.Windows.Input.KeyGesture" /> matches the input associated with the specified <see cref="T:System.Windows.Input.InputEventArgs" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12570-167">
            <see langword="true" /> se i dati degli eventi corrispondono all'oggetto <see cref="T:System.Windows.Input.KeyGesture" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-167">
              <see langword="true" /> if the event data matches this <see cref="T:System.Windows.Input.KeyGesture" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12570-168">`targetElement` può essere usato per prendere una decisione più specifica se un comando deve essere richiamato su un elemento specifico.</span><span class="sxs-lookup"><span data-stu-id="12570-168">`targetElement` can be used to make a more specific decision on whether a command should be invoked on a specific element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12570-169">Nell'esempio seguente viene illustrato come verificare se un <xref:System.Windows.Input.KeyGesture> corrisponde all'input associato a un'istanza di un <xref:System.Windows.Input.InputEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="12570-169">The following example shows how to test whether a <xref:System.Windows.Input.KeyGesture> matches the input associated with an instance of an <xref:System.Windows.Input.InputEventArgs>.</span></span> <span data-ttu-id="12570-170">Oggetto <xref:System.Windows.UIElement.KeyDown> viene creato un gestore eventi che confronta i dati dell'evento con il <xref:System.Windows.Input.KeyGesture> usando il <xref:System.Windows.Input.KeyGesture.Matches%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="12570-170">A <xref:System.Windows.UIElement.KeyDown> event handler is created that compares the event data with the <xref:System.Windows.Input.KeyGesture> by using the <xref:System.Windows.Input.KeyGesture.Matches%2A> method.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyDownHandlerKeyGestureMatches](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keydownhandlerkeygesturematches)]
 [!code-vb[commandlibrarysnippets#KeyDownHandlerKeyGestureMatches](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keydownhandlerkeygesturematches)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys" Usage="System.Windows.Input.KeyGesture.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12570-171">Ottiene i tasti di modifica associati con questo <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-171">Gets the modifier keys associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12570-172">Tasti di modifica associati al movimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-172">The modifier keys associated with the gesture.</span>
          </span>
          <span data-ttu-id="12570-173">Il valore predefinito è <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12570-173">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12570-174">Nella maggior parte dei casi, un <xref:System.Windows.Input.KeyGesture> deve essere associato a uno o più <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="12570-174">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="12570-175">Le eccezioni a questa regola sono le chiavi di funzione e il tastierino numerico, che può essere un valore valido <xref:System.Windows.Input.KeyGesture> da soli.</span><span class="sxs-lookup"><span data-stu-id="12570-175">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span> <span data-ttu-id="12570-176">Ad esempio, è possibile creare un <xref:System.Windows.Input.KeyGesture> utilizzando solo il tasto F12, tuttavia, per usare X della chiave un <xref:System.Windows.Input.KeyGesture> deve essere abbinato con un tasto di modifica.</span><span class="sxs-lookup"><span data-stu-id="12570-176">For example, you can create a <xref:System.Windows.Input.KeyGesture> by using only the F12 key, but to use the X key in a <xref:System.Windows.Input.KeyGesture> it must be paired with a modifier key.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
  </Members>
</Type>