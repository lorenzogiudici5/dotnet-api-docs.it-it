<Type Name="ICommand" FullName="System.Windows.Input.ICommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea5eff6a81bd27b0ab5ad70e628f1d59b7ee7f56" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommand" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommand" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommand" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationCore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5a08f-101">Definisce un comando.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a08f-101">Defines a command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a08f-102"><xref:System.Windows.Input.RoutedCommand> e <xref:System.Windows.Input.RoutedUICommand> sono le due implementazioni del <xref:System.Windows.Input.ICommand> interfaccia [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5a08f-102"><xref:System.Windows.Input.RoutedCommand> and <xref:System.Windows.Input.RoutedUICommand> are two implementations of the <xref:System.Windows.Input.ICommand> interface in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span></span>  
  
## <a name="icommand-in-windows-runtime-apps"></a><span data-ttu-id="5a08f-103">ICommand in Windows Runtime App</span><span class="sxs-lookup"><span data-stu-id="5a08f-103">ICommand in Windows Runtime apps</span></span>  
 <span data-ttu-id="5a08f-104">Il <xref:System.Windows.Input.ICommand> interfaccia definisce il contratto di codice per i comandi che vengono scritti nelle applicazioni .NET per Windows Runtime.</span><span class="sxs-lookup"><span data-stu-id="5a08f-104">The <xref:System.Windows.Input.ICommand> interface is the code contract for commands that are written in .NET for Windows Runtime apps.</span></span> <span data-ttu-id="5a08f-105">Questi comandi forniscono il comportamento di esecuzione di comandi per gli elementi dell'interfaccia utente, ad esempio un XAML di Windows Runtime `Button` e in particolare un `AppBarButton`.</span><span class="sxs-lookup"><span data-stu-id="5a08f-105">These commands provide the commanding behavior for UI elements such as a Windows Runtime XAML `Button` and in particular an `AppBarButton`.</span></span> <span data-ttu-id="5a08f-106">Se si definiscono i comandi per le app di Windows Runtime utilizzare sostanzialmente le stesse tecniche utilizzate per definire i comandi per un'app .NET.</span><span class="sxs-lookup"><span data-stu-id="5a08f-106">If you're defining commands for Windows Runtime apps you use basically the same techniques you'd use for defining commands for a .NET app.</span></span> <span data-ttu-id="5a08f-107">Implementare il comando definendo una classe che implementa <xref:System.Windows.Input.ICommand> e implementare in modo specifico il <xref:System.Windows.Input.ICommand.Execute%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="5a08f-107">Implement the command by defining a class that implements <xref:System.Windows.Input.ICommand> and specifically implement the <xref:System.Windows.Input.ICommand.Execute%2A> method.</span></span>  
  
 <span data-ttu-id="5a08f-108">XAML per Windows Runtime non supporta x`:Static`, pertanto non tenta di utilizzare il `x:Static` estensione di markup, se il comando viene utilizzato da Windows Runtime XAML.</span><span class="sxs-lookup"><span data-stu-id="5a08f-108">XAML for Windows Runtime does not support x`:Static`, so don't attempt to use the `x:Static` markup extension if the command is used from Windows Runtime XAML.</span></span> <span data-ttu-id="5a08f-109">Inoltre, Windows Runtime non dispone di tutte le librerie di comando predefiniti, in modo illustrata di seguito la sintassi XAML non è applicabile nel caso in cui si sta implementando l'interfaccia e la definizione di comando per l'utilizzo di Windows Runtime.</span><span class="sxs-lookup"><span data-stu-id="5a08f-109">Also, the Windows Runtime does not have any predefined command libraries, so the XAML syntax shown here doesn't really apply for the case where you're implementing the interface and defining the command for Windows Runtime usage.</span></span>  
  
<a name="xamlTextUsage_ICommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5a08f-110">Uso della sintassi XAML per gli attributi</span><span class="sxs-lookup"><span data-stu-id="5a08f-110">XAML Attribute Usage</span></span>  
 <span data-ttu-id="5a08f-111">\<*proprietà dell'oggetto*= "*nomecomandopredefinito*" / ></span><span class="sxs-lookup"><span data-stu-id="5a08f-111">\<*object property*="*predefinedCommandName*"/></span></span>  
  
 <span data-ttu-id="5a08f-112">\- oppure -</span><span class="sxs-lookup"><span data-stu-id="5a08f-112">\- or -</span></span>  
  
 <span data-ttu-id="5a08f-113">\<*object property*="*predefinedCommandName.predefinedCommandName*"/></span><span class="sxs-lookup"><span data-stu-id="5a08f-113">\<*object property*="*predefinedCommandName.predefinedCommandName*"/></span></span>  
  
 <span data-ttu-id="5a08f-114">\- oppure -</span><span class="sxs-lookup"><span data-stu-id="5a08f-114">\- or -</span></span>  
  
 <span data-ttu-id="5a08f-115">\<*proprietà dell'oggetto*= "{ *nomeclassepersonalizzata. nomecomandopersonalizzato*}" / ></span><span class="sxs-lookup"><span data-stu-id="5a08f-115">\<*object property*="{ *customClassName.customCommandName*}"/></span></span>  
  
<a name="xamlValues_ICommand"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5a08f-116">Valori XAML</span><span class="sxs-lookup"><span data-stu-id="5a08f-116">XAML Values</span></span>  
 <span data-ttu-id="5a08f-117">*predefinedClassName*</span><span class="sxs-lookup"><span data-stu-id="5a08f-117">*predefinedClassName*</span></span>  
 <span data-ttu-id="5a08f-118">Una delle classi di comandi predefiniti.</span><span class="sxs-lookup"><span data-stu-id="5a08f-118">One of the predefined command classes.</span></span>  
  
 <span data-ttu-id="5a08f-119">*predefinedCommandName*</span><span class="sxs-lookup"><span data-stu-id="5a08f-119">*predefinedCommandName*</span></span>  
 <span data-ttu-id="5a08f-120">Uno dei comandi predefiniti.</span><span class="sxs-lookup"><span data-stu-id="5a08f-120">One of the predefined commands.</span></span>  
  
 <span data-ttu-id="5a08f-121">*customClassName*</span><span class="sxs-lookup"><span data-stu-id="5a08f-121">*customClassName*</span></span>  
 <span data-ttu-id="5a08f-122">Una classe personalizzata che contiene il comando personalizzato.</span><span class="sxs-lookup"><span data-stu-id="5a08f-122">A custom class that contains the custom command.</span></span> <span data-ttu-id="5a08f-123">Le classi personalizzate richiedono in genere un `xlmns` anteporre al mapping, vedere [spazi dei nomi XAML e Mapping Namespace per XAML WPF](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="5a08f-123">Custom classes generally require an `xlmns` prefix mapping; see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="5a08f-124">*customCommandName*</span><span class="sxs-lookup"><span data-stu-id="5a08f-124">*customCommandName*</span></span>  
 <span data-ttu-id="5a08f-125">Un comando personalizzato.</span><span class="sxs-lookup"><span data-stu-id="5a08f-125">A custom command.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public bool CanExecute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecute (parameter As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecute(System::Object ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="5a08f-126">Dati usati dal comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a08f-126">Data used by the command.</span>
          </span>
          <span data-ttu-id="5a08f-127">Se il comando non richiede dati da passare, questo oggetto può essere impostato su <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a08f-127">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a08f-128">Definisce il metodo che determina se il comando può essere eseguito nello stato corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a08f-128">Defines the method that determines whether the command can execute in its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a08f-129">
            <see langword="true" /> se il comando può essere eseguito. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a08f-129">
              <see langword="true" /> if this command can be executed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a08f-130">In genere, un'origine comando chiama il <xref:System.Windows.Input.ICommand.CanExecute%2A> (metodo) quando il <xref:System.Windows.Input.ICommand.CanExecuteChanged> evento viene generato.</span><span class="sxs-lookup"><span data-stu-id="5a08f-130">Typically, a command source calls the <xref:System.Windows.Input.ICommand.CanExecute%2A> method when the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="CanExecuteChanged">
      <MemberSignature Language="C#" Value="event EventHandler CanExecuteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanExecuteChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.ICommand.CanExecuteChanged" />
      <MemberSignature Language="VB.NET" Value="Event CanExecuteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanExecuteChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a08f-131">Si verifica quando ci sono modifiche che determinano se il comando deve o meno essere eseguito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a08f-131">Occurs when changes occur that affect whether or not the command should execute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a08f-132">In genere, un'origine comando chiama <xref:System.Windows.Input.ICommand.CanExecute%2A> al comando quando si verifica questo evento.</span><span class="sxs-lookup"><span data-stu-id="5a08f-132">Normally, a command source calls <xref:System.Windows.Input.ICommand.CanExecute%2A> on the command when this event occurs.</span></span>  
  
 <span data-ttu-id="5a08f-133">In genere, se non è possibile eseguire il comando, l'origine del comando disabilita automaticamente.</span><span class="sxs-lookup"><span data-stu-id="5a08f-133">Normally, if the command cannot execute, the command source disables itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ICommand.Execute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Object ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="5a08f-134">Dati usati dal comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a08f-134">Data used by the command.</span>
          </span>
          <span data-ttu-id="5a08f-135">Se il comando non richiede dati da passare, questo oggetto può essere impostato su <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a08f-135">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a08f-136">Definisce il metodo da chiamare quando il comando viene richiamato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a08f-136">Defines the method to be called when the command is invoked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>