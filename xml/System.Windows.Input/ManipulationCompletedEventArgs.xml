<Type Name="ManipulationCompletedEventArgs" FullName="System.Windows.Input.ManipulationCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="537c4afdad3b091f6154a6cdd5f95058455339de" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36506342" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManipulationCompletedEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationCompletedEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationCompletedEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationCompletedEventArgs sealed : System::Windows::Input::InputEventArgs" />
  <TypeSignature Language="F#" Value="type ManipulationCompletedEventArgs = class&#xA;    inherit InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0b137-101">Fornisce dati per l'evento <see cref="E:System.Windows.UIElement.ManipulationCompleted" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b137-101">Provides data for the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b137-102">Per ulteriori informazioni sulle modifiche, vedere la [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="0b137-102">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span> <span data-ttu-id="0b137-103">Per un esempio di un'applicazione che risponde alle modifiche, vedere [procedura dettagliata: creazione del primo Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="0b137-103">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationCompletedEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Function Cancel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; bool" Usage="manipulationCompletedEventArgs.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b137-104">Annulla la modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-104">Cancels the manipulation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b137-105">
            <see langword="true" /> se la modifica è stata annullata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-105">
              <see langword="true" /> if the manipulation was successfully canceled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b137-106">Se il metodo ha esito positivo, il valore predefinito <xref:System.Windows.Input.TouchDevice> precedente invia eventi di tocco come spostamento verso il basso, lo spostamento del mouse o il mouse gli eventi per l'elemento.</span><span class="sxs-lookup"><span data-stu-id="0b137-106">If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch events as mouse down, mouse move, or mouse up events to the element.</span></span> <span data-ttu-id="0b137-107">Non è possibile promuovere il tocco per gli eventi del mouse se il <xref:System.Windows.UIElement.ManipulationCompleted> evento si verifica durante l'inerzia.</span><span class="sxs-lookup"><span data-stu-id="0b137-107">Touch cannot be promoted to mouse events if the <xref:System.Windows.UIElement.ManipulationCompleted> event occurs during inertia.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalVelocities">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationVelocities FinalVelocities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationVelocities FinalVelocities" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationCompletedEventArgs.FinalVelocities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FinalVelocities As ManipulationVelocities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationVelocities ^ FinalVelocities { System::Windows::Input::ManipulationVelocities ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FinalVelocities : System.Windows.Input.ManipulationVelocities" Usage="System.Windows.Input.ManipulationCompletedEventArgs.FinalVelocities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationVelocities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b137-108">Ottiene le velocità utilizzate per la manipolazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-108">Gets the velocities that are used for the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b137-109">Velocità utilizzate per la manipolazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-109">The velocities that are used for the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="manipulationCompletedEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="genericTarget">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInertial">
      <MemberSignature Language="C#" Value="public bool IsInertial { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInertial" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationCompletedEventArgs.IsInertial" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInertial As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInertial { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInertial : bool" Usage="System.Windows.Input.ManipulationCompletedEventArgs.IsInertial" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b137-110">Ottiene un valore che indica se l'evento <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> si verifica durante l'inerzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-110">Gets a value that indicates whether the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event occurs during inertia.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b137-111">
            <see langword="true" /> se l'evento <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> si verifica durante l'inerzia; <see langword="false" /> se l'evento si verifica mentre l'utente è a contatto con l'oggetto <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-111">
              <see langword="true" /> if the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event occurs during inertia; <see langword="false" /> if the event occurs while the user has contact with the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationContainer">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement ManipulationContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement ManipulationContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationContainer As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ ManipulationContainer { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ManipulationContainer : System.Windows.IInputElement" Usage="System.Windows.Input.ManipulationCompletedEventArgs.ManipulationContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b137-112">Ottiene il contenitore che definisce le coordinate per la manipolazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-112">Gets the container that defines the coordinates for the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b137-113">Contenitore che definisce le coordinate per la manipolazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-113">The container that defines the coordinates for the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point ManipulationOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point ManipulationOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point ManipulationOrigin { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.ManipulationOrigin : System.Windows.Point" Usage="System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b137-114">Ottiene il punto da cui ha origine la manipolazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-114">Gets the point from which the manipulation originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b137-115">Punto da cui ha origine la manipolazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-115">The point from which the manipulation originated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b137-116">Se la modifica, due punti di contatto di <xref:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin%2A> proprietà è il punto tra i due punti di contatto.</span><span class="sxs-lookup"><span data-stu-id="0b137-116">If two points of contact initiated the manipulation, the <xref:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin%2A> property is the point between the two points of contact.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Manipulators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt; Manipulators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.IManipulator&gt; Manipulators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationCompletedEventArgs.Manipulators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Manipulators As IEnumerable(Of IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ Manipulators { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Manipulators : seq&lt;System.Windows.Input.IManipulator&gt;" Usage="System.Windows.Input.ManipulationCompletedEventArgs.Manipulators" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b137-117">Ottiene un insieme di oggetti che rappresenta i contatti tocco per la modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-117">Gets a collection of objects that represents the touch contacts for the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b137-118">Insieme di oggetti che rappresenta i contatti tocco per la modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-118">A collection of objects that represents the touch contacts for the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalManipulation">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationDelta TotalManipulation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationDelta TotalManipulation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalManipulation As ManipulationDelta" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationDelta ^ TotalManipulation { System::Windows::Input::ManipulationDelta ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalManipulation : System.Windows.Input.ManipulationDelta" Usage="System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationDelta</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b137-119">Ottiene la trasformazione totale che si verifica durante la manipolazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-119">Gets the total transformation that occurs during the current manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b137-120">Trasformazione totale che si verifica durante la manipolazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b137-120">The total transformation that occurs during the current manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>