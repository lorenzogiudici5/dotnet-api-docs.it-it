<Type Name="StylusPoint" FullName="System.Windows.Input.StylusPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c0b0b8eb5c46c6b43f53dc938448d3429ddcf9a6" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52227547" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct StylusPoint : IEquatable&lt;System.Windows.Input.StylusPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit StylusPoint extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Input.StylusPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.StylusPoint" />
  <TypeSignature Language="VB.NET" Value="Public Structure StylusPoint&#xA;Implements IEquatable(Of StylusPoint)" />
  <TypeSignature Language="C++ CLI" Value="public value class StylusPoint : IEquatable&lt;System::Windows::Input::StylusPoint&gt;" />
  <TypeSignature Language="F#" Value="type StylusPoint = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Input.StylusPoint&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Rappresenta un solo punto dati raccolto dal digitalizzatore e dallo stilo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.Input.StylusPoint> raccoglie i dati quando un utente esegue l'input penna utilizzando il digitalizzatore. Poiché le informazioni che segnala un digitalizzatore variano a seconda del produttore, la proprietà all'interno di un <xref:System.Windows.Input.StylusPoint> può variare. Per determinare se una proprietà è contenuta la <xref:System.Windows.Input.StylusPoint>, chiamare il <xref:System.Windows.Input.StylusPoint.HasProperty%2A> (metodo). Il <xref:System.Windows.Input.StylusPoint.Description%2A> proprietà contiene un <xref:System.Windows.Input.StylusPointDescription> che specifica le proprietà che si trovano nel <xref:System.Windows.Input.StylusPoint>. Tutti i <xref:System.Windows.Input.StylusPoint> oggetti contengono proprietà che specificano la (x, y) delle coordinate, nonché la pressione.  
  
   
  
## Examples  
 L'esempio seguente ottiene i nomi delle proprietà e i valori per ognuno <xref:System.Windows.Input.StylusPoint> in un <xref:System.Windows.Input.StylusPointCollection>. In questo esempio si presuppone che esista una <xref:System.Windows.Controls.TextBlock> chiamato `packetOutput`.  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPoint(double x, double y);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.StylusPoint : double * double -&gt; System.Windows.Input.StylusPoint" Usage="new System.Windows.Input.StylusPoint (x, y)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata X dell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="y">Coordinata Y dell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.StylusPoint" /> usando le coordinate (x, y) specificate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un <xref:System.Windows.Input.StylusPoint>.  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y, float pressureFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float32 pressureFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, pressureFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPoint(double x, double y, float pressureFactor);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.StylusPoint : double * double * single -&gt; System.Windows.Input.StylusPoint" Usage="new System.Windows.Input.StylusPoint (x, y, pressureFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="pressureFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata X dell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="y">Coordinata Y dell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="pressureFactor">Quantità di pressione applicata all'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.StylusPoint" /> utilizzando le coordinate specificate (x, y) e la pressione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `pressureFactor` deve avere un valore compreso tra 0 e 1 inclusi. Il valore 0 indica che nessun utilizzo viene applicato, mentre un valore pari a 1 indica che viene applicata la quantità massima di un utilizzo elevato. Il valore 0,5 indica che viene applicato, 50% della pressione massima e così via.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un <xref:System.Windows.Input.StylusPoint>.  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pressureFactor" /> è minore di 0 o maggiore di 1.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y, float pressureFactor, System.Windows.Input.StylusPointDescription stylusPointDescription, int[] additionalValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float32 pressureFactor, class System.Windows.Input.StylusPointDescription stylusPointDescription, int32[] additionalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double,System.Single,System.Windows.Input.StylusPointDescription,System.Int32[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPoint(double x, double y, float pressureFactor, System::Windows::Input::StylusPointDescription ^ stylusPointDescription, cli::array &lt;int&gt; ^ additionalValues);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.StylusPoint : double * double * single * System.Windows.Input.StylusPointDescription * int[] -&gt; System.Windows.Input.StylusPoint" Usage="new System.Windows.Input.StylusPoint (x, y, pressureFactor, stylusPointDescription, additionalValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="pressureFactor" Type="System.Single" />
        <Parameter Name="stylusPointDescription" Type="System.Windows.Input.StylusPointDescription" />
        <Parameter Name="additionalValues" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata X dell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="y">Coordinata Y dell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="pressureFactor">Quantità di pressione applicata all'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="stylusPointDescription">Classe <see cref="T:System.Windows.Input.StylusPointDescription" /> che specifica le proprietà aggiuntive archiviate nell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="additionalValues">Matrice di interi con segno a 32 bit contenente i valori delle proprietà definite in <paramref name="stylusPointDescription" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.StylusPoint" /> usando le coordinate specificate (X, Y), un elemento <paramref name="pressureFactor" /> e altri parametri specificati nell'oggetto <see cref="T:System.Windows.Input.StylusPointDescription" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un <xref:System.Windows.Input.StylusPoint>.  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pressureFactor" /> è minore di 0 o maggiore di 1.  
  
oppure 
I valori in <paramref name="additionalValues" /> che corrispondono alle proprietà dei pulsanti sono diversi da 0 e 1.</exception>
        <exception cref="T:System.ArgumentException">Il numero di valori in <paramref name="additionalValues" /> non corrisponde al numero delle proprietà in <paramref name="stylusPointDescription" /> meno 3.</exception>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointDescription Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPointDescription Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As StylusPointDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::StylusPointDescription ^ Description { System::Windows::Input::StylusPointDescription ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : System.Windows.Input.StylusPointDescription" Usage="System.Windows.Input.StylusPoint.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Input.StylusPointDescription" /> che specifica le proprietà archiviate nell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
        <value>L'oggetto <see cref="T:System.Windows.Input.StylusPointDescription" /> specifica le proprietà archiviate nell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente usa il <xref:System.Windows.Input.StylusPoint.Description%2A> i valori delle proprietà per ottenere proprietà dal <xref:System.Windows.Input.StylusPoint> in un <xref:System.Windows.Input.StylusPointCollection>. In questo esempio si presuppone che esista una <xref:System.Windows.Controls.TextBlock> chiamato `packetOutput`.  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Confronta due oggetti <see cref="T:System.Windows.Input.StylusPoint" /> per stabilirne l'uguaglianza.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stylusPoint.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">L'oggetto <see cref="T:System.Windows.Input.StylusPoint" /> da confrontare con l'oggetto <see cref="T:System.Windows.Input.StylusPoint" /> corrente.</param>
        <summary>Restituisce un valore che indica se l'oggetto specificato equivale all'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
        <returns>
          <see langword="true" /> se gli oggetti sono uguali. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente verifica due <xref:System.Windows.Input.StylusPoint> oggetti per verificarne l'uguaglianza. Poiché il <xref:System.Windows.Input.StylusPoint.X%2A>, <xref:System.Windows.Input.StylusPoint.Y%2A>, e <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> proprietà sul `point1` e `point2` sono impostate sullo stesso valore, "StylusPoint due oggetti sono uguali." Verrà visualizzato.  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#7](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#7)]
[!code-vb[PacketSpy#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Input.StylusPoint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Input.StylusPoint value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Input::StylusPoint value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Input.StylusPoint -&gt; bool" Usage="stylusPoint.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="value">L'oggetto <see cref="T:System.Windows.Input.StylusPoint" /> da confrontare con l'oggetto <see cref="T:System.Windows.Input.StylusPoint" /> corrente.</param>
        <summary>Restituisce un valore booleano che indica se l'oggetto <see cref="T:System.Windows.Input.StylusPoint" /> equivale all'oggetto <see cref="T:System.Windows.Input.StylusPoint" /> corrente.</summary>
        <returns>
          <see langword="true" /> se gli oggetti <see cref="T:System.Windows.Input.StylusPoint" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente verifica due <xref:System.Windows.Input.StylusPoint> oggetti per verificarne l'uguaglianza. Poiché il <xref:System.Windows.Input.StylusPoint.X%2A>, <xref:System.Windows.Input.StylusPoint.Y%2A>, e <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> proprietà sul `point1` e `point2` sono impostate sullo stesso valore, "StylusPoint due oggetti sono uguali." Verrà visualizzato.  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#7](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#7)]
[!code-vb[PacketSpy#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (stylusPoint1 As StylusPoint, stylusPoint2 As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Input::StylusPoint stylusPoint1, System::Windows::Input::StylusPoint stylusPoint2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Input.StylusPoint * System.Windows.Input.StylusPoint -&gt; bool" Usage="System.Windows.Input.StylusPoint.Equals (stylusPoint1, stylusPoint2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">Primo oggetto <see cref="T:System.Windows.Input.StylusPoint" /> da confrontare.</param>
        <param name="stylusPoint2">Secondo oggetto <see cref="T:System.Windows.Input.StylusPoint" /> da confrontare.</param>
        <summary>Restituisce un valore booleano che indica se i due oggetti <see cref="T:System.Windows.Input.StylusPoint" /> specificati sono uguali.</summary>
        <returns>
          <see langword="true" /> se gli oggetti <see cref="T:System.Windows.Input.StylusPoint" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente verifica due <xref:System.Windows.Input.StylusPoint> oggetti per verificarne l'uguaglianza. Poiché il <xref:System.Windows.Input.StylusPoint.X%2A>, <xref:System.Windows.Input.StylusPoint.Y%2A>, e <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> proprietà sul `point1` e `point2` sono impostate sullo stesso valore, "StylusPoint due oggetti sono uguali." Verrà visualizzato.  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#8](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#8)]
[!code-vb[PacketSpy#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stylusPoint.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il codice hash per l'istanza.</summary>
        <returns>Intero con segno a 32 bit che rappresenta il codice hash per questa istanza.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public int GetPropertyValue (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPropertyValue(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.GetPropertyValue(System.Windows.Input.StylusPointProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetPropertyValue(System::Windows::Input::StylusPointProperty ^ stylusPointProperty);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : System.Windows.Input.StylusPointProperty -&gt; int" Usage="stylusPoint.GetPropertyValue stylusPointProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">Oggetto <see cref="T:System.Windows.Input.StylusPointProperty" /> che specifica il valore della proprietà da ottenere.</param>
        <summary>Restituisce il valore della proprietà specificata.</summary>
        <returns>Valore dell'oggetto <see cref="T:System.Windows.Input.StylusPointProperty" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per verificare se il <xref:System.Windows.Input.StylusPoint> contiene la proprietà specificata, chiamare il <xref:System.Windows.Input.StylusPoint.HasProperty%2A> prima di chiamare il <xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A> metodo o il <xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A> (metodo).  
  
   
  
## Examples  
 L'esempio seguente controlla l'esistenza di una proprietà del punto dello stilo prima di ottenere il valore della proprietà. In questo esempio si presuppone che esista una <xref:System.Windows.Input.StylusPoint> chiamato `point`.  
  
 [!code-csharp[PacketSpy#11](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#11)]
 [!code-vb[PacketSpy#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stylusPointProperty" /> non è una della proprietà presenti in <see cref="P:System.Windows.Input.StylusPoint.Description" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasProperty">
      <MemberSignature Language="C#" Value="public bool HasProperty (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasProperty(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.HasProperty(System.Windows.Input.StylusPointProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasProperty(System::Windows::Input::StylusPointProperty ^ stylusPointProperty);" />
      <MemberSignature Language="F#" Value="member this.HasProperty : System.Windows.Input.StylusPointProperty -&gt; bool" Usage="stylusPoint.HasProperty stylusPointProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">L'oggetto <see cref="T:System.Windows.Input.StylusPointProperty" /> da verificare nell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <summary>Restituisce se l'oggetto <see cref="T:System.Windows.Input.StylusPoint" /> corrente contiene la proprietà specificata.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Windows.Input.StylusPointProperty" /> specificato è presente nell'oggetto <see cref="T:System.Windows.Input.StylusPoint" /> corrente; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per verificare se il <xref:System.Windows.Input.StylusPoint> contiene la proprietà specificata, chiamare il <xref:System.Windows.Input.StylusPoint.HasProperty%2A> prima di chiamare il <xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A> metodo o il <xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A> (metodo).  
  
   
  
## Examples  
 L'esempio seguente controlla l'esistenza di una proprietà del punto dello stilo prima di ottenere il valore della proprietà. In questo esempio si presuppone che esista una <xref:System.Windows.Input.StylusPoint> chiamato `point`.  
  
 [!code-csharp[PacketSpy#11](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#11)]
 [!code-vb[PacketSpy#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxXY">
      <MemberSignature Language="C#" Value="public static readonly double MaxXY;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaxXY" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.StylusPoint.MaxXY" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxXY As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaxXY;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxXY : double" Usage="System.Windows.Input.StylusPoint.MaxXY" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica il valore maggiore valido per una coppia di coordinate (x, y).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente garantisce che il <xref:System.Windows.Input.StylusPoint.X%2A> proprietà del <xref:System.Windows.Input.StylusPoint> è impostata su un valore valido.  
  
 [!code-csharp[PacketSpy#14](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#14)]
 [!code-vb[PacketSpy#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinXY">
      <MemberSignature Language="C#" Value="public static readonly double MinXY;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MinXY" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.StylusPoint.MinXY" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinXY As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MinXY;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinXY : double" Usage="System.Windows.Input.StylusPoint.MinXY" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica il valore minore valido per una coppia di coordinate (x, y).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente garantisce che il <xref:System.Windows.Input.StylusPoint.X%2A> proprietà del <xref:System.Windows.Input.StylusPoint> è impostata su un valore valido.  
  
 [!code-csharp[PacketSpy#14](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#14)]
 [!code-vb[PacketSpy#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Equality(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (stylusPoint1 As StylusPoint, stylusPoint2 As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Input::StylusPoint stylusPoint1, System::Windows::Input::StylusPoint stylusPoint2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Input.StylusPoint * System.Windows.Input.StylusPoint -&gt; bool" Usage="stylusPoint1 = stylusPoint2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">Primo oggetto <see cref="T:System.Windows.Input.StylusPoint" /> da confrontare.</param>
        <param name="stylusPoint2">Secondo oggetto <see cref="T:System.Windows.Input.StylusPoint" /> da confrontare.</param>
        <summary>Confronta due oggetti <see cref="T:System.Windows.Input.StylusPoint" /> specificati per determinarne l'uguaglianza.</summary>
        <returns>
          <see langword="true" /> se gli oggetti <see cref="T:System.Windows.Input.StylusPoint" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[È il metodo equivalente per l'operatore <xref:System.Windows.Input.StylusPoint.Equals%28System.Windows.Input.StylusPoint%2CSystem.Windows.Input.StylusPoint%29?displayProperty=nameWithType>  
  
## Examples  
 Nell'esempio seguente verifica due <xref:System.Windows.Input.StylusPoint> oggetti per verificarne l'uguaglianza. Poiché il <xref:System.Windows.Input.StylusPoint.X%2A>, <xref:System.Windows.Input.StylusPoint.Y%2A>, e <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> proprietà sul `point1` e `point2` sono impostate sullo stesso valore, "StylusPoint due oggetti sono uguali." Verrà visualizzato.  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#9](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#9)]
[!code-vb[PacketSpy#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Point (System.Windows.Input.StylusPoint stylusPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Explicit(valuetype System.Windows.Input.StylusPoint stylusPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Explicit(System.Windows.Input.StylusPoint)~System.Windows.Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Point(System::Windows::Input::StylusPoint stylusPoint);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Input.StylusPoint -&gt; System.Windows.Point" Usage="System.Windows.Input.StylusPoint.op_Explicit stylusPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint">L'oggetto <see cref="T:System.Windows.Input.StylusPoint" /> per eseguire il cast su un oggetto <see cref="T:System.Windows.Point" />.</param>
        <summary>Esegue il cast dell'oggetto <see cref="T:System.Windows.Input.StylusPoint" /> su un oggetto <see cref="T:System.Windows.Point" /> specificato.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Point" /> che contiene le stesse coordinate (x,y) di <paramref name="stylusPoint" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Nell'esempio seguente viene illustrato come eseguire il cast di un <xref:System.Windows.Input.StylusPoint> a un <xref:System.Windows.Point> oggetto su cui disegnare un cerchio all'inizio di ciascun oggetto stroke. In questo esempio si presuppone che esista un' <xref:System.Windows.Controls.InkCanvas> oggetto chiamato `inkcanvas1` e che il <xref:System.Windows.UIElement.StylusDown> eventi sono connesso al gestore eventi nell'esempio.

           [!code-csharp[PacketSpy#13](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#13)]
           [!code-vb[PacketSpy#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#13)]  

           ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Inequality(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (stylusPoint1 As StylusPoint, stylusPoint2 As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Input::StylusPoint stylusPoint1, System::Windows::Input::StylusPoint stylusPoint2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Input.StylusPoint * System.Windows.Input.StylusPoint -&gt; bool" Usage="System.Windows.Input.StylusPoint.op_Inequality (stylusPoint1, stylusPoint2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">Primo oggetto <see cref="T:System.Windows.Input.StylusPoint" /> da confrontare.</param>
        <param name="stylusPoint2">Secondo oggetto <see cref="T:System.Windows.Input.StylusPoint" /> da confrontare.</param>
        <summary>Restituisce un valore booleano che indica se gli oggetti <see cref="T:System.Windows.Input.StylusPoint" /> specificati non sono uguali.</summary>
        <returns>
          <see langword="true" /> se gli oggetti <see cref="T:System.Windows.Input.StylusPoint" /> specificati non sono uguali; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Il metodo equivalente per l'operatore è la negazione del <xref:System.Windows.Input.StylusPoint.Equals%2A>  
  
## Examples  
 Nell'esempio seguente viene illustrato come controllare due <xref:System.Windows.Input.StylusPoint> oggetti per verificarne la disuguaglianza. Poiché il <xref:System.Windows.Input.StylusPoint.X%2A>, <xref:System.Windows.Input.StylusPoint.Y%2A>, e <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> proprietà sul `point1` e `point2` sono impostate sullo stesso valore, "StylusPoint due oggetti sono uguali." Verrà visualizzato.  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#10](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#10)]
[!code-vb[PacketSpy#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PressureFactor">
      <MemberSignature Language="C#" Value="public float PressureFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PressureFactor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.PressureFactor" />
      <MemberSignature Language="VB.NET" Value="Public Property PressureFactor As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float PressureFactor { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.PressureFactor : single with get, set" Usage="System.Windows.Input.StylusPoint.PressureFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore tra 0 e 1 che riflette la quantità di pressione che lo stilo applica alla superficie del digitalizzatore quando viene creato l'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
        <value>Valore tra 0 e 1 che indica la quantità di pressione che lo stilo applica alla superficie del digitalizzatore quando viene creato l'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore della <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> proprietà viene espressa come valore compreso tra 0 e 1. Il valore 0 indica che nessun utilizzo viene applicato, mentre un valore pari a 1 indica che viene applicata la quantità massima di un utilizzo elevato. Il valore 0,5 indica che viene applicato, 50% della pressione massima e così via.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> proprietà da recuperare e visualizzare il valore della pressione per ognuno <xref:System.Windows.Input.StylusPoint> in un <xref:System.Windows.Input.StylusPointCollection> chiamato `points`. In questo esempio si presuppone che esista una <xref:System.Windows.Controls.TextBlock> chiamato `packetOutput`.  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La proprietà <see cref="P:System.Windows.Input.StylusPoint.PressureFactor" /> è impostata su un valore inferiore a 0 o maggiore di 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="public void SetPropertyValue (System.Windows.Input.StylusPointProperty stylusPointProperty, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyValue(class System.Windows.Input.StylusPointProperty stylusPointProperty, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.SetPropertyValue(System.Windows.Input.StylusPointProperty,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyValue(System::Windows::Input::StylusPointProperty ^ stylusPointProperty, int value);" />
      <MemberSignature Language="F#" Value="member this.SetPropertyValue : System.Windows.Input.StylusPointProperty * int -&gt; unit" Usage="stylusPoint.SetPropertyValue (stylusPointProperty, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">Oggetto <see cref="T:System.Windows.Input.StylusPointProperty" /> che specifica il valore della proprietà da impostare.</param>
        <param name="value">Valore della proprietà.</param>
        <summary>Imposta la proprietà specificata sul valore specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per verificare se il <xref:System.Windows.Input.StylusPoint> contiene la proprietà specificata, chiamare il <xref:System.Windows.Input.StylusPoint.HasProperty%2A> prima di chiamare il <xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A> metodo o il <xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A> (metodo).  
  
   
  
## Examples  
 L'esempio seguente controlla l'esistenza di una proprietà del punto dello stilo prima di impostare il valore della proprietà. In questo esempio si presuppone che esista una <xref:System.Windows.Input.StylusPoint> chiamato `point`.  
  
 [!code-csharp[PacketSpy#12](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#12)]
 [!code-vb[PacketSpy#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stylusPointProperty" /> non è una della proprietà presenti in <see cref="P:System.Windows.Input.StylusPoint.Description" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point ToPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point ToPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.ToPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPoint () As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point ToPoint();" />
      <MemberSignature Language="F#" Value="member this.ToPoint : unit -&gt; System.Windows.Point" Usage="stylusPoint.ToPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converte <see cref="T:System.Windows.Input.StylusPoint" /> in <see cref="T:System.Windows.Point" />.</summary>
        <returns>Struttura <see cref="T:System.Windows.Point" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Input.StylusPoint.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore della coordinata X dell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
        <value>Coordinata X dell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente ottiene i <xref:System.Windows.Input.StylusPoint.X%2A> proprietà per ognuno <xref:System.Windows.Input.StylusPoint> in un <xref:System.Windows.Input.StylusPointCollection>. In questo esempio si presuppone che esista una <xref:System.Windows.Controls.TextBlock> chiamato `packetOutput`.  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Input.StylusPoint.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la coordinata Y dell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
        <value>Coordinata Y dell'oggetto <see cref="T:System.Windows.Input.StylusPoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente ottiene i <xref:System.Windows.Input.StylusPoint.Y%2A> proprietà per ognuno <xref:System.Windows.Input.StylusPoint> in un <xref:System.Windows.Input.StylusPointCollection>. In questo esempio si presuppone che esista una <xref:System.Windows.Controls.TextBlock> chiamato `packetOutput`.  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>