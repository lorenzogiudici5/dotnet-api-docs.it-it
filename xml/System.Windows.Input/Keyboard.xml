<Type Name="Keyboard" FullName="System.Windows.Input.Keyboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16f6f29580d669341906637982f549f819b19d52" />
    <Meta Name="ms.sourcegitcommit" Value="4f9e960e786edf67b6a29655670b1a15e71c03de" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/02/2018" />
    <Meta Name="ms.locfileid" Value="39418492" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard abstract sealed" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="41b93-101">Rappresenta il dispositivo tastiera.</span>
      <span class="sxs-lookup">
        <span data-stu-id="41b93-101">Represents the keyboard device.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-102">Il <xref:System.Windows.Input.Keyboard> classe fornisce proprietà che forniscono informazioni riguardanti lo stato della tastiera, metodi ed eventi correlati alla tastiera.</span><span class="sxs-lookup"><span data-stu-id="41b93-102">The <xref:System.Windows.Input.Keyboard> class provides keyboard-related events, methods, and properties that provide information regarding the state of the keyboard.</span></span>  
  
 <span data-ttu-id="41b93-103">Tutti gli eventi che <xref:System.Windows.Input.Keyboard> definisce come un evento associato viene anche esposto nuovamente dalle classi di elementi di base <xref:System.Windows.UIElement> e <xref:System.Windows.ContentElement> come nuovo evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-103">Each of the events that <xref:System.Windows.Input.Keyboard> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="41b93-104">In genere, risulta più semplice gestire gli eventi della tastiera per un'applicazione sul <xref:System.Windows.UIElement> e <xref:System.Windows.ContentElement>, invece di usare il <xref:System.Windows.Input.Keyboard> gli eventi.</span><span class="sxs-lookup"><span data-stu-id="41b93-104">Generally, it is more convenient to handle keyboard events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Keyboard> events.</span></span> <span data-ttu-id="41b93-105">Per informazioni dettagliate, vedere [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="41b93-106">Affinché un elemento ricevere input da tastiera, l'elemento deve essere attivabile.</span><span class="sxs-lookup"><span data-stu-id="41b93-106">In order for an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="41b93-107">La maggior parte delle <xref:System.Windows.UIElement> oggetti derivati sono attivabili per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="41b93-107">Most <xref:System.Windows.UIElement> derived objects are focusable by default.</span></span> <span data-ttu-id="41b93-108">In caso contrario, per creare un elemento attivabile, impostare il <xref:System.Windows.UIElement.Focusable%2A> proprietà sull'elemento di base su `true`.</span><span class="sxs-lookup"><span data-stu-id="41b93-108">Otherwise, to make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="41b93-109">Per altre informazioni sugli elementi di base, vedere [Cenni preliminari sugli elementi Base](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-109">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 <span data-ttu-id="41b93-110"><xref:System.Windows.Controls.Panel> classi, ad esempio <xref:System.Windows.Controls.StackPanel> e <xref:System.Windows.Controls.Canvas>, impostare il valore predefinito <xref:System.Windows.UIElement.Focusable%2A> a `false`.</span><span class="sxs-lookup"><span data-stu-id="41b93-110"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`.</span></span> <span data-ttu-id="41b93-111">Pertanto, per ottenere lo stato attivo della tastiera, questi oggetti <xref:System.Windows.UIElement.Focusable%2A> deve essere impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="41b93-111">Therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="41b93-112">Lo stato attivo della tastiera fa riferimento all'oggetto che riceve input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="41b93-112">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="41b93-113">L'elemento con lo stato attivo della tastiera presenta <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="41b93-113">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="41b93-114">Può esistere un solo elemento con lo stato attivo della tastiera sull'intero desktop.</span><span class="sxs-lookup"><span data-stu-id="41b93-114">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="41b93-115">Lo stato attivo logico fa riferimento all'oggetto all'interno di un ambito che ha lo stato attivo.</span><span class="sxs-lookup"><span data-stu-id="41b93-115">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="41b93-116">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md) e [Cenni preliminari sulla messa a fuoco](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-116">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="41b93-117">I membri statici del <xref:System.Windows.Input.Keyboard> classe delegato alla replica primaria <xref:System.Windows.Input.KeyboardDevice> del thread chiamante, in modo che non sono necessariamente thread-safe.</span><span class="sxs-lookup"><span data-stu-id="41b93-117">The static members of the <xref:System.Windows.Input.Keyboard> class delegate to the primary <xref:System.Windows.Input.KeyboardDevice> of the calling thread, so they are not necessarily thread-safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b93-118">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> metodo per determinare se il tasto è stato attivato o disattivato.</span><span class="sxs-lookup"><span data-stu-id="41b93-118">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine if a key is in the toggled state.</span></span> <span data-ttu-id="41b93-119">Se il <xref:System.Windows.Input.Key> passato a <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> viene attivato/disattivato, lo sfondo di un pulsante viene modificato.</span><span class="sxs-lookup"><span data-stu-id="41b93-119">If the <xref:System.Windows.Input.Key> passed to <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> is toggled, the background of a button is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
    <altmember cref="T:System.Windows.Input.KeyEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="AddGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-120">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-120">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-121">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-121">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-122">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-122">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-123">Questo metodo offre funzioni di accesso a proprietà associata per l'accesso al codice e [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elaborazione di attributi del <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-123">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-124">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-124">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-125">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-125">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-126">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-126">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-127">Questo metodo offre funzioni di accesso a proprietà associata per l'accesso al codice e [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elaborazione di attributi del <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-127">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-128">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-129">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-129">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-130">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-130">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-131">Questo metodo offre funzioni di accesso a proprietà associata per l'accesso al codice e [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elaborazione di attributi del <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-131">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-132">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-132">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-133">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-133">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-134">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-134">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-135">Questo metodo offre funzioni di accesso a proprietà associata per l'accesso al codice e [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elaborazione di attributi del <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-135">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-136">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-136">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-137">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-137">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-138">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-138">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-139">Questo metodo offre funzioni di accesso a proprietà associata per l'accesso al codice e [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elaborazione di attributi del <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-139">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-140">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-141">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-141">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-142">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-142">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-143">Questo metodo offre funzioni di accesso a proprietà associata per l'accesso al codice e [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elaborazione di attributi del <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-143">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-144">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-144">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-145">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-145">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-146">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-146">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-147">Questo metodo offre funzioni di accesso a proprietà associata per l'accesso al codice e [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elaborazione di attributi del <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-147">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-148">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-148">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-149">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-149">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-150">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-150">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-151">Questo metodo offre funzioni di accesso a proprietà associata per l'accesso al codice e [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elaborazione di attributi del <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-151">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-152">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-153">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-153">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-154">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-154">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-155">Questo metodo offre funzioni di accesso a proprietà associata per l'accesso al codice e [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elaborazione di attributi del <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-155">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-156">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-156">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-157">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-157">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-158">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-158">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-159">Questo metodo offre funzioni di accesso a proprietà associata per l'accesso al codice e [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elaborazione di attributi del <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-159">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFocus">
      <MemberSignature Language="C#" Value="public static void ClearFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.ClearFocus" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearFocus();" />
      <MemberSignature Language="F#" Value="static member ClearFocus : unit -&gt; unit" Usage="System.Windows.Input.Keyboard.ClearFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41b93-160">Cancella lo stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-160">Clears focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-161">Se lo stato attivo è all'interno di una finestra Win32, WPF chiama il <xref:System.Windows.Input.Keyboard.ClearFocus%2A> metodo sul ripristino dello stato attivo quando viene chiuso un menu.</span><span class="sxs-lookup"><span data-stu-id="41b93-161">If focus is within a Win32 window, WPF calls the <xref:System.Windows.Input.Keyboard.ClearFocus%2A> method on restoration of focus when a menu is closed.</span></span>  
  
 <span data-ttu-id="41b93-162">Quando si esce dalla modalità di menu, viene restituito lo stato attivo Win32 per il figlio hosted HWND e nessun elemento ha lo stato attivo WPF.</span><span class="sxs-lookup"><span data-stu-id="41b93-162">When leaving menu mode, Win32 focus is returned to the hosted child HWND, and no element has WPF focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRestoreFocusMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultRestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RestoreFocusMode DefaultRestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRestoreFocusMode : System.Windows.Input.RestoreFocusMode with get, set" Usage="System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-163">Ottiene o imposta il comportamento di [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] quando viene ripristinato lo stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-163">Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] when restoring focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41b93-164">Valore di enumerazione che specifica il comportamento di [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] quando viene ripristinato lo stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-164">An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] when restoring focus.</span>
          </span>
          <span data-ttu-id="41b93-165">Il valore predefinito in <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-165">The default in <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Focus (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement Focus(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Focus (element As IInputElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ Focus(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Focus : System.Windows.IInputElement -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.Focus element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-166">Elemento sul quale impostare lo stato attivo della tastiera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-166">The element on which to set keyboard focus.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-167">Imposta lo stato attivo della tastiera sull'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-167">Sets keyboard focus on the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41b93-168">Elemento con lo stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-168">The element with keyboard focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-169">Per un elemento ricevere input da tastiera, l'elemento deve essere attivabile.</span><span class="sxs-lookup"><span data-stu-id="41b93-169">For an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="41b93-170">Per creare un elemento attivabile, impostare il <xref:System.Windows.UIElement.Focusable%2A> proprietà sull'elemento di base su `true`.</span><span class="sxs-lookup"><span data-stu-id="41b93-170">To make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="41b93-171">Per altre informazioni sugli elementi di base, vedere [Cenni preliminari sugli elementi Base](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-171">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  <span data-ttu-id="41b93-172"><xref:System.Windows.Controls.Panel> classi, ad esempio <xref:System.Windows.Controls.StackPanel> e <xref:System.Windows.Controls.Canvas>, impostare il valore predefinito <xref:System.Windows.UIElement.Focusable%2A> al `false`; pertanto, per ottenere lo stato attivo della tastiera, questi oggetti <xref:System.Windows.UIElement.Focusable%2A> deve essere impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="41b93-172"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`; therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="41b93-173">Lo stato attivo della tastiera fa riferimento all'oggetto che riceve input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="41b93-173">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="41b93-174">L'elemento con lo stato attivo della tastiera presenta <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="41b93-174">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="41b93-175">Può esistere un solo elemento con lo stato attivo della tastiera sull'intero desktop.</span><span class="sxs-lookup"><span data-stu-id="41b93-175">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="41b93-176">Lo stato attivo logico fa riferimento all'oggetto all'interno di un ambito che ha lo stato attivo.</span><span class="sxs-lookup"><span data-stu-id="41b93-176">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="41b93-177">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md) e [Cenni preliminari sulla messa a fuoco](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-177">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="41b93-178">Un elemento con stato attivo della tastiera ha anche lo stato attivo logico per l'ambito che cui appartiene l'elemento.</span><span class="sxs-lookup"><span data-stu-id="41b93-178">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="41b93-179">Un elemento con lo stato attivo logico può o non abbia lo stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="41b93-179">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b93-180">L'esempio seguente mostra una <xref:System.Windows.FrameworkElement.Loaded> gestore eventi che imposta lo stato attivo della tastiera su un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="41b93-180">The following example shows a <xref:System.Windows.FrameworkElement.Loaded> event handler that sets keyboard focus on a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[focussample#FocusSampleSetFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplesetfocus)]
 [!code-vb[focussample#FocusSampleSetFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplesetfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ FocusedElement { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedElement : System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.FocusedElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-181">Ottiene l'elemento con lo stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-181">Gets the element that has keyboard focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41b93-182">Elemento con lo stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-182">The focused element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-183">Lo stato attivo della tastiera fa riferimento all'oggetto che riceve input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="41b93-183">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="41b93-184">L'elemento con lo stato attivo della tastiera presenta <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="41b93-184">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="41b93-185">Può esistere un solo elemento con lo stato attivo della tastiera sull'intero desktop.</span><span class="sxs-lookup"><span data-stu-id="41b93-185">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="41b93-186">Lo stato attivo logico fa riferimento all'oggetto all'interno di un ambito che ha lo stato attivo.</span><span class="sxs-lookup"><span data-stu-id="41b93-186">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="41b93-187">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md) e [Cenni preliminari sulla messa a fuoco](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-187">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="41b93-188">Un elemento con stato attivo della tastiera ha anche lo stato attivo logico per l'ambito che cui appartiene l'elemento.</span><span class="sxs-lookup"><span data-stu-id="41b93-188">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="41b93-189">Un elemento con lo stato attivo logico può o non abbia lo stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="41b93-189">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b93-190">Nell'esempio seguente ottiene l'elemento con lo stato attivo della tastiera e ne esegue il cast a un <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="41b93-190">The following example gets the element with keyboard focus and casts it to a <xref:System.Windows.Controls.Control>.</span></span>  <span data-ttu-id="41b93-191">Se l'elemento con lo stato attivo della tastiera è un <xref:System.Windows.Controls.Control>, lo sfondo dell'elemento viene modificato.</span><span class="sxs-lookup"><span data-stu-id="41b93-191">If the element with keyboard focus is a <xref:System.Windows.Controls.Control>, the background of the element is changed.</span></span>  
  
 [!code-csharp[focussample#GetKeyboardFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#getkeyboardfocusedelement)]
 [!code-vb[focussample#GetKeyboardFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#getkeyboardfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyStates">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyStates GetKeyStates (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.KeyStates GetKeyStates(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::KeyStates GetKeyStates(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member GetKeyStates : System.Windows.Input.Key -&gt; System.Windows.Input.KeyStates" Usage="System.Windows.Input.Keyboard.GetKeyStates key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="41b93-192">Chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-192">The specified key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-193">Ottiene il set di stati per il tasto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-193">Gets the set of key states for the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41b93-194">Combinazione bit per bit dei valori di <see cref="T:System.Windows.Input.KeyStates" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-194">A bitwise combination of the <see cref="T:System.Windows.Input.KeyStates" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-195"><xref:System.Windows.Input.KeyStates> è un po' enumerazione campo; Pertanto, è possibile che una chiave in più stati.</span><span class="sxs-lookup"><span data-stu-id="41b93-195"><xref:System.Windows.Input.KeyStates> is a bit field enumeration; therefore, it is possible for a key to be in multiple states.</span></span>  <span data-ttu-id="41b93-196">Ad esempio, una chiave potrebbe essere nello stato premuto anche come lo stato attivato o disattivato.</span><span class="sxs-lookup"><span data-stu-id="41b93-196">For example, a key could be in the pressed state as well as in the toggled state.</span></span>  <span data-ttu-id="41b93-197">Usare le operazioni di confronto bit per determinare lo stato esatto o gli stati in che è la chiave.</span><span class="sxs-lookup"><span data-stu-id="41b93-197">Use bit comparison operations to determine the exact state or states the key is in.</span></span>  
  
 <span data-ttu-id="41b93-198">Il <xref:System.Windows.Input.Keyboard> classe fornisce una serie di metodi statici che può essere utilizzato anche per ottenere informazioni sullo stato dei tasti.</span><span class="sxs-lookup"><span data-stu-id="41b93-198">The <xref:System.Windows.Input.Keyboard> class provides a number of static methods which can also be used to obtain key state information.</span></span>  <span data-ttu-id="41b93-199">I metodi sono: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, e <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span><span class="sxs-lookup"><span data-stu-id="41b93-199">The methods are: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, and <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b93-200">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> metodo per determinare se il <xref:System.Windows.Input.Key.Return> chiave si trova nel <xref:System.Windows.Input.KeyStates.Down> dello stato.</span><span class="sxs-lookup"><span data-stu-id="41b93-200">The following example shows how to use the <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method to determine if the <xref:System.Windows.Input.Key.Return> key is in the <xref:System.Windows.Input.KeyStates.Down> state.</span></span>  <span data-ttu-id="41b93-201">Qualche operazione con AND viene usata per confrontare le <xref:System.Windows.Input.KeyStates> restituito da <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> e il <xref:System.Windows.Input.Key.Down> dello stato.</span><span class="sxs-lookup"><span data-stu-id="41b93-201">A bit AND operation is used to compare the <xref:System.Windows.Input.KeyStates> returned from <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> and the <xref:System.Windows.Input.Key.Down> state.</span></span> <span data-ttu-id="41b93-202">Se la chiave è inattivo, lo sfondo di un <xref:System.Windows.Controls.Button> viene modificato.</span><span class="sxs-lookup"><span data-stu-id="41b93-202">If the key is down, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardgetkeystates)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardgetkeystates)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.KeyStates" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" Usage="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-203">Richiamato quando un elemento riceve lo stato attivo dalla tastiera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-203">Occurs when an element receives keyboard focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-204">Si tratta di un evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-204">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="41b93-205"> implementazione degli eventi associati come eventi indirizzati.</span><span class="sxs-lookup"><span data-stu-id="41b93-205"> implements attached events as routed events.</span></span> <span data-ttu-id="41b93-206">Gli eventi associati sono fondamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concetto di linguaggio per fare riferimento a eventi che possono essere gestiti a oggetti che non si definiscono tale evento, quale [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] espande consentendo anche l'evento attraversare una route.</span><span class="sxs-lookup"><span data-stu-id="41b93-206">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="41b93-207">Gli eventi associati non è una sintassi per la gestione diretta nel codice. Per collegare i gestori per un evento indirizzato nel codice, si utilizza un componente designato \* metodo del gestore.</span><span class="sxs-lookup"><span data-stu-id="41b93-207">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="41b93-208">Per informazioni dettagliate, vedere [Cenni preliminari sugli eventi associati](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-208">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="41b93-209">Lo stato attivo della tastiera fa riferimento all'oggetto che riceve input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="41b93-209">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="41b93-210">L'elemento con lo stato attivo della tastiera presenta <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="41b93-210">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="41b93-211">Può esistere un solo elemento con lo stato attivo della tastiera sull'intero desktop.</span><span class="sxs-lookup"><span data-stu-id="41b93-211">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="41b93-212">Lo stato attivo logico fa riferimento all'oggetto all'interno di un ambito che ha lo stato attivo.</span><span class="sxs-lookup"><span data-stu-id="41b93-212">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="41b93-213">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md) e [Cenni preliminari sulla messa a fuoco](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-213">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="41b93-214">Se il <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> evento o <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> viene gestito l'evento, modificare lo stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="41b93-214">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does change.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocusEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="41b93-215">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="41b93-215">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41b93-216">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41b93-216">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.GotKeyboardFocusEvent>|  
|<span data-ttu-id="41b93-217">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="41b93-217">Routing strategy</span></span>|<span data-ttu-id="41b93-218">Bubbling</span><span class="sxs-lookup"><span data-stu-id="41b93-218">Bubbling</span></span>|  
|<span data-ttu-id="41b93-219">delegato</span><span class="sxs-lookup"><span data-stu-id="41b93-219">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="41b93-220">L'evento di tunneling corrispondente è <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="41b93-220">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b93-221">L'esempio seguente crea una <xref:System.Windows.Controls.TextBox> e associa i gestori eventi per il <xref:System.Windows.UIElement.GotKeyboardFocus> evento e il <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> evento.</span><span class="sxs-lookup"><span data-stu-id="41b93-221">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="41b93-222">Quando la <xref:System.Windows.Controls.TextBox> otterrà lo stato attivo della tastiera, viene modificato il colore di sfondo e il testo del <xref:System.Windows.Controls.TextBox> viene cancellato.</span><span class="sxs-lookup"><span data-stu-id="41b93-222">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="41b93-223">Quando il <xref:System.Windows.Controls.TextBlock> perde lo stato attivo della tastiera, viene modificato il colore di sfondo e viene chiamato un metodo che reimposta le variabili utilizzate nell'esempio.</span><span class="sxs-lookup"><span data-stu-id="41b93-223">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called which resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-224">Identifica l'evento associato <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-224">Identifies the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-225">Gli identificatori di eventi indirizzati vengono creati quando vengono registrati gli eventi indirizzati e il risultato viene archiviato come campo nella classe che registra l'evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-225">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="41b93-226">Gli identificatori contengono un nome che identifichi il tipo di proprietario, tipo di gestore, strategia di routing e un metodo di utilità per l'aggiunta di proprietari per l'evento.</span><span class="sxs-lookup"><span data-stu-id="41b93-226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="41b93-227">Spesso si usano questi identificatori come parametri a metodi del sistema di eventi, per identificare un particolare evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-227">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyDown">
      <MemberSignature Language="C#" Value="public static bool IsKeyDown (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyDown(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyDown(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyDown : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyDown key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="41b93-228">Chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-228">The specified key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-229">Determina se viene premuto il tasto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-229">Determines whether the specified key is pressed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41b93-230">
            <see langword="true" /> se l'oggetto <paramref name="key" /> è nello stato premuto; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-230">
              <see langword="true" /> if <paramref name="key" /> is in the down state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-231">Il <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> metodo può essere utilizzato per determinare il set di stati di una chiave specifica.</span><span class="sxs-lookup"><span data-stu-id="41b93-231">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b93-232">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> metodo per determinare lo stato di una chiave specifica.</span><span class="sxs-lookup"><span data-stu-id="41b93-232">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="41b93-233">Il <xref:System.Windows.Input.Key.Return> chiave viene passata per il <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="41b93-233">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method.</span></span>  <span data-ttu-id="41b93-234">Se il metodo restituisce `true`, lo sfondo di un <xref:System.Windows.Controls.Button> viene modificato.</span><span class="sxs-lookup"><span data-stu-id="41b93-234">If the method returns `true`, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeydown)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeydown)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsDown" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyToggled">
      <MemberSignature Language="C#" Value="public static bool IsKeyToggled (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyToggled(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyToggled(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyToggled : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyToggled key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="41b93-235">Chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-235">The specified key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-236">Determina se il tasto specificato è attivato o disattivato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-236">Determines whether the specified key is toggled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41b93-237">
            <see langword="true" /> se l'oggetto <paramref name="key" /> è nello stato attivato o disattivato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-237">
              <see langword="true" /> if <paramref name="key" /> is in the toggled state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-238">Il <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> metodo può essere utilizzato per determinare il set di stati di una chiave specifica.</span><span class="sxs-lookup"><span data-stu-id="41b93-238">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b93-239">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> metodo per determinare lo stato di una chiave specifica.</span><span class="sxs-lookup"><span data-stu-id="41b93-239">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine the state of a specific key.</span></span> <span data-ttu-id="41b93-240">Il <xref:System.Windows.Input.Key.Return> chiave viene passata per il <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="41b93-240">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method.</span></span>  <span data-ttu-id="41b93-241">Se il metodo restituisce `true`, quindi lo sfondo di un <xref:System.Windows.Controls.Button> viene modificato.</span><span class="sxs-lookup"><span data-stu-id="41b93-241">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsToggled" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyUp">
      <MemberSignature Language="C#" Value="public static bool IsKeyUp (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyUp(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyUp(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyUp : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyUp key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="41b93-242">Tasto da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-242">The key to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-243">Determina se viene rilasciato il tasto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-243">Determines whether the specified key is released.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41b93-244">
            <see langword="true" /> se l'oggetto <paramref name="key" /> è nello stato attivato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-244">
              <see langword="true" /> if <paramref name="key" /> is in the up state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-245">Il <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> metodo può essere utilizzato per determinare il set di stati di una chiave specifica.</span><span class="sxs-lookup"><span data-stu-id="41b93-245">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b93-246">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> metodo per determinare lo stato di una chiave specifica.</span><span class="sxs-lookup"><span data-stu-id="41b93-246">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="41b93-247">Il <xref:System.Windows.Input.Key.Return> chiave viene passata per il <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="41b93-247">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method.</span></span>  <span data-ttu-id="41b93-248">Se il metodo restituisce `true`, quindi lo sfondo di un <xref:System.Windows.Controls.Button> viene modificato.</span><span class="sxs-lookup"><span data-stu-id="41b93-248">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeyup)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeyup)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" Usage="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-249">Si verifica quando il provider di input della tastiera acquisisce lo stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-249">Occurs when the keyboard input provider acquires focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-250">Si tratta di un evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-250">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="41b93-251"> implementazione degli eventi associati come eventi indirizzati.</span><span class="sxs-lookup"><span data-stu-id="41b93-251"> implements attached events as routed events.</span></span> <span data-ttu-id="41b93-252">Gli eventi associati sono fondamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concetto di linguaggio per fare riferimento a eventi che possono essere gestiti a oggetti che non si definiscono tale evento, quale [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] espande consentendo anche l'evento attraversare una route.</span><span class="sxs-lookup"><span data-stu-id="41b93-252">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="41b93-253">Gli eventi associati non è una sintassi per la gestione diretta nel codice. Per collegare i gestori per un evento indirizzato nel codice, si utilizza un componente designato \* metodo del gestore.</span><span class="sxs-lookup"><span data-stu-id="41b93-253">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="41b93-254">Per informazioni dettagliate, vedere [Cenni preliminari sugli eventi associati](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-254">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="41b93-255">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="41b93-255">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41b93-256">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41b93-256">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="41b93-257">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="41b93-257">Routing strategy</span></span>|<span data-ttu-id="41b93-258">Bubbling</span><span class="sxs-lookup"><span data-stu-id="41b93-258">Bubbling</span></span>|  
|<span data-ttu-id="41b93-259">delegato</span><span class="sxs-lookup"><span data-stu-id="41b93-259">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="41b93-260">L'evento di tunneling corrispondente è <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.</span><span class="sxs-lookup"><span data-stu-id="41b93-260">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-261">Identifica l'evento associato <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-261">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-262">Gli identificatori di eventi indirizzati vengono creati quando vengono registrati gli eventi indirizzati e il risultato viene archiviato come campo nella classe che registra l'evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-262">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="41b93-263">Gli identificatori contengono un nome che identifichi il tipo di proprietario, tipo di gestore, strategia di routing e un metodo di utilità per l'aggiunta di proprietari per l'evento.</span><span class="sxs-lookup"><span data-stu-id="41b93-263">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="41b93-264">Spesso si usano questi identificatori come parametri a metodi del sistema di eventi, per identificare un particolare evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-264">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" Usage="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-265">Si verifica quando viene premuto un tasto della tastiera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-265">Occurs when a key on the keyboard is pressed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-266">Si tratta di un evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-266">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="41b93-267"> implementazione degli eventi associati come eventi indirizzati.</span><span class="sxs-lookup"><span data-stu-id="41b93-267"> implements attached events as routed events.</span></span> <span data-ttu-id="41b93-268">Gli eventi associati sono fondamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concetto di linguaggio per fare riferimento a eventi che possono essere gestiti a oggetti che non si definiscono tale evento, quale [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] espande consentendo anche l'evento attraversare una route.</span><span class="sxs-lookup"><span data-stu-id="41b93-268">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="41b93-269">Gli eventi associati non è una sintassi per la gestione diretta nel codice. Per collegare i gestori per un evento indirizzato nel codice, si utilizza un componente designato \* metodo del gestore.</span><span class="sxs-lookup"><span data-stu-id="41b93-269">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="41b93-270">Per informazioni dettagliate, vedere [Cenni preliminari sugli eventi associati](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-270">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="41b93-271">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="41b93-271">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41b93-272">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41b93-272">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyDownEvent>|  
|<span data-ttu-id="41b93-273">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="41b93-273">Routing strategy</span></span>|<span data-ttu-id="41b93-274">Bubbling</span><span class="sxs-lookup"><span data-stu-id="41b93-274">Bubbling</span></span>|  
|<span data-ttu-id="41b93-275">delegato</span><span class="sxs-lookup"><span data-stu-id="41b93-275">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="41b93-276">L'evento di tunneling corrispondente è <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="41b93-276">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b93-277">Nell'esempio seguente viene creato <xref:System.Windows.Controls.TextBox> che collega un gestore eventi per il <xref:System.Windows.UIElement.KeyDown> evento.</span><span class="sxs-lookup"><span data-stu-id="41b93-277">The following example creates <xref:System.Windows.Controls.TextBox> that attaches an event handler for the <xref:System.Windows.UIElement.KeyDown> event.</span></span>  <span data-ttu-id="41b93-278">Quando la <xref:System.Windows.Input.Key.Return> viene premuto, l'evento gestore viene visualizzato il testo nel <xref:System.Windows.Controls.TextBox> in un <xref:System.Windows.Controls.TextBlock>.</span><span class="sxs-lookup"><span data-stu-id="41b93-278">When the <xref:System.Windows.Input.Key.Return> is pressed, the event handler displays the text in the <xref:System.Windows.Controls.TextBox> in a <xref:System.Windows.Controls.TextBlock>.</span></span>  
  
 [!code-xml[keydown#KeyDownUI](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml#keydownui)]  
  
 [!code-csharp[keydown#KeyDownSample](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml.cs#keydownsample)]
 [!code-vb[keydown#KeyDownSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyDown/VisualBasic/Window1.xaml.vb#keydownsample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-279">Identifica l'evento associato <see cref="E:System.Windows.Input.Keyboard.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-279">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-280">Gli identificatori di eventi indirizzati vengono creati quando vengono registrati gli eventi indirizzati e il risultato viene archiviato come campo nella classe che registra l'evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-280">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="41b93-281">Gli identificatori contengono un nome che identifichi il tipo di proprietario, tipo di gestore, strategia di routing e un metodo di utilità per l'aggiunta di proprietari per l'evento.</span><span class="sxs-lookup"><span data-stu-id="41b93-281">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="41b93-282">Spesso si usano questi identificatori come parametri a metodi del sistema di eventi, per identificare un particolare evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-282">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" Usage="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-283">Si verifica quando viene rilasciato un tasto della tastiera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-283">Occurs when a key on the keyboard is released.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-284">Si tratta di un evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-284">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="41b93-285"> implementazione degli eventi associati come eventi indirizzati.</span><span class="sxs-lookup"><span data-stu-id="41b93-285"> implements attached events as routed events.</span></span> <span data-ttu-id="41b93-286">Gli eventi associati sono fondamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concetto di linguaggio per fare riferimento a eventi che possono essere gestiti a oggetti che non si definiscono tale evento, quale [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] espande consentendo anche l'evento attraversare una route.</span><span class="sxs-lookup"><span data-stu-id="41b93-286">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="41b93-287">Gli eventi associati non è una sintassi per la gestione diretta nel codice. Per collegare i gestori per un evento indirizzato nel codice, si utilizza un componente designato \* metodo del gestore.</span><span class="sxs-lookup"><span data-stu-id="41b93-287">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="41b93-288">Per informazioni dettagliate, vedere [Cenni preliminari sugli eventi associati](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-288">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="41b93-289">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="41b93-289">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41b93-290">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41b93-290">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyUpEvent>|  
|<span data-ttu-id="41b93-291">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="41b93-291">Routing strategy</span></span>|<span data-ttu-id="41b93-292">Bubbling</span><span class="sxs-lookup"><span data-stu-id="41b93-292">Bubbling</span></span>|  
|<span data-ttu-id="41b93-293">delegato</span><span class="sxs-lookup"><span data-stu-id="41b93-293">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="41b93-294">L'evento di tunneling corrispondente è <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="41b93-294">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-295">Identifica l'evento associato <see cref="E:System.Windows.Input.Keyboard.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-295">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-296">Gli identificatori di eventi indirizzati vengono creati quando vengono registrati gli eventi indirizzati e il risultato viene archiviato come campo nella classe che registra l'evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-296">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="41b93-297">Gli identificatori contengono un nome che identifichi il tipo di proprietario, tipo di gestore, strategia di routing e un metodo di utilità per l'aggiunta di proprietari per l'evento.</span><span class="sxs-lookup"><span data-stu-id="41b93-297">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="41b93-298">Spesso si usano questi identificatori come parametri a metodi del sistema di eventi, per identificare un particolare evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-298">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" Usage="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-299">Si verifica quando un elemento perde lo stato attivo della tastiera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-299">Occurs when an element loses keyboard focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-300">Si tratta di un evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-300">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="41b93-301"> implementazione degli eventi associati come eventi indirizzati.</span><span class="sxs-lookup"><span data-stu-id="41b93-301"> implements attached events as routed events.</span></span> <span data-ttu-id="41b93-302">Gli eventi associati sono fondamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concetto di linguaggio per fare riferimento a eventi che possono essere gestiti a oggetti che non si definiscono tale evento, quale [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] espande consentendo anche l'evento attraversare una route.</span><span class="sxs-lookup"><span data-stu-id="41b93-302">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="41b93-303">Gli eventi associati non è una sintassi per la gestione diretta nel codice. Per collegare i gestori per un evento indirizzato nel codice, si utilizza un componente designato \* metodo del gestore.</span><span class="sxs-lookup"><span data-stu-id="41b93-303">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="41b93-304">Per informazioni dettagliate, vedere [Cenni preliminari sugli eventi associati](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-304">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="41b93-305">Lo stato attivo della tastiera fa riferimento all'oggetto che riceve input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="41b93-305">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="41b93-306">L'elemento con lo stato attivo della tastiera presenta <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="41b93-306">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="41b93-307">Può esistere un solo elemento con lo stato attivo della tastiera sull'intero desktop.</span><span class="sxs-lookup"><span data-stu-id="41b93-307">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="41b93-308">Lo stato attivo logico fa riferimento all'oggetto all'interno di un ambito che ha lo stato attivo.</span><span class="sxs-lookup"><span data-stu-id="41b93-308">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="41b93-309">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md) e [Cenni preliminari sulla messa a fuoco](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-309">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="41b93-310">Se il <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> evento o <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> viene gestito l'evento, lo stato attivo della tastiera non cambia.</span><span class="sxs-lookup"><span data-stu-id="41b93-310">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="41b93-311">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="41b93-311">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41b93-312">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41b93-312">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.LostKeyboardFocusEvent>|  
|<span data-ttu-id="41b93-313">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="41b93-313">Routing strategy</span></span>|<span data-ttu-id="41b93-314">Bubbling</span><span class="sxs-lookup"><span data-stu-id="41b93-314">Bubbling</span></span>|  
|<span data-ttu-id="41b93-315">delegato</span><span class="sxs-lookup"><span data-stu-id="41b93-315">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="41b93-316">L'evento di tunneling corrispondente è <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="41b93-316">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b93-317">L'esempio seguente crea una <xref:System.Windows.Controls.TextBox> e associa i gestori eventi per il <xref:System.Windows.UIElement.GotKeyboardFocus> evento e il <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> evento.</span><span class="sxs-lookup"><span data-stu-id="41b93-317">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="41b93-318">Quando la <xref:System.Windows.Controls.TextBox> otterrà lo stato attivo della tastiera, viene modificato il colore di sfondo e il testo del <xref:System.Windows.Controls.TextBox> viene cancellato.</span><span class="sxs-lookup"><span data-stu-id="41b93-318">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="41b93-319">Quando il <xref:System.Windows.Controls.TextBlock> perde lo stato attivo della tastiera, viene modificato il colore di sfondo e viene chiamato un metodo che reimposta le variabili utilizzate nell'esempio.</span><span class="sxs-lookup"><span data-stu-id="41b93-319">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called that resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-320">Identifica l'evento associato <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-320">Identifies the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-321">Gli identificatori di eventi indirizzati vengono creati quando vengono registrati gli eventi indirizzati e il risultato viene archiviato come campo nella classe che registra l'evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-321">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="41b93-322">Gli identificatori contengono un nome che identifichi il tipo di proprietario, tipo di gestore, strategia di routing e un metodo di utilità per l'aggiunta di proprietari per l'evento.</span><span class="sxs-lookup"><span data-stu-id="41b93-322">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="41b93-323">Spesso si usano questi identificatori come parametri a metodi del sistema di eventi, per identificare un particolare evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-323">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys" Usage="System.Windows.Input.Keyboard.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-324">Ottiene l'insieme dell'oggetto <see cref="T:System.Windows.Input.ModifierKeys" /> che rappresenta i tasti correntemente premuti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-324">Gets the set of <see cref="T:System.Windows.Input.ModifierKeys" /> that are currently pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41b93-325">Combinazione bit per bit dei valori di <see cref="T:System.Windows.Input.ModifierKeys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-325">A bitwise combination of the <see cref="T:System.Windows.Input.ModifierKeys" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-326"><xref:System.Windows.Input.ModifierKeys> è un po' enumerazione del campo, pertanto è possibile che più tasti di modifica per la pressione nello stesso momento.</span><span class="sxs-lookup"><span data-stu-id="41b93-326"><xref:System.Windows.Input.ModifierKeys> is a bit field enumeration, so it is possible for multiple modifier keys to be pressed at the same time.</span></span>  <span data-ttu-id="41b93-327">Utilizzare le operazioni bit per determinare il set esatto di tasti di modifica premuto.</span><span class="sxs-lookup"><span data-stu-id="41b93-327">Use bit operations to determine the exact set of modifier keys pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b93-328">L'esempio seguente usa un po' e confronto per determinare se il <xref:System.Windows.Input.ModifierKeys.Control> tasto.</span><span class="sxs-lookup"><span data-stu-id="41b93-328">The following example uses a bit AND comparison to determine if the <xref:System.Windows.Input.ModifierKeys.Control> modifier key is pressed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyboardmodifiersbitoperation)]
 [!code-vb[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyboardmodifiersbitoperation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" Usage="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-329">Si verifica quando un elemento sta per acquisire lo stato attivo della tastiera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-329">Occurs when an element is in the process of acquiring keyboard focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-330">Si tratta di un evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-330">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="41b93-331"> implementazione degli eventi associati come eventi indirizzati.</span><span class="sxs-lookup"><span data-stu-id="41b93-331"> implements attached events as routed events.</span></span> <span data-ttu-id="41b93-332">Gli eventi associati sono fondamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concetto di linguaggio per fare riferimento a eventi che possono essere gestiti a oggetti che non si definiscono tale evento, quale [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] espande consentendo anche l'evento attraversare una route.</span><span class="sxs-lookup"><span data-stu-id="41b93-332">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="41b93-333">Gli eventi associati non è una sintassi per la gestione diretta nel codice. Per collegare i gestori per un evento indirizzato nel codice, si utilizza un componente designato \* metodo del gestore.</span><span class="sxs-lookup"><span data-stu-id="41b93-333">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="41b93-334">Per informazioni dettagliate, vedere [Cenni preliminari sugli eventi associati](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-334">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="41b93-335">Se il <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> evento o <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> viene gestito l'evento, lo stato attivo della tastiera non cambia.</span><span class="sxs-lookup"><span data-stu-id="41b93-335">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="41b93-336">Lo stato attivo della tastiera fa riferimento all'oggetto che riceve input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="41b93-336">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="41b93-337">L'elemento con lo stato attivo della tastiera presenta <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="41b93-337">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="41b93-338">Può esistere un solo elemento con lo stato attivo della tastiera sull'intero desktop.</span><span class="sxs-lookup"><span data-stu-id="41b93-338">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="41b93-339">Lo stato attivo logico fa riferimento all'oggetto all'interno di un ambito che ha lo stato attivo.</span><span class="sxs-lookup"><span data-stu-id="41b93-339">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="41b93-340">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md) e [Cenni preliminari sulla messa a fuoco](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-340">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyborad"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="41b93-341">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="41b93-341">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41b93-342">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41b93-342">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="41b93-343">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="41b93-343">Routing strategy</span></span>|<span data-ttu-id="41b93-344">Il tunneling</span><span class="sxs-lookup"><span data-stu-id="41b93-344">Tunneling</span></span>|  
|<span data-ttu-id="41b93-345">delegato</span><span class="sxs-lookup"><span data-stu-id="41b93-345">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="41b93-346">L'evento di bubbling corrispondente è <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="41b93-346">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-347">Identifica l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-347">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-348">Gli identificatori di eventi indirizzati vengono creati quando vengono registrati gli eventi indirizzati e il risultato viene archiviato come campo nella classe che registra l'evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-348">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="41b93-349">Gli identificatori contengono un nome che identifichi il tipo di proprietario, tipo di gestore, strategia di routing e un metodo di utilità per l'aggiunta di proprietari per l'evento.</span><span class="sxs-lookup"><span data-stu-id="41b93-349">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="41b93-350">Spesso si usano questi identificatori come parametri a metodi del sistema di eventi, per identificare un particolare evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-350">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" Usage="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-351">Si verifica quando il provider di input della tastiera sta per acquisire lo stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-351">Occurs when the keyboard input provider is in the process of acquiring focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-352">Si tratta di un evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-352">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="41b93-353"> implementazione degli eventi associati come eventi indirizzati.</span><span class="sxs-lookup"><span data-stu-id="41b93-353"> implements attached events as routed events.</span></span> <span data-ttu-id="41b93-354">Gli eventi associati sono fondamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concetto di linguaggio per fare riferimento a eventi che possono essere gestiti a oggetti che non si definiscono tale evento, quale [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] espande consentendo anche l'evento attraversare una route.</span><span class="sxs-lookup"><span data-stu-id="41b93-354">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="41b93-355">Gli eventi associati non è una sintassi per la gestione diretta nel codice. Per collegare i gestori per un evento indirizzato nel codice, si utilizza un componente designato \* metodo del gestore.</span><span class="sxs-lookup"><span data-stu-id="41b93-355">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="41b93-356">Per informazioni dettagliate, vedere [Cenni preliminari sugli eventi associati](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-356">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="41b93-357">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="41b93-357">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41b93-358">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41b93-358">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="41b93-359">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="41b93-359">Routing strategy</span></span>|<span data-ttu-id="41b93-360">Il tunneling</span><span class="sxs-lookup"><span data-stu-id="41b93-360">Tunneling</span></span>|  
|<span data-ttu-id="41b93-361">delegato</span><span class="sxs-lookup"><span data-stu-id="41b93-361">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="41b93-362">L'evento di bubbling corrispondente è <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.</span><span class="sxs-lookup"><span data-stu-id="41b93-362">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-363">Identifica l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-363">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-364">Gli identificatori di eventi indirizzati vengono creati quando vengono registrati gli eventi indirizzati e il risultato viene archiviato come campo nella classe che registra l'evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-364">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="41b93-365">Gli identificatori contengono un nome che identifichi il tipo di proprietario, tipo di gestore, strategia di routing e un metodo di utilità per l'aggiunta di proprietari per l'evento.</span><span class="sxs-lookup"><span data-stu-id="41b93-365">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="41b93-366">Spesso si usano questi identificatori come parametri a metodi del sistema di eventi, per identificare un particolare evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-366">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" Usage="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-367">Si verifica quando viene premuto un tasto della tastiera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-367">Occurs when a key on the keyboard is pressed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-368">Si tratta di un evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-368">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="41b93-369"> implementazione degli eventi associati come eventi indirizzati.</span><span class="sxs-lookup"><span data-stu-id="41b93-369"> implements attached events as routed events.</span></span> <span data-ttu-id="41b93-370">Gli eventi associati sono fondamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concetto di linguaggio per fare riferimento a eventi che possono essere gestiti a oggetti che non si definiscono tale evento, quale [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] espande consentendo anche l'evento attraversare una route.</span><span class="sxs-lookup"><span data-stu-id="41b93-370">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="41b93-371">Gli eventi associati non è una sintassi per la gestione diretta nel codice. Per collegare i gestori per un evento indirizzato nel codice, si utilizza un componente designato \* metodo del gestore.</span><span class="sxs-lookup"><span data-stu-id="41b93-371">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="41b93-372">Per informazioni dettagliate, vedere [Cenni preliminari sugli eventi associati](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-372">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="41b93-373">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="41b93-373">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41b93-374">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41b93-374">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyDownEvent>|  
|<span data-ttu-id="41b93-375">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="41b93-375">Routing strategy</span></span>|<span data-ttu-id="41b93-376">Il tunneling</span><span class="sxs-lookup"><span data-stu-id="41b93-376">Tunneling</span></span>|  
|<span data-ttu-id="41b93-377">delegato</span><span class="sxs-lookup"><span data-stu-id="41b93-377">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="41b93-378">L'evento di bubbling corrispondente è <xref:System.Windows.Input.Keyboard.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="41b93-378">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-379">Identifica l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-379">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-380">Gli identificatori di eventi indirizzati vengono creati quando vengono registrati gli eventi indirizzati e il risultato viene archiviato come campo nella classe che registra l'evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-380">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="41b93-381">Gli identificatori contengono un nome che identifichi il tipo di proprietario, tipo di gestore, strategia di routing e un metodo di utilità per l'aggiunta di proprietari per l'evento.</span><span class="sxs-lookup"><span data-stu-id="41b93-381">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="41b93-382">Spesso si usano questi identificatori come parametri a metodi del sistema di eventi, per identificare un particolare evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-382">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" Usage="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-383">Si verifica quando viene rilasciato un tasto della tastiera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-383">Occurs when a key on the keyboard is released.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-384">Si tratta di un evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-384">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="41b93-385"> implementazione degli eventi associati come eventi indirizzati.</span><span class="sxs-lookup"><span data-stu-id="41b93-385"> implements attached events as routed events.</span></span> <span data-ttu-id="41b93-386">Gli eventi associati sono fondamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concetto di linguaggio per fare riferimento a eventi che possono essere gestiti a oggetti che non si definiscono tale evento, quale [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] espande consentendo anche l'evento attraversare una route.</span><span class="sxs-lookup"><span data-stu-id="41b93-386">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="41b93-387">Gli eventi associati non è una sintassi per la gestione diretta nel codice. Per collegare i gestori per un evento indirizzato nel codice, si utilizza un componente designato \* metodo del gestore.</span><span class="sxs-lookup"><span data-stu-id="41b93-387">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="41b93-388">Per informazioni dettagliate, vedere [Cenni preliminari sugli eventi associati](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-388">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="41b93-389">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="41b93-389">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41b93-390">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41b93-390">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyUpEvent>|  
|<span data-ttu-id="41b93-391">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="41b93-391">Routing strategy</span></span>|<span data-ttu-id="41b93-392">Il tunneling</span><span class="sxs-lookup"><span data-stu-id="41b93-392">Tunneling</span></span>|  
|<span data-ttu-id="41b93-393">delegato</span><span class="sxs-lookup"><span data-stu-id="41b93-393">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="41b93-394">L'evento di bubbling corrispondente è <xref:System.Windows.Input.Keyboard.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="41b93-394">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-395">Identifica l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-395">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-396">Gli identificatori di eventi indirizzati vengono creati quando vengono registrati gli eventi indirizzati e il risultato viene archiviato come campo nella classe che registra l'evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-396">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="41b93-397">Gli identificatori contengono un nome che identifichi il tipo di proprietario, tipo di gestore, strategia di routing e un metodo di utilità per l'aggiunta di proprietari per l'evento.</span><span class="sxs-lookup"><span data-stu-id="41b93-397">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="41b93-398">Spesso si usano questi identificatori come parametri a metodi del sistema di eventi, per identificare un particolare evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-398">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" Usage="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-399">Si verifica quando un elemento sta per perdere lo stato attivo della tastiera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-399">Occurs when an element is in the process of losing keyboard focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-400">Si tratta di un evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-400">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="41b93-401"> implementazione degli eventi associati come eventi indirizzati.</span><span class="sxs-lookup"><span data-stu-id="41b93-401"> implements attached events as routed events.</span></span> <span data-ttu-id="41b93-402">Gli eventi associati sono fondamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concetto di linguaggio per fare riferimento a eventi che possono essere gestiti a oggetti che non si definiscono tale evento, quale [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] espande consentendo anche l'evento attraversare una route.</span><span class="sxs-lookup"><span data-stu-id="41b93-402">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="41b93-403">Gli eventi associati non è una sintassi per la gestione diretta nel codice. Per collegare i gestori per un evento indirizzato nel codice, si utilizza un componente designato \* metodo del gestore.</span><span class="sxs-lookup"><span data-stu-id="41b93-403">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="41b93-404">Per informazioni dettagliate, vedere [Cenni preliminari sugli eventi associati](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-404">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="41b93-405">Se il <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> evento o <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> viene gestito l'evento, lo stato attivo della tastiera non cambia.</span><span class="sxs-lookup"><span data-stu-id="41b93-405">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="41b93-406">Lo stato attivo della tastiera fa riferimento all'oggetto che riceve input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="41b93-406">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="41b93-407">L'elemento con lo stato attivo della tastiera presenta <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="41b93-407">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="41b93-408">Può esistere un solo elemento con lo stato attivo della tastiera sull'intero desktop.</span><span class="sxs-lookup"><span data-stu-id="41b93-408">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="41b93-409">Lo stato attivo logico fa riferimento all'oggetto all'interno di un ambito che ha lo stato attivo.</span><span class="sxs-lookup"><span data-stu-id="41b93-409">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="41b93-410">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md) e [Cenni preliminari sulla messa a fuoco](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="41b93-410">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="41b93-411">Informazioni evento indirizzato</span><span class="sxs-lookup"><span data-stu-id="41b93-411">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="41b93-412">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="41b93-412">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="41b93-413">Strategia di routing</span><span class="sxs-lookup"><span data-stu-id="41b93-413">Routing strategy</span></span>|<span data-ttu-id="41b93-414">Il tunneling</span><span class="sxs-lookup"><span data-stu-id="41b93-414">Tunneling</span></span>|  
|<span data-ttu-id="41b93-415">delegato</span><span class="sxs-lookup"><span data-stu-id="41b93-415">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="41b93-416">L'evento di bubbling corrispondente è <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="41b93-416">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-417">Identifica l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-417">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-418">Gli identificatori di eventi indirizzati vengono creati quando vengono registrati gli eventi indirizzati e il risultato viene archiviato come campo nella classe che registra l'evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-418">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="41b93-419">Gli identificatori contengono un nome che identifichi il tipo di proprietario, tipo di gestore, strategia di routing e un metodo di utilità per l'aggiunta di proprietari per l'evento.</span><span class="sxs-lookup"><span data-stu-id="41b93-419">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="41b93-420">Spesso si usano questi identificatori come parametri a metodi del sistema di eventi, per identificare un particolare evento indirizzato.</span><span class="sxs-lookup"><span data-stu-id="41b93-420">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyboardDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.KeyboardDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As KeyboardDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::KeyboardDevice ^ PrimaryDevice { System::Windows::Input::KeyboardDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.KeyboardDevice" Usage="System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41b93-421">Ottiene il dispositivo di input della tastiera primario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-421">Gets the primary keyboard input device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41b93-422">Dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-422">The device.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-423">Questa proprietà supporta l'infrastruttura di [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] e non deve essere usata direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="41b93-423">This property supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyboardDevice" />
      </Docs>
    </Member>
    <Member MemberName="RemoveGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-424">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-424">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-425">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-425">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-426">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-426">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-427">Questo metodo fornisce funzioni di accesso proprietà associata per l'accesso di codice per il <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-427">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-428">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-428">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-429">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-429">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-430">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-430">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-431">Questo metodo fornisce funzioni di accesso proprietà associata per l'accesso di codice per il <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-431">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-432">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-432">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-433">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-433">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-434">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-434">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-435">Questo metodo fornisce funzioni di accesso proprietà associata per l'accesso di codice per il <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-435">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-436">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-436">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-437">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-437">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-438">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-438">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-439">Questo metodo fornisce funzioni di accesso proprietà associata per l'accesso di codice per il <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-439">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-440">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-440">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-441">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-441">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-442">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-442">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-443">Questo metodo fornisce funzioni di accesso proprietà associata per l'accesso di codice per il <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-443">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-444">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-444">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-445">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-445">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-446">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-446">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-447">Questo metodo fornisce funzioni di accesso proprietà associata per l'accesso di codice per il <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-447">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-448">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-448">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-449">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-449">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-450">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-450">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-451">Questo metodo fornisce funzioni di accesso proprietà associata per l'accesso di codice per il <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-451">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-452">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-452">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-453">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-453">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-454">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-454">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-455">Questo metodo fornisce funzioni di accesso proprietà associata per l'accesso di codice per il <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-455">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-456">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-456">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-457">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-457">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-458">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-458">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-459">Questo metodo fornisce funzioni di accesso proprietà associata per l'accesso di codice per il <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-459">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="41b93-460">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-460">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="41b93-461">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-461">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41b93-462">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41b93-462">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b93-463">Questo metodo fornisce funzioni di accesso proprietà associata per l'accesso di codice per il <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> evento associato.</span><span class="sxs-lookup"><span data-stu-id="41b93-463">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>