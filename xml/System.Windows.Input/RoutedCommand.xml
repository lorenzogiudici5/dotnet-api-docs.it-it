<Type Name="RoutedCommand" FullName="System.Windows.Input.RoutedCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d7469aafedfab5bf01be9f8214fc44809973b73" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RoutedCommand : System.Windows.Input.ICommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoutedCommand extends System.Object implements class System.Windows.Input.ICommand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.RoutedCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class RoutedCommand&#xA;Implements ICommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutedCommand : System::Windows::Input::ICommand" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommand</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0e973-101">Definisce un comando che implementa <see cref="T:System.Windows.Input.ICommand" /> ed Ã¨ indirizzato tramite la struttura ad albero dell'elemento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0e973-101">Defines a command that implements <see cref="T:System.Windows.Input.ICommand" /> and is routed through the element tree.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e973-102">Il <xref:System.Windows.Input.RoutedCommand.Execute%2A> e <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metodi su un <xref:System.Windows.Input.RoutedCommand> non contengono la logica dell'applicazione per il comando, come nel caso di una tipica <xref:System.Windows.Input.ICommand>, ma piuttosto, questi metodi generano eventi che passano attraverso la struttura ad albero dell'elemento alla ricerca di un oggetto con un <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="0e973-102">The <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods on a <xref:System.Windows.Input.RoutedCommand> do not contain the application logic for the command as is the case with a typical <xref:System.Windows.Input.ICommand>, but rather, these methods raise events that traverse the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.</span></span>  <span data-ttu-id="0e973-103">I gestori eventi associati per il <xref:System.Windows.Input.CommandBinding> contengono la logica.</span><span class="sxs-lookup"><span data-stu-id="0e973-103">The event handlers attached to the <xref:System.Windows.Input.CommandBinding> contain the command logic.</span></span>  
  
 <span data-ttu-id="0e973-104">Il <xref:System.Windows.Input.RoutedCommand.Execute%2A> metodo genera il <xref:System.Windows.Input.CommandManager.PreviewExecuted> e <xref:System.Windows.Input.CommandManager.Executed> eventi.</span><span class="sxs-lookup"><span data-stu-id="0e973-104">The <xref:System.Windows.Input.RoutedCommand.Execute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events.</span></span>  <span data-ttu-id="0e973-105">Il <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metodo genera il <xref:System.Windows.Input.CommandManager.PreviewCanExecute> e <xref:System.Windows.Input.CommandManager.CanExecute> eventi.</span><span class="sxs-lookup"><span data-stu-id="0e973-105">The <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events.</span></span>  
  
<a name="xamlAttributeUsage_RoutedCommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="0e973-106">Uso della sintassi XAML per gli attributi</span><span class="sxs-lookup"><span data-stu-id="0e973-106">XAML Attribute Usage</span></span>  
 <span data-ttu-id="0e973-107">\<*object* *property*="*predefinedCommandName*"/></span><span class="sxs-lookup"><span data-stu-id="0e973-107">\<*object* *property*="*predefinedCommandName*"/></span></span>  
  
 <span data-ttu-id="0e973-108">\- oppure -</span><span class="sxs-lookup"><span data-stu-id="0e973-108">\- or -</span></span>  
  
 <span data-ttu-id="0e973-109">\<*object* *property*="*predefinedClassName*.*predefinedCommandName*"/></span><span class="sxs-lookup"><span data-stu-id="0e973-109">\<*object* *property*="*predefinedClassName*.*predefinedCommandName*"/></span></span>  
  
 <span data-ttu-id="0e973-110">\- oppure -</span><span class="sxs-lookup"><span data-stu-id="0e973-110">\- or -</span></span>  
  
 <span data-ttu-id="0e973-111">\<*object* *property*="{ *customClassName*.*customCommandName*}"/></span><span class="sxs-lookup"><span data-stu-id="0e973-111">\<*object* *property*="{ *customClassName*.*customCommandName*}"/></span></span>  
  
<a name="xamlValues_RoutedCommand"></a>   
## <a name="xaml-values"></a><span data-ttu-id="0e973-112">Valori XAML</span><span class="sxs-lookup"><span data-stu-id="0e973-112">XAML Values</span></span>  
 <span data-ttu-id="0e973-113">*predefinedClassName*</span><span class="sxs-lookup"><span data-stu-id="0e973-113">*predefinedClassName*</span></span>  
 <span data-ttu-id="0e973-114">Una delle classi di comandi predefiniti.</span><span class="sxs-lookup"><span data-stu-id="0e973-114">One of the predefined command classes.</span></span>  
  
 <span data-ttu-id="0e973-115">*predefinedCommandName*</span><span class="sxs-lookup"><span data-stu-id="0e973-115">*predefinedCommandName*</span></span>  
 <span data-ttu-id="0e973-116">Uno dei comandi predefiniti.</span><span class="sxs-lookup"><span data-stu-id="0e973-116">One of the predefined commands.</span></span>  
  
 <span data-ttu-id="0e973-117">*customClassName*</span><span class="sxs-lookup"><span data-stu-id="0e973-117">*customClassName*</span></span>  
 <span data-ttu-id="0e973-118">Una classe personalizzata che contiene il comando personalizzato.</span><span class="sxs-lookup"><span data-stu-id="0e973-118">A custom class which contains the custom command.</span></span> <span data-ttu-id="0e973-119">Le classi personalizzate richiedono in genere un `xlmns` anteporre al mapping, vedere [spazi dei nomi XAML e Mapping Namespace per XAML WPF](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="0e973-119">Custom classes generally require an `xlmns` prefix mapping; see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="0e973-120">*customCommandName*</span><span class="sxs-lookup"><span data-stu-id="0e973-120">*customCommandName*</span></span>  
 <span data-ttu-id="0e973-121">Un comando personalizzato.</span><span class="sxs-lookup"><span data-stu-id="0e973-121">A custom command.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0e973-122">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-122">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e973-123">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-123">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedCommand (string name, Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ownerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedCommand(System::String ^ name, Type ^ ownerType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0e973-124">Nome dichiarato per la serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-124">Declared name for serialization.</span>
          </span>
        </param>
        <param name="ownerType">
          <span data-ttu-id="0e973-125">Tipo che sta registrando il comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-125">The type which is registering the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e973-126">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.RoutedCommand" /> con il nome e il tipo di proprietario specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-126">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class with the specified name and owner type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e973-127">
            <paramref name="name" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-127">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0e973-128">
            <paramref name="ownerType" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-128">
              <paramref name="ownerType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedCommand (string name, Type ownerType, System.Windows.Input.InputGestureCollection inputGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type ownerType, class System.Windows.Input.InputGestureCollection inputGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.#ctor(System.String,System.Type,System.Windows.Input.InputGestureCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ownerType As Type, inputGestures As InputGestureCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedCommand(System::String ^ name, Type ^ ownerType, System::Windows::Input::InputGestureCollection ^ inputGestures);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="inputGestures" Type="System.Windows.Input.InputGestureCollection" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0e973-129">Nome dichiarato per la serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-129">Declared name for serialization.</span>
          </span>
        </param>
        <param name="ownerType">
          <span data-ttu-id="0e973-130">Il tipo che registra il comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-130">The type that is registering the command.</span>
          </span>
        </param>
        <param name="inputGestures">
          <span data-ttu-id="0e973-131">Movimenti di input predefiniti associati a questo comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-131">Default input gestures associated with this command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e973-132">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.RoutedCommand" /> con il nome specificato, il tipo di proprietario e l'insieme di movimenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-132">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class with the specified name, owner type, and collection of gestures.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e973-133">
            <paramref name="name" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-133">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0e973-134">La lunghezza di <paramref name="name" /> Ã¨ zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-134">the length of <paramref name="name" /> is zero</span>
          </span>
          <span data-ttu-id="0e973-135">\- oppure -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-135">\- or -</span>
          </span>
          <span data-ttu-id="0e973-136">
            <paramref name="ownerType" /> Ã¨ <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-136">
              <paramref name="ownerType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public bool CanExecute (object parameter, System.Windows.IInputElement target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExecute(object parameter, class System.Windows.IInputElement target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecute (parameter As Object, target As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecute(System::Object ^ parameter, System::Windows::IInputElement ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="target" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="0e973-137">Tipo di dati definito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-137">A user defined data type.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="0e973-138">La destinazione del comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-138">The command target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e973-139">Determina se questo oggetto <see cref="T:System.Windows.Input.RoutedCommand" /> puÃ² essere eseguito nello stato corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-139">Determines whether this <see cref="T:System.Windows.Input.RoutedCommand" /> can execute in its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e973-140">
            <see langword="true" /> se il comando puÃ² essere eseguito in corrispondenza della destinazione corrente del comando. In caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-140">
              <see langword="true" /> if the command can execute on the current command target; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e973-141">La logica effettiva che determina se un <xref:System.Windows.Input.RoutedCommand> puÃ² essere eseguita in corrente destinazione del comando non Ã¨ inclusa nel <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metodi, piuttosto <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> genera il <xref:System.Windows.Input.CommandManager.PreviewCanExecute> e <xref:System.Windows.Input.CommandManager.CanExecute> eventi tunnel e il bubbling elemento ricerca di un oggetto con struttura un <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="0e973-141">The actual logic that determines if a <xref:System.Windows.Input.RoutedCommand> can execute on the current command target is not contained in the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods, rather <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and the <xref:System.Windows.Input.CommandManager.CanExecute> events which tunnel and bubble through element tree looking for a object with a <xref:System.Windows.Input.CommandBinding>.</span></span>  <span data-ttu-id="0e973-142">Se un <xref:System.Windows.Input.CommandBinding> per tale <xref:System.Windows.Input.RoutedCommand> viene trovato, il <xref:System.Windows.Input.CanExecuteRoutedEventHandler> collegato a <xref:System.Windows.Input.CommandBinding> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="0e973-142">If a <xref:System.Windows.Input.CommandBinding> for that <xref:System.Windows.Input.RoutedCommand> is found, then the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> attached to <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="0e973-143">Questi gestori forniscono la logica di programmazione per determinare se il <xref:System.Windows.Input.RoutedCommand> puÃ² eseguire o meno.</span><span class="sxs-lookup"><span data-stu-id="0e973-143">These handlers supply the programming logic for determining if the <xref:System.Windows.Input.RoutedCommand> can execute or not.</span></span>  
  
 <span data-ttu-id="0e973-144">Il <xref:System.Windows.Input.CommandManager.PreviewCanExecute> e <xref:System.Windows.Input.CommandManager.PreviewExecuted> in cui vengono generati eventi di <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span><span class="sxs-lookup"><span data-stu-id="0e973-144">The <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.PreviewExecuted> events are raised on the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span></span>  <span data-ttu-id="0e973-145">Se il <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> non Ã¨ impostata sul <xref:System.Windows.Input.ICommandSource>, <xref:System.Windows.Input.CommandManager.PreviewCanExecute> e <xref:System.Windows.Input.CommandManager.CanExecute> vengono generati eventi sull'elemento con stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="0e973-145">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> is not set on the <xref:System.Windows.Input.ICommandSource>, the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised on the element with keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e973-146">L'esempio seguente Ã¨ un <xref:System.Windows.Input.ICommand.CanExecuteChanged> gestore dell'evento da un'implementazione personalizzata di <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="0e973-146">The following example is a <xref:System.Windows.Input.ICommand.CanExecuteChanged> event handler from a custom implementation of <xref:System.Windows.Input.ICommandSource>.</span></span>  
  
 <span data-ttu-id="0e973-147">`this.Command` In questo esempio Ã¨ la <xref:System.Windows.Input.ICommandSource.Command%2A> proprietÃ  il <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="0e973-147">`this.Command` in this example is the <xref:System.Windows.Input.ICommandSource.Command%2A> property on the <xref:System.Windows.Input.ICommandSource>.</span></span>  <span data-ttu-id="0e973-148">Se il comando non Ã¨ `null`, il comando viene eseguito il cast a un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="0e973-148">If the command is not `null`, the command is cast to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="0e973-149">Se il comando Ã¨ un <xref:System.Windows.Input.RoutedCommand>, il <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> viene chiamato metodo passando la <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> e <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="0e973-149">If the command is a <xref:System.Windows.Input.RoutedCommand>, then the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> and the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  <span data-ttu-id="0e973-150">Se il comando non Ã¨ un <xref:System.Windows.Input.RoutedCommand>, viene eseguito il cast un <xref:System.Windows.Input.ICommand> e <xref:System.Windows.Input.ICommand.CanExecute%2A> viene chiamato metodo passando la <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="0e973-150">If command is not a <xref:System.Windows.Input.RoutedCommand>, it is cast to an <xref:System.Windows.Input.ICommand> and the <xref:System.Windows.Input.ICommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  
  
 <span data-ttu-id="0e973-151">Se il <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> restituisce `true`, quindi il controllo Ã¨ abilitato; in caso contrario, il controllo Ã¨ disabilitato.</span><span class="sxs-lookup"><span data-stu-id="0e973-151">If the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method returns `true`, then the control is enabled; otherwise, the control is disable.</span></span>  
  
 [!code-csharp[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/ImplementICommandSource/CSharp/CommandSlider.cs#implementicommandcanexecutechanged)]
 [!code-vb[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImplementICommandSource/visualbasic/commandslider.vb#implementicommandcanexecutechanged)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0e973-152">
            <paramref name="target" /> non Ã¨ un oggetto <see cref="T:System.Windows.UIElement" /> nÃ© <see cref="T:System.Windows.ContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-152">
              <paramref name="target" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanExecuteChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanExecuteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanExecuteChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.RoutedCommand.CanExecuteChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CanExecuteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ CanExecuteChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e973-153">Si verifica quando vengono rilevate modifiche all'origine comando da parte del gestore del comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-153">Occurs when changes to the command source are detected by the command manager.</span>
          </span>
          <span data-ttu-id="0e973-154">Queste modifiche spesso influiscono sull'esecuzione del comando in corrispondenza della destinazione corrente del comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-154">These changes often affect whether the command should execute on the current command target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e973-155">Il <xref:System.Windows.Input.RoutedCommand> attende la <xref:System.Windows.Input.CommandManager.RequerySuggested> evento, viene generato dal <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="0e973-155">The <xref:System.Windows.Input.RoutedCommand> listens for the <xref:System.Windows.Input.CommandManager.RequerySuggested> event, which is raised by the <xref:System.Windows.Input.CommandManager>.</span></span> <span data-ttu-id="0e973-156">Il <xref:System.Windows.Input.CommandManager.RequerySuggested> evento viene generato ogni volta che vengono soddisfatte le condizioni che potrebbero modificare se eseguire il comando, ad esempio una modifica nello stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="0e973-156">The <xref:System.Windows.Input.CommandManager.RequerySuggested> event is raised whenever conditions are met that may change the whether the command should execute, such as a change in keyboard focus.</span></span>  <span data-ttu-id="0e973-157">Quando il comando riceve il <xref:System.Windows.Input.CommandManager.RequerySuggested> evento, viene generato il <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="0e973-157">When the command receives the <xref:System.Windows.Input.CommandManager.RequerySuggested> event, it raises the <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> event.</span></span>  <span data-ttu-id="0e973-158">In genere, si attenderÃ  l'origine del comando per questo evento e query di <xref:System.Windows.Input.RoutedCommand> per mezzo del <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="0e973-158">Generally, the command source will listen for this event and query the <xref:System.Windows.Input.RoutedCommand> by way of the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method.</span></span>  <span data-ttu-id="0e973-159">La maggior parte delle origini di comando verranno disabilitate se il comando non puÃ² essere eseguito come parte dell'associazione del comando.</span><span class="sxs-lookup"><span data-stu-id="0e973-159">Most command sources will disable themselves if the command cannot be executed, as part of their command binding.</span></span>  <span data-ttu-id="0e973-160">Un esempio Ã¨ quando un <xref:System.Windows.Controls.MenuItem> diventa inattivo quando non Ã¨ possibile eseguire il comando.</span><span class="sxs-lookup"><span data-stu-id="0e973-160">An example of this is when a <xref:System.Windows.Controls.MenuItem> grays itself out when the command cannot be executed.</span></span>  
  
 <span data-ttu-id="0e973-161">In alcuni casi, il <xref:System.Windows.Input.CommandManager> Ã¨ a conoscenza di una modifica nelle condizioni che modifica la possibilitÃ  di eseguire un comando.</span><span class="sxs-lookup"><span data-stu-id="0e973-161">In some situations, the <xref:System.Windows.Input.CommandManager> is unaware of a change in conditions that alters the ability of a command to execute.</span></span>  <span data-ttu-id="0e973-162">In questi casi, Ã¨ possibile forzare il <xref:System.Windows.Input.CommandManager> su Genera il <xref:System.Windows.Input.CommandManager.RequerySuggested> evento chiamando il <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> (metodo), ciÃ² determinerÃ  il <xref:System.Windows.Input.RoutedCommand> per generare il <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="0e973-162">In these cases, you can force the <xref:System.Windows.Input.CommandManager> to raises the <xref:System.Windows.Input.CommandManager.RequerySuggested> event by calling the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method, this will in turn cause the <xref:System.Windows.Input.RoutedCommand> to raise the <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e973-163">L'esempio seguente Ã¨ un <xref:System.Windows.Input.ICommand.CanExecuteChanged> gestore dell'evento da un'implementazione personalizzata di <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="0e973-163">The following example is a <xref:System.Windows.Input.ICommand.CanExecuteChanged> event handler from a custom implementation of <xref:System.Windows.Input.ICommandSource>.</span></span>  
  
 <span data-ttu-id="0e973-164">`this.Command` In questo esempio Ã¨ la <xref:System.Windows.Input.ICommandSource.Command%2A> proprietÃ  il <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="0e973-164">`this.Command` in this example is the <xref:System.Windows.Input.ICommandSource.Command%2A> property on the <xref:System.Windows.Input.ICommandSource>.</span></span>  <span data-ttu-id="0e973-165">Se il comando non Ã¨ `null`, il comando viene eseguito il cast a un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="0e973-165">If the command is not `null`, the command is cast to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="0e973-166">Se il comando Ã¨ un <xref:System.Windows.Input.RoutedCommand>, il <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> viene chiamato metodo passando la <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> e <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="0e973-166">If the command is a <xref:System.Windows.Input.RoutedCommand>, then the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> and the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  <span data-ttu-id="0e973-167">Se il comando non Ã¨ un <xref:System.Windows.Input.RoutedCommand>, viene eseguito il cast un <xref:System.Windows.Input.ICommand> e <xref:System.Windows.Input.ICommand.CanExecute%2A> viene chiamato metodo passando la <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="0e973-167">If command is not a <xref:System.Windows.Input.RoutedCommand>, it is cast to an <xref:System.Windows.Input.ICommand> and the <xref:System.Windows.Input.ICommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  
  
 <span data-ttu-id="0e973-168">Se il <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> restituisce `true`, quindi il controllo Ã¨ abilitato; in caso contrario, il controllo Ã¨ disabilitato.</span><span class="sxs-lookup"><span data-stu-id="0e973-168">If the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method returns `true`, then the control is enabled; otherwise, the control is disabled.</span></span>  
  
 [!code-csharp[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/ImplementICommandSource/CSharp/CommandSlider.cs#implementicommandcanexecutechanged)]
 [!code-vb[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImplementICommandSource/visualbasic/commandslider.vb#implementicommandcanexecutechanged)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (object parameter, System.Windows.IInputElement target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(object parameter, class System.Windows.IInputElement target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (parameter As Object, target As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Object ^ parameter, System::Windows::IInputElement ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="target" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="0e973-169">Parametro definito dall'utente da passare al gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-169">User defined parameter to be passed to the handler.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="0e973-170">Elemento in cui effettuare la ricerca dei gestori di comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-170">Element at which to begin looking for command handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e973-171">Esegue <see cref="T:System.Windows.Input.RoutedCommand" /> in corrispondenza della destinazione corrente del comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-171">Executes the <see cref="T:System.Windows.Input.RoutedCommand" /> on the current command target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e973-172">La logica effettiva che esegue il <xref:System.Windows.Input.RoutedCommand> non Ã¨ inclusa nel <xref:System.Windows.Input.RoutedCommand.Execute%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="0e973-172">The actual logic that executes the <xref:System.Windows.Input.RoutedCommand> is not contained in the <xref:System.Windows.Input.RoutedCommand.Execute%2A> methods.</span></span>  <span data-ttu-id="0e973-173"><xref:System.Windows.Input.RoutedCommand.Execute%2A> Genera il <xref:System.Windows.Input.CommandManager.PreviewExecuted> e <xref:System.Windows.Input.CommandManager.Executed> eventi, tunnel e a bolle tramite l'elemento di struttura ad albero ricerca di un oggetto con un <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="0e973-173"><xref:System.Windows.Input.RoutedCommand.Execute%2A> raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events, which tunnel and bubble through the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.</span></span>  <span data-ttu-id="0e973-174">Se un <xref:System.Windows.Input.CommandBinding> per tale <xref:System.Windows.Input.RoutedCommand> viene trovato, il <xref:System.Windows.Input.ExecutedRoutedEventHandler> collegato a <xref:System.Windows.Input.CommandBinding> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="0e973-174">If a <xref:System.Windows.Input.CommandBinding> for that <xref:System.Windows.Input.RoutedCommand> is found, then the <xref:System.Windows.Input.ExecutedRoutedEventHandler> attached to <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="0e973-175">Questi gestori forniscono la logica di programmazione che esegue il <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="0e973-175">These handlers supply the programming logic that performs the <xref:System.Windows.Input.RoutedCommand>.</span></span>  
  
 <span data-ttu-id="0e973-176">Il <xref:System.Windows.Input.CommandManager.PreviewExecuted> e <xref:System.Windows.Input.CommandManager.Executed> in cui vengono generati eventi di <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span><span class="sxs-lookup"><span data-stu-id="0e973-176">The <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events are raised on the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span></span>  <span data-ttu-id="0e973-177">Se il <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> non Ã¨ impostata sul <xref:System.Windows.Input.ICommandSource>, <xref:System.Windows.Input.CommandManager.PreviewExecuted> e <xref:System.Windows.Input.CommandManager.Executed> vengono generati eventi sull'elemento con stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="0e973-177">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> is not set on the <xref:System.Windows.Input.ICommandSource>, the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events are raised on the element with keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e973-178">Nell'esempio seguente proviene da un'implementazione personalizzata di <xref:System.Windows.Input.ICommandSource> esempio.</span><span class="sxs-lookup"><span data-stu-id="0e973-178">The following example is from a custom implementation of <xref:System.Windows.Input.ICommandSource> sample.</span></span>  
  
 <span data-ttu-id="0e973-179">`this.Command` In questo esempio Ã¨ la proprietÃ  comando sul <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="0e973-179">`this.Command` in this example is the Command property on the <xref:System.Windows.Input.ICommandSource>.</span></span>  <span data-ttu-id="0e973-180">Se il comando non Ã¨ null, il comando viene eseguito il cast a un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="0e973-180">If the command is not null, the command is cast to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="0e973-181">Se Ã¨ un <xref:System.Windows.Input.RoutedCommand>, il <xref:System.Windows.Input.RoutedCommand.Execute%2A> viene chiamato metodo passando la <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> e <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="0e973-181">If it is a <xref:System.Windows.Input.RoutedCommand>, then the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> and the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  <span data-ttu-id="0e973-182">Se il comando non Ã¨ un <xref:System.Windows.Input.RoutedCommand>, viene eseguito il cast un <xref:System.Windows.Input.ICommand> e <xref:System.Windows.Input.ICommand.Execute%2A> viene chiamato metodo passando la <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="0e973-182">If the command is not a <xref:System.Windows.Input.RoutedCommand>, it is cast to an <xref:System.Windows.Input.ICommand> and the <xref:System.Windows.Input.ICommand.Execute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  
  
 [!code-csharp[ImplementICommandSource#ImplementICommandExecute](~/samples/snippets/csharp/VS_Snippets_Wpf/ImplementICommandSource/CSharp/CommandSlider.cs#implementicommandexecute)]
 [!code-vb[ImplementICommandSource#ImplementICommandExecute](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImplementICommandSource/visualbasic/commandslider.vb#implementicommandexecute)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0e973-183">
            <paramref name="target" /> non Ã¨ un oggetto <see cref="T:System.Windows.UIElement" /> nÃ© <see cref="T:System.Windows.ContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-183">
              <paramref name="target" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InputGestures">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputGestureCollection InputGestures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGestureCollection InputGestures" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.RoutedCommand.InputGestures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputGestures As InputGestureCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputGestureCollection ^ InputGestures { System::Windows::Input::InputGestureCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGestureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e973-184">Ottiene l'insieme di oggetti <see cref="T:System.Windows.Input.InputGesture" /> associato a questo comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-184">Gets the collection of <see cref="T:System.Windows.Input.InputGesture" /> objects that are associated with this command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e973-185">I movimenti di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-185">The input gestures.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0e973-186">Nell'esempio seguente viene illustrato come aggiungere un nuovo <xref:System.Windows.Input.MouseGesture> per un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="0e973-186">The following example shows how to add a new <xref:System.Windows.Input.MouseGesture> to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedcommand)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedcommand)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.RoutedCommand.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e973-187">Ottiene il nome del comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-187">Gets the name of the command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e973-188">Nome del comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-188">The name of the command.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e973-189">Questa proprietÃ  puÃ² essere utilizzata quando si fa riferimento un <xref:System.Windows.Input.RoutedCommand> in [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="0e973-189">This property can be used when referencing a <xref:System.Windows.Input.RoutedCommand> in [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerType">
      <MemberSignature Language="C#" Value="public Type OwnerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type OwnerType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.RoutedCommand.OwnerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ OwnerType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e973-190">Ottiene il tipo registrato con il comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-190">Gets the type that is registered with the command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e973-191">Il tipo di proprietario del comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-191">The type of the command owner.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.ICommand.CanExecute">
      <MemberSignature Language="C#" Value="bool ICommand.CanExecute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Input.ICommand.CanExecute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#CanExecute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CanExecute (parameter As Object) As Boolean Implements ICommand.CanExecute" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Input.ICommand.CanExecute(System::Object ^ parameter) = System::Windows::Input::ICommand::CanExecute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="0e973-192">Dati usati dal comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-192">Data used by the command.</span>
          </span>
          <span data-ttu-id="0e973-193">Se il comando non richiede dati da passare, questo oggetto puÃ² essere impostato su <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-193">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e973-194">Per una descrizione di questo membro, vedere <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-194">For a description of this members, see <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e973-195">
            <see langword="true" /> se il comando puÃ² essere eseguito. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-195">
              <see langword="true" /> if this command can be executed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e973-196">Questo membro Ã¨ unâimplementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="0e973-196">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0e973-197">PuÃ² essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Input.RoutedCommand> a un'interfaccia <xref:System.Windows.Input.ICommand>.</span><span class="sxs-lookup"><span data-stu-id="0e973-197">It can be used only when the <xref:System.Windows.Input.RoutedCommand> instance is cast to an <xref:System.Windows.Input.ICommand> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.ICommand.Execute">
      <MemberSignature Language="C#" Value="void ICommand.Execute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Input.ICommand.Execute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#Execute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Execute (parameter As Object) Implements ICommand.Execute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Input.ICommand.Execute(System::Object ^ parameter) = System::Windows::Input::ICommand::Execute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="0e973-198">Dati usati dal comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-198">Data used by the command.</span>
          </span>
          <span data-ttu-id="0e973-199">Se il comando non richiede dati da passare, questo oggetto puÃ² essere impostato su <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-199">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e973-200">Per una descrizione di questo membro, vedere <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e973-200">For a description of this members, see <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e973-201">Questo membro Ã¨ unâimplementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="0e973-201">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0e973-202">PuÃ² essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Input.RoutedCommand> a un'interfaccia <xref:System.Windows.Input.ICommand>.</span><span class="sxs-lookup"><span data-stu-id="0e973-202">It can be used only when the <xref:System.Windows.Input.RoutedCommand> instance is cast to an <xref:System.Windows.Input.ICommand> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e973-203">Vedere anche</span><span class="sxs-lookup"><span data-stu-id="0e973-203">See Also</span></span>  
  
 <xref:System.Windows.Input.RoutedCommand.Execute%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>