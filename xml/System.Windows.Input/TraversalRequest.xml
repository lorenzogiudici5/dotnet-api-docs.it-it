<Type Name="TraversalRequest" FullName="System.Windows.Input.TraversalRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79397a9b9da572d591134d35a9b3c9d3045586c8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36504220" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TraversalRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TraversalRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TraversalRequest" />
  <TypeSignature Language="VB.NET" Value="Public Class TraversalRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraversalRequest" />
  <TypeSignature Language="F#" Value="type TraversalRequest = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta una richiesta per spostare lo stato attivo a un altro controllo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe viene utilizzata come parametro di input per il <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=nameWithType> metodo. Il <xref:System.Windows.UIElement.MoveFocus%2A> metodo ha un override a livello di framework WPF che fornisce un'implementazione più pratica (<xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=nameWithType>), nonché un'implementazione parallela sugli <xref:System.Windows.ContentElement> e <xref:System.Windows.FrameworkContentElement>. In genere si imposteranno le proprietà in <xref:System.Windows.Input.TraversalRequest> per personalizzare il comportamento quando si richiede che lo stato attivo spostato a un altro elemento.  
  
 Questa classe viene utilizzata anche come parametri di input per i metodi seguenti:  
  
-   <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>e le implementazioni del metodo utilizzato per l'interoperabilità (<xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>).  
  
-   <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente viene creata una <xref:System.Windows.Input.TraversalRequest> dell'istanza come input per un <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=nameWithType> chiamare.  
  
 [!code-csharp[FocusSample#FocusSampleMoveFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplemovefocus)]
 [!code-vb[FocusSample#FocusSampleMoveFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplemovefocus)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraversalRequest (System.Windows.Input.FocusNavigationDirection focusNavigationDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.FocusNavigationDirection focusNavigationDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraversalRequest(System::Windows::Input::FocusNavigationDirection focusNavigationDirection);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.TraversalRequest : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.Input.TraversalRequest" Usage="new System.Windows.Input.TraversalRequest focusNavigationDirection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="focusNavigationDirection" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="focusNavigationDirection">Direzione desiderata dell'attraversamento dello stato attivo, come un valore dell'enumerazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.TraversalRequest" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene creata una <xref:System.Windows.Input.TraversalRequest> dell'istanza come input per un <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=nameWithType> chiamare.  
  
 [!code-csharp[FocusSample#FocusSampleMoveFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplemovefocus)]
 [!code-vb[FocusSample#FocusSampleMoveFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplemovefocus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection" />
      </Docs>
    </Member>
    <Member MemberName="FocusNavigationDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Input.FocusNavigationDirection FocusNavigationDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.FocusNavigationDirection FocusNavigationDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FocusNavigationDirection As FocusNavigationDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::FocusNavigationDirection FocusNavigationDirection { System::Windows::Input::FocusNavigationDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusNavigationDirection : System.Windows.Input.FocusNavigationDirection" Usage="System.Windows.Input.TraversalRequest.FocusNavigationDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.FocusNavigationDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la direzione di attraversamento.</summary>
        <value>Uno dei valori di enumerazione della direzione di attraversamento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è di sola lettura perché il <xref:System.Windows.Input.FocusNavigationDirection> è un parametro di input obbligatorio del <xref:System.Windows.Input.TraversalRequest> costruttore della classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrapped">
      <MemberSignature Language="C#" Value="public bool Wrapped { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrapped" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TraversalRequest.Wrapped" />
      <MemberSignature Language="VB.NET" Value="Public Property Wrapped As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Wrapped { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Wrapped : bool with get, set" Usage="System.Windows.Input.TraversalRequest.Wrapped" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'attraversamento dello stato attivo è o meno arrivato alla fine degli elementi figlio che possono avere lo stato attivo.</summary>
        <value>
          <see langword="true" /> se questo attraversamento è arrivato alla fine degli elementi figlio che possono avere lo stato attivo; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli elementi con stato attivabili sono quegli elementi in cui il <xref:System.Windows.UIElement.Focusable%2A> proprietà `true`.  
  
 Questo parametro viene usata principalmente per comunicare se attraversamento tramite tabulazioni deve eseguire il wrapping quando si chiama i metodi <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, <xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>, o.<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>. Se si passa lo stato attivo a un oggetto che implementa <xref:System.Windows.Interop.IKeyboardInputSink>, quindi specificare true per <xref:System.Windows.Input.TraversalRequest.Wrapped%2A> comporterà che `true` valore passato al <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> implementazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>