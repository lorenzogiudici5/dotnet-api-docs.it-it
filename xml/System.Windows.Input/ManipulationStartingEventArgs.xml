<Type Name="ManipulationStartingEventArgs" FullName="System.Windows.Input.ManipulationStartingEventArgs">
  <TypeSignature Language="C#" Value="public sealed class ManipulationStartingEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationStartingEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationStartingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationStartingEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationStartingEventArgs sealed : System::Windows::Input::InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1ce81-101">Fornisce i dati per l'evento <see cref="E:System.Windows.UIElement.ManipulationStarting" />.</span><span class="sxs-lookup"><span data-stu-id="1ce81-101">Provides data for the <see cref="E:System.Windows.UIElement.ManipulationStarting" />, event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ce81-102">Il <xref:System.Windows.Input.ManipulationStartingEventArgs> consentono di specificare il comportamento di una modifica.</span><span class="sxs-lookup"><span data-stu-id="1ce81-102">The <xref:System.Windows.Input.ManipulationStartingEventArgs> enable you to specify the behavior of a manipulation.</span></span>  <span data-ttu-id="1ce81-103">Utilizzare il <xref:System.Windows.Input.ManipulationStartingEventArgs> per eseguire le operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="1ce81-103">Use the <xref:System.Windows.Input.ManipulationStartingEventArgs> to do the following:</span></span>  
  
-   <span data-ttu-id="1ce81-104">Specificare che la posizione deve essere relativa a un elemento impostando la <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="1ce81-104">Specify that the position should be relative to an element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span>  
  
-   <span data-ttu-id="1ce81-105">Specificare se la modifica di un singolo dito viene abilitata impostando il <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="1ce81-105">Specify whether single-finger manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="1ce81-106">Specificare quali tipi di modifica vengono attivati impostando il <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> proprietà per un <xref:System.Windows.Input.ManipulationModes> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="1ce81-106">Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.</span></span>  
  
-   <span data-ttu-id="1ce81-107">Specificare il centro di una rotazione di un singolo dito impostando il <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="1ce81-107">Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="1ce81-108">Annullare la modifica impostando il <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="1ce81-108">Cancel the manipulation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> property to `true`.</span></span>  
  
 <span data-ttu-id="1ce81-109">Per ulteriori informazioni sulle modifiche, vedere il [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1ce81-109">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1ce81-110">Per un esempio di un'applicazione che risponde alle modifiche, vedere [procedura dettagliata: creazione del primo Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="1ce81-110">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationStartingEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Function Cancel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1ce81-111">Annulla la modifica e promuove il tocco per gli eventi del mouse.</span><span class="sxs-lookup"><span data-stu-id="1ce81-111">Cancels the manipulation and promotes touch to mouse events.</span></span></summary>
        <returns>
          <span data-ttu-id="1ce81-112"><see langword="true" /> se il tocco è promosso correttamente per gli eventi del mous; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1ce81-112"><see langword="true" /> if touch was successfully promoted to mouse events, otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ce81-113">Se il metodo ha esito positivo, il valore predefinito <xref:System.Windows.Input.TouchDevice> invia precedente tocca gli eventi di selezione come mouse inattivo e non si verificano eventi di modifica futuri.</span><span class="sxs-lookup"><span data-stu-id="1ce81-113">If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch down events as mouse down events and future manipulation events do not occur.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="genericTarget">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleTouchEnabled">
      <MemberSignature Language="C#" Value="public bool IsSingleTouchEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleTouchEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSingleTouchEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSingleTouchEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1ce81-114">Ottiene o imposta un valore che indica se un dito può avviare una manipolazione.</span><span class="sxs-lookup"><span data-stu-id="1ce81-114">Gets or sets whether one finger can start a manipulation.</span></span></summary>
        <value>
          <span data-ttu-id="1ce81-115"><see langword="true" /> se un dito può avviare una manipolazione; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1ce81-115"><see langword="true" /> one finger can start a manipulation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1ce81-116">Il valore predefinito è <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="1ce81-116">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ce81-117">Per ulteriori informazioni sulle modifiche, vedere il [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1ce81-117">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1ce81-118">Per un esempio di un'applicazione che risponde alle modifiche, vedere [procedura dettagliata: creazione del primo Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="1ce81-118">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationContainer">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement ManipulationContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement ManipulationContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property ManipulationContainer As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ ManipulationContainer { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1ce81-119">Ottiene o imposta il contenitore a cui si riferiscono tutti gli eventi di manipolazione e i calcoli.</span><span class="sxs-lookup"><span data-stu-id="1ce81-119">Gets or sets the container that all manipulation events and calculations are relative to.</span></span></summary>
        <value><span data-ttu-id="1ce81-120">Contenitore a cui si riferiscono tutti gli eventi di manipolazione e i calcoli.</span><span class="sxs-lookup"><span data-stu-id="1ce81-120">The container that all manipulation events and calculations are relative to.</span></span> <span data-ttu-id="1ce81-121">L'impostazione predefinita è l'elemento sul quale si è verificato l'evento.</span><span class="sxs-lookup"><span data-stu-id="1ce81-121">The default is the element on which the event occurred.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ce81-122">È possibile specificare che la posizione deve essere relativa a un altro elemento impostando la <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="1ce81-122">You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span> <span data-ttu-id="1ce81-123">Ad esempio, è possibile apportare le posizioni di manipolazione rispetto al padre dell'elemento che riceve gli eventi di modifica.</span><span class="sxs-lookup"><span data-stu-id="1ce81-123">For example, you can make the manipulation positions relative to the parent of the element that receives the manipulation events.</span></span> <span data-ttu-id="1ce81-124">Il <xref:System.Windows.UIElement.ManipulationStarting> gestore eventi è l'unico punto in cui è possibile impostare il <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ce81-124">The <xref:System.Windows.UIElement.ManipulationStarting> event handler is the only place in which you can set the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>.</span></span>  
  
 <span data-ttu-id="1ce81-125">Per ulteriori informazioni sulle modifiche, vedere il [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1ce81-125">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1ce81-126">Per un esempio di un'applicazione che risponde alle modifiche, vedere [procedura dettagliata: creazione del primo Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="1ce81-126">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Manipulators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt; Manipulators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.IManipulator&gt; Manipulators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.Manipulators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Manipulators As IEnumerable(Of IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ Manipulators { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1ce81-127">Ottiene un insieme di oggetti che rappresenta i contatti tocco per la modifica.</span><span class="sxs-lookup"><span data-stu-id="1ce81-127">Gets a collection of objects that represents the touch contacts for the manipulation.</span></span></summary>
        <value><span data-ttu-id="1ce81-128">Insieme di oggetti che rappresenta i contatti tocco per la modifica.</span><span class="sxs-lookup"><span data-stu-id="1ce81-128">A collection of objects that represents the touch contacts for the manipulation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationModes Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ManipulationModes Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As ManipulationModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationModes Mode { System::Windows::Input::ManipulationModes get(); void set(System::Windows::Input::ManipulationModes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1ce81-129">Ottiene o imposta quali tipi di manipolazioni sono possibili.</span><span class="sxs-lookup"><span data-stu-id="1ce81-129">Gets or sets which types of manipulations are possible.</span></span></summary>
        <value><span data-ttu-id="1ce81-130">Uno dei valori di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="1ce81-130">One of the enumeration values.</span></span> <span data-ttu-id="1ce81-131">Il valore predefinito è <see cref="F:System.Windows.Input.ManipulationModes.All" />.</span><span class="sxs-lookup"><span data-stu-id="1ce81-131">The default is <see cref="F:System.Windows.Input.ManipulationModes.All" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ce81-132">Per ulteriori informazioni sulle modifiche, vedere il [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1ce81-132">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1ce81-133">Per un esempio di un'applicazione che risponde alle modifiche, vedere [procedura dettagliata: creazione del primo Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="1ce81-133">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1ce81-134">La proprietà è impostata su un valore diverso da uno o più valori dell'enumerazione <see cref="T:System.Windows.Input.ManipulationModes" /></span><span class="sxs-lookup"><span data-stu-id="1ce81-134">The property is set to a value other than one or more of the <see cref="T:System.Windows.Input.ManipulationModes" /> enumerations value</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Pivot">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationPivot Pivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationPivot Pivot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.Pivot" />
      <MemberSignature Language="VB.NET" Value="Public Property Pivot As ManipulationPivot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationPivot ^ Pivot { System::Windows::Input::ManipulationPivot ^ get(); void set(System::Windows::Input::ManipulationPivot ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationPivot</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1ce81-135">Ottiene o imposta un oggetto che descrive il pivot per la manipolazione di un singolo punto.</span><span class="sxs-lookup"><span data-stu-id="1ce81-135">Gets or sets an object that describes the pivot for a single-point manipulation.</span></span></summary>
        <value><span data-ttu-id="1ce81-136">Oggetto che descrive il pivot per la manipolazione di un singolo punto.</span><span class="sxs-lookup"><span data-stu-id="1ce81-136">An object that describes the pivot for a single-point manipulation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ce81-137">Quando si imposta la <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> proprietà, la modifica conterrà dati rotazione quando l'utente utilizza un dito durante una manipolazione.</span><span class="sxs-lookup"><span data-stu-id="1ce81-137">When you set the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> property, the manipulation will contain rotation data when the user uses one finger during a manipulation.</span></span>  <span data-ttu-id="1ce81-138">Si tratta di simulare situazioni reali in cui è possibile utilizzare un dito per ruotare un oggetto, ad esempio un foglio di carta in una tabella.</span><span class="sxs-lookup"><span data-stu-id="1ce81-138">This is to simulate real-world situations where you can use one finger to rotate an object, such as a piece of paper on a table.</span></span>  <span data-ttu-id="1ce81-139">Se il <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> è `null`, l'utente deve utilizzare due dita per provocare la rotazione.</span><span class="sxs-lookup"><span data-stu-id="1ce81-139">If the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> is `null`, the user must use two fingers to cause rotation.</span></span>  
  
 <span data-ttu-id="1ce81-140">Per ulteriori informazioni sulle modifiche, vedere il [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1ce81-140">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1ce81-141">Per un esempio di un'applicazione che risponde alle modifiche, vedere [procedura dettagliata: creazione del primo Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="1ce81-141">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ce81-142">Nell'esempio seguente viene illustrato un gestore eventi per il <xref:System.Windows.UIElement.ManipulationStarting> evento e imposta il <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="1ce81-142">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationStarting> event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1ce81-143">Per testare questo esempio, seguire i passaggi descritti in [procedura dettagliata: creazione del primo Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) e sostituire il codice nel passaggio 4 con questo codice.</span><span class="sxs-lookup"><span data-stu-id="1ce81-143">To test this example, follow the steps in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) and replace the code in step 4 with this code.</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationPivot](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/reportboundaryfeedbackexample.xaml.cs#manipulationpivot)]
 [!code-vb[BasicManipulation#ManipulationPivot](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/reportboundaryfeedbackexample.xaml.vb#manipulationpivot)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationParameter">
      <MemberSignature Language="C#" Value="public void SetManipulationParameter (System.Windows.Input.Manipulations.ManipulationParameters2D parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetManipulationParameter(class System.Windows.Input.Manipulations.ManipulationParameters2D parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter(System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetManipulationParameter (parameter As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetManipulationParameter(System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="1ce81-144">Parametro da aggiungere.</span><span class="sxs-lookup"><span data-stu-id="1ce81-144">The parameter to add.</span></span></param>
        <summary><span data-ttu-id="1ce81-145">Aggiunge parametri alla manipolazione corrente dell'elemento specificato.</span><span class="sxs-lookup"><span data-stu-id="1ce81-145">Adds parameters to the current manipulation of the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ce81-146">In genere non occorre chiamare questo metodo.</span><span class="sxs-lookup"><span data-stu-id="1ce81-146">You typically do not need to call this method.</span></span>  <span data-ttu-id="1ce81-147">Utilizzare le proprietà di <xref:System.Windows.Input.ManipulationStartingEventArgs> invece.</span><span class="sxs-lookup"><span data-stu-id="1ce81-147">Use the properties on the <xref:System.Windows.Input.ManipulationStartingEventArgs> instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>