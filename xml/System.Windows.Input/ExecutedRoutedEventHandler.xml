<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="53db9f986636f3d10b370f1e9e248937fbe4827b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36507892" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ExecutedRoutedEventHandler = delegate of obj * ExecutedRoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Oggetto a cui è associato il gestore eventi.</param>
    <param name="e">Dati dell'evento.</param>
    <summary>Rappresenta il metodo che gestirà gli eventi indirizzati <see cref="E:System.Windows.Input.CommandBinding.Executed" /> e <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" />, nonché gli eventi associati correlati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo delegato contiene la logica di implementazione per un <xref:System.Windows.Input.RoutedCommand>.  Separare la logica di implementazione del comando consente il comando per essere richiamati dai tipi e diverse origini e consente di centralizzare della logica di comando.  
  
 Questo delegato viene usato anche per <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> e <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, che sono connessi gli eventi nel <xref:System.Windows.Input.CommandManager> classe che implementa la maggior parte dell'infrastruttura di comando. Ma gestori più pratici gestirà la <xref:System.Windows.Input.CommandBinding.Executed> eventi da un particolare <xref:System.Windows.Input.CommandBinding>, anziché da funzionano nel <xref:System.Windows.Input.CommandManager> livello.  
  
 All'interno di <xref:System.Windows.Input.ExecutedRoutedEventArgs>, le proprietà seguenti sono in genere di interesse quando si scrive un gestore eventi per un evento indirizzato che deriva da un comando eseguito:  
  
-   <xref:System.Windows.RoutedEventArgs.Source%2A> segnala la destinazione in cui è stato eseguito il comando. Una volta il comando viene eseguito, è possibile anche pensare di <xref:System.Windows.RoutedEventArgs.Source%2A> più in genere in indirizzati termini di eventi, come l'oggetto che ha generato un evento indirizzato.  
  
-   <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> segnala il comando eseguito. Questa proprietà è utile se si usano le associazioni di comandi e se si scrivono i gestori che potenzialmente gestiscono più comandi.  
  
-   <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> Segnala tutti i parametri specifici di comando passati tramite il comando in esecuzione. Non tutti i comandi utilizzano o prevedono parametri specifici del comando.  
  
-   <xref:System.Windows.RoutedEventArgs.Handled%2A> segnala se l'evento indirizzato che hanno generato dal comando eseguito è stata già gestito da un altro elemento lungo la route. Per i gestori eventi indirizzati, è consigliabile avere gestori che eseguono operazioni significativo quando la gestione dell'evento per impostare <xref:System.Windows.RoutedEventArgs.Handled%2A> a `true`. Ciò impedisce gestori tipici per l'evento gestione nuovamente l'evento lungo la route. Per ulteriori informazioni sulla gestione degli eventi indirizzati, vedere [contrassegnare gli eventi indirizzati come Handled e la gestione della classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).  
  
 Questo delegato rappresenta anche i gestori <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> e <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, che sono connessi gli eventi nel <xref:System.Windows.Input.CommandManager> classe che implementa la maggior parte dell'infrastruttura di comando. Ma gestori più pratici gestirà la <xref:System.Windows.Input.CommandBinding.Executed> eventi da un particolare <xref:System.Windows.Input.CommandBinding>, anziché da funzionano nel <xref:System.Windows.Input.CommandManager> livello.  
  
 Per altre informazioni sui comandi, vedere [Cenni preliminari sull'esecuzione di comandi](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
   
  
## Examples  
 Questo esempio viene creato un <xref:System.Windows.Input.ExecutedRoutedEventHandler> che imposta una proprietà visiva nella destinazione quando viene eseguito il comando. L'esempio include anche il <xref:System.Windows.Input.CanExecuteRoutedEventHandler> per lo stesso comando.  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>