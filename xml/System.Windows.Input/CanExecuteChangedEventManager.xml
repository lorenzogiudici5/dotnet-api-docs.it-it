<Type Name="CanExecuteChangedEventManager" FullName="System.Windows.Input.CanExecuteChangedEventManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cea37817b2aa28c99275245d2b1c332d08a149fb" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52612227" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CanExecuteChangedEventManager : System.Windows.WeakEventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CanExecuteChangedEventManager extends System.Windows.WeakEventManager" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CanExecuteChangedEventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class CanExecuteChangedEventManager&#xA;Inherits WeakEventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class CanExecuteChangedEventManager : System::Windows::WeakEventManager" />
  <TypeSignature Language="F#" Value="type CanExecuteChangedEventManager = class&#xA;    inherit WeakEventManager" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.WeakEventManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6ec1f-101">Fornisce un'implementazione <see cref="T:System.Windows.WeakEventManager" /> per consentire di utilizzare il modello "listener di eventi deboli" per allegare listener per l'evento <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6ec1f-101">Provides a <see cref="T:System.Windows.WeakEventManager" /> implementation so that you can use the "weak event listener" pattern to attach listeners for the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec1f-102">Per informazioni su come utilizzare questa classe, vedere "Usando un esistente debole evento Manager Class" nella[modelli di eventi deboli](~/docs/framework/wpf/advanced/weak-event-patterns.md).</span><span class="sxs-lookup"><span data-stu-id="6ec1f-102">For information about how to use this class, see "Using an Existing Weak Event Manager Class" in[Weak Event Patterns](~/docs/framework/wpf/advanced/weak-event-patterns.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public static void AddHandler (System.Windows.Input.ICommand source, EventHandler&lt;EventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHandler(class System.Windows.Input.ICommand source, class System.EventHandler`1&lt;class System.EventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddHandler (source As ICommand, handler As EventHandler(Of EventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddHandler(System::Windows::Input::ICommand ^ source, EventHandler&lt;EventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddHandler : System.Windows.Input.ICommand * EventHandler&lt;EventArgs&gt; -&gt; unit" Usage="System.Windows.Input.CanExecuteChangedEventManager.AddHandler (source, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Input.ICommand" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.EventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="6ec1f-103">Oggetto di sorgente che genera l'evento <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-103">The source object that the raises the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6ec1f-104">Delegato che gestisce l'evento <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-104">The delegate that handles the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ec1f-105">Aggiunge il delegato specificato come gestore eventi dell'origine specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-105">Adds the specified delegate as an event handler of the specified source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ec1f-106">
            <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-106">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6ec1f-107">--oppure--</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-107">--or--</span>
          </span>
          <span data-ttu-id="6ec1f-108">
            <paramref name="handler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-108">
              <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewListenerList">
      <MemberSignature Language="C#" Value="protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.WeakEventManager/ListenerList NewListenerList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CanExecuteChangedEventManager.NewListenerList" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function NewListenerList () As WeakEventManager.ListenerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::WeakEventManager::ListenerList ^ NewListenerList();" />
      <MemberSignature Language="F#" Value="abstract member NewListenerList : unit -&gt; System.Windows.WeakEventManager.ListenerList&#xA;override this.NewListenerList : unit -&gt; System.Windows.WeakEventManager.ListenerList" Usage="canExecuteChangedEventManager.NewListenerList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ec1f-109">Restituisce un nuovo oggetto per contenere i listener per l'evento <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-109">Returns a new object to contain listeners to the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ec1f-110">Nuovo oggetto per contenere i listener per l'evento <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-110">A new object to contain listeners to the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="protected override bool Purge (object source, object data, bool purgeAll);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool Purge(object source, object data, bool purgeAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Purge (source As Object, data As Object, purgeAll As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool Purge(System::Object ^ source, System::Object ^ data, bool purgeAll);" />
      <MemberSignature Language="F#" Value="abstract member Purge : obj * obj * bool -&gt; bool&#xA;override this.Purge : obj * obj * bool -&gt; bool" Usage="canExecuteChangedEventManager.Purge (source, data, purgeAll)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="purgeAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="6ec1f-111">Origine per gli eventi attesi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-111">The source for events being listened to.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="6ec1f-112">Dati da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-112">The data to check.</span>
          </span>
          <span data-ttu-id="6ec1f-113">Si presume che questo oggetto sia un'implementazione di <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-113">This object is expected to be a <see cref="T:System.Windows.WeakEventManager.ListenerList" /> implementation.</span>
          </span>
        </param>
        <param name="purgeAll">
          <span data-ttu-id="6ec1f-114">Impostare su <see langword="true" /> per interrompere l'ascolto di <paramref name="source" /> e rimuovere completamente tutte le voci da <paramref name="data" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-114">
              <see langword="true" /> to stop listening to <paramref name="source" />, and completely remove all entries from <paramref name="data" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ec1f-115">Rimuove voci di listener inattivi dall'elenco di dati per l'origine fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-115">Removes inactive listener entries from the data list for the provided source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ec1f-116">
            <see langword="true" /> se alcune voci sono state effettivamente rimosse, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-116">
              <see langword="true" /> if some entries were actually removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveHandler (System.Windows.Input.ICommand source, EventHandler&lt;EventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHandler(class System.Windows.Input.ICommand source, class System.EventHandler`1&lt;class System.EventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveHandler (source As ICommand, handler As EventHandler(Of EventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveHandler(System::Windows::Input::ICommand ^ source, EventHandler&lt;EventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveHandler : System.Windows.Input.ICommand * EventHandler&lt;EventArgs&gt; -&gt; unit" Usage="System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler (source, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Input.ICommand" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.EventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="6ec1f-117">Oggetto di sorgente che genera l'evento <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-117">The source object that the raises the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6ec1f-118">Delegato che gestisce l'evento <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-118">The delegate that handles the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ec1f-119">Rimuove il gestore eventi specificato dall'origine specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-119">Removes the specified event handler from the specified source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ec1f-120">
            <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-120">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6ec1f-121">--oppure--</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-121">--or--</span>
          </span>
          <span data-ttu-id="6ec1f-122">
            <paramref name="handler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-122">
              <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="protected override void StartListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StartListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StartListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StartListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : obj -&gt; unit&#xA;override this.StartListening : obj -&gt; unit" Usage="canExecuteChangedEventManager.StartListening source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="6ec1f-123">Oggetto con l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-123">The object with the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ec1f-124">Avvia l'ascolto dell'evento <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> sull'origine specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-124">Begins listening for the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event on the specified source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="protected override void StopListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StopListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StopListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StopListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="abstract member StopListening : obj -&gt; unit&#xA;override this.StopListening : obj -&gt; unit" Usage="canExecuteChangedEventManager.StopListening source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="6ec1f-125">Oggetto di origine sul quale interrompere l'ascolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-125">The source object to stop listening for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ec1f-126">Interrompe l'ascolto dell'evento <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> sull'origine specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec1f-126">Stops listening for the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event on the specified source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>