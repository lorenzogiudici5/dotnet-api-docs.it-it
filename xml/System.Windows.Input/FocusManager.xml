<Type Name="FocusManager" FullName="System.Windows.Input.FocusManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d6d9fcb88d7d279e85f852ae0f07a5a866d3b86" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39876941" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FocusManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FocusManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.FocusManager" />
  <TypeSignature Language="VB.NET" Value="Public Class FocusManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class FocusManager abstract sealed" />
  <TypeSignature Language="F#" Value="type FocusManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ecf8f-101">Fornisce un insieme di metodi statici, proprietà associate ed eventi per determinare e impostare gli ambiti dello stato attivo e per impostare l'elemento attivo all'interno dell'ambito.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecf8f-101">Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf8f-102">In Windows Presentation Foundation (WPF) sono presenti due concetti riguardanti lo stato attivo: della tastiera e lo stato attivo logico.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-102">In Windows Presentation Foundation (WPF) there are two concepts concerning focus: keyboard focus and logical focus.</span></span>  
  
 <span data-ttu-id="ecf8f-103">Lo stato attivo della tastiera fa riferimento all'elemento che riceve l'input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-103">Keyboard focus pertains to the element which is currently receiving keyboard input.</span></span>  <span data-ttu-id="ecf8f-104">Può esistere un solo elemento con lo stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-104">There can be only one element with keyboard focus.</span></span>  <span data-ttu-id="ecf8f-105">Questo elemento con lo stato attivo della tastiera presenta <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-105">This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="ecf8f-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> Restituisce l'elemento con lo stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> returns the element with keyboard focus.</span></span>  
  
 <span data-ttu-id="ecf8f-107">Lo stato attivo logico fa riferimento al <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> all'interno di un ambito specifico dello stato attivo.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-107">Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within a specific focus scope.</span></span>  
  
 <span data-ttu-id="ecf8f-108">Ambito di stato attivo è un elemento contenitore che tiene traccia del <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> nel relativo ambito.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-108">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="ecf8f-109">Per impostazione predefinita, il <xref:System.Windows.Window> classe è un ambito di stato attivo come i <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar> classi.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-109">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="ecf8f-110">Dispone di un elemento che è un ambito di messa a fuoco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-110">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="ecf8f-111">Possono essere presenti più elementi con lo stato attivo logico, ma può esistere solo un elemento con lo stato attivo logico all'interno di un ambito singolo messa a fuoco.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-111">There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.</span></span>  <span data-ttu-id="ecf8f-112">Un elemento con lo stato attivo logico non deve necessariamente lo stato attivo della tastiera, ma un elemento con stato attivo della tastiera avrà lo stato attivo logico.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-112">An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.</span></span>  <span data-ttu-id="ecf8f-113">È possibile definire un ambito dello stato attivo all'interno di un ambito dello stato attivo.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-113">It is possible to define a focus scope within a focus scope.</span></span>  <span data-ttu-id="ecf8f-114">In questo caso, l'ambito di messa a fuoco padre e l'ambito di messa a fuoco figlio può avere un <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-114">In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ecf8f-115">Lo scenario seguente illustra i cambiamenti di stato attivo della tastiera e lo stato attivo logico in un'applicazione WPF con un <xref:System.Windows.Window> con un <xref:System.Windows.Controls.TextBox> e una <xref:System.Windows.Controls.Menu> che ha un <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-115">The following scenario illustrates how keyboard focus and logical focus change in a WPF application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> which has a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="ecf8f-116">Quando lo stato attivo passa dal <xref:System.Windows.Controls.TextBox> per il <xref:System.Windows.Controls.MenuItem>, il <xref:System.Windows.Controls.TextBox> perde lo stato attivo della tastiera ma mantiene lo stato attivo logico per il <xref:System.Windows.Window> ambito dello stato attivo.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-116">When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope.</span></span>  <span data-ttu-id="ecf8f-117">Il <xref:System.Windows.Controls.MenuItem> Ottiene lo stato attivo della tastiera e lo stato attivo logico per il <xref:System.Windows.Controls.Menu> ambito dello stato attivo.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-117">The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  <span data-ttu-id="ecf8f-118">Quando lo stato attivo della tastiera torna all'oggetto radice <xref:System.Windows.Window>, l'elemento nel <xref:System.Windows.Window> ambito dello stato attivo con lo stato attivo logico otterrà lo stato attivo della tastiera, in questo caso il <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-118">When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="ecf8f-119">Il <xref:System.Windows.Controls.TextBox> ora ha lo stato attivo della tastiera e lo stato attivo logico.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-119">The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus.</span></span>  <span data-ttu-id="ecf8f-120">Il <xref:System.Windows.Controls.MenuItem> perde lo stato attivo della tastiera, ma mantiene lo stato attivo logico per il <xref:System.Windows.Controls.Menu> ambito dello stato attivo.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-120">The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  
  
 <span data-ttu-id="ecf8f-121">Il valore predefinito <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> su una <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, e <xref:System.Windows.Controls.ContextMenu> è `true`.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-121">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="ecf8f-122">Per altre informazioni sullo stato attivo, vedere la [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md) e il [Cenni preliminari sulla messa a fuoco](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ecf8f-122">For more information on focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and the [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ecf8f-123">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-123">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ecf8f-124">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-124">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecf8f-125">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.FocusManager.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-125">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ecf8f-126">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-126">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ecf8f-127">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-127">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecf8f-128">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.FocusManager.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-128">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="ILAsm" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="F#" Value="see GetFocusedElement, and SetFocusedElement" Usage="see GetFocusedElement, and SetFocusedElement" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ecf8f-129">Determina se l'elemento al quale questa proprietà è associata ha lo stato attivo logico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-129">Determines whether the element this property is attached to has logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf8f-130">Il <xref:System.Windows.Input.FocusManager.FocusedElement%2A> è l'elemento con lo stato attivo logico per un ambito specifico dello stato attivo.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-130">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="ecf8f-131">Questo oggetto può o non abbia lo stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-131">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="ecf8f-132">Lo stato attivo della tastiera fa riferimento all'elemento che riceve l'input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-132">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="ecf8f-133">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ecf8f-133">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="ecf8f-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> e <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> utilizzabile per ottenere e impostare l'elemento con lo stato attivo all'interno dell'ambito dello stato attivo specificato.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> and <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> can be used to get and set the focused element within the specified focus scope.</span></span>  
  
<a name="dependencyPropertyInfo_FocusedElement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ecf8f-135">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="ecf8f-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ecf8f-136">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="ecf8f-136">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.FocusedElementProperty>|  
|<span data-ttu-id="ecf8f-137">Impostare le proprietà dei metadati **true**</span><span class="sxs-lookup"><span data-stu-id="ecf8f-137">Metadata properties set to **true**</span></span>|<span data-ttu-id="ecf8f-138">nessuno</span><span class="sxs-lookup"><span data-stu-id="ecf8f-138">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ecf8f-139">Nell'esempio seguente viene illustrato come effettuare una <xref:System.Windows.Controls.Button> l'elemento con lo stato attivo.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-139">The following example shows how to make a <xref:System.Windows.Controls.Button> the focused element.</span></span>  
  
 [!code-xml[markupsnippets#MarkupFocusManagerFocusedElementXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupfocusmanagerfocusedelementxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedElementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecf8f-140">Identifica la proprietà associata <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-140">Identifies the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetFocusedElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusedElement (element As DependencyObject) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetFocusedElement(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusedElement : System.Windows.DependencyObject -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.FocusManager.GetFocusedElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ecf8f-141">L'elemento con lo stato attivo logico all'interno dell'ambito dello stato attivo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-141">The element with logical focus in the specified focus scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecf8f-142">Ottiene l'elemento con lo stato attivo logico all'interno dell'ambito dello stato attivo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-142">Gets the element with logical focus within the specified focus scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecf8f-143">L'elemento all'interno dell'ambito dello stato attivo specificato con lo stato attivo logico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-143">The element in the specified focus scope with logical focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf8f-144">Il <xref:System.Windows.Input.FocusManager.FocusedElement%2A> è l'elemento con lo stato attivo logico per un ambito specifico dello stato attivo.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-144">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="ecf8f-145">Questo oggetto può o non abbia lo stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-145">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="ecf8f-146">Lo stato attivo della tastiera fa riferimento all'elemento che riceve l'input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-146">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="ecf8f-147">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ecf8f-147">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="ecf8f-148">Se `element` non è un ambito di stato attivo, questo metodo restituirà `null`.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-148">If `element` is not a focus scope, this method will return `null`.</span></span>  
  
 <span data-ttu-id="ecf8f-149">Usare <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, specificare l'elemento con lo stato attivo logico all'interno di un ambito dello stato attivo specificato.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-149">Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecf8f-150">Nell'esempio seguente imposta l'elemento con lo stato attivo logico tramite il <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> e si ottiene l'elemento con lo stato attivo logico tramite il <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-150">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecf8f-151">
            <paramref name="element" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-151">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFocusScope">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusScope (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusScope : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Input.FocusManager.GetFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ecf8f-152">L'elemento per il quale ottenere l'ambito dello stato attivo più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-152">The element to get the closest focus scope for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecf8f-153">Determina il predecessore più vicino dell'elemento specificato per cui <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> è impostato su <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-153">Determines the closest ancestor of the specified element that has <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> set to <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecf8f-154">L'ambito dello stato attivo per l'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-154">The focus scope for the specified element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf8f-155">Il valore predefinito <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> su una <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> è `true`.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-155">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="ecf8f-156">Ambito di stato attivo è un elemento contenitore che tiene traccia del <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> nel relativo ambito.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-156">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="ecf8f-157">Per impostazione predefinita, il <xref:System.Windows.Window> classe è un ambito di stato attivo come i <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar> classi.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-157">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="ecf8f-158">Dispone di un elemento che è un ambito di messa a fuoco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-158">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="ecf8f-159">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ecf8f-159">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecf8f-160">
            <paramref name="element" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-160">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIsFocusScope">
      <MemberSignature Language="C#" Value="public static bool GetIsFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFocusScope (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFocusScope : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.FocusManager.GetIsFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ecf8f-161">Elemento da cui leggere la proprietà associata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-161">The element from which to read the attached property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecf8f-162">Determina se l'oggetto <see cref="T:System.Windows.DependencyObject" /> specificato è un ambito dello stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-162">Determines whether the specified <see cref="T:System.Windows.DependencyObject" /> is a focus scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecf8f-163">
            <see langword="true" /> se <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> è impostato su <see langword="true" /> in corrispondenza dell'elemento specificato. In caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-163">
              <see langword="true" /> if <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> is set to <see langword="true" /> on the specified element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf8f-164">Ambito di stato attivo è un elemento contenitore che tiene traccia del <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> nel relativo ambito.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-164">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="ecf8f-165">Per impostazione predefinita, il <xref:System.Windows.Window> classe è un ambito di stato attivo come i <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar> classi.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-165">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="ecf8f-166">Dispone di un elemento che è un ambito di messa a fuoco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-166">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="ecf8f-167">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ecf8f-167">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.GotFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" Usage="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ecf8f-168">Si verifica quando un elemento riceve lo stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-168">Occurs when an element gets focus.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecf8f-169">Identifica l'evento associato <see cref="E:System.Windows.Input.FocusManager.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-169">Identifies the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScope">
      <MemberSignature Language="C#" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="ILAsm" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.IsFocusScope" />
      <MemberSignature Language="VB.NET" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="F#" Value="see GetIsFocusScope, and SetIsFocusScope" Usage="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ecf8f-170">Determina se l'elemento al quale questa proprietà è associata è un ambito dello stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-170">Determines whether the element this property is attached to is a focus scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf8f-171">Ambito di stato attivo è un elemento contenitore che tiene traccia del <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> nel relativo ambito.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-171">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="ecf8f-172">Per impostazione predefinita, il <xref:System.Windows.Window> classe è un ambito di stato attivo come i <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar> classi.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-172">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="ecf8f-173">Dispone di un elemento che è un ambito di messa a fuoco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-173">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="ecf8f-174">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ecf8f-174">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocusScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ecf8f-175">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="ecf8f-175">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ecf8f-176">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="ecf8f-176">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.IsFocusScopeProperty>|  
|<span data-ttu-id="ecf8f-177">Impostare le proprietà dei metadati **true**</span><span class="sxs-lookup"><span data-stu-id="ecf8f-177">Metadata properties set to **true**</span></span>|<span data-ttu-id="ecf8f-178">nessuno</span><span class="sxs-lookup"><span data-stu-id="ecf8f-178">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ecf8f-179">Nell'esempio seguente viene eseguita una <xref:System.Windows.Controls.StackPanel> ambito di stato attivo.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-179">The following example makes a <xref:System.Windows.Controls.StackPanel> a focus scope.</span></span>  
  
 [!code-xml[markupsnippets#MarkupIsFocusScopeXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupisfocusscopexaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecf8f-180">Identifica la proprietà associata <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-180">Identifies the <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> attached property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf8f-181">Il valore predefinito <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> su una <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> è `true`.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-181">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="ecf8f-182">Ambito di stato attivo è un elemento contenitore che tiene traccia del <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> nel relativo ambito.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-182">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="ecf8f-183">Per impostazione predefinita, il <xref:System.Windows.Window> classe è un ambito di stato attivo come i <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar> classi.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-183">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="ecf8f-184">Dispone di un elemento che è un ambito di messa a fuoco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-184">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="ecf8f-185">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ecf8f-185">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.LostFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" Usage="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ecf8f-186">Si verifica quando un elemento perde lo stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-186">Occurs when an element loses focus.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecf8f-187">Identifica l'evento associato <see cref="E:System.Windows.Input.FocusManager.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-187">Identifies the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ecf8f-188">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-188">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ecf8f-189">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-189">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecf8f-190">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.FocusManager.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-190">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ecf8f-191">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-191">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ecf8f-192">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-192">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecf8f-193">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.FocusManager.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-193">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusedElement">
      <MemberSignature Language="C#" Value="public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFocusedElement(class System.Windows.DependencyObject element, class System.Windows.IInputElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFocusedElement (element As DependencyObject, value As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFocusedElement(System::Windows::DependencyObject ^ element, System::Windows::IInputElement ^ value);" />
      <MemberSignature Language="F#" Value="static member SetFocusedElement : System.Windows.DependencyObject * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.FocusManager.SetFocusedElement (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ecf8f-194">L'ambito dello stato attivo in cui rendere l'elemento specificato come <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-194">The focus scope in which to make the specified element the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ecf8f-195">Elemento a cui assegnare lo stato attivo logico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-195">The element to give logical focus to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecf8f-196">Imposta lo stato attivo logico in relazione all'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-196">Sets logical focus on the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf8f-197">Il <xref:System.Windows.Input.FocusManager.FocusedElement%2A> è l'elemento con lo stato attivo logico per l'ambito specifico.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-197">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for the specific focus scope.</span></span>  <span data-ttu-id="ecf8f-198">Questo oggetto può o non abbia lo stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-198">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="ecf8f-199">Lo stato attivo della tastiera fa riferimento all'elemento che riceve l'input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-199">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="ecf8f-200">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ecf8f-200">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="ecf8f-201">È possibile specificare un ambito che è un predecessore dell'ambito dello stato attivo che l'elemento è incluso.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-201">It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.</span></span>  <span data-ttu-id="ecf8f-202">Ad esempio, se un <xref:System.Windows.Controls.StackPanel> è un ambito dello stato attivo e il relativo elemento padre <xref:System.Windows.Window> è un ambito di stato attivo, un <xref:System.Windows.Controls.TextBox> figlio del <xref:System.Windows.Controls.StackPanel> può specificare la <xref:System.Windows.Window> come ambito lo stato attivo quando si chiama <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-202">For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span></span>  <span data-ttu-id="ecf8f-203">Il <xref:System.Windows.Controls.TextBox> viene quindi <xref:System.Windows.Input.FocusManager.FocusedElement%2A> sia per il <xref:System.Windows.Window> ambito dello stato attivo e <xref:System.Windows.Controls.StackPanel> ambito dello stato attivo.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-203">The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope.</span></span>  
  
 <span data-ttu-id="ecf8f-204"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> fornirà lo stato attivo logico di elemento specificato nell'ambito dello stato attivo specificato e tenterà di assegnare lo stato attivo della tastiera di elemento.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-204"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecf8f-205">Nell'esempio seguente imposta l'elemento con lo stato attivo logico tramite il <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> e si ottiene l'elemento con lo stato attivo logico tramite il <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-205">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFocusScope">
      <MemberSignature Language="C#" Value="public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFocusScope(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFocusScope (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFocusScope(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsFocusScope : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.FocusManager.SetIsFocusScope (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ecf8f-206">Elemento da rendere ambito dello stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-206">The element to make a focus scope.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ecf8f-207">
            <see langword="true" /> se <c>element</c> è un ambito dello stato attivo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-207">
              <see langword="true" /> if <c>element</c> is a focus scope; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecf8f-208">Imposta l'oggetto <see cref="T:System.Windows.DependencyObject" /> specificato come ambito dello stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecf8f-208">Sets the specified <see cref="T:System.Windows.DependencyObject" /> as a focus scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf8f-209">Ambito di stato attivo è un elemento contenitore che tiene traccia del <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> nel relativo ambito.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-209">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="ecf8f-210">Per impostazione predefinita, il <xref:System.Windows.Window> classe è un ambito di stato attivo come i <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar> classi.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-210">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="ecf8f-211">Dispone di un elemento che è un ambito di messa a fuoco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-211">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="ecf8f-212">Per altre informazioni su stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Cenni preliminari sull'Input](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ecf8f-212">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecf8f-213">L'esempio seguente un elemento diventa un ambito dello stato attivo tramite <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecf8f-213">The follow example makes an element a focus scope by using <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusSetIsFocusScope](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focussetisfocusscope)]
 [!code-vb[focussnippets#FocusSetIsFocusScope](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focussetisfocusscope)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>