<Type Name="FocusManager" FullName="System.Windows.Input.FocusManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ed5f4d178044d3c901f591ddd05762d1fa33d2a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36507977" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FocusManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FocusManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.FocusManager" />
  <TypeSignature Language="VB.NET" Value="Public Class FocusManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class FocusManager abstract sealed" />
  <TypeSignature Language="F#" Value="type FocusManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="de1f6-101">Fornisce un insieme di metodi statici, proprietà associate ed eventi per determinare e impostare gli ambiti dello stato attivo e per impostare l'elemento attivo all'interno dell'ambito.</span>
      <span class="sxs-lookup">
        <span data-stu-id="de1f6-101">Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1f6-102">In Windows Presentation Foundation (WPF) sono presenti due concetti riguardanti lo stato attivo: tastiera e lo stato attivo logico.</span><span class="sxs-lookup"><span data-stu-id="de1f6-102">In Windows Presentation Foundation (WPF) there are two concepts concerning focus: keyboard focus and logical focus.</span></span>  
  
 <span data-ttu-id="de1f6-103">Stato attivo della tastiera si riferisce all'elemento attualmente riceve input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="de1f6-103">Keyboard focus pertains to the element which is currently receiving keyboard input.</span></span>  <span data-ttu-id="de1f6-104">Può esistere un solo elemento con stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="de1f6-104">There can be only one element with keyboard focus.</span></span>  <span data-ttu-id="de1f6-105">L'elemento con stato attivo della tastiera ha <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="de1f6-105">This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="de1f6-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> Restituisce l'elemento con stato attivo della tastiera.</span><span class="sxs-lookup"><span data-stu-id="de1f6-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> returns the element with keyboard focus.</span></span>  
  
 <span data-ttu-id="de1f6-107">Lo stato attivo logico relativo al <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> all'interno di un ambito specifico messa a fuoco.</span><span class="sxs-lookup"><span data-stu-id="de1f6-107">Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within a specific focus scope.</span></span>  
  
 <span data-ttu-id="de1f6-108">Un ambito attivo è un elemento contenitore che tiene traccia del <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> all'interno dell'ambito.</span><span class="sxs-lookup"><span data-stu-id="de1f6-108">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="de1f6-109">Per impostazione predefinita, il <xref:System.Windows.Window> classe è un ambito attivo come il <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar> classi.</span><span class="sxs-lookup"><span data-stu-id="de1f6-109">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="de1f6-110">Dispone di un elemento che è un ambito di messa a fuoco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="de1f6-110">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="de1f6-111">Possono essere presenti più elementi con lo stato attivo logico, ma può esistere solo un elemento con lo stato attivo logico in un ambito singolo messa a fuoco.</span><span class="sxs-lookup"><span data-stu-id="de1f6-111">There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.</span></span>  <span data-ttu-id="de1f6-112">Un elemento con lo stato attivo logico non deve necessariamente lo stato attivo della tastiera, ma un elemento con stato attivo della tastiera avrà lo stato attivo logico.</span><span class="sxs-lookup"><span data-stu-id="de1f6-112">An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.</span></span>  <span data-ttu-id="de1f6-113">È possibile definire un ambito attivo in un ambito attivo.</span><span class="sxs-lookup"><span data-stu-id="de1f6-113">It is possible to define a focus scope within a focus scope.</span></span>  <span data-ttu-id="de1f6-114">In questo caso, l'ambito padre lo stato attivo e l'ambito di messa a fuoco figlio può avere un <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="de1f6-114">In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="de1f6-115">Lo scenario seguente viene illustrato come modificare lo stato attivo della tastiera e lo stato attivo logico in un'applicazione WPF con un <xref:System.Windows.Window> con un <xref:System.Windows.Controls.TextBox> e una <xref:System.Windows.Controls.Menu> che presenta un <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="de1f6-115">The following scenario illustrates how keyboard focus and logical focus change in a WPF application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> which has a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="de1f6-116">Quando lo stato attivo passa dal <xref:System.Windows.Controls.TextBox> per il <xref:System.Windows.Controls.MenuItem>, la <xref:System.Windows.Controls.TextBox> perde lo stato attivo della tastiera ma mantiene lo stato attivo logico per il <xref:System.Windows.Window> ambito dello stato attivo.</span><span class="sxs-lookup"><span data-stu-id="de1f6-116">When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope.</span></span>  <span data-ttu-id="de1f6-117">Il <xref:System.Windows.Controls.MenuItem> Ottiene lo stato attivo della tastiera e lo stato attivo logico per il <xref:System.Windows.Controls.Menu> ambito dello stato attivo.</span><span class="sxs-lookup"><span data-stu-id="de1f6-117">The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  <span data-ttu-id="de1f6-118">Quando viene restituito lo stato attivo alla radice <xref:System.Windows.Window>, l'elemento <xref:System.Windows.Window> ambito lo stato attivo con lo stato attivo logico otterrà lo stato attivo della tastiera, che in questo caso è la <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="de1f6-118">When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="de1f6-119">Il <xref:System.Windows.Controls.TextBox> contiene ora lo stato attivo della tastiera e lo stato attivo logico.</span><span class="sxs-lookup"><span data-stu-id="de1f6-119">The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus.</span></span>  <span data-ttu-id="de1f6-120">Il <xref:System.Windows.Controls.MenuItem> perde lo stato attivo della tastiera, ma mantiene lo stato attivo logico per il <xref:System.Windows.Controls.Menu> ambito dello stato attivo.</span><span class="sxs-lookup"><span data-stu-id="de1f6-120">The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  
  
 <span data-ttu-id="de1f6-121">Il valore predefinito di <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> in un <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, e <xref:System.Windows.Controls.ContextMenu> è `true`.</span><span class="sxs-lookup"><span data-stu-id="de1f6-121">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="de1f6-122">Per ulteriori informazioni sullo stato attivo, vedere la [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) e il [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="de1f6-122">For more information on focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and the [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="de1f6-123">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-123">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="de1f6-124">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-124">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de1f6-125">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.FocusManager.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-125">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="de1f6-126">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-126">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="de1f6-127">Gestore eventi da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-127">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de1f6-128">Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Input.FocusManager.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-128">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="ILAsm" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="F#" Value="see GetFocusedElement, and SetFocusedElement" Usage="see GetFocusedElement, and SetFocusedElement" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedElementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de1f6-129">Identifica la proprietà associata <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-129">Identifies the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetFocusedElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusedElement (element As DependencyObject) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetFocusedElement(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusedElement : System.Windows.DependencyObject -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.FocusManager.GetFocusedElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="de1f6-130">L'elemento con lo stato attivo logico all'interno dell'ambito dello stato attivo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-130">The element with logical focus in the specified focus scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de1f6-131">Ottiene l'elemento con lo stato attivo logico all'interno dell'ambito dello stato attivo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-131">Gets the element with logical focus within the specified focus scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de1f6-132">L'elemento all'interno dell'ambito dello stato attivo specificato con lo stato attivo logico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-132">The element in the specified focus scope with logical focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1f6-133">Il <xref:System.Windows.Input.FocusManager.FocusedElement%2A> è l'elemento che ha lo stato attivo logico per un ambito specifico messa a fuoco.</span><span class="sxs-lookup"><span data-stu-id="de1f6-133">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="de1f6-134">Questo oggetto può non avere stato attivo della tastiera o.</span><span class="sxs-lookup"><span data-stu-id="de1f6-134">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="de1f6-135">Stato attivo della tastiera fa riferimento all'elemento che riceve input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="de1f6-135">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="de1f6-136">Per ulteriori informazioni sullo stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="de1f6-136">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="de1f6-137">Se `element` non è un ambito attivo, questo metodo restituirà `null`.</span><span class="sxs-lookup"><span data-stu-id="de1f6-137">If `element` is not a focus scope, this method will return `null`.</span></span>  
  
 <span data-ttu-id="de1f6-138">Utilizzare <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, per specificare l'elemento con lo stato attivo logico in un ambito attivo specificato.</span><span class="sxs-lookup"><span data-stu-id="de1f6-138">Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1f6-139">Nell'esempio seguente imposta l'elemento con lo stato attivo logico utilizzando il <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> e si ottiene l'elemento con lo stato attivo logico utilizzando il <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="de1f6-139">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de1f6-140">
            <paramref name="element" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-140">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFocusScope">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusScope (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusScope : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Input.FocusManager.GetFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="de1f6-141">L'elemento per il quale ottenere l'ambito dello stato attivo più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-141">The element to get the closest focus scope for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de1f6-142">Determina il predecessore più vicino dell'elemento specificato per cui <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> è impostato su <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-142">Determines the closest ancestor of the specified element that has <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> set to <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de1f6-143">L'ambito dello stato attivo per l'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-143">The focus scope for the specified element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1f6-144">Il valore predefinito di <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> in un <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> è `true`.</span><span class="sxs-lookup"><span data-stu-id="de1f6-144">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="de1f6-145">Un ambito attivo è un elemento contenitore che tiene traccia del <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> all'interno dell'ambito.</span><span class="sxs-lookup"><span data-stu-id="de1f6-145">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="de1f6-146">Per impostazione predefinita, il <xref:System.Windows.Window> classe è un ambito attivo come il <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar> classi.</span><span class="sxs-lookup"><span data-stu-id="de1f6-146">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="de1f6-147">Dispone di un elemento che è un ambito di messa a fuoco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="de1f6-147">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="de1f6-148">Per ulteriori informazioni sullo stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="de1f6-148">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de1f6-149">
            <paramref name="element" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-149">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIsFocusScope">
      <MemberSignature Language="C#" Value="public static bool GetIsFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFocusScope (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFocusScope : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.FocusManager.GetIsFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="de1f6-150">Elemento da cui leggere la proprietà associata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-150">The element from which to read the attached property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de1f6-151">Determina se l'oggetto <see cref="T:System.Windows.DependencyObject" /> specificato è un ambito dello stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-151">Determines whether the specified <see cref="T:System.Windows.DependencyObject" /> is a focus scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de1f6-152">
            <see langword="true" /> se <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> è impostato su <see langword="true" /> in corrispondenza dell'elemento specificato. In caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-152">
              <see langword="true" /> if <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> is set to <see langword="true" /> on the specified element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1f6-153">Un ambito attivo è un elemento contenitore che tiene traccia del <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> all'interno dell'ambito.</span><span class="sxs-lookup"><span data-stu-id="de1f6-153">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="de1f6-154">Per impostazione predefinita, il <xref:System.Windows.Window> classe è un ambito attivo come il <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar> classi.</span><span class="sxs-lookup"><span data-stu-id="de1f6-154">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="de1f6-155">Dispone di un elemento che è un ambito di messa a fuoco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="de1f6-155">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="de1f6-156">Per ulteriori informazioni sullo stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="de1f6-156">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.GotFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" Usage="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de1f6-157">Identifica l'evento associato <see cref="E:System.Windows.Input.FocusManager.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-157">Identifies the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScope">
      <MemberSignature Language="C#" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="ILAsm" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.IsFocusScope" />
      <MemberSignature Language="VB.NET" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="F#" Value="see GetIsFocusScope, and SetIsFocusScope" Usage="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de1f6-158">Identifica la proprietà associata <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-158">Identifies the <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> attached property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1f6-159">Il valore predefinito di <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> in un <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> è `true`.</span><span class="sxs-lookup"><span data-stu-id="de1f6-159">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="de1f6-160">Un ambito attivo è un elemento contenitore che tiene traccia del <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> all'interno dell'ambito.</span><span class="sxs-lookup"><span data-stu-id="de1f6-160">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="de1f6-161">Per impostazione predefinita, il <xref:System.Windows.Window> classe è un ambito attivo come il <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar> classi.</span><span class="sxs-lookup"><span data-stu-id="de1f6-161">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="de1f6-162">Dispone di un elemento che è un ambito di messa a fuoco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="de1f6-162">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="de1f6-163">Per ulteriori informazioni sullo stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="de1f6-163">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.LostFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" Usage="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de1f6-164">Identifica l'evento associato <see cref="E:System.Windows.Input.FocusManager.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-164">Identifies the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="de1f6-165">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-165">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="de1f6-166">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-166">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de1f6-167">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.FocusManager.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-167">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="de1f6-168">Oggetto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> in ascolto su questo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-168">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="de1f6-169">Gestore eventi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-169">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de1f6-170">Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Input.FocusManager.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-170">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusedElement">
      <MemberSignature Language="C#" Value="public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFocusedElement(class System.Windows.DependencyObject element, class System.Windows.IInputElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFocusedElement (element As DependencyObject, value As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFocusedElement(System::Windows::DependencyObject ^ element, System::Windows::IInputElement ^ value);" />
      <MemberSignature Language="F#" Value="static member SetFocusedElement : System.Windows.DependencyObject * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.FocusManager.SetFocusedElement (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="de1f6-171">L'ambito dello stato attivo in cui rendere l'elemento specificato come <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-171">The focus scope in which to make the specified element the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="de1f6-172">Elemento a cui assegnare lo stato attivo logico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-172">The element to give logical focus to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de1f6-173">Imposta lo stato attivo logico in relazione all'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-173">Sets logical focus on the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1f6-174">Il <xref:System.Windows.Input.FocusManager.FocusedElement%2A> è l'elemento che ha lo stato attivo logico per l'ambito specifico.</span><span class="sxs-lookup"><span data-stu-id="de1f6-174">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for the specific focus scope.</span></span>  <span data-ttu-id="de1f6-175">Questo oggetto può non avere stato attivo della tastiera o.</span><span class="sxs-lookup"><span data-stu-id="de1f6-175">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="de1f6-176">Stato attivo della tastiera fa riferimento all'elemento che riceve input da tastiera.</span><span class="sxs-lookup"><span data-stu-id="de1f6-176">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="de1f6-177">Per ulteriori informazioni sullo stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="de1f6-177">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="de1f6-178">È possibile specificare un ambito attivo, che è un predecessore dell'ambito lo stato attivo per che l'elemento è incluso.</span><span class="sxs-lookup"><span data-stu-id="de1f6-178">It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.</span></span>  <span data-ttu-id="de1f6-179">Ad esempio, se un <xref:System.Windows.Controls.StackPanel> è un ambito attivo e il relativo elemento padre <xref:System.Windows.Window> è un ambito attivo, un <xref:System.Windows.Controls.TextBox> figlio del <xref:System.Windows.Controls.StackPanel> Impossibile specificare la <xref:System.Windows.Window> come ambito lo stato attivo quando si chiama <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="de1f6-179">For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span></span>  <span data-ttu-id="de1f6-180">Il <xref:System.Windows.Controls.TextBox> sarà <xref:System.Windows.Input.FocusManager.FocusedElement%2A> sia per il <xref:System.Windows.Window> ambito dello stato attivo e il <xref:System.Windows.Controls.StackPanel> ambito dello stato attivo.</span><span class="sxs-lookup"><span data-stu-id="de1f6-180">The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope.</span></span>  
  
 <span data-ttu-id="de1f6-181"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> fornisce lo stato attivo logico di elemento specificato nell'ambito specificato lo stato attivo e tenterà di assegnare lo stato attivo della tastiera di elemento.</span><span class="sxs-lookup"><span data-stu-id="de1f6-181"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1f6-182">Nell'esempio seguente imposta l'elemento con lo stato attivo logico utilizzando il <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> e si ottiene l'elemento con lo stato attivo logico utilizzando il <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="de1f6-182">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFocusScope">
      <MemberSignature Language="C#" Value="public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFocusScope(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFocusScope (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFocusScope(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsFocusScope : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.FocusManager.SetIsFocusScope (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="de1f6-183">Elemento da rendere ambito dello stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-183">The element to make a focus scope.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="de1f6-184">
            <see langword="true" /> se <c>element</c> è un ambito dello stato attivo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-184">
              <see langword="true" /> if <c>element</c> is a focus scope; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de1f6-185">Imposta l'oggetto <see cref="T:System.Windows.DependencyObject" /> specificato come ambito dello stato attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de1f6-185">Sets the specified <see cref="T:System.Windows.DependencyObject" /> as a focus scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1f6-186">Un ambito attivo è un elemento contenitore che tiene traccia del <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> all'interno dell'ambito.</span><span class="sxs-lookup"><span data-stu-id="de1f6-186">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="de1f6-187">Per impostazione predefinita, il <xref:System.Windows.Window> classe è un ambito attivo come il <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar> classi.</span><span class="sxs-lookup"><span data-stu-id="de1f6-187">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="de1f6-188">Dispone di un elemento che è un ambito di messa a fuoco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="de1f6-188">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="de1f6-189">Per ulteriori informazioni sullo stato attivo, lo stato attivo della tastiera e lo stato attivo logico, vedere la [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="de1f6-189">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1f6-190">Nell'esempio seguente un elemento diventa un ambito attivo utilizzando <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="de1f6-190">The follow example makes an element a focus scope by using <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusSetIsFocusScope](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focussetisfocusscope)]
 [!code-vb[focussnippets#FocusSetIsFocusScope](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focussetisfocusscope)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>