<Type Name="NavigationCommands" FullName="System.Windows.Input.NavigationCommands">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="582f2f8c465f5132fd72691ee7cc559270b6769c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30660825" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class NavigationCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NavigationCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.NavigationCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class NavigationCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationCommands abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un insieme standard di comandi relativi alla navigazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Input.NavigationCommands> classe espone un set standard di comandi correlati all'esplorazione, inclusi browser e dei documenti.  
  
 Per ulteriori informazioni sui comandi e l'esecuzione di comandi, vedere [panoramica dei comandi](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Documents.EditingCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
  </Docs>
  <Members>
    <Member MemberName="BrowseBack">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand BrowseBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand BrowseBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.BrowseBack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BrowseBack As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ BrowseBack { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Browse Back" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> ALT + FRECCIA SINISTRA  
  
 </description></item><item><term> UI Text  
  
 </term><description> Back  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di tornare alla pagina precedente nella coda journal di.  
  
 <xref:System.Windows.Controls.Frame> e <xref:System.Windows.Navigation.NavigationWindow> implementano il supporto per la risposta per la <xref:System.Windows.Input.NavigationCommands.BrowseBack%2A>, anche se non è necessario utilizzarlo; in molti casi l'implementazione in risposta a tale comando è responsabilità del writer dell'applicazione.  
  
<a name="xamlAttributeUsage_BrowseBack"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.BrowseBack"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.Windows.Input.NavigationCommands.BrowseBack%2A> in combinazione con un <xref:System.Windows.Controls.Frame>. Il <xref:System.Windows.Controls.Frame> fornisce un'implementazione che risponde al <xref:System.Windows.Input.NavigationCommands.BrowseBack%2A> comando passando il <xref:System.Windows.Controls.Frame> esegue il backup, se sono presenti voci di registrazione nello stack indietro.  
  
 [!code-xaml[NavigationCommandsSnippets#BrowseBackMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseBack.xaml#browsebackmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#BrowseBackMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseBack.xaml#browsebackmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#BrowseBackMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseBack.xaml#browsebackmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#BrowseBackMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseBack.xaml#browsebackmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="BrowseForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand BrowseForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand BrowseForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.BrowseForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BrowseForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ BrowseForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Browse Forward" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> ALT + FRECCIA DESTRA  
  
 </description></item><item><term> UI Text  
  
 </term><description> Forward  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di passare alla pagina successiva nella coda journal di.  
  
 <xref:System.Windows.Controls.Frame> e <xref:System.Windows.Navigation.NavigationWindow> implementano il supporto per la risposta per la <xref:System.Windows.Input.NavigationCommands.BrowseForward%2A> comando, anche se non è necessario utilizzarlo; in molti casi l'implementazione in risposta a tale comando è responsabilità del writer dell'applicazione.  
  
<a name="xamlAttributeUsage_BrowseForward"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.BrowseForward"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.Windows.Input.NavigationCommands.BrowseForward%2A> in combinazione con un <xref:System.Windows.Controls.Frame>. Il <xref:System.Windows.Controls.Frame> fornisce un'implementazione che risponde al <xref:System.Windows.Input.NavigationCommands.BrowseForward%2A> comando passando il <xref:System.Windows.Controls.Frame> inoltrarlo, se ci sono voci di registrazione nello stack avanti.  
  
 [!code-xaml[NavigationCommandsSnippets#BrowseForwardMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseForward.xaml#browseforwardmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#BrowseForwardMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseForward.xaml#browseforwardmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#BrowseForwardMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseForward.xaml#browseforwardmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#BrowseForwardMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseForward.xaml#browseforwardmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="BrowseHome">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand BrowseHome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand BrowseHome" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.BrowseHome" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BrowseHome As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ BrowseHome { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Browse Home" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> ALT + HOME  
  
 </description></item><item><term> UI Text  
  
 </term><description> Home  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di visualizzare la pagina iniziale.  
  
 Non vi è Nessuna implementazione per rispondere al <xref:System.Windows.Input.NavigationCommands.BrowseHome%2A> qualsiasi comando [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] classe. Di conseguenza, è necessario fornire un'implementazione appropriata, come illustrata nell'esempio.  
  
<a name="xamlAttributeUsage_BrowseHome"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.BrowseHome"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come implementare il codice che risponde per il <xref:System.Windows.Input.NavigationCommands.BrowseHome%2A> comando in combinazione con un <xref:System.Windows.Controls.Frame>.  
  
 [!code-xaml[NavigationCommandsSnippets#BrowseHomeMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml#browsehomemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#BrowseHomeMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml#browsehomemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#BrowseHomeMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml#browsehomemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#BrowseHomeMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml#browsehomemarkup4)]  
  
 [!code-csharp[NavigationCommandsSnippets#BrowseHomeCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml.cs#browsehomecodebehind)]
 [!code-vb[NavigationCommandsSnippets#BrowseHomeCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationCommandsSnippets/visualbasic/browsehome.xaml.vb#browsehomecodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="BrowseStop">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand BrowseStop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand BrowseStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.BrowseStop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BrowseStop As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ BrowseStop { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Browse Stop" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> ALT+ESC  
  
 </description></item><item><term> UI Text  
  
 </term><description> Arresta  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di interrompere il caricamento del browser.  
  
 <xref:System.Windows.Controls.Frame> e <xref:System.Windows.Navigation.NavigationWindow> implementano il supporto per la risposta per la <xref:System.Windows.Input.NavigationCommands.BrowseStop%2A> comando, anche se non è necessario utilizzarlo; in molti casi l'implementazione in risposta a tale comando è responsabilità del writer dell'applicazione.  
  
<a name="xamlAttributeUsage_BrowseStop"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.BrowseStop"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.Windows.Input.NavigationCommands.BrowseStop%2A> in combinazione con un <xref:System.Windows.Controls.Frame>. Il <xref:System.Windows.Controls.Frame> fornisce un'implementazione che risponde al <xref:System.Windows.Input.NavigationCommands.BrowseStop%2A> comando arrestando corrente <xref:System.Windows.Controls.Frame> navigazione.  
  
 [!code-xaml[NavigationCommandsSnippets#BrowseStopMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseStop.xaml#browsestopmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#BrowseStopMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseStop.xaml#browsestopmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#BrowseStopMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseStop.xaml#browsestopmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#BrowseStopMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseStop.xaml#browsestopmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseZoom">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseZoom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseZoom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.DecreaseZoom" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseZoom As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseZoom { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Decrease Zoom" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> N/A  
  
 </description></item><item><term> UI Text  
  
 </term><description> Diminuire Zoom  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di diminuire il valore di zoom.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, e <xref:System.Windows.Controls.FlowDocumentPageViewer> implementano il supporto per la risposta per la <xref:System.Windows.Input.NavigationCommands.DecreaseZoom%2A> comando, anche se non è necessario utilizzarlo; in molti casi l'implementazione in risposta a tale comando è responsabilità dell'applicazione writer.  
  
<a name="xamlAttributeUsage_DecreaseZoom"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.DecreaseZoom"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.Windows.Input.NavigationCommands.DecreaseZoom%2A> in combinazione con un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Il <xref:System.Windows.Controls.FlowDocumentPageViewer> fornisce un'implementazione che risponde al <xref:System.Windows.Input.NavigationCommands.DecreaseZoom%2A> comando riducendo la percentuale di zoom.  
  
 [!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup1)]  
[!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup2)]  
[!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup3)]  
[!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup4)]  
[!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Favorites">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Favorites { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Favorites" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.Favorites" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Favorites As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Favorites { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Favorites" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> CTRL+I  
  
 </description></item><item><term> UI Text  
  
 </term><description> Preferiti  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di gestire ed esplorare i Preferiti.  
  
 Non vi è Nessuna implementazione per rispondere al <xref:System.Windows.Input.NavigationCommands.Favorites%2A> qualsiasi comando [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] classe. Di conseguenza, è necessario fornire un'implementazione appropriata, come illustrata nell'esempio.  
  
<a name="xamlAttributeUsage_Favorites"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.Favorites"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come implementare il codice che risponde per il <xref:System.Windows.Input.NavigationCommands.Favorites%2A> comando in combinazione con un <xref:System.Windows.Controls.Frame>.  
  
 [!code-xaml[NavigationCommandsSnippets#FavoritesMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Favorites.xaml#favoritesmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#FavoritesMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Favorites.xaml#favoritesmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#FavoritesMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Favorites.xaml#favoritesmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#FavoritesMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Favorites.xaml#favoritesmarkup4)]  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="FirstPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand FirstPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand FirstPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.FirstPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FirstPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ FirstPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="First Page" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> N/A  
  
 </description></item><item><term> UI Text  
  
 </term><description> Prima pagina  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di passare alla prima pagina.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, e <xref:System.Windows.Controls.FlowDocumentPageViewer> implementano il supporto per la risposta per la <xref:System.Windows.Input.NavigationCommands.FirstPage%2A> comando, anche se non è necessario utilizzarlo; in molti casi l'implementazione in risposta a tale comando è responsabilità dell'applicazione writer.  
  
<a name="xamlAttributeUsage_FirstPage"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.FirstPage"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.Windows.Input.NavigationCommands.FirstPage%2A> in combinazione con un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Il <xref:System.Windows.Controls.FlowDocumentPageViewer> fornisce un'implementazione che risponde al <xref:System.Windows.Input.NavigationCommands.FirstPage%2A> comando, passare alla prima pagina.  
  
 [!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="GoToPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand GoToPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand GoToPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.GoToPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GoToPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ GoToPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Go To Page" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> N/A  
  
 </description></item><item><term> UI Text  
  
 </term><description> Passare alla pagina  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di modificare il valore di zoom.  
  
 <xref:System.Windows.Controls.DocumentViewer> e <xref:System.Windows.Controls.FlowDocumentPageViewer> implementano il supporto per la risposta per la <xref:System.Windows.Input.NavigationCommands.GoToPage%2A> comando, anche se non è necessario utilizzarlo; in molti casi l'implementazione in risposta a tale comando è responsabilità del writer dell'applicazione.  
  
<a name="xamlAttributeUsage_GoToPage"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.GoToPage"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Input.NavigationCommands.GoToPage%2A> comando in combinazione con un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Il <xref:System.Windows.Controls.FlowDocumentPageViewer> fornisce un'implementazione che risponde al <xref:System.Windows.Input.NavigationCommands.GoToPage%2A> comando visitando la pagina specificata dal valore del testo di un <xref:System.Windows.Controls.TextBox> controllo.  
  
 [!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseZoom">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseZoom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseZoom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.IncreaseZoom" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseZoom As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseZoom { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Increase Zoom" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> N/A  
  
 </description></item><item><term> UI Text  
  
 </term><description> Aumentare lo Zoom  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di aumentare lo zoom.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, e <xref:System.Windows.Controls.FlowDocumentPageViewer> implementano il supporto per la risposta per la <xref:System.Windows.Input.NavigationCommands.IncreaseZoom%2A> comando, anche se non è necessario utilizzarlo; in molti casi l'implementazione in risposta a tale comando è responsabilità dell'applicazione writer.  
  
<a name="xamlAttributeUsage_IncreaseZoom"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.IncreaseZoom"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.Windows.Input.NavigationCommands.IncreaseZoom%2A> in combinazione con un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Il <xref:System.Windows.Controls.FlowDocumentPageViewer> fornisce un'implementazione che risponde al <xref:System.Windows.Input.NavigationCommands.IncreaseZoom%2A> comando riducendo la percentuale di zoom.  
  
 [!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup1)]  
[!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup2)]  
[!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup3)]  
[!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup4)]  
[!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="LastPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand LastPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand LastPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.LastPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LastPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ LastPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Last Page" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> N/A  
  
 </description></item><item><term> UI Text  
  
 </term><description> Ultima pagina  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di passare all'ultima pagina.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, e <xref:System.Windows.Controls.FlowDocumentPageViewer> implementano il supporto per la risposta per la <xref:System.Windows.Input.NavigationCommands.LastPage%2A> comando, anche se non è necessario utilizzarlo; in molti casi l'implementazione in risposta a tale comando è responsabilità dell'applicazione writer.  
  
<a name="xamlAttributeUsage_LastPage"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.LastPage"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.Windows.Input.NavigationCommands.LastPage%2A> in combinazione con un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Il <xref:System.Windows.Controls.FlowDocumentPageViewer> fornisce un'implementazione che risponde al <xref:System.Windows.Input.NavigationCommands.LastPage%2A> comando passando all'ultima pagina.  
  
 [!code-xaml[NavigationCommandsSnippets#LastPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#LastPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#LastPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#LastPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#LastPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="NavigateJournal">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand NavigateJournal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand NavigateJournal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.NavigateJournal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NavigateJournal As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ NavigateJournal { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Navigate Journal" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> N/A  
  
 </description></item><item><term> UI Text  
  
 </term><description> Registrazioni di navigazione  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di spostarsi nel journal.  
  
 <xref:System.Windows.Controls.Frame> e <xref:System.Windows.Navigation.NavigationWindow> implementano il supporto per la risposta per la <xref:System.Windows.Input.NavigationCommands.NavigateJournal%2A> comando, anche se non è necessario utilizzarlo; in molti casi l'implementazione in risposta a tale comando è responsabilità del writer dell'applicazione.  
  
<a name="xamlAttributeUsage_NavigateJournal"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.NavigateJournal"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.Windows.Input.NavigationCommands.NavigateJournal%2A> in combinazione con un <xref:System.Windows.Controls.Frame>. Il <xref:System.Windows.Controls.Frame> fornisce un'implementazione che risponde al <xref:System.Windows.Input.NavigationCommands.NavigateJournal%2A> comando passando alla voce di journal specificato negli stack avanti o indietro del <xref:System.Windows.Controls.Frame>. Le voci di registrazione vengono fornite per il <xref:System.Windows.Navigation.JournalEntryUnifiedViewConverter> di primo livello `Navigate Journal` <xref:System.Windows.Controls.MenuItem>. Ogni voce di journal è associata a un elemento figlio <xref:System.Windows.Controls.MenuItem> che utilizza il <xref:System.Windows.Input.NavigationCommands.NavigateJournal%2A> comando.  
  
 [!code-xaml[NavigationCommandsSnippets#NavigateJournalMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NavigateJournal.xaml#navigatejournalmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#NavigateJournalMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NavigateJournal.xaml#navigatejournalmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#NavigateJournalMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NavigateJournal.xaml#navigatejournalmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#NavigateJournalMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NavigateJournal.xaml#navigatejournalmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="NextPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand NextPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand NextPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.NextPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NextPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ NextPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Next Page" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> N/A  
  
 </description></item><item><term> UI Text  
  
 </term><description> Pagina successiva  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di passare alla pagina successiva.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, e <xref:System.Windows.Controls.FlowDocumentPageViewer> implementano il supporto per la risposta per la <xref:System.Windows.Input.NavigationCommands.NextPage%2A> comando, anche se non è necessario utilizzarlo; in molti casi l'implementazione in risposta a tale comando è responsabilità dell'applicazione writer.  
  
<a name="xamlAttributeUsage_NextPage"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.NextPage"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.Windows.Input.NavigationCommands.NextPage%2A> in combinazione con un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Il <xref:System.Windows.Controls.FlowDocumentPageViewer> fornisce un'implementazione che risponde al <xref:System.Windows.Input.NavigationCommands.NextPage%2A> comando, passare alla pagina successiva.  
  
 [!code-xaml[NavigationCommandsSnippets#NextPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#NextPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#NextPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#NextPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#NextPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="PreviousPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand PreviousPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand PreviousPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.PreviousPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreviousPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ PreviousPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Previous Page" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> N/A  
  
 </description></item><item><term> UI Text  
  
 </term><description> Pagina precedente  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di passare alla pagina precedente.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, e <xref:System.Windows.Controls.FlowDocumentPageViewer> implementano il supporto per la risposta per la <xref:System.Windows.Input.NavigationCommands.PreviousPage%2A> comando, anche se non è necessario utilizzarlo; in molti casi l'implementazione in risposta a tale comando è responsabilità dell'applicazione writer.  
  
<a name="xamlAttributeUsage_PreviousPage"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.PreviousPage"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.Windows.Input.NavigationCommands.PreviousPage%2A> in combinazione con un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Il <xref:System.Windows.Controls.FlowDocumentPageViewer> fornisce un'implementazione che risponde al <xref:System.Windows.Input.NavigationCommands.PreviousPage%2A> comando, passare alla pagina precedente.  
  
 [!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Refresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Refresh" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Refresh As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Refresh { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Refresh" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> F5  
  
 </description></item><item><term> UI Text  
  
 </term><description> Aggiornamento  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di aggiornare la pagina corrente.  
  
 <xref:System.Windows.Controls.Frame> e <xref:System.Windows.Navigation.NavigationWindow> implementano il supporto per la risposta per la <xref:System.Windows.Input.NavigationCommands.Refresh%2A> comando, anche se non è necessario utilizzarlo; in molti casi l'implementazione in risposta a tale comando è responsabilità del writer dell'applicazione.  
  
<a name="xamlAttributeUsage_Refresh"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.Refresh"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.Windows.Input.NavigationCommands.Refresh%2A> in combinazione con un <xref:System.Windows.Controls.Frame>. Il <xref:System.Windows.Controls.Frame> fornisce un'implementazione che risponde al <xref:System.Windows.Input.NavigationCommands.Refresh%2A> comando ricaricando corrente <xref:System.Windows.Controls.Frame> contenuto.  
  
 [!code-xaml[NavigationCommandsSnippets#RefreshMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Refresh.xaml#refreshmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#RefreshMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Refresh.xaml#refreshmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#RefreshMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Refresh.xaml#refreshmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#RefreshMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Refresh.xaml#refreshmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Search { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Search" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.Search" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Search As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Search { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Search" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> F3  
  
 </description></item><item><term> UI Text  
  
 </term><description> ricerca  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di ricerca.  
  
 Non vi è Nessuna implementazione per rispondere al <xref:System.Windows.Input.NavigationCommands.Search%2A> qualsiasi comando [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] classe. Di conseguenza, è necessario fornire un'implementazione appropriata, come illustrata nell'esempio.  
  
<a name="xamlAttributeUsage_Search"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.Search"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come implementare il codice che risponde per il <xref:System.Windows.Input.NavigationCommands.Search%2A> comando in combinazione con un <xref:System.Windows.Controls.FlowDocumentPageViewer>.  
  
 [!code-xaml[NavigationCommandsSnippets#SearchMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#SearchMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#SearchMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#SearchMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup4)]  
[!code-xaml[NavigationCommandsSnippets#SearchMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup5)]  
  
 [!code-csharp[NavigationCommandsSnippets#SearchCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml.cs#searchcodebehind)]
 [!code-vb[NavigationCommandsSnippets#SearchCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationCommandsSnippets/visualbasic/search.xaml.vb#searchcodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Zoom">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Zoom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Zoom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.Zoom" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zoom As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Zoom { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore che rappresenta il comando <see langword="Zoom" />.</summary>
        <value>Il comando dell'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] indirizzato.  
  
 <list type="table"><listheader><term> Valori predefiniti  
  
 </term><description></description></listheader><item><term> Combinazione di tasti  
  
 </term><description> N/A  
  
 </description></item><item><term> UI Text  
  
 </term><description> Zoom  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo comando indica l'intenzione di impostare il livello di zoom.  
  
 Non vi è Nessuna implementazione per rispondere al <xref:System.Windows.Input.NavigationCommands.Zoom%2A> qualsiasi comando [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] classe. Di conseguenza, è necessario fornire un'implementazione appropriata, come illustrata nell'esempio.  
  
<a name="xamlAttributeUsage_Zoom"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="NavigationCommands.Zoom"/>  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come implementare il codice che risponde per il <xref:System.Windows.Input.NavigationCommands.Zoom%2A> comando in combinazione con un <xref:System.Windows.Controls.FlowDocumentPageViewer>.  
  
 [!code-xaml[NavigationCommandsSnippets#ZoomMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Zoom.xaml#zoommarkup1)]  
[!code-xaml[NavigationCommandsSnippets#ZoomMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Zoom.xaml#zoommarkup2)]  
[!code-xaml[NavigationCommandsSnippets#ZoomMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Zoom.xaml#zoommarkup3)]  
[!code-xaml[NavigationCommandsSnippets#ZoomMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Zoom.xaml#zoommarkup4)]  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>