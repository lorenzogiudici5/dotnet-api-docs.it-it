<Type Name="CanExecuteRoutedEventHandler" FullName="System.Windows.Input.CanExecuteRoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a252bc967121eea51fe378caf080a9b7c5a519bc" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37505119" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void CanExecuteRoutedEventHandler(object sender, CanExecuteRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CanExecuteRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CanExecuteRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub CanExecuteRoutedEventHandler(sender As Object, e As CanExecuteRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void CanExecuteRoutedEventHandler(System::Object ^ sender, CanExecuteRoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type CanExecuteRoutedEventHandler = delegate of obj * CanExecuteRoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.CanExecuteRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="05b82-101">La destinazione del comando che sta richiamando il gestore.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05b82-101">The command target that is invoking the handler.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="05b82-102">Dati dell'evento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05b82-102">The event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="05b82-103">Rappresenta il metodo che gestirà l'evento <see cref="E:System.Windows.Input.CommandBinding.CanExecute" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05b82-103">Represents the method that will handle the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b82-104">Il <xref:System.Windows.Input.CanExecuteRoutedEventHandler> determina se il comando associato all'origine evento è in grado di eseguire il comando sulla destinazione.</span><span class="sxs-lookup"><span data-stu-id="05b82-104">The <xref:System.Windows.Input.CanExecuteRoutedEventHandler> determines if the command associated with the event source is able to execute on the command target.</span></span> <span data-ttu-id="05b82-105">Se il comando ha un'origine di comando che specifica una destinazione, quindi le informazioni sulla destinazione può essere ottenuti tramite `sender`.</span><span class="sxs-lookup"><span data-stu-id="05b82-105">If the command has a command source that specifies a target, then the target information can be obtained through `sender`.</span></span> <span data-ttu-id="05b82-106">Se il <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> non è impostato, l'elemento con stato attivo della tastiera è la destinazione e può anche essere ottenuto tramite `sender`.</span><span class="sxs-lookup"><span data-stu-id="05b82-106">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> is not set, the element with keyboard focus is the target, and can also be obtained through `sender`.</span></span>  <span data-ttu-id="05b82-107">Se è stato stabilito che è possibile eseguire il comando sulla destinazione, il <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType> proprietà deve essere impostata su `true`; in caso contrario, impostarlo su `false`.</span><span class="sxs-lookup"><span data-stu-id="05b82-107">If it is determined that the command can execute on the target, then the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType> property should be set to `true`; otherwise, set it to `false`.</span></span>  
  
 <span data-ttu-id="05b82-108">Non devi fare affidamento sui dati di evento per determinare il comando, origine e destinazione.</span><span class="sxs-lookup"><span data-stu-id="05b82-108">You do not need to rely on event data to determine the command, source, and target.</span></span> <span data-ttu-id="05b82-109">È possibile limitare l'utilizzo del gestore da chiamate del comando possibili noto, anche se si tratta più difficile da eseguire se la struttura dei comandi basata ampiamente del routing dei comandi per eseguire lo stesso comando sulla destinazione potenziale successivi in un evento route.</span><span class="sxs-lookup"><span data-stu-id="05b82-109">You can limit the usage of the handler to known possible command invocations, although this is more difficult to accomplish if your command structure relies extensively on the command routing to execute the same command on successive potential targets in an event route.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05b82-110">L'esempio seguente mostra una <xref:System.Windows.Input.CanExecuteRoutedEventHandler> che imposta <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="05b82-110">The following example shows a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> that sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.</span></span>  
  
 [!code-csharp[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  </Docs>
</Type>