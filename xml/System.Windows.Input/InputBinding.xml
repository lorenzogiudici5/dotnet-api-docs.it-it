<Type Name="InputBinding" FullName="System.Windows.Input.InputBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c701543cf78be82eeaa3f9705791e280a033479a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36507814" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InputBinding : System.Windows.Freezable, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputBinding extends System.Windows.Freezable implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class InputBinding&#xA;Inherits Freezable&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputBinding : System::Windows::Freezable, System::Windows::Input::ICommandSource" />
  <TypeSignature Language="F#" Value="type InputBinding = class&#xA;    inherit Freezable&#xA;    interface ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Rappresenta un'associazione tra un oggetto <see cref="T:System.Windows.Input.InputGesture" /> e un comando. Il comando è potenzialmente un oggetto <see cref="T:System.Windows.Input.RoutedCommand" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare che l'input dell'utente richiama un comando tramite la creazione di un <xref:System.Windows.Input.InputBinding>. Quando l'utente esegue l'input specificato, il <xref:System.Windows.Input.ICommand> che è impostato sul <xref:System.Windows.Input.InputBinding.Command%2A> proprietà viene eseguita.  
  
 È possibile specificare che il <xref:System.Windows.Input.InputBinding> richiama un comando che viene definito su un oggetto creando un'associazione nel <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, e <xref:System.Windows.Input.InputBinding.CommandTarget%2A> proprietà. In questo modo è possibile definire un comando personalizzato e associarlo all'input dell'utente. Per altre informazioni, vedere il secondo esempio nella sezione esempi.  
  
 Un' <xref:System.Windows.Input.InputBinding> possono essere definite in un oggetto specifico o a livello di classe registrando un <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> con il <xref:System.Windows.Input.CommandManager>.  
  
 Il <xref:System.Windows.Input.InputBinding> stessa classe non supporta l'utilizzo XAML in quanto non espone un costruttore predefinito pubblico (è presente un costruttore predefinito, ma è protetta). Tuttavia, le classi derivate possono esporre un costruttore pubblico e pertanto possibile impostare le proprietà nella classe derivata dalla quale vengono ereditate <xref:System.Windows.Input.InputBinding> con un utilizzo di XAML. Due esistente <xref:System.Windows.Input.InputBinding>-sono classi derivate che possono essere creata un'istanza in XAML e impostare le proprietà in XAML <xref:System.Windows.Input.KeyBinding> e <xref:System.Windows.Input.MouseBinding>. Proprietà tipico [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] programmazione che è impostato in XAML e accetta uno o più <xref:System.Windows.Input.InputBinding> oggetti come valori è il <xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType> proprietà.  
  
<a name="xamlObjectElementUsage_InputBinding"></a>   
## <a name="xaml-object-element-usage"></a>Utilizzo della sintassi XAML per gli elementi oggetto  
 \<*inputBindingDerivedClass…/*>  
  
<a name="xamlValues_InputBinding"></a>   
## <a name="xaml-values"></a>Valori XAML  
 `inputBindingDerivedClass`  
 Una classe derivata di <xref:System.Windows.Input.InputBinding> che supporta la sintassi degli elementi oggetto, ad esempio <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding>. Vedere la sezione Osservazioni.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Windows.Input.KeyBinding> per associare un <xref:System.Windows.Input.KeyGesture> per il <xref:System.Windows.Input.ApplicationCommands.Open%2A> comando. Quando viene eseguita la combinazione di tasti, viene richiamato il comando Apri.  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 Negli esempi seguenti viene illustrato come associare un comando personalizzato a <xref:System.Windows.Input.InputBinding> oggetti. Questi esempi vengono create un'applicazione che consente all'utente di modificare il colore di sfondo eseguendo una delle azioni seguenti:  
  
-   Facendo clic su un pulsante.  
  
-   Premere CTRL + C.  
  
-   Facendo clic su un <xref:System.Windows.Controls.StackPanel> (all'esterno di <xref:System.Windows.Controls.ListBox>).  
  
 Nel primo esempio viene creata una classe denominata `SimpleDelegateCommand`. Questa classe accetta un delegato in modo che l'oggetto crea il comando è possibile definire l'azione che si verifica quando viene eseguito il comando. `SimpleDelegateCommand` definisce inoltre le proprietà che specificano ciò che da tastiera e mouse input richiama il comando. `GestureKey` e `GestureModifier` specificare l'input da tastiera; `MouseGesture` specifica l'input del mouse.  
  
 [!code-csharp[InputCommandBinding#DelegateCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml.cs#delegatecommand)]
 [!code-vb[InputCommandBinding#DelegateCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/inputcommandbinding/visualbasic/mainwindow.xaml.vb#delegatecommand)]  
  
 Nell'esempio seguente crea e inizializza il `ColorChangeCommand`, ovvero un `SimpleDelegateCommand`. Nell'esempio viene definita anche il metodo che viene eseguito quando il comando viene richiamato e imposta il `GestureKey`, `GestureModifier`, e `MouseGesture` proprietà. Un'applicazione chiama il `InitializeCommand` metodo quando il programma viene avviato, ad esempio il costruttore di una <xref:System.Windows.Window>.  
  
 [!code-csharp[InputCommandBinding#InitializeCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml.cs#initializecommand)]
 [!code-vb[InputCommandBinding#InitializeCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/inputcommandbinding/visualbasic/mainwindow.xaml.vb#initializecommand)]  
  
 Infine, nell'esempio seguente viene creata l'interfaccia utente. Nell'esempio viene aggiunto un <xref:System.Windows.Input.KeyBinding> e un <xref:System.Windows.Input.MouseBinding> a un <xref:System.Windows.Controls.StackPanel> che contiene un <xref:System.Windows.Controls.Button> e un <xref:System.Windows.Controls.ListBox>. Quando l'utente seleziona un elemento di <xref:System.Windows.Controls.ListBox>, egli può modificare il colore di sfondo per il colore selezionato. In ogni caso, il `CommandParameter` proprietà è associata all'elemento selezionato nel <xref:System.Windows.Controls.ListBox>e il `Command` proprietà è associata al `ColorChangeCommand`. Il <xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType>, e <xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType> proprietà sono associate alle proprietà corrispondenti `SimpleDelegateCommand` classe.  
  
 [!code-xaml[InputCommandBinding#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.UIElement.InputBindings" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.InputBinding" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InputBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InputBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Fornisce l'inizializzazione di base per classi derivate dall'oggetto <see cref="T:System.Windows.Input.InputBinding" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.InputBinding> non è tecnicamente una classe astratta, ma il costruttore predefinito è deliberatamente di accesso protetto. Questo ha l'effetto di rendere <xref:System.Windows.Input.InputBinding> "" astratta per il codice XAML. Sono disponibili le proprietà esistente in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] che dispongono di utilizzi di XAML che prevede che gli oggetti di tipo <xref:System.Windows.Input.InputBinding>, ma non è possibile specificare un <xref:System.Windows.Input.InputBinding> istanza in XAML. Al contrario, è possibile specificare una delle specifiche della periferica <xref:System.Windows.Input.InputBinding> classi derivate come valori, ad esempio <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se si implementa un oggetto personalizzato <see cref="T:System.Windows.Input.InputBinding" /> che supporta l'utilizzo di XAML, utilizzare questo costruttore per l'inizializzazione di base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputBinding (System.Windows.Input.ICommand command, System.Windows.Input.InputGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.InputGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As InputGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::InputGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.InputBinding : System.Windows.Input.ICommand * System.Windows.Input.InputGesture -&gt; System.Windows.Input.InputBinding" Usage="new System.Windows.Input.InputBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.InputGesture" />
      </Parameters>
      <Docs>
        <param name="command">Comando da associare al parametro <c>gesture</c>.</param>
        <param name="gesture">Movimento di input da associare al parametro <c>command</c>.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.InputBinding" /> con il comando specifico e il movimento di input.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si è uno sviluppatore di software utilizzando le classi di associazione di input esistente, è in genere non utilizzerà questo costruttore, anche se si siano definendo i comandi personalizzati. Al contrario, si utilizzeranno i costruttori delle classi derivate (<xref:System.Windows.Input.KeyBinding> e <xref:System.Windows.Input.MouseBinding>), o si utilizzerà questo costruttore come istanze di base di una classe personalizzata. Sebbene il <xref:System.Windows.Input.InputBinding> classe supporta diversi dispositivi di input in sostanza, in pratica, è necessario scegliere quale dispositivo rappresenterà l'associazione di input. È possibile impostare solo uno solo <xref:System.Windows.Input.InputBinding.Gesture%2A> valore l'associazione di input e i movimenti sono specifiche del dispositivo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare questo costruttore per associare un <xref:System.Windows.Input.KeyGesture> con un <xref:System.Windows.Input.RoutedCommand>.  
  
 [!code-csharp[commandlibrarysnippets#InputBindingAddingComand](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#inputbindingaddingcomand)]
 [!code-vb[commandlibrarysnippets#InputBindingAddingComand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#inputbindingaddingcomand)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> o <paramref name="gesture" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Oggetto da clonare.</param>
        <summary>Copia i valori di base (non animati) delle proprietà dell'oggetto specificato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Oggetto da clonare.</param>
        <summary>Copia i valori correnti delle proprietà dell'oggetto specificato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Input.InputBinding.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Input.ICommand" /> associato a questa associazione di input.</summary>
        <value>Comando associato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Input.InputBinding> classe non supporta l'utilizzo XAML in quanto non espone un costruttore predefinito pubblico (ha un costruttore predefinito, ma è protetta). Tuttavia, le classi derivate possono esporre un costruttore pubblico e pertanto possibile utilizzare le proprietà ereditate da <xref:System.Windows.Input.InputBinding>. Due esistente <xref:System.Windows.Input.InputBinding> sono classi derivate che possono essere creata un'istanza in XAML e impostare le proprietà con gli utilizzi di XAML <xref:System.Windows.Input.KeyBinding> e <xref:System.Windows.Input.MouseBinding>.  
  
 <xref:System.Windows.Input.ICommand> fa riferimento a un convertitore di tipi che consente a determinate preesistenti <xref:System.Windows.Input.ICommand> implementazioni per specificare i valori sotto forma di stringa. Questo comportamento di conversione di tipo imposta il formato del valore di attributo di questa proprietà. È inoltre possibile associare il <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, e <xref:System.Windows.Input.InputBinding.CommandTarget%2A> delle proprietà per un <xref:System.Windows.Input.ICommand> definito su un oggetto. In questo modo è possibile definire un comando personalizzato e associarlo all'input dell'utente. Per altre informazioni, vedere il secondo esempio in <xref:System.Windows.Input.InputBinding>.  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
 <`inputBindingDerivedClass` `Command`="<xref:System.Windows.Input.ICommand>"/>  
  
<a name="xamlPropertyElementUsage_Command"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.Command>  
    <iCommandImplementation/>  
  </inputBindingDerivedClass.Command>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a>Valori XAML  
 `inputBindingDerivedClass`  
 Una classe derivata di <xref:System.Windows.Input.InputBinding> che supporta la sintassi degli elementi oggetto, ad esempio <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding>. Vedere la sezione Osservazioni.  
  
 `iCommandImplementation`  
 Un'implementazione dell'oggetto <xref:System.Windows.Input.ICommand> che supporta la sintassi dell'elemento oggetto (ha un costruttore predefinito pubblico).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Windows.Input.KeyBinding> per associare un <xref:System.Windows.Input.KeyGesture> per il <xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType> comando. Quando viene eseguita la combinazione di tasti, viene richiamato il comando Apri.  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewkeybinding)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewKeyBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewkeybinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore di <see cref="P:System.Windows.Input.InputBinding.Command" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj with get, set" Usage="System.Windows.Input.InputBinding.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i dati specifici del comando per un particolare comando.</summary>
        <value>Dati specifici del comando. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Input.InputBinding.CommandParameter%2A> proprietà viene utilizzata per passare informazioni specifiche per il comando quando viene eseguita. Il tipo di dati è definito dal comando. Molti comandi non si prevedono parametri di comando. per tali comandi verranno ignorati eventuali parametri di comando passati.  
  
 Se il comando associato a un'associazione di input è un <xref:System.Windows.Input.RoutedCommand>, il <xref:System.Windows.Input.InputBinding.CommandParameter%2A> dell'associazione di input viene passato per il <xref:System.Windows.Input.RoutedCommand> gestori tramite il <xref:System.Windows.Input.ExecutedRoutedEventArgs> e il <xref:System.Windows.Input.CanExecuteRoutedEventArgs> dati dell'evento quando viene elaborato il comando.  
  
 Il tipo di dati e lo scopo del parametro di comando vengono definiti in modo diverso per ogni comando e può essere `null`. È possibile associare il <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, e <xref:System.Windows.Input.InputBinding.CommandTarget%2A> delle proprietà per un <xref:System.Windows.Input.ICommand> definito su un oggetto. In questo modo è possibile definire un comando personalizzato e associarlo all'input dell'utente. Per altre informazioni, vedere il secondo esempio in <xref:System.Windows.Input.InputBinding>.  
  
 Il <xref:System.Windows.Input.InputBinding> classe non supporta l'utilizzo XAML in quanto non espone un costruttore predefinito pubblico (ha un costruttore predefinito, ma è protetta). Tuttavia, le classi derivate possono esporre un costruttore pubblico e pertanto possibile impostare le proprietà ereditate dalla <xref:System.Windows.Input.InputBinding> con utilizzo di XAML. Due esistente <xref:System.Windows.Input.InputBinding> sono classi derivate che possono essere creata un'istanza in XAML e impostare le proprietà in XAML <xref:System.Windows.Input.KeyBinding> e <xref:System.Windows.Input.MouseBinding>.  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<inputBindingDerivedClass CommandParameter="commandParameterString"/>  
```  
  
<a name="xamlPropertyElementUsage_CommandParameter"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.CommandParameter>  
    <commandParameterObject/>  
  </inputBindingDerivedClass.CommandParameter>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a>Valori XAML  
 `inputBindingDerivedClass`  
 Una classe derivata di <xref:System.Windows.Input.InputBinding> che supporta la sintassi degli elementi oggetto, ad esempio <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding>. Vedere la sezione Osservazioni.  
  
 `commandParameterString`  
 Stringa che viene elaborata da un comando specifico. Le stringhe sono il tipo comune utilizzato per i parametri del comando, perché possono essere impostate facilmente in XAML. Per il formato è prevista una stringa e il suo scopo, vedere la documentazione per il comando specifica che l'associazione di input è associato. Molti comandi non si prevedono parametri.  
  
 `commandParameterObject`  
 Oggetto che viene elaborato da un comando specifico. Tutti i valori esistenti [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] comandi usano le stringhe. Pertanto, questa sintassi degli elementi di proprietà è rilevante solo per gli scenari di comando personalizzato. Per supportare questa sintassi, il `commandParameterObject` oggetto deve supportare anche la sintassi degli elementi oggetto (deve avere un costruttore predefinito pubblico).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandParameterProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandParameterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Input.InputBinding.CommandParameter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Input.InputBinding.Command" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement with get, set" Usage="System.Windows.Input.InputBinding.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'elemento di destinazione del comando.</summary>
        <value>La destinazione del comando. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In Windows Presentation Foundation dei comandi di sistema, il <xref:System.Windows.Input.InputBinding.CommandTarget%2A> proprietà in un <xref:System.Windows.Input.ICommandSource> oggetto è applicabile solo quando il <xref:System.Windows.Input.ICommand> è un <xref:System.Windows.Input.RoutedCommand>. Se <xref:System.Windows.Input.InputBinding.CommandTarget%2A> è impostato su un <xref:System.Windows.Input.ICommandSource> e il comando corrispondente non è un <xref:System.Windows.Input.RoutedCommand>, la destinazione del comando viene ignorata.  
  
 Se usato con un <xref:System.Windows.Input.RoutedCommand>, la destinazione del comando è l'oggetto in cui la <xref:System.Windows.Input.CommandManager.Executed> e <xref:System.Windows.Input.CommandManager.CanExecute> vengono generati eventi. Se il <xref:System.Windows.Input.InputBinding.CommandTarget%2A> non è impostata, l'elemento con stato attivo della tastiera è utilizzato come destinazione.  
  
 Il <xref:System.Windows.Input.InputBinding> stessa classe non supporta l'utilizzo di XAML, poiché non espone un costruttore predefinito pubblico (è presente un costruttore predefinito, ma è protetta). Tuttavia, le classi derivate possono esporre un costruttore pubblico e pertanto possibile impostare le proprietà ereditate dalla <xref:System.Windows.Input.InputBinding> con un utilizzo di XAML. Due esistente <xref:System.Windows.Input.InputBinding> sono classi derivate che possono essere creata un'istanza in XAML e impostare le proprietà in XAML <xref:System.Windows.Input.KeyBinding> e <xref:System.Windows.Input.MouseBinding>.  
  
<a name="xamlAttributeUsage_CommandTarget"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<inputBindingDerivedClass CommandTarget="bindingToTarget"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a>Valori XAML  
 `inputBindingDerivedClass`  
 Una classe derivata di <xref:System.Windows.Input.InputBinding> che supporta la sintassi degli elementi oggetto, ad esempio <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding>. Vedere la sezione Osservazioni.  
  
 `bindingToTarget`  
 Una stringa che utilizza un tipo di sintassi di associazione che può restituire un riferimento all'oggetto a un oggetto esistente denominato element. Vedere la sezione Osservazioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.Input.InputBinding.CommandTarget" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="inputBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un'istanza di un oggetto <see cref="T:System.Windows.Input.InputBinding" />.</summary>
        <returns>Nuovo oggetto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.InputBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Input.InputGesture" /> associato a questa associazione di input.</summary>
        <value>Movimento associato. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La combinazione di input è l'azione che richiama il comando. Esempi di movimenti di input in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] vengono <xref:System.Windows.Input.KeyGesture> e <xref:System.Windows.Input.MouseGesture>. Un <xref:System.Windows.Input.KeyGesture> è una combinazione di un <xref:System.Windows.Input.Key> e un set di <xref:System.Windows.Input.ModifierKeys>. Un <xref:System.Windows.Input.MouseGesture> è una combinazione di un <xref:System.Windows.Input.MouseAction> e un set di <xref:System.Windows.Input.ModifierKeys>.  
  
 Il <xref:System.Windows.Input.InputBinding> stessa classe non supporta l'utilizzo di XAML, poiché non espone un costruttore predefinito pubblico (è presente un costruttore predefinito, ma è protetta). Tuttavia, le classi derivate possono esporre un costruttore pubblico e pertanto possibile impostare le proprietà ereditate dalla <xref:System.Windows.Input.InputBinding> con un utilizzo di XAML. Due esistente <xref:System.Windows.Input.InputBinding> sono classi derivate che possono essere creata un'istanza in XAML e impostare le proprietà in XAML <xref:System.Windows.Input.KeyBinding> e <xref:System.Windows.Input.MouseBinding>.  
  
<a name="xamlAttributeUsage_gesture"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
 <<xref:System.Windows.Input.KeyBinding> `Gesture`="<xref:System.Windows.Input.KeyGesture>"/>  
  
 \- oppure -  
  
 <<xref:System.Windows.Input.MouseBinding> `Gesture`="<xref:System.Windows.Input.MouseGesture>"/>  
  
 \- oppure -  
  
 <`inputBindingDerivedClass` `Gesture`="<xref:System.Windows.Input.InputGesture>"/>  
  
<a name="xamlPropertyElementUsage_gesture"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.Gesture>  
    <inputGestureImplementation/>  
  </inputBindingDerivedClass.Gesture>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_gesture"></a>   
## <a name="xaml-values"></a>Valori XAML  
 `inputBindingDerivedClass`  
 Una classe derivata di <xref:System.Windows.Input.InputBinding> che supporta la sintassi degli elementi oggetto, ad esempio <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding>. Vedere la sezione Osservazioni.  
  
 `inputGestureImplementation`  
 Una classe personalizzata derivata di <xref:System.Windows.Input.InputGesture> che supporta la sintassi dell'elemento oggetto.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Windows.Input.KeyBinding> per associare un <xref:System.Windows.Input.KeyGesture> a un <xref:System.Windows.Input.RoutedCommand>. Quando il <xref:System.Windows.Input.KeyGesture> viene premuto ALT + L, il <xref:System.Windows.Input.ApplicationCommands.Close%2A> comando viene richiamato.  
  
 [!code-xaml[commandlibrarysnippets#KeyBindingWithKeyAndModifiersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml#keybindingwithkeyandmodifiersxaml)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Oggetto da clonare.</param>
        <summary>Rende l'istanza un duplicato bloccato dell'oggetto <see cref="T:System.Windows.Freezable" /> specificato utilizzando i valori di base (non-animati) delle proprietà.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Oggetto da clonare.</param>
        <summary>Rende l’istanza corrente una copia bloccata di <see cref="T:System.Windows.Freezable" />specificato. Se l'oggetto ha proprietà di dipendenza animate, i valori animati correnti vengono copiati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>