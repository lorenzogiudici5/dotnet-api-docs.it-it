<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InputBinding.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b7241b30f4fa79ca9c58da7b0c7615e57d96af48a70.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41b30f4fa79ca9c58da7b0c7615e57d96af48a70</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.InputBinding">
          <source>Represents a binding between an <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputGesture" /&gt;</ph> and a command.</source>
          <target state="translated">Rappresenta un'associazione tra un oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputGesture" /&gt;</ph> e un comando.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.InputBinding">
          <source>The command is potentially a <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph>.</source>
          <target state="translated">Il comando è potenzialmente un oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>You can specify that user input invokes a command by creating a <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</source>
          <target state="translated">È possibile specificare che l'input dell'utente richiama un comando creando un <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>When the user performs the specified input, the <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> that is set to the <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph> property is executed.</source>
          <target state="translated">Quando l'utente esegue l'input specificato, il <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> impostato il <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph> proprietà viene eseguita.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>You can specify that the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> invokes a command that is defined on an object by creating a binding on the <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> properties.</source>
          <target state="translated">È possibile specificare che il <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> richiama un comando che viene definito in un oggetto tramite la creazione di un'associazione nel <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>This enables you to define a custom command and associate it with user input.</source>
          <target state="translated">In questo modo è possibile definire un comando personalizzato e associarlo all'input dell'utente.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>For more information, see the second example in the Examples section.</source>
          <target state="translated">Per ulteriori informazioni, vedere il secondo esempio nella sezione esempi.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> can be defined on a specific object or at the class level by registering a <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;</ph> with the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> possono essere definite in un oggetto specifico o a livello di classe registrando un <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;</ph> con il <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class itself does not support XAML usage because it does not expose a public default constructor (there is a default constructor, but it is protected).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> stessa classe non supporta l'utilizzo XAML in quanto non espone un costruttore predefinito pubblico (è presente un costruttore predefinito, ma è protetta).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>However, derived classes can expose a public constructor and therefore can set properties on the derived class that are inherited from <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> with a XAML usage.</source>
          <target state="translated">Tuttavia, le classi derivate possono esporre un costruttore pubblico e pertanto possibile impostare le proprietà nella classe derivata dalla quale vengono ereditate <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> con un utilizzo di XAML.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>Two existing <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>-derived classes that can be instantiated in XAML and can set properties in XAML are <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Due esistente <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>-sono classi derivate che possono essere creata un'istanza in XAML e impostare le proprietà in XAML <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The typical property in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> programming that is set in XAML and takes one or more <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> objects as values is the <ph id="ph3">&lt;xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Proprietà tipico <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> programmazione che è impostato in XAML e accetta uno o più <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> oggetti come valori è il <ph id="ph3">&lt;xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>XAML Object Element Usage</source>
          <target state="translated">Utilizzo della sintassi XAML per gli elementi oggetto</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>inputBindingDerivedClass…/<ept id="p1">*</ept><ph id="ph2">&gt;</ph></source>
          <target state="translated"><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>inputBindingDerivedClass…/<ept id="p1">*</ept><ph id="ph2">&gt;</ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>XAML Values</source>
          <target state="translated">Valori XAML</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>A derived class of <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> that supports object element syntax, such as <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Una classe derivata di <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> che supporta la sintassi degli elementi oggetto, ad esempio <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>See Remarks.</source>
          <target state="translated">Vedere la sezione Osservazioni.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> to bind a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> to the <ph id="ph3">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A&gt;</ph> command.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> per associare un <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> per il <ph id="ph3">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A&gt;</ph> comando.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>When the key gesture is performed, the Open command is invoked.</source>
          <target state="translated">Quando viene eseguita la combinazione di tasti, viene richiamato il comando Apri.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The following examples show how to bind a custom command to <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come associare un comando personalizzato a <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>These examples create an application that enables the user to change the background color by performing one of the following actions:</source>
          <target state="translated">Questi esempi vengono create un'applicazione che consente all'utente di modificare il colore di sfondo eseguendo una delle azioni seguenti:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>Clicking a button.</source>
          <target state="translated">Fare clic su un pulsante.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>Pressing CTRL+C.</source>
          <target state="translated">Premere CTRL + C.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>Right-clicking a <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> (outside the <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>).</source>
          <target state="translated">Facendo un <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> (all'esterno di <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The first example creates a class named <ph id="ph1">`SimpleDelegateCommand`</ph>.</source>
          <target state="translated">Nel primo esempio viene creata una classe denominata <ph id="ph1">`SimpleDelegateCommand`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>This class accepts a delegate so that the object creating the command can define the action that occurs when the command executes.</source>
          <target state="translated">Questa classe accetta un delegato in modo che l'oggetto crea il comando è possibile definire l'azione che si verifica quando viene eseguito il comando.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source><ph id="ph1">`SimpleDelegateCommand`</ph> also defines properties that specify what key and mouse input invokes the command.</source>
          <target state="translated"><ph id="ph1">`SimpleDelegateCommand`</ph> definisce inoltre le proprietà che specificano quali da tastiera e mouse input richiama il comando.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source><ph id="ph1">`GestureKey`</ph> and <ph id="ph2">`GestureModifier`</ph> specify the keyboard input; <ph id="ph3">`MouseGesture`</ph> specifies the mouse input.</source>
          <target state="translated"><ph id="ph1">`GestureKey`</ph> e <ph id="ph2">`GestureModifier`</ph> specificare l'input da tastiera; <ph id="ph3">`MouseGesture`</ph> specifica l'input del mouse.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The following example creates and initializes the <ph id="ph1">`ColorChangeCommand`</ph>, which is a <ph id="ph2">`SimpleDelegateCommand`</ph>.</source>
          <target state="translated">Nell'esempio seguente crea e inizializza il <ph id="ph1">`ColorChangeCommand`</ph>, ovvero un <ph id="ph2">`SimpleDelegateCommand`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The example also defines the method that executes when the command is invoked and sets the <ph id="ph1">`GestureKey`</ph>, <ph id="ph2">`GestureModifier`</ph>, and <ph id="ph3">`MouseGesture`</ph> properties.</source>
          <target state="translated">Viene inoltre definito il metodo che viene eseguito quando il comando viene richiamato e imposta il <ph id="ph1">`GestureKey`</ph>, <ph id="ph2">`GestureModifier`</ph>, e <ph id="ph3">`MouseGesture`</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>An application would call the <ph id="ph1">`InitializeCommand`</ph> method when the program begins, such as in the constructor of a <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>.</source>
          <target state="translated">Un'applicazione chiama il <ph id="ph1">`InitializeCommand`</ph> metodo quando il programma viene avviato, ad esempio il costruttore di un <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>Finally, the following example creates the user interface.</source>
          <target state="translated">Infine, nell'esempio seguente viene creata l'interfaccia utente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The example adds a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph> to a <ph id="ph3">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> that contains a <ph id="ph4">&lt;xref:System.Windows.Controls.Button&gt;</ph> and a <ph id="ph5">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
          <target state="translated">Nell'esempio viene aggiunto un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> e un <ph id="ph2">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph> per un <ph id="ph3">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> che contiene un <ph id="ph4">&lt;xref:System.Windows.Controls.Button&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>When the user selects an item in the <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, he or she can change the color of the background to the selected color.</source>
          <target state="translated">Quando l'utente seleziona un elemento di <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, egli può modificare il colore di sfondo per il colore selezionato.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>In each case, the <ph id="ph1">`CommandParameter`</ph> property is bound to the selected item in the <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, and the <ph id="ph3">`Command`</ph> property is bound to the <ph id="ph4">`ColorChangeCommand`</ph>.</source>
          <target state="translated">In ogni caso, il <ph id="ph1">`CommandParameter`</ph> proprietà è associata all'elemento selezionato nel <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>e <ph id="ph3">`Command`</ph> proprietà è associata al <ph id="ph4">`ColorChangeCommand`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType&gt;</ph> properties are bound to the corresponding properties on the <ph id="ph4">`SimpleDelegateCommand`</ph> class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType&gt;</ph> proprietà sono associate alle proprietà corrispondenti di <ph id="ph4">`SimpleDelegateCommand`</ph> classe.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.InputBinding">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.#ctor">
          <source>Provides base initialization for classes derived from <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph>.</source>
          <target state="translated">Fornisce l'inizializzazione di base per classi derivate dall'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> is not technically an abstract class, but the default constructor is deliberately protected access.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> non è tecnicamente una classe astratta, ma il costruttore predefinito è deliberatamente di accesso protetto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor">
          <source>This has the effect of making <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> an "abstract" class for XAML.</source>
          <target state="translated">Questo ha l'effetto di rendere <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> "" astratta per il codice XAML.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor">
          <source>There are existing properties in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> that have XAML usages that expect objects of type <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>, but you cannot specify an <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> instance in XAML.</source>
          <target state="translated">Sono disponibili le proprietà esistente in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> che dispongono di utilizzi di XAML che prevede che gli oggetti di tipo <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>, ma non è possibile specificare un <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> istanza in XAML.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor">
          <source>Instead, you can specify one of the device-specific <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> derived classes as values, for instance <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">In alternativa, è possibile specificare uno di specifica del dispositivo <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> classi derivate come valori, ad esempio <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor">
          <source>If you implement a custom <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph> that supports a XAML usage, use this constructor for base initialization.</source>
          <target state="translated">Se si implementa un oggetto personalizzato <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph> che supporta l'utilizzo di XAML, utilizzare questo costruttore per l'inizializzazione di base.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>The command to associate with <bpt id="p1">&lt;c&gt;</bpt>gesture<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Comando da associare al parametro <bpt id="p1">&lt;c&gt;</bpt>gesture<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>The input gesture to associate with <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Movimento di input da associare al parametro <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph> class with the specified command and input gesture.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph> con il comando specifico e il movimento di input.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>If you are a software developer using existing input binding classes, you generally will not use this constructor, even if you are defining custom commands.</source>
          <target state="translated">Se si è uno sviluppatore di software utilizzando le classi di associazioni di input esistente, è in genere non utilizzerà questo costruttore, anche se si siano definendo comandi personalizzati.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>Instead, you will either use constructors of derived classes (<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>), or you will use this constructor as the base instantiation of a custom class.</source>
          <target state="translated">Al contrario, si utilizzeranno costruttori delle classi derivate (<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>), o si utilizza questo costruttore come istanze di base di una classe personalizzata.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>Although the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class supports different input devices in principle, in practice you must choose which device the input binding will represent.</source>
          <target state="translated">Sebbene la <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> classe supporta diversi dispositivi di input in sostanza, in pratica, è necessario scegliere quale dispositivo verrà rappresentato l'associazione di input.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>You only can set only one <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.Gesture%2A&gt;</ph> value on the input binding, and gestures are device-specific.</source>
          <target state="translated">È possibile impostare solo uno solo <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.Gesture%2A&gt;</ph> valore l'associazione di input e i movimenti sono specifiche del dispositivo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>The following example shows how to use this constructor to associate a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare questo costruttore per associare un <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> con un <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source><ph id="ph1">&lt;paramref name="command" /&gt;</ph> or <ph id="ph2">&lt;paramref name="gesture" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="command" /&gt;</ph> o <ph id="ph2">&lt;paramref name="gesture" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.CloneCore(System.Windows.Freezable)">
          <source>The object to clone.</source>
          <target state="translated">Oggetto da clonare.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.CloneCore(System.Windows.Freezable)">
          <source>Copies the base (non-animated) values of the properties of the specified object.</source>
          <target state="translated">Copia i valori di base (non animati) delle proprietà dell'oggetto specificato.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.CloneCurrentValueCore(System.Windows.Freezable)">
          <source>The object to clone.</source>
          <target state="translated">Oggetto da clonare.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.CloneCurrentValueCore(System.Windows.Freezable)">
          <source>Copies the current values of the properties of the specified object.</source>
          <target state="translated">Copia i valori correnti delle proprietà dell'oggetto specificato.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.InputBinding.Command">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> associated with this input binding.</source>
          <target state="translated">Ottiene o imposta l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> associato a questa associazione di input.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>The associated command.</source>
          <target state="translated">Comando associato.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class does not support XAML usage because it does not expose a public default constructor (it has a default constructor, but it is protected).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> classe non supporta l'utilizzo XAML in quanto non espone un costruttore predefinito pubblico (ha un costruttore predefinito, ma è protetta).</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>However, derived classes can expose a public constructor and therefore, can use properties that are inherited from <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</source>
          <target state="translated">Tuttavia, le classi derivate possono esporre un costruttore pubblico e pertanto possibile utilizzare le proprietà ereditate da <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>Two existing <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> derived classes that can be instantiated in XAML and can set properties with XAML usages are <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Due esistente <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> sono classi derivate che possono essere creata un'istanza in XAML e impostare le proprietà con gli utilizzi di XAML <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> references a type converter that enables certain preexisting <ph id="ph2">&lt;xref:System.Windows.Input.ICommand&gt;</ph> implementations to specify values in the form of a string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> fa riferimento a un convertitore di tipi che consente a determinate preesistenti <ph id="ph2">&lt;xref:System.Windows.Input.ICommand&gt;</ph> implementazioni per specificare i valori sotto forma di stringa.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>This type conversion behavior sets the attribute value form of this property.</source>
          <target state="translated">Questo comportamento di conversione di tipo imposta la forma di valore di attributo di questa proprietà.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>You can also bind the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> properties to an <ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph> that is defined on an object.</source>
          <target state="translated">È anche possibile associare il <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> proprietà per un <ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph> definito su un oggetto.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>This enables you to define a custom command and associate it with user input.</source>
          <target state="translated">In questo modo è possibile definire un comando personalizzato e associarlo all'input dell'utente.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>For more information, see the second example in <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni, vedere il secondo esempio <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso della sintassi XAML per gli attributi</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source><ph id="ph1">&lt;</ph><ph id="ph2">`inputBindingDerivedClass`</ph> <ph id="ph3">`Command`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph>"/&gt;</source>
          <target state="translated"><ph id="ph1">&lt;</ph><ph id="ph2">`inputBindingDerivedClass`</ph> <ph id="ph3">`Command`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph>"/&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>XAML Property Element Usage</source>
          <target state="translated">Utilizzo della sintassi XAML per elementi proprietà</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>XAML Values</source>
          <target state="translated">Valori XAML</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>A derived class of <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> that supports object element syntax, such as <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Una classe derivata di <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> che supporta la sintassi degli elementi oggetto, ad esempio <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>See Remarks.</source>
          <target state="translated">Vedere la sezione Osservazioni.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>An object implementation of <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> that supports object element syntax (has a public default constructor).</source>
          <target state="translated">Un'implementazione dell'oggetto <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> che supporta la sintassi dell'elemento oggetto (ha un costruttore predefinito pubblico).</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> to bind a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> to the <ph id="ph3">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType&gt;</ph> command.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> per associare un <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> per il <ph id="ph3">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType&gt;</ph> comando.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>When the key gesture is performed, the Open command is invoked.</source>
          <target state="translated">Quando viene eseguita la combinazione di tasti, viene richiamato il comando Apri.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.InputBinding.Command">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.Command" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore di <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.Command" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>Gets or sets the command-specific data for a particular command.</source>
          <target state="translated">Ottiene o imposta i dati specifici del comando per un particolare comando.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>The command-specific data.</source>
          <target state="translated">Dati specifici del comando.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph> property is used to pass specific information to the command when it is executed.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph> proprietà viene utilizzata per passare informazioni specifiche per il comando quando viene eseguita.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>The type of the data is defined by the command.</source>
          <target state="translated">Il tipo di dati è definito dal comando.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>Many commands do not expect command parameters; for these commands, any command parameters passed will be ignored.</source>
          <target state="translated">Molti comandi non si prevedono i parametri di comando. Per questi comandi, verranno ignorati i parametri di comando passati.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>If the command that an input binding is associated with is a <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph> of the input binding is passed to the <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> handlers through the <ph id="ph4">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs&gt;</ph> event data when the command is processed.</source>
          <target state="translated">Se il comando associato a un'associazione di input è un <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, il <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph> dell'associazione di input viene passato per il <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> gestori tramite il <ph id="ph4">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs&gt;</ph> dati dell'evento quando viene elaborato il comando.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>The data type and purpose of the command parameter are defined differently for each command and can be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Il tipo di dati e lo scopo del parametro di comando vengono definiti in modo diverso per ogni comando e può essere <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>You can bind the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> properties to an <ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph> that is defined on an object.</source>
          <target state="translated">È possibile associare il <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> proprietà per un <ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph> definito su un oggetto.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>This enables you to define a custom command and associate it with user input.</source>
          <target state="translated">In questo modo è possibile definire un comando personalizzato e associarlo all'input dell'utente.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>For more information, see the second example in <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni, vedere il secondo esempio <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class does not support XAML usage because it does not expose a public default constructor (it has a default constructor, but it is protected).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> classe non supporta l'utilizzo XAML in quanto non espone un costruttore predefinito pubblico (ha un costruttore predefinito, ma è protetta).</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>However, derived classes can expose a public constructor and therefore, can set properties that are inherited from <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> with XAML usage.</source>
          <target state="translated">Tuttavia, le classi derivate possono esporre un costruttore pubblico e pertanto possibile impostare le proprietà ereditate dalla <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> con utilizzo di XAML.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>Two existing <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> derived classes that can be instantiated in XAML and can set properties in XAML are <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Due esistente <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> sono classi derivate che possono essere creata un'istanza in XAML e impostare le proprietà in XAML <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso della sintassi XAML per gli attributi</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>XAML Property Element Usage</source>
          <target state="translated">Utilizzo della sintassi XAML per elementi proprietà</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>XAML Values</source>
          <target state="translated">Valori XAML</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>A derived class of <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> that supports object element syntax, such as <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Una classe derivata di <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> che supporta la sintassi degli elementi oggetto, ad esempio <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>See Remarks.</source>
          <target state="translated">Vedere la sezione Osservazioni.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>A string that is processed by a particular command.</source>
          <target state="translated">Stringa che viene elaborata da un particolare comando.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>Strings are the common type used for command parameters because they can be easily set in XAML.</source>
          <target state="translated">Le stringhe sono il tipo comune utilizzato per i parametri del comando, perché possono essere impostate facilmente in XAML.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>For the expected string format and its purpose, see the documentation for the particular command that the input binding is associated with.</source>
          <target state="translated">Per il formato è prevista una stringa e il suo scopo, vedere la documentazione relativa al comando associato all'associazione di input.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>Many commands do not expect parameters.</source>
          <target state="translated">Molti comandi non richiedono parametri.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>An object that is processed by a particular command.</source>
          <target state="translated">Oggetto che viene elaborato da un particolare comando.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>All existing <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> commands use strings.</source>
          <target state="translated">Tutti i valori esistenti <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> comandi usano le stringhe.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>Therefore, this property element syntax is only relevant for custom command scenarios.</source>
          <target state="translated">Pertanto, questa sintassi degli elementi di proprietà è rilevante solo per gli scenari di comando personalizzato.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>In order to support this syntax, the <ph id="ph1">`commandParameterObject`</ph> object must also support object element syntax (must have a public default constructor).</source>
          <target state="translated">Per supportare questa sintassi, il <ph id="ph1">`commandParameterObject`</ph> oggetto deve supportare anche la sintassi degli elementi oggetto (deve avere un costruttore predefinito pubblico).</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.InputBinding.CommandParameterProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.CommandParameter" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la proprietà di dipendenza <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.CommandParameter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.InputBinding.CommandProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.Command" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la proprietà di dipendenza <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.Command" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>Gets or sets the target element of the command.</source>
          <target state="translated">Ottiene o imposta l'elemento di destinazione del comando.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>The target of the command.</source>
          <target state="translated">La destinazione del comando.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>In the Windows Presentation Foundation commanding system, the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> property on an <ph id="ph2">&lt;xref:System.Windows.Input.ICommandSource&gt;</ph> object is applicable only when the <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph> is a <ph id="ph4">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">In Windows Presentation Foundation dei comandi di sistema, il <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> proprietà in un <ph id="ph2">&lt;xref:System.Windows.Input.ICommandSource&gt;</ph> oggetto è applicabile solo quando il <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph> è un <ph id="ph4">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> is set on an <ph id="ph2">&lt;xref:System.Windows.Input.ICommandSource&gt;</ph> and the corresponding command is not a <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, the command target is ignored.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> è impostata su un <ph id="ph2">&lt;xref:System.Windows.Input.ICommandSource&gt;</ph> e il comando corrispondente non è un <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, la destinazione del comando viene ignorata.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>When used with a <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, the command target is the object on which the <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.Executed&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager.CanExecute&gt;</ph> events are raised.</source>
          <target state="translated">Quando si utilizza un <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, la destinazione del comando è l'oggetto in cui il <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.Executed&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager.CanExecute&gt;</ph> vengono generati eventi.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> property is not set, the element with keyboard focus is used as the target.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> non è impostata, l'elemento con stato attivo della tastiera è utilizzato come destinazione.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class itself does not support XAML usage, because it does not expose a public default constructor (there is a default constructor, but it is protected).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> stessa classe non supporta l'utilizzo di XAML, poiché non espone un costruttore predefinito pubblico (è presente un costruttore predefinito, ma è protetta).</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>However, derived classes can expose a public constructor and therefore can set properties that are inherited from <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> with a XAML usage.</source>
          <target state="translated">Tuttavia, le classi derivate possono esporre un costruttore pubblico e pertanto possibile impostare le proprietà ereditate dalla <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> con un utilizzo di XAML.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>Two existing <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> derived classes that can be instantiated in XAML and can set properties in XAML are <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Due esistente <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> sono classi derivate che possono essere creata un'istanza in XAML e impostare le proprietà in XAML <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso della sintassi XAML per gli attributi</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>XAML Values</source>
          <target state="translated">Valori XAML</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>A derived class of <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> that supports object element syntax, such as <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Una classe derivata di <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> che supporta la sintassi degli elementi oggetto, ad esempio <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>See Remarks.</source>
          <target state="translated">Vedere la sezione Osservazioni.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>A string that uses a type of binding syntax that can return an object reference to an existing named element.</source>
          <target state="translated">Elemento denominato da una stringa che utilizza un tipo di sintassi di associazione che può restituire un riferimento all'oggetto a un oggetto esistente.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>See Remarks.</source>
          <target state="translated">Vedere la sezione Osservazioni.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.InputBinding.CommandTargetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.CommandTarget" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la proprietà di dipendenza <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.CommandTarget" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.CreateInstanceCore">
          <source>Creates an instance of an <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph>.</source>
          <target state="translated">Crea un'istanza di un oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.CreateInstanceCore">
          <source>The new object.</source>
          <target state="translated">Nuovo oggetto.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputGesture" /&gt;</ph> associated with this input binding.</source>
          <target state="translated">Ottiene o imposta l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputGesture" /&gt;</ph> associato a questa associazione di input.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>The associated gesture.</source>
          <target state="translated">Movimento associato.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>The input gesture is the action that invokes the command.</source>
          <target state="translated">La combinazione di input è l'azione che richiama il comando.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>Examples of input gestures in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> are <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Input.MouseGesture&gt;</ph>.</source>
          <target state="translated">Esempi di movimenti di input in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> sono <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Input.MouseGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> is a combination of a <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and a set of <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> è una combinazione di un <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> e un set di <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.MouseGesture&gt;</ph> is a combination of a <ph id="ph2">&lt;xref:System.Windows.Input.MouseAction&gt;</ph> and a set of <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Windows.Input.MouseGesture&gt;</ph> è una combinazione di un <ph id="ph2">&lt;xref:System.Windows.Input.MouseAction&gt;</ph> e un set di <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class itself does not support XAML usage, because it does not expose a public default constructor (there is a default constructor, but it is protected).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> stessa classe non supporta l'utilizzo di XAML, poiché non espone un costruttore predefinito pubblico (è presente un costruttore predefinito, ma è protetta).</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>However, derived classes can expose a public constructor and thus can set properties that are inherited from <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> with a XAML usage.</source>
          <target state="translated">Tuttavia, le classi derivate possono esporre un costruttore pubblico e pertanto possibile impostare le proprietà ereditate dalla <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> con un utilizzo di XAML.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>Two existing <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> derived classes that can be instantiated in XAML and can set properties in XAML are <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Due esistente <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> sono classi derivate che possono essere creata un'istanza in XAML e impostare le proprietà in XAML <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso della sintassi XAML per gli attributi</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source><ph id="ph1">&lt;</ph><ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> <ph id="ph3">`Gesture`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>"/&gt;</source>
          <target state="translated"><ph id="ph1">&lt;</ph><ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> <ph id="ph3">`Gesture`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>"/&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> oppure -</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source><ph id="ph1">&lt;</ph><ph id="ph2">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph> <ph id="ph3">`Gesture`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.MouseGesture&gt;</ph>"/&gt;</source>
          <target state="translated"><ph id="ph1">&lt;</ph><ph id="ph2">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph> <ph id="ph3">`Gesture`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.MouseGesture&gt;</ph>"/&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> oppure -</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source><ph id="ph1">&lt;</ph><ph id="ph2">`inputBindingDerivedClass`</ph> <ph id="ph3">`Gesture`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.InputGesture&gt;</ph>"/&gt;</source>
          <target state="translated"><ph id="ph1">&lt;</ph><ph id="ph2">`inputBindingDerivedClass`</ph> <ph id="ph3">`Gesture`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.InputGesture&gt;</ph>"/&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>XAML Property Element Usage</source>
          <target state="translated">Utilizzo della sintassi XAML per elementi proprietà</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>XAML Values</source>
          <target state="translated">Valori XAML</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>A derived class of <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> that supports object element syntax, such as <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Una classe derivata di <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> che supporta la sintassi degli elementi oggetto, ad esempio <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>See Remarks.</source>
          <target state="translated">Vedere la sezione Osservazioni.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>A custom derived class of <ph id="ph1">&lt;xref:System.Windows.Input.InputGesture&gt;</ph> that supports object element syntax.</source>
          <target state="translated">Una classe personalizzata derivata di <ph id="ph1">&lt;xref:System.Windows.Input.InputGesture&gt;</ph> che supporta la sintassi degli elementi oggetto.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> to bind a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> to a <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare un <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> per associare un <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> per un <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> ALT+L is pressed, the <ph id="ph2">&lt;xref:System.Windows.Input.ApplicationCommands.Close%2A&gt;</ph> command is invoked.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> viene premuto ALT + L, il <ph id="ph2">&lt;xref:System.Windows.Input.ApplicationCommands.Close%2A&gt;</ph> comando viene richiamato.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.GetAsFrozenCore(System.Windows.Freezable)">
          <source>The object to clone.</source>
          <target state="translated">Oggetto da clonare.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.GetAsFrozenCore(System.Windows.Freezable)">
          <source>Makes the instance a frozen clone of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> by using base (non-animated) property values.</source>
          <target state="translated">Rende l'istanza un duplicato bloccato dell'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> specificato utilizzando i valori di base (non-animati) delle proprietà.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
          <source>The object to clone.</source>
          <target state="translated">Oggetto da clonare.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
          <source>Makes the current instance a frozen clone of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph>.</source>
          <target state="translated">Rende l’istanza corrente una copia bloccata di <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph>specificato.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
          <source>If the object has animated dependency properties, their current animated values are copied.</source>
          <target state="translated">Se l'oggetto ha proprietà di dipendenza animate, i valori animati correnti vengono copiati.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>