<Type Name="ModifierKeysConverter" FullName="System.Windows.Input.ModifierKeysConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e651055fcaeb8f1581e17179464d836d284cf009" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39912548" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ModifierKeysConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ModifierKeysConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ModifierKeysConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ModifierKeysConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModifierKeysConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type ModifierKeysConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ef94b-101">Converte un oggetto <see cref="T:System.Windows.Input.ModifierKeys" /> in e da altri tipi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef94b-101">Converts a <see cref="T:System.Windows.Input.ModifierKeys" /> object to and from other types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef94b-102">Il <xref:System.Windows.Input.ModifierKeysConverter> converte da e verso un <xref:System.String> usando il carattere "+" come delimitatore.</span><span class="sxs-lookup"><span data-stu-id="ef94b-102">The <xref:System.Windows.Input.ModifierKeysConverter> converts to and from a <xref:System.String> using the "+" character as the delimiter.</span></span>  <span data-ttu-id="ef94b-103">Ad esempio, la stringa `Control+ALT` verrebbe convertita in un <xref:System.Windows.Input.ModifierKeys> oggetto costituito il <xref:System.Windows.Input.ModifierKeys.Control> e <xref:System.Windows.Input.ModifierKeys.Alt> chiavi.</span><span class="sxs-lookup"><span data-stu-id="ef94b-103">For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> object consisting of the <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.ModifierKeys.Alt> keys.</span></span> <span data-ttu-id="ef94b-104">Questo comportamento è diverso dal carattere combinare enumerazione a livello del parser XAML predefinito della ",".</span><span class="sxs-lookup"><span data-stu-id="ef94b-104">This behavior differs from the default XAML parser-level enumeration combine character of ",".</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ModifierKeysConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ModifierKeysConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ModifierKeysConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef94b-105">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.ModifierKeysConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-105">Initializes a new instance of the <see cref="T:System.Windows.Input.ModifierKeysConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="modifierKeysConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ef94b-106">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-106">A format context that provides information about the environment from which this converter is being invoked.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="ef94b-107">Tipo di cui viene valutata la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-107">The type being evaluated for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef94b-108">Determina se per un oggetto del tipo specificato è possibile o meno eseguire la conversione in un'istanza di <see cref="T:System.Windows.Input.ModifierKeys" /> utilizzando il contesto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-108">Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.Input.ModifierKeys" />, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef94b-109">
            <see langword="true" /> se <paramref name="sourceType" /> è di tipo <see cref="T:System.String" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-109">
              <see langword="true" /> if <paramref name="sourceType" /> is type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="modifierKeysConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ef94b-110">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-110">A format context that provides information about the environment from which this converter is being invoked.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="ef94b-111">Tipo di cui viene valutata la conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-111">The type being evaluated for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef94b-112">Determina se un'istanza di <see cref="T:System.Windows.Input.ModifierKeys" /> può essere convertita nel tipo specificato utilizzando il contesto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-112">Determines whether an instance of <see cref="T:System.Windows.Input.ModifierKeys" /> can be converted to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef94b-113">
            <see langword="true" /> se <paramref name="destinationType" /> è di tipo <see cref="T:System.String" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-113">
              <see langword="true" /> if <paramref name="destinationType" /> is type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, source As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ source);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="modifierKeysConverter.ConvertFrom (context, culture, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ef94b-114">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-114">A format context that provides information about the environment from which this converter is being invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="ef94b-115">Informazioni specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-115">Culture specific information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="ef94b-116">Oggetto da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-116">The object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef94b-117">Tenta di convertire l'oggetto specificato in <see cref="T:System.Windows.Input.ModifierKeys" /> utilizzando il contesto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-117">Attempts to convert the specified object to a <see cref="T:System.Windows.Input.ModifierKeys" />, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef94b-118">Oggetto convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-118">The converted object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef94b-119">Il <xref:System.Windows.Input.ModifierKeysConverter> converte da e verso un <xref:System.String> usando la chiave "+" come delimitatore.</span><span class="sxs-lookup"><span data-stu-id="ef94b-119">The <xref:System.Windows.Input.ModifierKeysConverter> converts to and from a <xref:System.String> using the "+" key as the delimiter.</span></span>  <span data-ttu-id="ef94b-120">Ad esempio, la stringa `Control+ALT` verrebbe convertita in un <xref:System.Windows.Input.ModifierKeys> costituito il <xref:System.Windows.Input.ModifierKeys.Control> e <xref:System.Windows.Input.ModifierKeys.Alt> chiavi.</span><span class="sxs-lookup"><span data-stu-id="ef94b-120">For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> consisting of the <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.ModifierKeys.Alt> keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ef94b-121">L'oggetto <paramref name="source" /> non può essere convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-121">
              <paramref name="source" /> cannot be converted.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="modifierKeysConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ef94b-122">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-122">A format context that provides information about the environment from which this converter is being invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="ef94b-123">Informazioni specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-123">Culture specific information.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ef94b-124">Oggetto da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-124">The object to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="ef94b-125">Tipo in cui convertire l'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-125">The type to convert the object to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef94b-126">Tenta di convertire <see cref="T:System.Windows.Input.ModifierKeys" /> nel tipo specificato utilizzando il contesto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-126">Attempts to convert a <see cref="T:System.Windows.Input.ModifierKeys" /> to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef94b-127">Oggetto convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-127">The converted object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef94b-128">`destinationType` deve essere <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="ef94b-128">`destinationType` must be <xref:System.String>.</span></span>  
  
 <span data-ttu-id="ef94b-129">Il <xref:System.Windows.Input.ModifierKeysConverter> converte da e verso un <xref:System.String> usando la chiave "+" come delimitatore.</span><span class="sxs-lookup"><span data-stu-id="ef94b-129">The <xref:System.Windows.Input.ModifierKeysConverter> converts to and from a <xref:System.String> using the "+" key as the delimiter.</span></span>  <span data-ttu-id="ef94b-130">Ad esempio, la stringa `Control+ALT` verrebbe convertita in un <xref:System.Windows.Input.ModifierKeys> costituito il <xref:System.Windows.Input.ModifierKeys.Control> e <xref:System.Windows.Input.ModifierKeys.Alt> chiavi.</span><span class="sxs-lookup"><span data-stu-id="ef94b-130">For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> consisting of the <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.ModifierKeys.Alt> keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ef94b-131">
            <paramref name="destinationType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-131">
              <paramref name="destinationType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ef94b-132">
            <paramref name="value" /> non esegue il mapping a un valido <see cref="T:System.Windows.Input.ModifierKeys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-132">
              <paramref name="value" /> does not map to a valid <see cref="T:System.Windows.Input.ModifierKeys" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ef94b-133">L'oggetto <paramref name="value" /> non può essere convertito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-133">
              <paramref name="value" /> cannot be converted.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefinedModifierKeys">
      <MemberSignature Language="C#" Value="public static bool IsDefinedModifierKeys (System.Windows.Input.ModifierKeys modifierKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedModifierKeys(valuetype System.Windows.Input.ModifierKeys modifierKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedModifierKeys(System::Windows::Input::ModifierKeys modifierKeys);" />
      <MemberSignature Language="F#" Value="static member IsDefinedModifierKeys : System.Windows.Input.ModifierKeys -&gt; bool" Usage="System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys modifierKeys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modifierKeys" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="modifierKeys">
          <span data-ttu-id="ef94b-134">Valore di cui controllare la validità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-134">The value to check for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef94b-135">Indica se il valore specificato è un valore <see cref="T:System.Windows.Input.ModifierKeys" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-135">Determines whether the specified value is a valid <see cref="T:System.Windows.Input.ModifierKeys" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef94b-136">
            <see langword="true" /> se l'input è un valore <see cref="T:System.Windows.Input.ModifierKeys" /> valido. In caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-136">
              <see langword="true" /> if input is a valid <see cref="T:System.Windows.Input.ModifierKeys" /> value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>