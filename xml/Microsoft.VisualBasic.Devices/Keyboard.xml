<Type Name="Keyboard" FullName="Microsoft.VisualBasic.Devices.Keyboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8809b0a6d6a42f45367abb94fb268832cdc9bd82" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51889852" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Offre proprietà che consentono di accedere allo stato corrente della tastiera, per sapere ad esempio quali tasti vengono attualmente premuti, e un metodo per inviare le sequenze di tasti alla finestra attiva.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Keyboard` oggetto fornisce un'interfaccia per la tastiera del computer. Le proprietà del `My.Computer.Keyboard` forniscono informazioni sullo stato di numerosi tasti speciali. Il `My.Computer.Keyboard.SendKeys` metodo consente di inviare le chiavi per la finestra attiva come se fossero stati premuti sulla tastiera.  
  
## <a name="tasks"></a>Attività  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Keyboard` oggetto.  
  
|A|Vedere|  
|-|-|  
|Invia sequenze di tasti a un'applicazione|[Procedura: Avviare un'applicazione e inviarle sequenze di tasti (Visual Basic)](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-start-an-application-and-send-it-keystrokes.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio viene usato il `My.Computer.Keyboard.CtrlKeyDown` proprietà per determinare se il computer viene premuto CTRL.  
  
 [!code-vb[VbVbalrMyComputer#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#36)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Oggetti (Visual Basic)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Accesso alla tastiera</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Keyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Keyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Oggetti (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Accesso alla tastiera</related>
      </Docs>
    </Member>
    <Member MemberName="AltKeyDown">
      <MemberSignature Language="C#" Value="public bool AltKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AltKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AltKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AltKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AltKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore <see langword="Boolean" /> che indica se il tasto ALT è premuto.</summary>
        <value>Valore <see langword="Boolean" />: <see langword="True" /> se il tasto ALT è premuto; in caso contrario <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Keyboard.AltKeyDown` proprietà fornisce funzionalità simili a quelle di <xref:System.Windows.Forms.Control.ModifierKeys%2A> proprietà.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio viene usato il `My.Computer.Keyboard.AltKeyDown` proprietà per determinare se il tasto ALT è premuto.  
  
 [!code-vb[VbVbalrMyComputer#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Oggetti (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Accesso alla tastiera</related>
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CapsLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CapsLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CapsLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CapsLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.CapsLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore <see langword="Boolean" /> che indica se BLOC MAIUSC è attivo.</summary>
        <value>Valore <see langword="Boolean" />: <see langword="True" /> se BLOC MAIUSC è attivo; in caso contrario <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene restituito solo lo stato del tasto BLOC MAIUSC attivo.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio viene usato il `My.Computer.Keyboard.CapsLock` proprietà per determinare se BLOC del computer è attivata.  
  
 [!code-vb[VbVbalrMyComputer#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Oggetti (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Accesso alla tastiera</related>
      </Docs>
    </Member>
    <Member MemberName="CtrlKeyDown">
      <MemberSignature Language="C#" Value="public bool CtrlKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtrlKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtrlKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtrlKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CtrlKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore <see langword="Boolean" /> che indica se il tasto CTRL è premuto.</summary>
        <value>Valore <see langword="Boolean" />. <see langword="True" /> se il tasto CTRL è premuto; in caso contrario, <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Keyboard.CtrlKeyDown` proprietà fornisce funzionalità simili a quelle di <xref:System.Windows.Forms.Control.ModifierKeys%2A> proprietà.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio viene usato il `My.Computer.Keyboard.CtrlKeyDown` proprietà per determinare se il tasto del computer CTRL è premuto.  
  
 [!code-vb[VbVbalrMyComputer#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Oggetti (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Accesso alla tastiera</related>
      </Docs>
    </Member>
    <Member MemberName="NumLock">
      <MemberSignature Language="C#" Value="public bool NumLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NumLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.NumLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NumLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NumLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.NumLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore <see langword="Boolean" /> che indica se BLOC NUM è attivo.</summary>
        <value>Valore <see langword="Boolean" />. <see langword="True" /> se BLOC NUM è attivo; in caso contrario <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene restituito solo lo stato del tasto LOCK NUM.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio viene usato il `My.Computer.Keyboard.NumLock` proprietà per determinare se il tasto del computer BLOC NUM è attivato.  
  
 [!code-vb[VbVbalrMyComputer#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Oggetti (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Accesso alla tastiera</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollLock">
      <MemberSignature Language="C#" Value="public bool ScrollLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScrollLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScrollLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.ScrollLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore <see langword="Boolean" /> che indica se il tasto BLOC SCORR è attivo.</summary>
        <value>Valore <see langword="Boolean" />. <see langword="True" /> se BLOC SCORR è attivo; in caso contrario, <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene restituito solo lo stato del tasto BLOC SCORR.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio viene usato il `My.Computer.Keyboard.ScrollLock` proprietà per determinare se tasto BLOC SCORR del computer è attivo.  
  
 [!code-vb[VbVbalrMyComputer#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Oggetti (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Accesso alla tastiera</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendKeys">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invia una o più sequenze di tasti alla finestra attiva, come se fossero premuti sulla tastiera.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SendKeys(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendKeys(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="member this.SendKeys : string -&gt; unit" Usage="keyboard.SendKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">
          <see langword="String" /> che definisce i tasti da inviare.</param>
        <summary>Invia una o più sequenze di tasti alla finestra attiva, come se fossero premuti sulla tastiera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Keyboard.SendKeys` metodo fornisce funzionalità simili a quelle di <xref:System.Windows.Forms.SendKeys.Send%2A> e <xref:System.Windows.Forms.SendKeys.SendWait%2A> metodi.  
  
 Il `wait` argomento è utile se l'altra applicazione deve terminare prima che l'applicazione può continuare.  
  
> [!NOTE]
>  Poiché non esiste alcun metodo gestito per attivare un'altra applicazione, è possibile utilizzare questa classe all'interno dell'applicazione corrente, manualmente selezionare la finestra a cui inviare i tasti o utilizzare i metodi dell'API di Windows, ad esempio `FindWindow` e `SetForegroundWindow`, per forzare lo stato attivo su altre applicazioni. Per altre informazioni, vedere [procedura dettagliata: chiamata delle API Windows](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).  
  
 Il `keys` argomento può specificare qualsiasi chiave singola o una chiave combinata con ALT, CTRL o MAIUSC (o qualsiasi combinazione di tali chiavi). Ogni chiave è rappresentato da uno o più caratteri, ad esempio `a` per il carattere "a", o `{ENTER}` per il tasto INVIO.  
  
 Per combinare un tasto con il tasto MAIUSC, anteporre il codice tasto `+` (segno più). Per combinare un tasto con il tasto CTRL, anteporre il codice tasto `^` (cursore). Per combinare una chiave con ALT, anteporre il codice tasto `%` (segno di percentuale). Per specificare la ripetizione di tasti, usare il modulo `{` *tasto numero*`}`. È necessario inserire uno spazio tra *key* e *numero*. Ad esempio, `{LEFT 42}` significa "premere il tasto freccia sinistra 42 volte"; `{h 10}` significa "preme 'h' 10 volte."  
  
 Nella tabella seguente sono elencati i codici che possono essere utilizzati per specificare i caratteri che non vengono visualizzati quando si preme il tasto corrispondente (ad esempio, invio o TAB).  
  
|Chiave|Codice|  
|-|-|  
|BACKSPACE|{BACKSPACE} o {b}|  
|INTERRUZIONE|INTERRUZIONE DI {}|  
|BLOC MAIUSC|{CAPSLOCK}|  
|CANCELLA|{CLEAR}|  
|DELETE|{DELETE} o {CANC}|  
|Freccia GIÙ|{VERSO IL BASSO}|  
|FINE|{END}|  
|INVIO (Tn)|{IMMETTERE}|  
|INVIO|~|  
|ESC|{ESCAPE} o {ESC}|  
|?|{HELP}|  
|HOME|{HOME}|  
|INS|{INSERIRE}|  
|FRECCIA SINISTRA|{LEFT}|  
|BLOC NUM|{BLOCNUM}|  
|PGGIÙ|{PGDN}|  
|PGSU|{PGUP}|  
|RESTITUIRE|{RETURN}|  
|FRECCIA DESTRA|{RIGHT}|  
|TASTO BLOC SCORR|{BLOC SCORR}|  
|TAB|{TAB}|  
|Freccia SU|{UP}|  
|F1 a F15|{F1} a {F15}|  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio Usa la `My.Computer.Keyboard.SendKeys` avviata dal metodo per inviare le sequenze di tasti a un'applicazione esterna, l'applicazione Calcolatrice, il `Shell` (funzione).  
  
 [!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]  
  
 Se non viene rilevata un'applicazione con l'identificatore di processo richiesto, viene generata un'eccezione <xref:System.ArgumentException>.  
  
 La chiamata alla funzione `Shell` richiede l'attendibilità totale (classe <xref:System.Security.SecurityException>).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Sussiste una situazione di attendibilità parziale in cui l'utente non dispone delle autorizzazioni necessarie.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.SendKeys.Send(System.String)" />
        <altmember cref="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Oggetti (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Accesso alla tastiera</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9280ca96-7a93-47a3-8d01-6d01be0657cb">Procedura dettagliata: chiamata delle API di Windows</related>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (string keys, bool wait);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SendKeys(string keys, bool wait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (keys As String, wait As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendKeys(System::String ^ keys, bool wait);" />
      <MemberSignature Language="F#" Value="member this.SendKeys : string * bool -&gt; unit" Usage="keyboard.SendKeys (keys, wait)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keys">
          <see langword="String" /> che definisce i tasti da inviare.</param>
        <param name="wait">Facoltativo. Valore <see langword="Boolean" /> che specifica se attendere o meno l'elaborazione della sequenza di tasti prima che l'applicazione proceda. <see langword="True" /> per impostazione predefinita.</param>
        <summary>Invia una o più sequenze di tasti alla finestra attiva, come se fossero premuti sulla tastiera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Keyboard.SendKeys` metodo fornisce funzionalità simili a quelle di <xref:System.Windows.Forms.SendKeys.Send%2A> e <xref:System.Windows.Forms.SendKeys.SendWait%2A> metodi.  
  
 Il `wait` argomento è utile se l'altra applicazione deve terminare prima che l'applicazione può continuare.  
  
> [!NOTE]
>  Poiché non esiste alcun metodo gestito per attivare un'altra applicazione, è possibile utilizzare questa classe all'interno dell'applicazione corrente, manualmente selezionare la finestra a cui inviare i tasti o utilizzare i metodi dell'API di Windows, ad esempio `FindWindow` e `SetForegroundWindow`, per forzare lo stato attivo su altre applicazioni. Per altre informazioni, vedere [procedura dettagliata: chiamata delle API Windows](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).  
  
 Il `keys` argomento può specificare qualsiasi chiave singola o una chiave combinata con ALT, CTRL o MAIUSC (o qualsiasi combinazione di tali chiavi). Ogni chiave è rappresentato da uno o più caratteri, ad esempio `a` per il carattere "a", o `{ENTER}` per il tasto INVIO.  
  
 Per combinare un tasto con il tasto MAIUSC, anteporre il codice tasto `+` (segno più). Per combinare un tasto con il tasto CTRL, anteporre il codice tasto `^` (cursore). Per combinare una chiave con ALT, anteporre il codice tasto `%` (segno di percentuale). Per specificare la ripetizione di tasti, usare il modulo `{` *tasto numero*`}`. È necessario inserire uno spazio tra *key* e *numero*. Ad esempio, `{LEFT 42}` significa "premere il tasto freccia sinistra 42 volte"; `{h 10}` significa "preme 'h' 10 volte."  
  
 Nella tabella seguente sono elencati i codici che possono essere utilizzati per specificare i caratteri che non vengono visualizzati quando si preme il tasto corrispondente (ad esempio, invio o TAB).  
  
|Chiave|Codice|  
|-|-|  
|BACKSPACE|{BACKSPACE} o {b}|  
|INTERRUZIONE|INTERRUZIONE DI {}|  
|BLOC MAIUSC|{CAPSLOCK}|  
|CANCELLA|{CLEAR}|  
|DELETE|{DELETE} o {CANC}|  
|Freccia GIÙ|{VERSO IL BASSO}|  
|FINE|{END}|  
|INVIO (Tn)|{IMMETTERE}|  
|INVIO|~|  
|ESC|{ESCAPE} o {ESC}|  
|?|{HELP}|  
|HOME|{HOME}|  
|INS|{INSERIRE}|  
|FRECCIA SINISTRA|{LEFT}|  
|BLOC NUM|{BLOCNUM}|  
|PGGIÙ|{PGDN}|  
|PGSU|{PGUP}|  
|RESTITUIRE|{RETURN}|  
|FRECCIA DESTRA|{RIGHT}|  
|TASTO BLOC SCORR|{BLOC SCORR}|  
|TAB|{TAB}|  
|Freccia SU|{UP}|  
|F1 a F15|{F1} a {F15}|  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio Usa la `My.Computer.Keyboard.SendKeys` avviata dal metodo per inviare le sequenze di tasti a un'applicazione esterna, l'applicazione Calcolatrice, il `Shell` (funzione).  
  
 [!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]  
  
 Se non viene rilevata un'applicazione con l'identificatore di processo richiesto, viene generata un'eccezione <xref:System.ArgumentException>.  
  
 La chiamata alla funzione `Shell` richiede l'attendibilità totale (classe <xref:System.Security.SecurityException>).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Sussiste una situazione di attendibilità parziale in cui l'utente non dispone delle autorizzazioni necessarie.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.SendKeys.Send(System.String)" />
        <altmember cref="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Oggetti (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Accesso alla tastiera</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9280ca96-7a93-47a3-8d01-6d01be0657cb">Procedura dettagliata: chiamata delle API di Windows</related>
      </Docs>
    </Member>
    <Member MemberName="ShiftKeyDown">
      <MemberSignature Language="C#" Value="public bool ShiftKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShiftKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShiftKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShiftKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShiftKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore <see langword="Boolean" /> che indica se il tasto MAIUSC è premuto.</summary>
        <value>Valore <see langword="Boolean" />. <see langword="True" /> se il tasto MAIUSC è premuto; in caso contrario <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Keyboard.ShiftKeyDown` proprietà fornisce funzionalità simili a quelle di <xref:System.Windows.Forms.Control.ModifierKeys%2A> proprietà.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio viene usato il `My.Computer.Keyboard.ShiftKeyDown` proprietà per determinare se uno dei tasti MAIUSC del computer è inattivo.  
  
 [!code-vb[VbVbalrMyComputer#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#47)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Oggetti (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Accesso alla tastiera</related>
      </Docs>
    </Member>
  </Members>
</Type>