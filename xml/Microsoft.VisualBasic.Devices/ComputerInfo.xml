<Type Name="ComputerInfo" FullName="Microsoft.VisualBasic.Devices.ComputerInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ac25f7bcc28d013a0dc4b8cf27e4ca48c0a5d1ef" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39790501" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComputerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComputerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.ComputerInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ComputerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComputerInfo" />
  <TypeSignature Language="F#" Value="type ComputerInfo = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Devices.ComputerInfo/ComputerInfoDebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eba50-101">Offre proprietà che consentono di ottenere informazioni su memoria del computer, assembly caricati, nome e sistema operativo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eba50-101">Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba50-102">Le proprietà esposte dal `My.Computer.Info` oggetto restituiscono informazioni relative al computer da cui l'applicazione viene distribuita, come determinato in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="eba50-102">The properties exposed by the `My.Computer.Info` object return information about the computer from which the application is deployed, as determined at run time.</span></span> <span data-ttu-id="eba50-103">In genere, questi dati è diverso da quelli disponibili nel computer di sviluppo.</span><span class="sxs-lookup"><span data-stu-id="eba50-103">Typically, this data differs from what was available on the development computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eba50-104">Questo esempio viene usato il `My.Computer.Info.AvailablePhysicalMemory` proprietà per visualizzare la quantità di memoria fisica disponibile per il computer in cui viene eseguito il codice.</span><span class="sxs-lookup"><span data-stu-id="eba50-104">This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComputerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComputerInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eba50-105">Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-105">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailablePhysicalMemory">
      <MemberSignature Language="C#" Value="public ulong AvailablePhysicalMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 AvailablePhysicalMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailablePhysicalMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 AvailablePhysicalMemory { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailablePhysicalMemory : uint64" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eba50-106">Ottiene la quantità totale di memoria fisica libera per il computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-106">Gets the total amount of free physical memory for the computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eba50-107">Valore <see langword="ULong" /> contenente il numero di byte di memoria fisica libera per il computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-107">A <see langword="ULong" /> containing the number of bytes of free physical memory for the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba50-108">Il `My.Computer.Info.AvailablePhysicalMemory` proprietà richiede Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="eba50-108">The `My.Computer.Info.AvailablePhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eba50-109">Questo esempio viene usato il `My.Computer.Info.AvailablePhysicalMemory` proprietà per visualizzare la quantità di memoria fisica disponibile per il computer in cui viene eseguito il codice.</span><span class="sxs-lookup"><span data-stu-id="eba50-109">This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="eba50-110">L'applicazione non è in grado di ottenere lo stato della memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-110">The application cannot obtain the memory status.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AvailableVirtualMemory">
      <MemberSignature Language="C#" Value="public ulong AvailableVirtualMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 AvailableVirtualMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableVirtualMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 AvailableVirtualMemory { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableVirtualMemory : uint64" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eba50-111">Ottiene la quantità totale di spazio degli indirizzi virtuali libero del computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-111">Gets the total amount of the computer's free virtual address space.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eba50-112">Valore <see langword="ULong" /> contenente il numero di byte di spazio degli indirizzi virtuali libero del computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-112">A <see langword="ULong" /> containing the number of bytes of the computer's free virtual address space.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba50-113">Il `My.Computer.Info.AvailableVirtualMemory` proprietà richiede Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="eba50-113">The `My.Computer.Info.AvailableVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eba50-114">Questo esempio viene usato il `My.Computer.Info.AvailableVirtualMemory` proprietà per visualizzare la quantità di memoria virtuale disponibile per il computer in cui viene eseguito il codice.</span><span class="sxs-lookup"><span data-stu-id="eba50-114">This example uses the `My.Computer.Info.AvailableVirtualMemory` property to display the amount of available virtual memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="eba50-115">L'applicazione non è in grado di ottenere lo stato della memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-115">The application cannot obtain the memory status.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InstalledUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo InstalledUICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo InstalledUICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstalledUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ InstalledUICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstalledUICulture : System.Globalization.CultureInfo" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eba50-116">Ottiene le impostazioni cultura dell'interfaccia utente correnti installate con il sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-116">Gets the current UI culture installed with the operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eba50-117">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta le impostazioni cultura dell'interfaccia utente installate sul computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-117">A <see cref="T:System.Globalization.CultureInfo" /> object represents the UI culture installed on the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba50-118">Il `My.Computer.Info.InstalledUICulture` proprietà ha lo stesso comportamento come il <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eba50-118">The `My.Computer.Info.InstalledUICulture` property has the same behavior as the <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> property.</span></span>  
  
 <span data-ttu-id="eba50-119">In un sistema operativo localizzato, ad esempio giapponese Windows 2000 Professional, questa proprietà restituisce le impostazioni cultura del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="eba50-119">In a localized operating system, such as Japanese Windows 2000 Professional, this property returns the culture of the operating system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eba50-120">Questo esempio viene usato il `My.Computer.Info.InstalledUICulture` proprietà per visualizzare il nome delle impostazioni cultura dell'interfaccia utente del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="eba50-120">This example uses the `My.Computer.Info.InstalledUICulture` property to display the name of the operating system's UI culture.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="OSFullName">
      <MemberSignature Language="C#" Value="public string OSFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSFullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OSFullName : string" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eba50-121">Ottiene il nome completo del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-121">Gets the full operating system name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eba50-122">
            <see langword="String" /> contenente il nome del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-122">A <see langword="String" /> containing the operating-system name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba50-123">Questa proprietà restituisce informazioni dettagliate sul nome del sistema operativo se Strumentazione gestione Windows (WMI) è installato nel computer.</span><span class="sxs-lookup"><span data-stu-id="eba50-123">This property returns detailed information about the operating system name if Windows Management Instrumentation (WMI) is installed on the computer.</span></span> <span data-ttu-id="eba50-124">In caso contrario, questa proprietà restituisce la stessa stringa come il `My.Computer.Info.OSPlatform` proprietà, che fornisce informazioni meno dettagliate rispetto a WMI può fornire.</span><span class="sxs-lookup"><span data-stu-id="eba50-124">Otherwise, this property returns the same string as the `My.Computer.Info.OSPlatform` property, which provides less detailed information than WMI can provide.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eba50-125">Questo esempio viene usato il `My.Computer.Info.OSFullName` proprietà per visualizzare il nome del computer del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="eba50-125">This example uses the `My.Computer.Info.OSFullName` property to display the name of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="eba50-126">Il codice chiamante non dispone dell'attendibilità totale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-126">The calling code does not have full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="eba50-127">Controlla se è possibile accedere ai file e alle cartelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-127">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="eba50-128">Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-128">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OSPlatform">
      <MemberSignature Language="C#" Value="public string OSPlatform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSPlatform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSPlatform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSPlatform { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OSPlatform : string" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eba50-129">Ottiene l'identificatore di piattaforma per il sistema operativo del computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-129">Gets the platform identifier for the operating system of the computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eba50-130">
            <see langword="String" /> contenente l'identificatore di piattaforma per il sistema operativo del computer, scelto dai nomi di membri dell'enumerazione <see cref="T:System.PlatformID" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-130">A <see langword="String" /> containing the platform identifier for the operating system of the computer, chosen from the member names of the <see cref="T:System.PlatformID" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba50-131">Il `My.Computer.Info.OSPlatform` proprietà fornisce funzionalità simili a quelle di <xref:System.OperatingSystem.Platform%2A> proprietà dell'oggetto restituito dal <xref:System.Environment.OSVersion%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eba50-131">The `My.Computer.Info.OSPlatform` property provides functionality similar to the <xref:System.OperatingSystem.Platform%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eba50-132">Questo esempio viene usato il `My.Computer.Info.OSPlatform` proprietà per visualizzare la piattaforma del computer del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="eba50-132">This example uses the `My.Computer.Info.OSPlatform` property to display the platform of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="eba50-133">L'applicazione non è in grado di ottenere le informazioni sulla piattaforma del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-133">The application cannot obtain the operating-system platform information.</span>
          </span>
        </exception>
        <altmember cref="P:System.OperatingSystem.Platform" />
        <altmember cref="P:System.Environment.OSVersion" />
      </Docs>
    </Member>
    <Member MemberName="OSVersion">
      <MemberSignature Language="C#" Value="public string OSVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OSVersion : string" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eba50-134">Ottiene la versione del sistema operativo del computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-134">Gets the version of the computer's operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eba50-135">
            <see langword="String" /> contenente il numero di versione corrente del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-135">A <see langword="String" /> containing the current version number of the operating system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba50-136">Il `My.Computer.Info.OSVersion` proprietà formatta la versione come "revisione".</span><span class="sxs-lookup"><span data-stu-id="eba50-136">The `My.Computer.Info.OSVersion` property formats the version as "major.minor.build.revision".</span></span>  
  
 <span data-ttu-id="eba50-137">Il `My.Computer.Info.OSVersion` proprietà fornisce funzionalità simili a quelle di <xref:System.OperatingSystem.Version%2A> proprietà dell'oggetto restituito dal <xref:System.Environment.OSVersion%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eba50-137">The `My.Computer.Info.OSVersion` property provides functionality similar to the <xref:System.OperatingSystem.Version%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eba50-138">Questo esempio viene usato il `My.Computer.Info.OSVersion` proprietà per visualizzare la versione del computer del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="eba50-138">This example uses the `My.Computer.Info.OSVersion` property to display the version of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="eba50-139">L'applicazione non è in grado di ottenere le informazioni sulla versione del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-139">The application cannot obtain the operating-system version information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TotalPhysicalMemory">
      <MemberSignature Language="C#" Value="public ulong TotalPhysicalMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 TotalPhysicalMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalPhysicalMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 TotalPhysicalMemory { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalPhysicalMemory : uint64" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eba50-140">Ottiene la quantità totale di memoria fisica per il computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-140">Gets the total amount of physical memory for the computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eba50-141">Valore <see langword="ULong" /> contenente il numero di byte di memoria fisica per il computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-141">A <see langword="ULong" /> containing the number of bytes of physical memory for the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba50-142">Il `My.Computer.Info.TotalPhysicalMemory` proprietà richiede Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista...</span><span class="sxs-lookup"><span data-stu-id="eba50-142">The `My.Computer.Info.TotalPhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eba50-143">Questo esempio viene usato il `My.Computer.Info.TotalPhysicalMemory` proprietà per visualizzare la quantità totale di memoria fisica per il computer in cui viene eseguito il codice.</span><span class="sxs-lookup"><span data-stu-id="eba50-143">This example uses the `My.Computer.Info.TotalPhysicalMemory` property to display the total amount of physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="eba50-144">L'applicazione non è in grado di ottenere lo stato della memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-144">The application cannot obtain the memory status.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TotalVirtualMemory">
      <MemberSignature Language="C#" Value="public ulong TotalVirtualMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 TotalVirtualMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalVirtualMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 TotalVirtualMemory { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalVirtualMemory : uint64" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eba50-145">Ottiene la quantità totale di spazio degli indirizzi virtuale disponibile per il computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-145">Gets the total amount of virtual address space available for the computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eba50-146">Valore <see langword="ULong" /> contenente il numero di byte di spazio degli indirizzi virtuali disponibile per il computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-146">A <see langword="ULong" /> containing the number of bytes of virtual address space available for the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba50-147">Il `My.Computer.Info.TotalVirtualMemory` proprietà richiede Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista...</span><span class="sxs-lookup"><span data-stu-id="eba50-147">The `My.Computer.Info.TotalVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eba50-148">Questo esempio viene usato il `My.Computer.Info.TotalVirtualMemory` proprietà per visualizzare la quantità totale di memoria virtuale per il computer in cui viene eseguito il codice.</span><span class="sxs-lookup"><span data-stu-id="eba50-148">This example uses the `My.Computer.Info.TotalVirtualMemory` property to display the total amount of virtual memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="eba50-149">L'applicazione non è in grado di ottenere lo stato della memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eba50-149">The application cannot obtain the memory status.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>