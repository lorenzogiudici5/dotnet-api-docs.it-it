<Type Name="ComputerInfo" FullName="Microsoft.VisualBasic.Devices.ComputerInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b644441a905b59facf2927aa31ccc6cfcebf8aa1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30339655" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComputerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComputerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.ComputerInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ComputerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComputerInfo" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Devices.ComputerInfo/ComputerInfoDebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Offre proprietà che consentono di ottenere informazioni su memoria del computer, assembly caricati, nome e sistema operativo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le proprietà esposte dal `My.Computer.Info` oggetto restituiscono informazioni relative al computer da cui viene distribuita l'applicazione, come determinato in fase di esecuzione. In genere, questi dati è diverso da quelli disponibili nel computer di sviluppo.  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `My.Computer.Info.AvailablePhysicalMemory` proprietà per visualizzare la quantità di memoria fisica disponibile per il computer in cui viene eseguito il codice.  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComputerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComputerInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailablePhysicalMemory">
      <MemberSignature Language="C#" Value="public ulong AvailablePhysicalMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 AvailablePhysicalMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailablePhysicalMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 AvailablePhysicalMemory { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la quantità totale di memoria fisica libera per il computer.</summary>
        <value>Valore <see langword="ULong" /> contenente il numero di byte di memoria fisica libera per il computer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Info.AvailablePhysicalMemory` proprietà richiede Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista.  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `My.Computer.Info.AvailablePhysicalMemory` proprietà per visualizzare la quantità di memoria fisica disponibile per il computer in cui viene eseguito il codice.  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">L'applicazione non è in grado di ottenere lo stato della memoria.</exception>
      </Docs>
    </Member>
    <Member MemberName="AvailableVirtualMemory">
      <MemberSignature Language="C#" Value="public ulong AvailableVirtualMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 AvailableVirtualMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableVirtualMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 AvailableVirtualMemory { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la quantità totale di spazio degli indirizzi virtuali libero del computer.</summary>
        <value>Valore <see langword="ULong" /> contenente il numero di byte di spazio degli indirizzi virtuali libero del computer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Info.AvailableVirtualMemory` proprietà richiede Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista.  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `My.Computer.Info.AvailableVirtualMemory` proprietà per visualizzare la quantità di memoria virtuale disponibile per il computer in cui viene eseguito il codice.  
  
 [!code-vb[VbVbalrMyComputer#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">L'applicazione non è in grado di ottenere lo stato della memoria.</exception>
      </Docs>
    </Member>
    <Member MemberName="InstalledUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo InstalledUICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo InstalledUICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstalledUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ InstalledUICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le impostazioni cultura dell'interfaccia utente correnti installate con il sistema operativo.</summary>
        <value>Oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta le impostazioni cultura dell'interfaccia utente installate sul computer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Info.InstalledUICulture` proprietà ha lo stesso comportamento come il <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> proprietà.  
  
 In un sistema operativo localizzato, ad esempio versione giapponese di Windows 2000 Professional, questa proprietà restituisce le impostazioni cultura del sistema operativo.  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `My.Computer.Info.InstalledUICulture` proprietà per visualizzare il nome delle impostazioni cultura dell'interfaccia utente del sistema operativo.  
  
 [!code-vb[VbVbalrMyComputer#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="OSFullName">
      <MemberSignature Language="C#" Value="public string OSFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSFullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSFullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome completo del sistema operativo.</summary>
        <value>
          <see langword="String" /> contenente il nome del sistema operativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce informazioni dettagliate sul nome del sistema operativo se Strumentazione gestione Windows (WMI) è installato nel computer. In caso contrario, questa proprietà restituisce la stessa stringa come il `My.Computer.Info.OSPlatform` proprietà che fornisce informazioni meno dettagliate di WMI può fornire.  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `My.Computer.Info.OSFullName` proprietà per visualizzare il nome del computer del sistema operativo.  
  
 [!code-vb[VbVbalrMyComputer#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Il codice chiamante non dispone dell'attendibilità totale.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="OSPlatform">
      <MemberSignature Language="C#" Value="public string OSPlatform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSPlatform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSPlatform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSPlatform { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'identificatore di piattaforma per il sistema operativo del computer.</summary>
        <value>
          <see langword="String" /> contenente l'identificatore di piattaforma per il sistema operativo del computer, scelto dai nomi di membri dell'enumerazione <see cref="T:System.PlatformID" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Info.OSPlatform` proprietà fornisce funzionalità simili a quelle di <xref:System.OperatingSystem.Platform%2A> proprietà dell'oggetto restituito dal <xref:System.Environment.OSVersion%2A> proprietà.  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `My.Computer.Info.OSPlatform` proprietà per visualizzare la piattaforma del computer del sistema operativo.  
  
 [!code-vb[VbVbalrMyComputer#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ExecutionEngineException">L'applicazione non è in grado di ottenere le informazioni sulla piattaforma del sistema operativo.</exception>
        <altmember cref="P:System.OperatingSystem.Platform" />
        <altmember cref="P:System.Environment.OSVersion" />
      </Docs>
    </Member>
    <Member MemberName="OSVersion">
      <MemberSignature Language="C#" Value="public string OSVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la versione del sistema operativo del computer.</summary>
        <value>
          <see langword="String" /> contenente il numero di versione corrente del sistema operativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Info.OSVersion` proprietà formatta la versione "revisione".  
  
 Il `My.Computer.Info.OSVersion` proprietà fornisce funzionalità simili a quelle di <xref:System.OperatingSystem.Version%2A> proprietà dell'oggetto restituito dal <xref:System.Environment.OSVersion%2A> proprietà.  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `My.Computer.Info.OSVersion` proprietà per visualizzare la versione del computer del sistema operativo.  
  
 [!code-vb[VbVbalrMyComputer#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ExecutionEngineException">L'applicazione non è in grado di ottenere le informazioni sulla versione del sistema operativo.</exception>
      </Docs>
    </Member>
    <Member MemberName="TotalPhysicalMemory">
      <MemberSignature Language="C#" Value="public ulong TotalPhysicalMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 TotalPhysicalMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalPhysicalMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 TotalPhysicalMemory { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la quantità totale di memoria fisica per il computer.</summary>
        <value>Valore <see langword="ULong" /> contenente il numero di byte di memoria fisica per il computer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Info.TotalPhysicalMemory` proprietà richiede Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista...  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `My.Computer.Info.TotalPhysicalMemory` proprietà per visualizzare la quantità totale di memoria fisica per il computer in cui viene eseguito il codice.  
  
 [!code-vb[VbVbalrMyComputer#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">L'applicazione non è in grado di ottenere lo stato della memoria.</exception>
      </Docs>
    </Member>
    <Member MemberName="TotalVirtualMemory">
      <MemberSignature Language="C#" Value="public ulong TotalVirtualMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 TotalVirtualMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalVirtualMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 TotalVirtualMemory { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la quantità totale di spazio degli indirizzi virtuale disponibile per il computer.</summary>
        <value>Valore <see langword="ULong" /> contenente il numero di byte di spazio degli indirizzi virtuali disponibile per il computer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Info.TotalVirtualMemory` proprietà richiede Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista...  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `My.Computer.Info.TotalVirtualMemory` proprietà per visualizzare la quantità totale di memoria virtuale per il computer in cui viene eseguito il codice.  
  
 [!code-vb[VbVbalrMyComputer#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">L'applicazione non è in grado di ottenere lo stato della memoria.</exception>
      </Docs>
    </Member>
  </Members>
</Type>