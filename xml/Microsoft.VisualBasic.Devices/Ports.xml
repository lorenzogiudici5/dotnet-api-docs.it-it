<Type Name="Ports" FullName="Microsoft.VisualBasic.Devices.Ports">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb06659c6a09f5abfed53cf11e17dd2bd4139931" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39790364" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Ports" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ports extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Ports" />
  <TypeSignature Language="VB.NET" Value="Public Class Ports" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ports" />
  <TypeSignature Language="F#" Value="type Ports = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specifica una proprietà e un metodo per l'accesso alle porte seriali del computer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Ports` oggetto fornisce un punto di ingresso diretto per l'accesso di [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] classe della porta seriale, <xref:System.IO.Ports.SerialPort>.  
  
 La tabella seguente elenca alcuni esempi di attività che implicano il `My.Computer.Ports` oggetto.  
  
|A|Vedere|  
|-|-|  
|Comporre numeri con modem collegati a una porta seriale|[Procedura: Comporre numeri con modem collegati a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Inviare una stringa a una porta seriale|[Procedura: Inviare stringhe a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Ricevere stringhe da una porta seriale|[Procedura: Ricevere stringhe da porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
|Mostrare le porte seriali disponibili|[Procedura: Mostrare le porte seriali disponibili](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio viene descritto come inviare le stringhe per il computer `COM1` porta seriale.  
  
 Il blocco `Using` consente all'applicazione di chiudere la porta seriale anche se viene generata un'eccezione. Tutto il codice relativo alla porta seriale deve essere visualizzato all'interno di questo blocco, o di un `Try...Catch...Finally` blocco con una chiamata a usare il <xref:System.IO.Ports.SerialPort.Close%2A> (metodo).  
  
 Il metodo <xref:System.IO.Ports.SerialPort.WriteLine%2A> invia i dati alla porta seriale.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Per altre informazioni, vedere [procedura: inviare stringhe a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ports ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ports();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.Devices.Ports" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenSerialPort">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea e apre un oggetto <see cref="T:System.IO.Ports.SerialPort" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort portName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName">
          <see langword="String" />. Obbligatorio. Nome della porta da aprire.</param>
        <summary>Crea e apre un oggetto <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <returns>Oggetto <see cref="T:System.IO.Ports.SerialPort" /> aperto, configurato con gli argomenti forniti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Ports.OpenSerialPort` metodo crea e apre un <xref:System.IO.Ports.SerialPort> oggetto. Gli argomenti per il `OpenSerialPort` metodo determinare le impostazioni del <xref:System.IO.Ports.SerialPort> oggetto.  
  
 Il codice deve chiudere il <xref:System.IO.Ports.SerialPort> al termine dell'oggetto utilizzando l'oggetto. È possibile usare la <xref:System.IO.Ports.SerialPort.Close%2A> metodo per chiudere in modo esplicito l'oggetto o il `Using` istruzione per chiuderla in modo implicito. Vedere l'esempio in questo argomento per altre informazioni.  
  
 La tabella seguente elenca alcuni esempi di attività che implicano il `My.Computer.Ports.OpenSerialPort` (metodo).  
  
|A|Vedere|  
|-|-|  
|Comporre numeri con modem collegati a una porta seriale|[Procedura: Comporre numeri con modem collegati a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Inviare una stringa alla porta seriale|[Procedura: Inviare stringhe a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Ricevere stringhe da una porta seriale|[Procedura: Ricevere stringhe da porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio viene descritto come inviare le stringhe per il computer `COM1` porta seriale.  
  
 Il blocco `Using` consente all'applicazione di chiudere la porta seriale anche se viene generata un'eccezione. Tutto il codice relativo alla porta seriale deve essere visualizzato all'interno di questo blocco, o di un `Try...Catch...Finally` blocco con una chiamata a usare il <xref:System.IO.Ports.SerialPort.Close%2A> (metodo).  
  
 Il metodo <xref:System.IO.Ports.SerialPort.WriteLine%2A> invia i dati alla porta seriale.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Per altre informazioni, vedere [procedura: inviare stringhe a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="portName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String, baudRate As Integer) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">
          <see langword="String" />. Obbligatorio. Nome della porta da aprire.</param>
        <param name="baudRate">
          <see langword="Integer" />. Velocità in baud della porta.</param>
        <summary>Crea e apre un oggetto <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <returns>Oggetto <see cref="T:System.IO.Ports.SerialPort" /> aperto, configurato con gli argomenti forniti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Ports.OpenSerialPort` metodo crea e apre un <xref:System.IO.Ports.SerialPort> oggetto. Gli argomenti per il `OpenSerialPort` metodo determinare le impostazioni del <xref:System.IO.Ports.SerialPort> oggetto.  
  
 Il codice deve chiudere il <xref:System.IO.Ports.SerialPort> al termine dell'oggetto utilizzando l'oggetto. È possibile usare la <xref:System.IO.Ports.SerialPort.Close%2A> metodo per chiudere in modo esplicito l'oggetto o il `Using` istruzione per chiuderla in modo implicito. Vedere l'esempio in questo argomento per altre informazioni.  
  
 La tabella seguente elenca alcuni esempi di attività che implicano il `My.Computer.Ports.OpenSerialPort` (metodo).  
  
|A|Vedere|  
|-|-|  
|Comporre numeri con modem collegati a una porta seriale|[Procedura: Comporre numeri con modem collegati a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Inviare una stringa alla porta seriale|[Procedura: Inviare stringhe a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Ricevere stringhe da una porta seriale|[Procedura: Ricevere stringhe da porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio viene descritto come inviare le stringhe per il computer `COM1` porta seriale.  
  
 Il blocco `Using` consente all'applicazione di chiudere la porta seriale anche se viene generata un'eccezione. Tutto il codice relativo alla porta seriale deve essere visualizzato all'interno di questo blocco, o di un `Try...Catch...Finally` blocco con una chiamata a usare il <xref:System.IO.Ports.SerialPort.Close%2A> (metodo).  
  
 Il metodo <xref:System.IO.Ports.SerialPort.WriteLine%2A> invia i dati alla porta seriale.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Per altre informazioni, vedere [procedura: inviare stringhe a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="portName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="baudRate" /> è minore o uguale a zero.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
      </Parameters>
      <Docs>
        <param name="portName">
          <see langword="String" />. Obbligatorio. Nome della porta da aprire.</param>
        <param name="baudRate">
          <see langword="Integer" />. Velocità in baud della porta.</param>
        <param name="parity">
          <see cref="T:System.IO.Ports.Parity" />. Parità della porta.</param>
        <summary>Crea e apre un oggetto <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <returns>Oggetto <see cref="T:System.IO.Ports.SerialPort" /> aperto, configurato con gli argomenti forniti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Ports.OpenSerialPort` metodo crea e apre un <xref:System.IO.Ports.SerialPort> oggetto. Gli argomenti per il `OpenSerialPort` metodo determinare le impostazioni del <xref:System.IO.Ports.SerialPort> oggetto.  
  
 Il codice deve chiudere il <xref:System.IO.Ports.SerialPort> al termine dell'oggetto utilizzando l'oggetto. È possibile usare la <xref:System.IO.Ports.SerialPort.Close%2A> metodo per chiudere in modo esplicito l'oggetto o il `Using` istruzione per chiuderla in modo implicito. Vedere l'esempio in questo argomento per altre informazioni.  
  
 La tabella seguente elenca alcuni esempi di attività che implicano il `My.Computer.Ports.OpenSerialPort` (metodo).  
  
|A|Vedere|  
|-|-|  
|Comporre numeri con modem collegati a una porta seriale|[Procedura: Comporre numeri con modem collegati a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Inviare una stringa alla porta seriale|[Procedura: Inviare stringhe a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Ricevere stringhe da una porta seriale|[Procedura: Ricevere stringhe da porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio viene descritto come inviare le stringhe per il computer `COM1` porta seriale.  
  
 Il blocco `Using` consente all'applicazione di chiudere la porta seriale anche se viene generata un'eccezione. Tutto il codice relativo alla porta seriale deve essere visualizzato all'interno di questo blocco, o di un `Try...Catch...Finally` blocco con una chiamata a usare il <xref:System.IO.Ports.SerialPort.Close%2A> (metodo).  
  
 Il metodo <xref:System.IO.Ports.SerialPort.WriteLine%2A> invia i dati alla porta seriale.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Per altre informazioni, vedere [procedura: inviare stringhe a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="portName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="baudRate" /> è minore o uguale a zero.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="parity" /> non è uno dei valori di enumerazione <see cref="T:System.IO.Ports.Parity" />.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">
          <see langword="String" />. Obbligatorio. Nome della porta da aprire.</param>
        <param name="baudRate">
          <see langword="Integer" />. Velocità in baud della porta.</param>
        <param name="parity">
          <see cref="T:System.IO.Ports.Parity" />. Parità della porta.</param>
        <param name="dataBits">
          <see langword="Integer" />. Impostazione relativa ai bit di dati della porta.</param>
        <summary>Crea e apre un oggetto <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <returns>Oggetto <see cref="T:System.IO.Ports.SerialPort" /> aperto, configurato con gli argomenti forniti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Ports.OpenSerialPort` metodo crea e apre un <xref:System.IO.Ports.SerialPort> oggetto. Gli argomenti per il `OpenSerialPort` metodo determinare le impostazioni del <xref:System.IO.Ports.SerialPort> oggetto.  
  
 Il codice deve chiudere il <xref:System.IO.Ports.SerialPort> al termine dell'oggetto utilizzando l'oggetto. È possibile usare la <xref:System.IO.Ports.SerialPort.Close%2A> metodo per chiudere in modo esplicito l'oggetto o il `Using` istruzione per chiuderla in modo implicito. Vedere l'esempio in questo argomento per altre informazioni.  
  
 La tabella seguente elenca alcuni esempi di attività che implicano il `My.Computer.Ports.OpenSerialPort` (metodo).  
  
|A|Vedere|  
|-|-|  
|Comporre numeri con modem collegati a una porta seriale|[Procedura: Comporre numeri con modem collegati a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Inviare una stringa alla porta seriale|[Procedura: Inviare stringhe a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Ricevere stringhe da una porta seriale|[Procedura: Ricevere stringhe da porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio viene descritto come inviare le stringhe per il computer `COM1` porta seriale.  
  
 Il blocco `Using` consente all'applicazione di chiudere la porta seriale anche se viene generata un'eccezione. Tutto il codice relativo alla porta seriale deve essere visualizzato all'interno di questo blocco, o di un `Try...Catch...Finally` blocco con una chiamata a usare il <xref:System.IO.Ports.SerialPort.Close%2A> (metodo).  
  
 Il metodo <xref:System.IO.Ports.SerialPort.WriteLine%2A> invia i dati alla porta seriale.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Per altre informazioni, vedere [procedura: inviare stringhe a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="portName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataBits" /> è minore o uguale a zero.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="parity" /> non è uno dei valori di enumerazione <see cref="T:System.IO.Ports.Parity" />.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits, valuetype System.IO.Ports.StopBits stopBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits, System::IO::Ports::StopBits stopBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int * System.IO.Ports.StopBits -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits, stopBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" />
      </Parameters>
      <Docs>
        <param name="portName">
          <see langword="String" />. Obbligatorio. Nome della porta da aprire.</param>
        <param name="baudRate">
          <see langword="Integer" />. Velocità in baud della porta.</param>
        <param name="parity">
          <see cref="T:System.IO.Ports.Parity" />. Parità della porta.</param>
        <param name="dataBits">
          <see langword="Integer" />. Impostazione relativa ai bit di dati della porta.</param>
        <param name="stopBits">
          <see cref="T:System.IO.Ports.StopBits" />. Impostazione relativa ai bit di stop della porta.</param>
        <summary>Crea e apre un oggetto <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <returns>Oggetto <see cref="T:System.IO.Ports.SerialPort" /> aperto, configurato con gli argomenti forniti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Ports.OpenSerialPort` metodo crea e apre un <xref:System.IO.Ports.SerialPort> oggetto. Gli argomenti per il `OpenSerialPort` metodo determinare le impostazioni del <xref:System.IO.Ports.SerialPort> oggetto.  
  
 Il codice deve chiudere il <xref:System.IO.Ports.SerialPort> al termine dell'oggetto utilizzando l'oggetto. È possibile usare la <xref:System.IO.Ports.SerialPort.Close%2A> metodo per chiudere in modo esplicito l'oggetto o il `Using` istruzione per chiuderla in modo implicito. Vedere l'esempio in questo argomento per altre informazioni.  
  
 La tabella seguente elenca alcuni esempi di attività che implicano il `My.Computer.Ports.OpenSerialPort` (metodo).  
  
|A|Vedere|  
|-|-|  
|Comporre numeri con modem collegati a una porta seriale|[Procedura: Comporre numeri con modem collegati a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Inviare una stringa alla porta seriale|[Procedura: Inviare stringhe a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Ricevere stringhe da una porta seriale|[Procedura: Ricevere stringhe da porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio viene descritto come inviare le stringhe per il computer `COM1` porta seriale.  
  
 Il blocco `Using` consente all'applicazione di chiudere la porta seriale anche se viene generata un'eccezione. Tutto il codice relativo alla porta seriale deve essere visualizzato all'interno di questo blocco, o di un `Try...Catch...Finally` blocco con una chiamata a usare il <xref:System.IO.Ports.SerialPort.Close%2A> (metodo).  
  
 Il metodo <xref:System.IO.Ports.SerialPort.WriteLine%2A> invia i dati alla porta seriale.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Per altre informazioni, vedere [procedura: inviare stringhe a porte seriali](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="portName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataBits" /> è minore o uguale a zero.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="stopBits" /> non è uno dei valori di enumerazione <see cref="T:System.IO.Ports.StopBits" />.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
      </Docs>
    </Member>
    <Member MemberName="SerialPortNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; SerialPortNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; SerialPortNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialPortNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ SerialPortNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialPortNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme dei nomi delle porte seriali sul computer.</summary>
        <value>Un insieme dei nomi delle porte seriali sul computer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.Computer.Ports.SerialPortNames` proprietà ottiene un insieme di nomi delle porte seriali del computer.  
  
> [!NOTE]
>  I nomi delle porte restituiti da `My.Computer.Ports.SerialPortNames` potrebbero non essere corretti se l'applicazione viene eseguita con Windows 98. Per evitare errori dell'applicazione, usare la funzione di gestione delle eccezioni, ad esempio l'istruzione `Try...Catch...Finally` o `Using`, quando per aprire le porte si usano i nomi delle porte stesse.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Ports.SerialPortNames` proprietà.  
  
|A|Vedere|  
|-|-|  
|Mostrare le porte seriali disponibili|[Procedura: Mostrare le porte seriali disponibili](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio esegue il ciclo attraverso tutte le stringhe restituite dalla proprietà `My.Computer.Ports.SerialPortNames`. Queste stringhe rappresentano i nomi delle porte seriali disponibili nel computer.  
  
 In genere, gli utenti selezionano la porta seriale che l'applicazione deve usare dall'elenco delle porte disponibili. In questo esempio i nomi delle porte seriali sono archiviati un controllo <xref:System.Windows.Forms.ListBox>. Per altre informazioni, vedere [Controllo ListBox](~/docs/framework/winforms/controls/listbox-control-windows-forms.md).  
  
 [!code-vb[VbVbalrMyComputer#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#45)]  
  
 L'esempio presenta i requisiti seguenti:  
  
-   Un riferimento allo spazio dei nomi <xref:System?displayProperty=nameWithType>.  
  
-   Presenza all'interno del modulo di un controllo <xref:System.Windows.Forms.ListBox> denominato `ListBox1`.  
  
 Per altre informazioni, vedere [Procedura: Mostrare le porte seriali disponibili](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <altmember cref="Overload:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
  </Members>
</Type>