<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b8f23cf205838602c00ee131a0d1fcec41f6995" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39981276" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce una proprietà, un evento e i metodi per l'interazione con la rete a cui è connesso il computer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente elenca alcuni esempi di attività che implicano il `My.Computer.Network` oggetto.  
  
|A|Vedere|  
|-|-|  
|Caricare un file|[Procedura: Caricare un file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|Scaricare un file|[Procedura: Scaricare file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|Controllare lo stato della connessione|[Procedura: Controllare lo stato di connessione](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 Questo esempio il file viene caricato `Order.txt` a http://www.cohowinery.com/uploads.  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.Devices.Network" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Consente di scaricare il file remoto specificato e di salvarlo nel percorso specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Percorso del file da scaricare, inclusi il nome di file e l'indirizzo host.</param>
        <param name="destinationFileName">Nome e percorso del file scaricato.</param>
        <summary>Consente di scaricare il file remoto specificato e di salvarlo nel percorso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il file di destinazione esiste già, il `DownloadFile` metodo non sovrascriverà il file esistente. È possibile usare uno degli altri overload del <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> metodo per indicare a sovrascrivere file esistenti, specificare le credenziali utente oppure specificare un valore di timeout specificato.  
  
 `DownloadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il `DownloadFile` metodo non inviare intestazioni HTTP. Alcuni server vengano restituiti 500 (errore Server interno) se manca l'intestazione agente utente facoltativo. Per l'invio di intestazioni facoltative, è necessario costruire una richiesta tramite il <xref:System.Net.WebClient> classe.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.DownloadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Scaricare un file|[Procedura: Scaricare file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`, specificando un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> termina con una barra finale.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il timeout predefinito (100 secondi).</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Percorso del file da scaricare, inclusi il nome di file e l'indirizzo host.</param>
        <param name="destinationFileName">Nome e percorso del file scaricato.</param>
        <summary>Consente di scaricare il file remoto specificato e di salvarlo nel percorso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il file di destinazione esiste già, il `DownloadFile` metodo non sovrascriverà il file esistente. È possibile usare uno degli altri overload del <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> metodo per indicare a sovrascrivere file esistenti, specificare le credenziali utente oppure specificare un valore di timeout specificato. `DownloadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il `DownloadFile` metodo non inviare intestazioni HTTP. Alcuni server vengano restituiti 500 (errore Server interno) se manca l'intestazione agente utente facoltativo. Per l'invio di intestazioni facoltative, è necessario costruire una richiesta tramite il <xref:System.Net.WebClient> classe.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.DownloadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Scaricare un file|[Procedura: Scaricare file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`, specificando un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> termina con una barra finale.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il timeout predefinito (100 secondi).</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Percorso del file da scaricare, inclusi il nome di file e l'indirizzo host.</param>
        <param name="destinationFileName">Nome e percorso del file scaricato.</param>
        <param name="userName">Nome utente da autenticare. Il valore predefinito è una stringa vuota. "".</param>
        <param name="password">Password da autenticare. Il valore predefinito è una stringa vuota. "".</param>
        <summary>Consente di scaricare il file remoto specificato e di salvarlo nel percorso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il file di destinazione esiste già, il `DownloadFile` metodo non sovrascriverà il file esistente. È possibile usare uno degli altri overload del <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> metodo per indicare a sovrascrivere i file esistenti o specificare un valore di timeout specificato.  
  
 `DownloadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il `DownloadFile` metodo non inviare intestazioni HTTP. Alcuni server vengano restituiti 500 (errore Server interno) se manca l'intestazione agente utente facoltativo. Per l'invio di intestazioni facoltative, è necessario costruire una richiesta tramite il <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.DownloadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Scaricare un file|[Procedura: Scaricare file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`, specificando un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> termina con una barra finale.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il timeout predefinito (100 secondi).</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Percorso del file da scaricare, inclusi il nome di file e l'indirizzo host.</param>
        <param name="destinationFileName">Nome e percorso del file scaricato.</param>
        <param name="userName">Nome utente da autenticare. Il valore predefinito è una stringa vuota. "".</param>
        <param name="password">Password da autenticare. Il valore predefinito è una stringa vuota. "".</param>
        <summary>Consente di scaricare il file remoto specificato e di salvarlo nel percorso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il file di destinazione esiste già, il `DownloadFile` metodo non sovrascriverà il file esistente. È possibile usare uno degli altri overload del <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> metodo per indicare a sovrascrivere i file esistenti o specificare un valore di timeout specificato.  
  
 `DownloadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il `DownloadFile` metodo non inviare intestazioni HTTP. Alcuni server vengano restituiti 500 (errore Server interno) se manca l'intestazione agente utente facoltativo. Per l'invio di intestazioni facoltative, è necessario costruire una richiesta tramite il <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.DownloadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Scaricare un file|[Procedura: Scaricare file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`, specificando un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> termina con una barra finale.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il timeout predefinito (100 secondi).</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">
          <see langword="String" /> o <see cref="T:System.Uri" />. Percorso del file da scaricare, inclusi il nome di file e l'indirizzo host.</param>
        <param name="destinationFileName">
          <see langword="String" />. Nome e percorso del file scaricato.</param>
        <param name="networkCredentials">
          <see cref="T:System.Net.ICredentials" />. Credenziali da fornire.</param>
        <param name="showUI">
          <see langword="True" /> per visualizzare lo stato dell'operazione; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <param name="connectionTimeout">Intervallo di timeout, in millisecondi. Il valore predefinito è 100 secondi.</param>
        <param name="overwrite">
          <see langword="True" /> per sovrascrivere i file esistenti; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <summary>Consente di scaricare il file remoto specificato e di salvarlo nel percorso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` è impostata su `True`, viene visualizzata una finestra di dialogo che mostra lo stato di avanzamento dell'operazione, la finestra di dialogo contiene una **Annulla** pulsante che può essere utilizzato per annullare l'operazione. La finestra di dialogo non modale e non blocca l'input dell'utente ad altre finestre del programma.  
  
 Se il server non risponde entro specificato `connectionTimeout`, l'operazione sia annullata e viene generata un'eccezione.  
  
 `DownloadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il `DownloadFile` metodo non inviare intestazioni HTTP. Alcuni server vengano restituiti 500 (errore Server interno) se manca l'intestazione agente utente facoltativo. Per l'invio di intestazioni facoltative, è necessario costruire una richiesta tramite il <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.DownloadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Scaricare un file|[Procedura: Scaricare file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`, specificando un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> termina con una barra finale.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> è impostato su <see langword="False" /> e il file di destinazione esiste già.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il <paramref name="connectionTimeout" /> specificato.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Percorso del file da scaricare, inclusi il nome di file e l'indirizzo host.</param>
        <param name="destinationFileName">Nome e percorso del file scaricato.</param>
        <param name="userName">Nome utente da autenticare. Il valore predefinito è una stringa vuota. "".</param>
        <param name="password">Password da autenticare. Il valore predefinito è una stringa vuota. "".</param>
        <param name="showUI">
          <see langword="True" /> per visualizzare lo stato dell'operazione; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <param name="connectionTimeout">
          <see cref="T:System.Int32" />. Intervallo di timeout, in millisecondi. Il valore predefinito è 100 secondi.</param>
        <param name="overwrite">
          <see langword="True" /> per sovrascrivere i file esistenti; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <summary>Consente di scaricare il file remoto specificato e di salvarlo nel percorso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` è impostata su `True`, viene visualizzata una finestra di dialogo che mostra lo stato di avanzamento dell'operazione, la finestra di dialogo contiene una **Annulla** pulsante che può essere utilizzato per annullare l'operazione. La finestra di dialogo non modale e non blocca l'input dell'utente ad altre finestre del programma.  
  
 Se il server non risponde entro specificato `connectionTimeout`, l'operazione sia annullata e viene generata un'eccezione.  
  
 `DownloadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il `DownloadFile` metodo non inviare intestazioni HTTP. Alcuni server vengano restituiti 500 (errore Server interno) se manca l'intestazione agente utente facoltativo. Per l'invio di intestazioni facoltative, è necessario costruire una richiesta tramite il <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.DownloadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Scaricare un file|[Procedura: Scaricare file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`, specificando un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> termina con una barra finale.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> è impostato su <see langword="False" /> e il file di destinazione esiste già.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il <paramref name="connectionTimeout" /> specificato.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Percorso del file da scaricare, inclusi il nome di file e l'indirizzo host.</param>
        <param name="destinationFileName">Nome e percorso del file scaricato.</param>
        <param name="networkCredentials">Credenziali da fornire.</param>
        <param name="showUI">
          <see langword="True" /> per visualizzare lo stato dell'operazione; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <param name="connectionTimeout">Intervallo di timeout, in millisecondi. Il valore predefinito è 100 secondi.</param>
        <param name="overwrite">
          <see langword="True" /> per sovrascrivere i file esistenti; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <param name="onUserCancel">Specifica il comportamento quando l'utente fa clic su **Annulla** o **No** nella finestra di dialogo visualizzata come conseguenza dell'impostazione di <c>showUI</c> su <see langword="True" />. Il valore predefinito è <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Consente di scaricare il file remoto specificato e di salvarlo nel percorso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` è impostata su `True`, viene visualizzata una finestra di dialogo che mostra lo stato di avanzamento dell'operazione, la finestra di dialogo contiene una **Annulla** pulsante che può essere utilizzato per annullare l'operazione. La finestra di dialogo non modale e non blocca l'input dell'utente ad altre finestre del programma.  
  
 Se il server non risponde entro specificato `connectionTimeout`, l'operazione sia annullata e viene generata un'eccezione.  
  
 `DownloadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il `DownloadFile` metodo non inviare intestazioni HTTP. Alcuni server vengano restituiti 500 (errore Server interno) se manca l'intestazione agente utente facoltativo. Per l'invio di intestazioni facoltative, è necessario costruire una richiesta tramite il <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.DownloadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Scaricare un file|[Procedura: Scaricare file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`, specificando un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> termina con una barra finale.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> è impostato su <see langword="False" /> e il file di destinazione esiste già.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il <paramref name="connectionTimeout" /> specificato.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Percorso del file da scaricare, inclusi il nome di file e l'indirizzo host.</param>
        <param name="destinationFileName">Nome e percorso del file scaricato.</param>
        <param name="userName">Nome utente da autenticare. Il valore predefinito è una stringa vuota. "".</param>
        <param name="password">Password da autenticare. Il valore predefinito è una stringa vuota. "".</param>
        <param name="showUI">
          <see langword="True" /> per visualizzare lo stato dell'operazione; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <param name="connectionTimeout">Intervallo di timeout, in millisecondi. Il valore predefinito è 100 secondi.</param>
        <param name="overwrite">
          <see langword="True" /> per sovrascrivere i file esistenti; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <summary>Consente di scaricare il file remoto specificato e di salvarlo nel percorso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` è impostata su `True`, viene visualizzata una finestra di dialogo che mostra lo stato di avanzamento dell'operazione, la finestra di dialogo contiene una **Annulla** pulsante che può essere utilizzato per annullare l'operazione. La finestra di dialogo non modale e non blocca l'input dell'utente ad altre finestre del programma.  
  
 Se il server non risponde entro specificato `connectionTimeout`, l'operazione sia annullata e viene generata un'eccezione.  
  
 `DownloadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il `DownloadFile` metodo non inviare intestazioni HTTP. Alcuni server vengano restituiti 500 (errore Server interno) se manca l'intestazione agente utente facoltativo. Per l'invio di intestazioni facoltative, è necessario costruire una richiesta tramite il <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.DownloadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Scaricare un file|[Procedura: Scaricare file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`, specificando un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> termina con una barra finale.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> è impostato su <see langword="False" /> e il file di destinazione esiste già.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il <paramref name="connectionTimeout" /> specificato.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Percorso del file da scaricare, inclusi il nome di file e l'indirizzo host.</param>
        <param name="destinationFileName">Nome e percorso del file scaricato.</param>
        <param name="userName">Nome utente da autenticare. Il valore predefinito è una stringa vuota. "".</param>
        <param name="password">Password da autenticare. Il valore predefinito è una stringa vuota. "".</param>
        <param name="showUI">
          <see langword="True" /> per visualizzare lo stato dell'operazione; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <param name="connectionTimeout">Intervallo di timeout, in millisecondi. Il valore predefinito è 100 secondi.</param>
        <param name="overwrite">
          <see langword="True" /> per sovrascrivere i file esistenti; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <param name="onUserCancel">Specifica il comportamento quando l'utente fa clic su **Annulla** o **No** nella finestra di dialogo visualizzata come conseguenza dell'impostazione di <c>showUI</c> su <see langword="True" />. Il valore predefinito è <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Consente di scaricare il file remoto specificato e di salvarlo nel percorso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` è impostata su `True`, viene visualizzata una finestra di dialogo che mostra lo stato di avanzamento dell'operazione, la finestra di dialogo contiene una **Annulla** pulsante che può essere utilizzato per annullare l'operazione. La finestra di dialogo non modale e non blocca l'input dell'utente ad altre finestre del programma.  
  
 Se il server non risponde entro specificato `connectionTimeout`, l'operazione sia annullata e viene generata un'eccezione.  
  
 `DownloadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il `DownloadFile` metodo non inviare intestazioni HTTP. Alcuni server vengano restituiti 500 (errore Server interno) se manca l'intestazione agente utente facoltativo. Per l'invio di intestazioni facoltative, è necessario costruire una richiesta tramite il <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.DownloadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Scaricare un file|[Procedura: Scaricare file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`, specificando un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> termina con una barra finale.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> è impostato su <see langword="False" /> e il file di destinazione esiste già.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il <paramref name="connectionTimeout" /> specificato.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Percorso del file da scaricare, inclusi il nome di file e l'indirizzo host.</param>
        <param name="destinationFileName">Nome e percorso del file scaricato.</param>
        <param name="userName">Nome utente da autenticare. Il valore predefinito è una stringa vuota. "".</param>
        <param name="password">Password da autenticare. Il valore predefinito è una stringa vuota. "".</param>
        <param name="showUI">
          <see langword="True" /> per visualizzare lo stato dell'operazione; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <param name="connectionTimeout">Intervallo di timeout, in millisecondi. Il valore predefinito è 100 secondi.</param>
        <param name="overwrite">
          <see langword="True" /> per sovrascrivere i file esistenti; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <param name="onUserCancel">Specifica il comportamento quando l'utente fa clic su **Annulla** o **No** nella finestra di dialogo visualizzata come conseguenza dell'impostazione di <c>showUI</c> su <see langword="True" />. Il valore predefinito è <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Consente di scaricare il file remoto specificato e di salvarlo nel percorso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` è impostata su `True`, viene visualizzata una finestra di dialogo che mostra lo stato di avanzamento dell'operazione, la finestra di dialogo contiene una **Annulla** pulsante che può essere utilizzato per annullare l'operazione. La finestra di dialogo non modale e non blocca l'input dell'utente ad altre finestre del programma.  
  
 Se il server non risponde entro specificato `connectionTimeout`, l'operazione sia annullata e viene generata un'eccezione.  
  
 `DownloadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il `DownloadFile` metodo non inviare intestazioni HTTP. Alcuni server vengano restituiti 500 (errore Server interno) se manca l'intestazione agente utente facoltativo. Per l'invio di intestazioni facoltative, è necessario costruire una richiesta tramite il <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.DownloadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Scaricare un file|[Procedura: Scaricare file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Questo esempio Scarica il file `WineList.txt` dal `http://www.cohowinery.com/downloads` e lo salva in `C:\Documents and Settings\All Users\Documents`, specificando un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> termina con una barra finale.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> è impostato su <see langword="False" /> e il file di destinazione esiste già.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il <paramref name="connectionTimeout" /> specificato.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica se un computer è connesso a una rete.</summary>
        <value>
          <see langword="True" /> se il computer è connesso a una rete; in caso contrario, <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable` Restituisce sempre `False` quando viene chiamato da un `Click Once` dell'applicazione se l'utente dispone o meno <xref:System.Net.NetworkInformation.NetworkInformationPermission>.  
  
 La tabella seguente elenca alcuni esempi di attività che implicano il `My.Computer.Network.IsAvailable` proprietà.  
  
|A|Vedere|  
|-|-|  
|Verificare se un computer è connesso a una rete|[Procedura: Controllare lo stato di connessione](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 In questo esempio controlla lo stato della proprietà e lo segnala.  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando cambia la disponibilità della rete.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'applicazione genera il `NetworkAvailabilityChanged` evento ogni volta che la disponibilità della rete cambia. È possibile usare la <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> proprietà del `e` parametro per ottenere il nuovo stato della connessione di rete. Per ottenere lo stato corrente della connessione di rete, usare il <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> proprietà.  
  
 In un'applicazione Windows Forms, questo evento viene generato sul thread principale dell'applicazione con gli altri eventi di interfaccia utente. In questo modo il gestore eventi accedere direttamente all'interfaccia utente dell'applicazione. Tuttavia, se l'applicazione è occupato a gestire un altro evento di interfaccia utente quando viene generato questo evento, questo evento non può essere elaborato fino a quando l'altro gestore eventi viene completato o chiama il <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> (metodo).  
  
 Non è possibile usare il `Handles` istruzione per gestire i `NetworkAvailabilityChanged` evento; è necessario usare il `AddHandler` istruzione.  
  
 Nelle applicazioni Windows Form, il `MyApplication` oggetto espone una `NetworkAvailabilityChanged` evento che fornisce la stessa funzionalità di questo evento, ma è possibile gestirlo con le `Handles` istruzione.  
  
> [!NOTE]
>  Molti gli hub di rete forniscono una connessione di rete, anche se l'hub è disconnesso da una rete più estesa. Di conseguenza, per le connessioni cablate, questo evento indica una modifica nella connessione tra il computer e un hub.  
  
> [!NOTE]
>  Il `NetworkAvailabilityChanged` evento non viene generato dalle applicazioni eseguite in Windows 95 e Windows 98 o da applicazioni che vengono eseguite in Windows 2000 per un utente non amministratore. Se l'applicazione può essere eseguita su tali piattaforme, usare il <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> proprietà.  
  
   
  
## Examples  
 Questo esempio viene usato il `My.Computer.Network.NetworkAvailabilityChanged` evento da aggiornare l'interfaccia utente di un form o controllo.  
  
 Questo codice dovrebbe per essere in un form o controllo dotato di un <xref:System.Windows.Forms.Label> denominato `Label1`.  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Esegue il ping del server specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">URL, nome del computer o numero IP del server di cui effettuare il ping.</param>
        <summary>Esegue il ping del server specificato.</summary>
        <returns>
          <see langword="True" /> se l'operazione è stata eseguita correttamente; in caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Ping` metodo non è un metodo alternativo per determinare la disponibilità di un computer remoto: la porta di ping sul computer di destinazione può essere disattivata o la richiesta di ping potrebbe essere bloccata da un firewall o router.  
  
 L'indirizzo passato al `Ping` metodo deve essere risolvibile con DNS e non può essere preceduto da "http://".  
  
   
  
## Examples  
 Questo esempio viene restituito se il server può essere inviato un ping determinando se il `Ping` restituzione del metodo `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Sostituire `"198.01.01.01"` con il nome di computer, l'URL o indirizzo IP del server per eseguire il ping.  
  
 Questo esempio viene restituito se il server può essere inviato un ping determinando se il `Ping` metodo restituito `True` e specifica un intervallo di timeout di 1000 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Sostituire `"www.cohowinery.com"` con il nome di computer, l'URL o indirizzo IP del server per eseguire il ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Connessione di rete non disponibile.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL non valido.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descrive un set di autorizzazioni di sicurezza applicato al codice. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controlla i diritti per creare o accettare connessioni su un indirizzo di trasporto. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controlla l'accesso a un componente del contatore delle prestazioni di Windows NT. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">I controlli accedono alle informazioni di rete e alle statistiche sul traffico per il computer locale. Enumerazione associata: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI del server di cui effettuare il ping.</param>
        <summary>Esegue il ping del server specificato.</summary>
        <returns>
          <see langword="True" /> se l'operazione è stata eseguita correttamente; in caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Ping` metodo non è un metodo alternativo per determinare la disponibilità di un computer remoto: la porta di ping sul computer di destinazione può essere disattivata o la richiesta di ping potrebbe essere bloccata da un firewall o router.  
  
 L'indirizzo passato al `Ping` metodo deve essere risolvibile con DNS e non può essere preceduto da "http://".  
  
   
  
## Examples  
 Questo esempio viene restituito se il server può essere inviato un ping determinando se il `Ping` restituzione del metodo `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Sostituire `"198.01.01.01"` con il nome di computer, l'URL o indirizzo IP del server per eseguire il ping.  
  
 Questo esempio viene restituito se il server può essere inviato un ping determinando se il `Ping` metodo restituito `True` e specifica un intervallo di timeout di 1000 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Sostituire `"www.cohowinery.com"` con il nome di computer, l'URL o indirizzo IP del server per eseguire il ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Connessione di rete non disponibile.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL non valido.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descrive un set di autorizzazioni di sicurezza applicato al codice. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controlla i diritti per creare o accettare connessioni su un indirizzo di trasporto. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controlla l'accesso a un componente del contatore delle prestazioni di Windows NT. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">I controlli accedono alle informazioni di rete e alle statistiche sul traffico per il computer locale. Enumerazione associata: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">URL, nome del computer o numero IP del server di cui effettuare il ping.</param>
        <param name="timeout">Soglia di tempo in millisecondi per contattare la destinazione. Il valore predefinito è 500.</param>
        <summary>Esegue il ping del server specificato.</summary>
        <returns>
          <see langword="True" /> se l'operazione è stata eseguita correttamente; in caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Ping` metodo non è un metodo alternativo per determinare la disponibilità di un computer remoto: la porta di ping sul computer di destinazione può essere disattivata o la richiesta di ping potrebbe essere bloccata da un firewall o router.  
  
 L'indirizzo passato al `Ping` metodo deve essere risolvibile con DNS e non può essere preceduto da "http://".  
  
   
  
## Examples  
 Questo esempio viene restituito se il server può essere inviato un ping determinando se il `Ping` restituzione del metodo `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Sostituire `"198.01.01.01"` con il nome di computer, l'URL o indirizzo IP del server per eseguire il ping.  
  
 Questo esempio viene restituito se il server può essere inviato un ping determinando se il `Ping` metodo restituito `True` e specifica un intervallo di timeout di 1000 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Sostituire `"www.cohowinery.com"` con il nome di computer, l'URL o indirizzo IP del server per eseguire il ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Connessione di rete non disponibile.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL non valido.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descrive un set di autorizzazioni di sicurezza applicato al codice. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controlla i diritti per creare o accettare connessioni su un indirizzo di trasporto. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controlla l'accesso a un componente del contatore delle prestazioni di Windows NT. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">I controlli accedono alle informazioni di rete e alle statistiche sul traffico per il computer locale. Enumerazione associata: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">URI del server di cui effettuare il ping.</param>
        <param name="timeout">Soglia di tempo in millisecondi per contattare la destinazione. Il valore predefinito è 500.</param>
        <summary>Esegue il ping del server specificato.</summary>
        <returns>
          <see langword="True" /> se l'operazione è stata eseguita correttamente; in caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Ping` metodo non è un metodo alternativo per determinare la disponibilità di un computer remoto: la porta di ping sul computer di destinazione può essere disattivata o la richiesta di ping potrebbe essere bloccata da un firewall o router.  
  
 L'indirizzo passato al `Ping` metodo deve essere risolvibile con DNS e non può essere preceduto da "http://".  
  
   
  
## Examples  
 Questo esempio viene restituito se il server può essere inviato un ping determinando se il `Ping` restituzione del metodo `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Sostituire `"198.01.01.01"` con il nome di computer, l'URL o indirizzo IP del server per eseguire il ping.  
  
 Questo esempio viene restituito se il server può essere inviato un ping determinando se il `Ping` metodo restituito `True` e specifica un intervallo di timeout di 1000 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Sostituire `"www.cohowinery.com"` con il nome di computer, l'URL o indirizzo IP del server per eseguire il ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Connessione di rete non disponibile.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL non valido.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descrive un set di autorizzazioni di sicurezza applicato al codice. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controlla i diritti per creare o accettare connessioni su un indirizzo di trasporto. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controlla l'accesso a un componente del contatore delle prestazioni di Windows NT. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">I controlli accedono alle informazioni di rete e alle statistiche sul traffico per il computer locale. Enumerazione associata: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invia il file specificato all'indirizzo host specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Percorso e nome del file da caricare.</param>
        <param name="address">URL, indirizzo IP o URI del server di destinazione.</param>
        <summary>Invia il file specificato all'indirizzo host specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare uno degli altri overload del <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> metodo per fornire le credenziali dell'utente o per specificare un valore di timeout specificato.  
  
 `My.Computer.Network.UploadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.UploadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Caricare un file|[Procedura: Caricare un file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Questo esempio il file viene caricato `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Nell'esempio riportato di seguito il file `Order.txt` viene caricato in `http://www.cohowinery.com/uploads` senza specificare un nome utente o una password, viene visualizzato lo stato di avanzamento del processo di caricamento ed è previsto un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il percorso del file di origine non è valido.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> non include un nome file.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il timeout predefinito (100 secondi).</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Percorso e nome del file da caricare.</param>
        <param name="address">URL, indirizzo IP o URI del server di destinazione.</param>
        <summary>Invia il file specificato all'indirizzo host specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare uno degli altri overload del <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> metodo per fornire le credenziali dell'utente o per specificare un valore di timeout specificato.  
  
 `My.Computer.Network.UploadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.UploadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Caricare un file|[Procedura: Caricare un file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Questo esempio il file viene caricato `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Nell'esempio riportato di seguito il file `Order.txt` viene caricato in `http://www.cohowinery.com/uploads` senza specificare un nome utente o una password, viene visualizzato lo stato di avanzamento del processo di caricamento ed è previsto un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il percorso del file di origine non è valido.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> non include un nome file.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il timeout predefinito (100 secondi).</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Percorso e nome del file da caricare.</param>
        <param name="address">URL, indirizzo IP o URI del server di destinazione.</param>
        <param name="userName">Nome utente da autenticare. Il valore predefinito è una stringa vuota: <c>""</c>.</param>
        <param name="password">Password da autenticare. Il valore predefinito è una stringa vuota: <c>""</c>.</param>
        <summary>Invia il file specificato all'indirizzo host specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare uno degli altri overload del <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> metodo per specificare un valore di timeout specificato.  
  
 `My.Computer.Network.UploadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.UploadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Caricare un file|[Procedura: Caricare un file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Questo esempio il file viene caricato `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Nell'esempio riportato di seguito il file `Order.txt` viene caricato in `http://www.cohowinery.com/uploads` senza specificare un nome utente o una password, viene visualizzato lo stato di avanzamento del processo di caricamento ed è previsto un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> è minore o uguale a zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> non include un nome file.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il timeout predefinito (100 secondi).</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Percorso e nome del file da caricare.</param>
        <param name="address">URL, indirizzo IP o URI del server di destinazione.</param>
        <param name="userName">Nome utente da autenticare. Il valore predefinito è una stringa vuota: <c>""</c>.</param>
        <param name="password">Password da autenticare. Il valore predefinito è una stringa vuota: <c>""</c>.</param>
        <summary>Invia il file specificato all'indirizzo host specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare uno degli altri overload del <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> metodo per specificare un valore di timeout specificato.  
  
 `My.Computer.Network.UploadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.UploadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Caricare un file|[Procedura: Caricare un file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Questo esempio il file viene caricato `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Nell'esempio riportato di seguito il file `Order.txt` viene caricato in `http://www.cohowinery.com/uploads` senza specificare un nome utente o una password, viene visualizzato lo stato di avanzamento del processo di caricamento ed è previsto un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> è minore o uguale a zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> non include un nome file.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il timeout predefinito (100 secondi).</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Percorso e nome del file da caricare.</param>
        <param name="address">URL, indirizzo IP o URI del server di destinazione.</param>
        <param name="networkCredentials">Credenziali per l'autenticazione.</param>
        <param name="showUI">
          <see langword="True" /> per visualizzare lo stato dell'operazione; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <param name="connectionTimeout">Intervallo di timeout in millisecondi. Il valore predefinito è 100 secondi.</param>
        <summary>Invia il file specificato all'indirizzo host specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` è impostata su `True`, una finestra di dialogo Mostra lo stato di avanzamento dell'operazione e include una **Annulla** pulsante che l'utente può fare clic per annullare l'operazione. Poiché la finestra di dialogo non modale, questa operazione non blocca input dell'utente ad altre finestre del programma.  
  
 Se il server non risponde entro l'intervallo specificato `connectionTimeout`, l'operazione sia annullata e viene generata un'eccezione.  
  
 `My.Computer.Network.UploadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.UploadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Caricare un file|[Procedura: Caricare un file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Questo esempio il file viene caricato `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Nell'esempio riportato di seguito il file `Order.txt` viene caricato in `http://www.cohowinery.com/uploads` senza specificare un nome utente o una password, viene visualizzato lo stato di avanzamento del processo di caricamento ed è previsto un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> è minore o uguale a zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> non include un nome file.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il <paramref name="connectionTimeout" /> specificato.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Percorso e nome del file da caricare.</param>
        <param name="address">URL, indirizzo IP o URI del server di destinazione.</param>
        <param name="userName">Nome utente da autenticare. Il valore predefinito è una stringa vuota: <c>""</c>.</param>
        <param name="password">Password da autenticare. Il valore predefinito è una stringa vuota: <c>""</c>.</param>
        <param name="showUI">
          <see langword="True" /> per visualizzare lo stato dell'operazione; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <param name="connectionTimeout">Intervallo di timeout in millisecondi. Il valore predefinito è 100 secondi.</param>
        <summary>Invia il file specificato all'indirizzo host specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` è impostata su `True`, una finestra di dialogo Mostra lo stato di avanzamento dell'operazione e include una **Annulla** pulsante che l'utente può fare clic per annullare l'operazione. Poiché la finestra di dialogo non modale, questa operazione non blocca input dell'utente ad altre finestre del programma.  
  
 Se il server non risponde entro l'intervallo specificato `connectionTimeout`, l'operazione sia annullata e viene generata un'eccezione.  
  
 `My.Computer.Network.UploadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.UploadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Caricare un file|[Procedura: Caricare un file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Questo esempio il file viene caricato `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Nell'esempio riportato di seguito il file `Order.txt` viene caricato in `http://www.cohowinery.com/uploads` senza specificare un nome utente o una password, viene visualizzato lo stato di avanzamento del processo di caricamento ed è previsto un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> è minore o uguale a zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> non include un nome file.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il <paramref name="connectionTimeout" /> specificato.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Percorso e nome del file da caricare.</param>
        <param name="address">URL, indirizzo IP o URI del server di destinazione.</param>
        <param name="networkCredentials">Credenziali per l'autenticazione.</param>
        <param name="showUI">
          <see langword="True" /> per visualizzare lo stato dell'operazione; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <param name="connectionTimeout">Intervallo di timeout in millisecondi. Il valore predefinito è 100 secondi.</param>
        <param name="onUserCancel">Azione da eseguire quando l'utente fa clic su **Annulla**. Il valore predefinito è <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Invia il file specificato all'indirizzo host specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` è impostata su `True`, una finestra di dialogo Mostra lo stato di avanzamento dell'operazione e include una **Annulla** pulsante che l'utente può fare clic per annullare l'operazione. Poiché la finestra di dialogo non modale, questa operazione non blocca input dell'utente ad altre finestre del programma.  
  
 Se il server non risponde entro l'intervallo specificato `connectionTimeout`, l'operazione sia annullata e viene generata un'eccezione.  
  
 `My.Computer.Network.UploadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.UploadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Caricare un file|[Procedura: Caricare un file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Questo esempio il file viene caricato `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Nell'esempio riportato di seguito il file `Order.txt` viene caricato in `http://www.cohowinery.com/uploads` senza specificare un nome utente o una password, viene visualizzato lo stato di avanzamento del processo di caricamento ed è previsto un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> è minore o uguale a zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> non include un nome file.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il <paramref name="connectionTimeout" /> specificato.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Percorso e nome del file da caricare.</param>
        <param name="address">URL, indirizzo IP o URI del server di destinazione.</param>
        <param name="userName">Nome utente da autenticare. Il valore predefinito è una stringa vuota: <c>""</c>.</param>
        <param name="password">Password da autenticare. Il valore predefinito è una stringa vuota: <c>""</c>.</param>
        <param name="showUI">
          <see langword="True" /> per visualizzare lo stato dell'operazione; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
        <param name="connectionTimeout">Intervallo di timeout in millisecondi. Il valore predefinito è 100 secondi.</param>
        <summary>Invia il file specificato all'indirizzo host specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` è impostata su `True`, una finestra di dialogo Mostra lo stato di avanzamento dell'operazione e include una **Annulla** pulsante che l'utente può fare clic per annullare l'operazione. Poiché la finestra di dialogo non modale, questa operazione non blocca input dell'utente ad altre finestre del programma.  
  
 Se il server non risponde entro l'intervallo specificato `connectionTimeout`, l'operazione sia annullata e viene generata un'eccezione.  
  
 `My.Computer.Network.UploadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.UploadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Caricare un file|[Procedura: Caricare un file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Questo esempio il file viene caricato `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Nell'esempio riportato di seguito il file `Order.txt` viene caricato in `http://www.cohowinery.com/uploads` senza specificare un nome utente o una password, viene visualizzato lo stato di avanzamento del processo di caricamento ed è previsto un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> è minore o uguale a zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> non include un nome file.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il <paramref name="connectionTimeout" /> specificato.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Percorso e nome del file da caricare.</param>
        <param name="address">URL, indirizzo IP o URI del server di destinazione.</param>
        <param name="userName">Nome utente da autenticare. Il valore predefinito è una stringa vuota: <c>""</c>.</param>
        <param name="password">Password da autenticare. Il valore predefinito è una stringa vuota: <c>""</c>.</param>
        <param name="showUI">Specifica se visualizzare lo stato dell'operazione. Il valore predefinito è <see langword="False" />.</param>
        <param name="connectionTimeout">Intervallo di timeout in millisecondi. Il valore predefinito è 100 secondi.</param>
        <param name="onUserCancel">Azione da eseguire quando l'utente fa clic su **Annulla**. Il valore predefinito è <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Invia il file specificato all'indirizzo host specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` è impostata su `True`, una finestra di dialogo Mostra lo stato di avanzamento dell'operazione e include una **Annulla** pulsante che l'utente può fare clic per annullare l'operazione. Poiché la finestra di dialogo non modale, questa operazione non blocca input dell'utente ad altre finestre del programma.  
  
 Se il server non risponde entro l'intervallo specificato `connectionTimeout`, l'operazione sia annullata e viene generata un'eccezione.  
  
 `My.Computer.Network.UploadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.UploadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Caricare un file|[Procedura: Caricare un file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Questo esempio il file viene caricato `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Nell'esempio riportato di seguito il file `Order.txt` viene caricato in `http://www.cohowinery.com/uploads` senza specificare un nome utente o una password, viene visualizzato lo stato di avanzamento del processo di caricamento ed è previsto un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> è minore o uguale a zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> non include un nome file.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il <paramref name="connectionTimeout" /> specificato.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Percorso e nome del file da caricare.</param>
        <param name="address">URL, indirizzo IP o URI del server di destinazione.</param>
        <param name="userName">Nome utente da autenticare. Il valore predefinito è una stringa vuota: <c>""</c>.</param>
        <param name="password">Password da autenticare. Il valore predefinito è una stringa vuota: <c>""</c>.</param>
        <param name="showUI">Specifica se visualizzare lo stato dell'operazione. Il valore predefinito è <see langword="False" />.</param>
        <param name="connectionTimeout">Intervallo di timeout in millisecondi. Il valore predefinito è 100 secondi.</param>
        <param name="onUserCancel">Azione da eseguire quando l'utente fa clic su **Annulla**. Il valore predefinito è <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Invia il file specificato all'indirizzo host specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` è impostata su `True`, una finestra di dialogo Mostra lo stato di avanzamento dell'operazione e include una **Annulla** pulsante che l'utente può fare clic per annullare l'operazione. Poiché la finestra di dialogo non modale, questa operazione non blocca input dell'utente ad altre finestre del programma.  
  
 Se il server non risponde entro l'intervallo specificato `connectionTimeout`, l'operazione sia annullata e viene generata un'eccezione.  
  
 `My.Computer.Network.UploadFile` Restituisce informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [abilitare la traccia di rete](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Il protocollo FTP invia informazioni, comprese le password in testo normale e non deve essere utilizzato per trasmettere informazioni riservate.  
  
 La tabella seguente elenca un esempio di un'attività che coinvolgono il `My.Computer.Network.UploadFile` (metodo).  
  
|A|Vedere|  
|-|-|  
|Caricare un file|[Procedura: Caricare un file](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Questo esempio il file viene caricato `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Nell'esempio riportato di seguito il file `Order.txt` viene caricato in `http://www.cohowinery.com/uploads` senza specificare un nome utente o una password, viene visualizzato lo stato di avanzamento del processo di caricamento ed è previsto un intervallo di timeout di 500 millisecondi.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> è minore o uguale a zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> non include un nome file.</exception>
        <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per eseguire un'operazione di rete.</exception>
        <exception cref="T:System.TimeoutException">Il server non risponde entro il <paramref name="connectionTimeout" /> specificato.</exception>
        <exception cref="T:System.Net.WebException">Il sito Web di destinazione ha rifiutato la richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controlla se è possibile accedere ai file e alle cartelle. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controlla le autorizzazioni correlate alle interfacce utente e agli Appunti. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controlla i diritti di accesso alle risorse Internet HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
  </Members>
</Type>