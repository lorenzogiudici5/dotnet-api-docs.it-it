<Type Name="IChannelCredentials" FullName="System.ServiceModel.ComIntegration.IChannelCredentials">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0828e5052a73f3359a5bd0ecca8bd5dedea73f3d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36524516" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannelCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelCredentials" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ComIntegration.IChannelCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelCredentials" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannelCredentials" />
  <TypeSignature Language="F#" Value="type IChannelCredentials = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("181b448c-c17c-4b17-ac6d-06699b93198f")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interfaccia che consente l'impostazione di determinate funzionalità di sicurezza su un proxy del servizio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Client non gestiti utilizzano il moniker del "servizio" per accedere ai servizi Windows Communication Foundation (WCF). Questi client sono soggetti al modello di sicurezza WCF anziché il modello di sicurezza COM. L'interfaccia <xref:System.ServiceModel.ComIntegration.IChannelCredentials> è fornita per specificare credenziali del canale. Ciò è necessario perché il moniker di COM non può accedere il modello a oggetti sicurezza WCF gestito.  
  
 Dopo che il canale è stato creato, non è consentito chiamare metodi nell'interfaccia `IChannelCredentials`. Infatti, Windows Communication Foundation (WCF) non supporta la modifica delle impostazioni di sicurezza su un canale già aperto. Quando il client del moniker del servizio ottiene un proxy, il canale non viene ancora creato. Il client deve quindi chiamare i metodi `IChannelCredentials` prima di richiamare il metodo del servizio. Se il client chiama un metodo `IChannelCredentials` dopo che è stato richiamato il metodo del servizio, verrà generata l'eccezione RPC_E_TOO_LATE.  
  
   
  
## Examples  
  
```  
monString = "service:mexAddress=http://localhost:8000/ServiceModelSamples/Service?wsdl"  
    monString = monString + ", address=http://localhost:8000/ServiceModelSamples/Service"  
    monString = monString + ", binding=BasicHttpBinding_ICalculator, bindingNamespace=http://Microsoft.ServiceModel.Samples"  
    monString = monString + ", contract=ICalculator, contractNamespace=http://Microsoft.ServiceModel.Samples"  
  
    Set monikerProxy = GetObject(monString)  
  
    'Set the Service Certificate.  
    monikerProxy.ChannelCredentials.SetServiceCertificateAuthentication "CurrentUser", "NoCheck", "PeerOrChainTrust"  
    monikerProxy.ChannelCredentials.SetDefaultServiceCertificateFromStore "CurrentUser", "TrustedPeople", "FindBySubjectName", "localhost"  
  
    'Set the Client Certificate.  
    monikerProxy.ChannelCredentials.SetClientCertificateFromStoreByName "CN=client.com", "CurrentUser", "My"  
    MsgBox monikerProxy.Add(3, 4)  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetClientCertificateFromFile">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromFile (string fileName, string password, string keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromFile(string fileName, string password, string keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromFile (fileName As String, password As String, keyStorageFlags As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromFile(System::String ^ fileName, System::String ^ password, System::String ^ keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member SetClientCertificateFromFile : string * string * string -&gt; unit" Usage="iChannelCredentials.SetClientCertificateFromFile (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Nome del file che contiene il certificato.</param>
        <param name="password">Password richiesta per il file.</param>
        <param name="keyStorageFlags">Flag di archiviazione per il certificato.</param>
        <summary>Recupera un certificato da un file e lo aggiunge alle credenziali client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando `keyStorageFlags` è impostato su null o su una stringa vuota, vengono utilizzati i flag di archiviazione predefiniti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClientCertificateFromStore">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromStore (string storeLocation, string storeName, string findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromStore(string storeLocation, string storeName, string findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromStore (storeLocation As String, storeName As String, findType As String, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromStore(System::String ^ storeLocation, System::String ^ storeName, System::String ^ findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="abstract member SetClientCertificateFromStore : string * string * string * obj -&gt; unit" Usage="iChannelCredentials.SetClientCertificateFromStore (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
        <Parameter Name="findType" Type="System.String" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Percorso dell'archivio certificati.</param>
        <param name="storeName">Nome dell'archivio certificati</param>
        <param name="findType">Tipo cercato.</param>
        <param name="findValue">Valore cercato.</param>
        <summary>Recupera un certificato da un archivio certificati e lo aggiunge alle credenziali client.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClientCertificateFromStoreByName">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromStoreByName (string subjectName, string storeLocation, string storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromStoreByName(string subjectName, string storeLocation, string storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromStoreByName (subjectName As String, storeLocation As String, storeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromStoreByName(System::String ^ subjectName, System::String ^ storeLocation, System::String ^ storeName);" />
      <MemberSignature Language="F#" Value="abstract member SetClientCertificateFromStoreByName : string * string * string -&gt; unit" Usage="iChannelCredentials.SetClientCertificateFromStoreByName (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subjectName">Nome del soggetto del certificato.</param>
        <param name="storeLocation">Percorso dell'archivio certificati.</param>
        <param name="storeName">Nome dell'archivio certificati</param>
        <summary>Recupera un certificato da un archivio certificati in base al nome e lo aggiunge alle credenziali client.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromFile">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromFile (string fileName, string password, string keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromFile(string fileName, string password, string keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromFile (fileName As String, password As String, keyStorageFlags As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromFile(System::String ^ fileName, System::String ^ password, System::String ^ keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultServiceCertificateFromFile : string * string * string -&gt; unit" Usage="iChannelCredentials.SetDefaultServiceCertificateFromFile (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Nome del file di certificato.</param>
        <param name="password">Password per il file di certificato.</param>
        <param name="keyStorageFlags">Flag di archiviazione per il certificato.</param>
        <summary>Recupera un certificato da un file e lo aggiunge alle credenziali del servizio come il certificato predefinito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando `keyStorageFlags` è impostato su null o su una stringa vuota, vengono utilizzati i flag di archiviazione predefiniti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromStore">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromStore (string storeLocation, string storeName, string findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromStore(string storeLocation, string storeName, string findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromStore (storeLocation As String, storeName As String, findType As String, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromStore(System::String ^ storeLocation, System::String ^ storeName, System::String ^ findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultServiceCertificateFromStore : string * string * string * obj -&gt; unit" Usage="iChannelCredentials.SetDefaultServiceCertificateFromStore (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
        <Parameter Name="findType" Type="System.String" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Percorso dell'archivio certificati.</param>
        <param name="storeName">Nome dell'archivio certificati</param>
        <param name="findType">Tipo cercato.</param>
        <param name="findValue">Valore cercato.</param>
        <summary>Recupera un certificato da un archivio certificati e lo aggiunge alle credenziali del servizio come il certificato predefinito.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromStoreByName">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromStoreByName (string subjectName, string storeLocation, string storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromStoreByName(string subjectName, string storeLocation, string storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromStoreByName (subjectName As String, storeLocation As String, storeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromStoreByName(System::String ^ subjectName, System::String ^ storeLocation, System::String ^ storeName);" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultServiceCertificateFromStoreByName : string * string * string -&gt; unit" Usage="iChannelCredentials.SetDefaultServiceCertificateFromStoreByName (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subjectName">Nome del soggetto del certificato.</param>
        <param name="storeLocation">Percorso dell'archivio certificati.</param>
        <param name="storeName">Nome dell'archivio certificati</param>
        <summary>Recupera un certificato da un archivio certificati in base al nome e lo aggiunge alle credenziali del servizio come il certificato predefinito.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIssuedToken">
      <MemberSignature Language="C#" Value="public void SetIssuedToken (string localIssuerAddres, string localIssuerBindingType, string localIssuerBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIssuedToken(string localIssuerAddres, string localIssuerBindingType, string localIssuerBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIssuedToken (localIssuerAddres As String, localIssuerBindingType As String, localIssuerBinding As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIssuedToken(System::String ^ localIssuerAddres, System::String ^ localIssuerBindingType, System::String ^ localIssuerBinding);" />
      <MemberSignature Language="F#" Value="abstract member SetIssuedToken : string * string * string -&gt; unit" Usage="iChannelCredentials.SetIssuedToken (localIssuerAddres, localIssuerBindingType, localIssuerBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localIssuerAddres" Type="System.String" />
        <Parameter Name="localIssuerBindingType" Type="System.String" />
        <Parameter Name="localIssuerBinding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localIssuerAddres">Indirizzo endpoint.</param>
        <param name="localIssuerBindingType">Tipo di associazione.</param>
        <param name="localIssuerBinding">Nome associazione.</param>
        <summary>Consente di impostare i parametri per il token emesso.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetServiceCertificateAuthentication">
      <MemberSignature Language="C#" Value="public void SetServiceCertificateAuthentication (string storeLocation, string revocationMode, string certificationValidationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetServiceCertificateAuthentication(string storeLocation, string revocationMode, string certificationValidationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetServiceCertificateAuthentication (storeLocation As String, revocationMode As String, certificationValidationMode As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetServiceCertificateAuthentication(System::String ^ storeLocation, System::String ^ revocationMode, System::String ^ certificationValidationMode);" />
      <MemberSignature Language="F#" Value="abstract member SetServiceCertificateAuthentication : string * string * string -&gt; unit" Usage="iChannelCredentials.SetServiceCertificateAuthentication (storeLocation, revocationMode, certificationValidationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="revocationMode" Type="System.String" />
        <Parameter Name="certificationValidationMode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Percorso dell'archivio.</param>
        <param name="revocationMode">Modalità di revoca.</param>
        <param name="certificationValidationMode">Modalità di convalida della certificazione.</param>
        <summary>Consente di impostare i parametri di autenticazione del certificato del servizio.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserNameCredential">
      <MemberSignature Language="C#" Value="public void SetUserNameCredential (string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserNameCredential(string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUserNameCredential (userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUserNameCredential(System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="abstract member SetUserNameCredential : string * string -&gt; unit" Usage="iChannelCredentials.SetUserNameCredential (userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nome utente.</param>
        <param name="password">Password.</param>
        <summary>Consente di impostare le credenziali del nome utente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWindowsCredential">
      <MemberSignature Language="C#" Value="public void SetWindowsCredential (string domain, string userName, string password, int impersonationLevel, bool allowNtlm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowsCredential(string domain, string userName, string password, int32 impersonationLevel, bool allowNtlm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential(System.String,System.String,System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWindowsCredential (domain As String, userName As String, password As String, impersonationLevel As Integer, allowNtlm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWindowsCredential(System::String ^ domain, System::String ^ userName, System::String ^ password, int impersonationLevel, bool allowNtlm);" />
      <MemberSignature Language="F#" Value="abstract member SetWindowsCredential : string * string * string * int * bool -&gt; unit" Usage="iChannelCredentials.SetWindowsCredential (domain, userName, password, impersonationLevel, allowNtlm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="impersonationLevel" Type="System.Int32" />
        <Parameter Name="allowNtlm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="domain">Dominio.</param>
        <param name="userName">Nome utente.</param>
        <param name="password">Password.</param>
        <param name="impersonationLevel">Livello di rappresentazione.</param>
        <param name="allowNtlm">Consente l'ambito di autenticazione NTLM.</param>
        <summary>Imposta le credenziali di Windows.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>