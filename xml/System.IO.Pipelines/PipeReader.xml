<Type Name="PipeReader" FullName="System.IO.Pipelines.PipeReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89e7a5cca51c6981acf30cb9ec6a87b964c2bb56" />
    <Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/27/2018" />
    <Meta Name="ms.locfileid" Value="50172868" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PipeReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PipeReader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipelines.PipeReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PipeReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeReader abstract" />
  <TypeSignature Language="F#" Value="type PipeReader = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipelines</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c5ac5-101">Definisce una classe che fornisce l'accesso alle operazioni di lettura della pipe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c5ac5-101">Defines a class that provides access to a read side of pipe.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipeReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PipeReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvanceTo">
      <MemberSignature Language="C#" Value="public abstract void AdvanceTo (SequencePosition consumed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceTo(valuetype System.SequencePosition consumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AdvanceTo (consumed As SequencePosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AdvanceTo(SequencePosition consumed);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceTo : SequencePosition -&gt; unit" Usage="pipeReader.AdvanceTo consumed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumed" Type="System.SequencePosition" />
      </Parameters>
      <Docs>
        <param name="consumed">
          <span data-ttu-id="c5ac5-102">Contrassegna l'ambito dei dati che sono stati elaborati correttamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-102">Marks the extent of the data that has been successfully processed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5ac5-103">Sposta in avanti il cursore di lettura della pipeline dopo i dati utilizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-103">Moves forward the pipeline's read cursor to after the consumed data.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="c5ac5-104">La memoria per i dati consumati sarà stato rilasciato e non saranno più disponibili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-104">The memory for the consumed data will be released and no longer available.</span>
          </span>
          <span data-ttu-id="c5ac5-105">I dati esaminati comunica alla pipeline quando è necessario segnalare che sono disponibili più dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-105">The examined data communicates to the pipeline when it should signal more data is available.</span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvanceTo">
      <MemberSignature Language="C#" Value="public abstract void AdvanceTo (SequencePosition consumed, SequencePosition examined);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceTo(valuetype System.SequencePosition consumed, valuetype System.SequencePosition examined) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition,System.SequencePosition)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AdvanceTo (consumed As SequencePosition, examined As SequencePosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AdvanceTo(SequencePosition consumed, SequencePosition examined);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceTo : SequencePosition * SequencePosition -&gt; unit" Usage="pipeReader.AdvanceTo (consumed, examined)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumed" Type="System.SequencePosition" />
        <Parameter Name="examined" Type="System.SequencePosition" />
      </Parameters>
      <Docs>
        <param name="consumed">
          <span data-ttu-id="c5ac5-106">Contrassegna l'ambito dei dati che sono stati elaborati correttamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-106">Marks the extent of the data that has been successfully processed.</span>
          </span>
        </param>
        <param name="examined">
          <span data-ttu-id="c5ac5-107">Contrassegna l'ambito dei dati che sono stati letti ed esaminati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-107">Marks the extent of the data that has been read and examined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5ac5-108">Sposta in avanti il cursore di lettura della pipeline dopo i dati utilizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-108">Moves forward the pipeline's read cursor to after the consumed data.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="c5ac5-109">La memoria per i dati consumati sarà stato rilasciato e non saranno più disponibili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-109">The memory for the consumed data will be released and no longer available.</span>
          </span>
          <span data-ttu-id="c5ac5-110">I dati esaminati comunica alla pipeline quando è necessario segnalare che sono disponibili più dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-110">The examined data communicates to the pipeline when it should signal more data is available.</span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelPendingRead">
      <MemberSignature Language="C#" Value="public abstract void CancelPendingRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelPendingRead() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.CancelPendingRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelPendingRead ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelPendingRead();" />
      <MemberSignature Language="F#" Value="abstract member CancelPendingRead : unit -&gt; unit" Usage="pipeReader.CancelPendingRead " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c5ac5-111">Annulla le operazioni attualmente in sospeso o, in assenza di operazioni in sospeso, la chiamata successiva a <see cref="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" />, senza completare <see cref="T:System.IO.Pipelines.PipeReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-111">Cancels to currently pending or if none is pending next call to <see cref="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" />, without completing the <see cref="T:System.IO.Pipelines.PipeReader" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public abstract void Complete (Exception exception = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.Complete(System.Exception)" />
      <MemberSignature Language="F#" Value="abstract member Complete : Exception -&gt; unit" Usage="pipeReader.Complete exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="c5ac5-112">
            <see cref="T:System.Exception" /> facoltativo che indica un errore che causa il completamento della pipeline.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-112">Optional <see cref="T:System.Exception" /> indicating a failure that's causing the pipeline to complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5ac5-113">Segnala al producer che il consumer ha completato la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-113">Signals to the producer that the consumer is done reading.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWriterCompleted">
      <MemberSignature Language="C#" Value="public abstract void OnWriterCompleted (Action&lt;Exception,object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWriterCompleted(class System.Action`2&lt;class System.Exception, object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.OnWriterCompleted(System.Action{System.Exception,System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub OnWriterCompleted (callback As Action(Of Exception, Object), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void OnWriterCompleted(Action&lt;Exception ^, System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnWriterCompleted : Action&lt;Exception, obj&gt; * obj -&gt; unit" Usage="pipeReader.OnWriterCompleted (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Exception,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>
          <span data-ttu-id="c5ac5-114">Annulla l'operazione <see cref="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" /> in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-114">Cancels the pending <see cref="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" /> operation.</span>
          </span>
          <span data-ttu-id="c5ac5-115">In assenza di operazioni in sospeso, annulla l'operazione <see cref="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" /> successiva, senza completare <see cref="T:System.IO.Pipelines.PipeWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-115">If there is none, cancels next <see cref="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" /> operation, without completing the <see cref="T:System.IO.Pipelines.PipeWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.ReadResult&gt; ReadAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype System.IO.Pipelines.ReadResult&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.ReadResult&gt;" Usage="pipeReader.ReadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.ReadResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
          <span data-ttu-id="c5ac5-116">Legge in modo asincrono una sequenza di byte dall'oggetto <see cref="T:System.IO.Pipelines.PipeReader" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-116">Asynchronously reads a sequence of bytes from the current <see cref="T:System.IO.Pipelines.PipeReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5ac5-117">
            <see cref="T:System.Threading.Tasks.ValueTask`1" /> che rappresenta l'operazione di lettura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-117">A <see cref="T:System.Threading.Tasks.ValueTask`1" /> representing the asynchronous read operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRead">
      <MemberSignature Language="C#" Value="public abstract bool TryRead (out System.IO.Pipelines.ReadResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRead([out] valuetype System.IO.Pipelines.ReadResult&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.TryRead(System.IO.Pipelines.ReadResult@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryRead (ByRef result As ReadResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryRead([Runtime::InteropServices::Out] System::IO::Pipelines::ReadResult % result);" />
      <MemberSignature Language="F#" Value="abstract member TryRead :  -&gt; bool" Usage="pipeReader.TryRead result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IO.Pipelines.ReadResult" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c5ac5-118">Il tipo <see cref="T:System.IO.Pipelines.ReadResult" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-118">The <see cref="T:System.IO.Pipelines.ReadResult" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5ac5-119">Tenta di leggere i dati in modo sincrono in <see cref="T:System.IO.Pipelines.PipeReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-119">Attempts to synchronously read data the <see cref="T:System.IO.Pipelines.PipeReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5ac5-120">
            <see langword="true" /> se i dati erano disponibili o se la chiamata è stata annullata o il writer è stato completato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-120">
              <see langword="true" /> if data was available, or if the call was canceled or the writer was completed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="c5ac5-121">Se restituisce la pipe <see langword="false" />, non è necessario chiamare <see cref="M:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition,System.SequencePosition)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5ac5-121">If the pipe returns <see langword="false" />, there's no need to call <see cref="M:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition,System.SequencePosition)" />.</span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>