<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae70a65156b283f87027b6fdda2a363e67010fda" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39980948" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="48fcc-101">Fornisce operatori matematici ad associazione tardiva, quali <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> e <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, utilizzati internamente dal compilatore Visual Basic.</span>
      <span class="sxs-lookup">
        <span data-stu-id="48fcc-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-102">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-103">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-103">Required.</span>
          </span>
          <span data-ttu-id="48fcc-104">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-104">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-105">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-105">Required.</span>
          </span>
          <span data-ttu-id="48fcc-106">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-106">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-107">Rappresenta l'operatore di addizione (+) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-107">Represents the Visual Basic addition (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-108">Somma di <paramref name="Left" /> e <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-108">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-109">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-109">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-110">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-110">Required.</span>
          </span>
          <span data-ttu-id="48fcc-111">Qualsiasi espressione <see langword="Boolean" /> o numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-111">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-112">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-112">Required.</span>
          </span>
          <span data-ttu-id="48fcc-113">Qualsiasi espressione <see langword="Boolean" /> o numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-113">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-114">Rappresenta l'operatore <see langword="And" /> di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-114">Represents the Visual Basic <see langword="And" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-115">Nel caso di operazioni <see langword="Boolean" />, <see langword="True" /> se <paramref name="Left" /> e <paramref name="Right" /> hanno entrambi un valore pari a <see langword="True" />; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-115">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="48fcc-116">Nel caso di operazioni bit per bit, 1 se <paramref name="Left" /> e <paramref name="Right" /> hanno entrambi un valore pari a 1; in caso contrario, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-116">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-117">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-117">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-118">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-118">Required.</span>
          </span>
          <span data-ttu-id="48fcc-119">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-119">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-120">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-120">Required.</span>
          </span>
          <span data-ttu-id="48fcc-121">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-121">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-122">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-122">Required.</span>
          </span>
          <span data-ttu-id="48fcc-123">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-123">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-124">Rappresenta gli operatori di confronto di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-124">Represents Visual Basic comparison operators.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-125">
            <list type="table">
              <listheader>
                <term> Valore </term>
                <description> Condizione </description>
              </listheader>
              <item>
                <term> -1 </term>
                <description>
                  <paramref name="Left" /> è minore di <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 0 </term>
                <description>
                  <paramref name="Left" /> e <paramref name="Right" /> sono uguali.  </description>
              </item>
              <item>
                <term> 1 </term>
                <description>
                  <paramref name="Left" /> è maggiore di <paramref name="Right" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-125">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description>
                    <paramref name="Left" /> is less than <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description>
                    <paramref name="Left" /> and <paramref name="Right" /> are equal.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <paramref name="Left" /> is greater than <paramref name="Right" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-126">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-126">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-127">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-127">Required.</span>
          </span>
          <span data-ttu-id="48fcc-128">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-128">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-129">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-129">Required.</span>
          </span>
          <span data-ttu-id="48fcc-130">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-130">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-131">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-131">Required.</span>
          </span>
          <span data-ttu-id="48fcc-132">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-132">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-133">Rappresenta l'operatore di uguaglianza (=) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-133">Represents the Visual Basic equal (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-134">
            <see langword="True" /> se <paramref name="Left" /> e <paramref name="Right" /> sono uguali; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-134">
              <see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-135">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-135">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-136">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-136">Required.</span>
          </span>
          <span data-ttu-id="48fcc-137">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-137">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-138">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-138">Required.</span>
          </span>
          <span data-ttu-id="48fcc-139">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-139">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-140">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-140">Required.</span>
          </span>
          <span data-ttu-id="48fcc-141">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-141">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-142">Rappresenta l'operatore di maggioranza (&gt;) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-142">Represents the Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-143">
            <see langword="True" /> se <paramref name="Left" /> è maggiore di <paramref name="Right" />; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-143">
              <see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-144">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-144">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-145">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-145">Required.</span>
          </span>
          <span data-ttu-id="48fcc-146">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-146">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-147">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-147">Required.</span>
          </span>
          <span data-ttu-id="48fcc-148">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-148">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-149">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-149">Required.</span>
          </span>
          <span data-ttu-id="48fcc-150">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-150">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-151">Rappresenta l'operatore di maggioranza o uguaglianza (&gt;) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-151">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-152">
            <see langword="True" /> se <paramref name="Left" /> è maggiore o uguale a <paramref name="Right" />; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-152">
              <see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-153">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-153">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-154">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-154">Required.</span>
          </span>
          <span data-ttu-id="48fcc-155">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-155">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-156">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-156">Required.</span>
          </span>
          <span data-ttu-id="48fcc-157">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-157">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-158">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-158">Required.</span>
          </span>
          <span data-ttu-id="48fcc-159">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-159">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-160">Rappresenta l'operatore di minoranza (&lt;) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-160">Represents the Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-161">
            <see langword="True" /> se <paramref name="Left" /> è minore di <paramref name="Right" />; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-161">
              <see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-162">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-162">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-163">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-163">Required.</span>
          </span>
          <span data-ttu-id="48fcc-164">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-164">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-165">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-165">Required.</span>
          </span>
          <span data-ttu-id="48fcc-166">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-166">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-167">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-167">Required.</span>
          </span>
          <span data-ttu-id="48fcc-168">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-168">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-169">Rappresenta l'operatore di minoranza o uguaglianza (&lt;) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-169">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-170">
            <see langword="True" /> se <paramref name="Left" /> è minore o uguale a <paramref name="Right" />; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-170">
              <see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-171">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-171">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-172">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-172">Required.</span>
          </span>
          <span data-ttu-id="48fcc-173">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-173">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-174">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-174">Required.</span>
          </span>
          <span data-ttu-id="48fcc-175">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-175">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-176">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-176">Required.</span>
          </span>
          <span data-ttu-id="48fcc-177">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-177">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-178">Rappresenta l'operatore di disuguaglianza (&lt;&gt;) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-178">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-179">
            <see langword="True" /> se <paramref name="Left" /> non è uguale a <paramref name="Right" />; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-179">
              <see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-180">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-180">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-181">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-181">Required.</span>
          </span>
          <span data-ttu-id="48fcc-182">Qualsiasi espressione <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-182">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-183">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-183">Required.</span>
          </span>
          <span data-ttu-id="48fcc-184">Qualsiasi espressione <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-184">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-185">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-185">Required.</span>
          </span>
          <span data-ttu-id="48fcc-186">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-186">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-187">Date due stringhe, esegue un confronto binario o tra stringhe di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-187">Performs binary or text string comparison when given two strings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-188">
            <list type="table">
              <listheader>
                <term> Valore </term>
                <description> Condizione </description>
              </listheader>
              <item>
                <term> -1 </term>
                <description>
                  <paramref name="Left" /> è minore di <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 0 </term>
                <description>
                  <paramref name="Left" /> è uguale a <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 1 </term>
                <description>
                  <paramref name="Left" /> è maggiore di <paramref name="Right" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-188">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description>
                    <paramref name="Left" /> is less than <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description>
                    <paramref name="Left" /> is equal to <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <paramref name="Left" /> is greater than <paramref name="Right" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-189">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-189">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="48fcc-190">Quando viene utilizzato l'operatore di uguaglianza di Visual Basic per confrontare due stringhe, tale operatore passa le stringhe al metodo <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> insieme a un valore `False` per l'argomento `TextCompare`.</span><span class="sxs-lookup"><span data-stu-id="48fcc-190">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="48fcc-191">Ciò consente di eseguire un confronto tra maiuscole e minuscole ordinale o basato sulle impostazioni cultura correnti, in base al valore dell'istruzione.</span><span class="sxs-lookup"><span data-stu-id="48fcc-191">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-192">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-192">Required.</span>
          </span>
          <span data-ttu-id="48fcc-193">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-193">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-194">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-194">Required.</span>
          </span>
          <span data-ttu-id="48fcc-195">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-195">Any expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-196">Rappresenta l'operatore di concatenazione (&amp;) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-196">Represents the Visual Basic concatenation (&amp;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-197">Stringa che rappresenta la concatenazione di <paramref name="Left" /> e <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-197">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-198">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-198">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-199">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-199">Required.</span>
          </span>
          <span data-ttu-id="48fcc-200">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-200">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-201">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-201">Required.</span>
          </span>
          <span data-ttu-id="48fcc-202">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-202">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-203">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-203">Required.</span>
          </span>
          <span data-ttu-id="48fcc-204">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-204">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-205">Rappresenta l'operatore di uguaglianza (=) di overload di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-205">Represents the overloaded Visual Basic equals (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-206">Risultato dell'operatore di uguaglianza di overload.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-206">The result of the overloaded equals operator.</span>
          </span>
          <span data-ttu-id="48fcc-207">
            <see langword="False" /> se l'overload dell'operatore non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-207">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-208">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-208">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-209">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-209">Required.</span>
          </span>
          <span data-ttu-id="48fcc-210">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-210">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-211">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-211">Required.</span>
          </span>
          <span data-ttu-id="48fcc-212">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-212">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-213">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-213">Required.</span>
          </span>
          <span data-ttu-id="48fcc-214">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-214">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-215">Rappresenta l'operatore di maggioranza di overload (&gt;) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-215">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-216">Risultato dell'operatore di maggioranza di overload.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-216">The result of the overloaded greater-than operator.</span>
          </span>
          <span data-ttu-id="48fcc-217">
            <see langword="False" /> se l'overload dell'operatore non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-217">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-218">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-218">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-219">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-219">Required.</span>
          </span>
          <span data-ttu-id="48fcc-220">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-220">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-221">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-221">Required.</span>
          </span>
          <span data-ttu-id="48fcc-222">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-222">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-223">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-223">Required.</span>
          </span>
          <span data-ttu-id="48fcc-224">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-224">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-225">Rappresenta l'operatore di maggioranza o uguaglianza di overload (&gt;) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-225">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-226">Risultato dell'operatore di maggioranza o uguaglianza di overload.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-226">The result of the overloaded greater-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="48fcc-227">
            <see langword="False" /> se l'overload dell'operatore non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-227">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-228">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-228">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-229">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-229">Required.</span>
          </span>
          <span data-ttu-id="48fcc-230">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-230">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-231">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-231">Required.</span>
          </span>
          <span data-ttu-id="48fcc-232">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-232">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-233">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-233">Required.</span>
          </span>
          <span data-ttu-id="48fcc-234">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-234">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-235">Rappresenta l'operatore di minoranza di overload (&lt;) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-235">Represents the overloaded Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-236">Risultato dell'operatore di minoranza di overload.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-236">The result of the overloaded less-than operator.</span>
          </span>
          <span data-ttu-id="48fcc-237">
            <see langword="False" /> se l'overload dell'operatore non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-237">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-238">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-238">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-239">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-239">Required.</span>
          </span>
          <span data-ttu-id="48fcc-240">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-240">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-241">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-241">Required.</span>
          </span>
          <span data-ttu-id="48fcc-242">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-242">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-243">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-243">Required.</span>
          </span>
          <span data-ttu-id="48fcc-244">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-244">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-245">Rappresenta l'operatore di minoranza o uguaglianza di overload (&lt;) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-245">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-246">Risultato dell'operatore di minoranza o uguaglianza di overload.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-246">The result of the overloaded less-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="48fcc-247">
            <see langword="False" /> se l'overload dell'operatore non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-247">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-248">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-248">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-249">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-249">Required.</span>
          </span>
          <span data-ttu-id="48fcc-250">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-250">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-251">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-251">Required.</span>
          </span>
          <span data-ttu-id="48fcc-252">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-252">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="48fcc-253">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-253">Required.</span>
          </span>
          <span data-ttu-id="48fcc-254">
            <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-254">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-255">Rappresenta l'operatore di disuguaglianza di overload (&lt;&gt;) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-255">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-256">Risultato dell'operatore di disuguaglianza di overload.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-256">The result of the overloaded not-equal operator.</span>
          </span>
          <span data-ttu-id="48fcc-257">
            <see langword="False" /> se l'overload dell'operatore non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-257">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-258">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-258">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-259">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-259">Required.</span>
          </span>
          <span data-ttu-id="48fcc-260">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-260">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-261">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-261">Required.</span>
          </span>
          <span data-ttu-id="48fcc-262">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-262">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-263">Rappresenta l'operatore di divisione (/) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-263">Represents the Visual Basic division (/) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-264">Quoziente completo di <paramref name="Left" /> diviso per <paramref name="Right" />, incluso l'eventuale resto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-264">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-265">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-265">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-266">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-266">Required.</span>
          </span>
          <span data-ttu-id="48fcc-267">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-267">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-268">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-268">Required.</span>
          </span>
          <span data-ttu-id="48fcc-269">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-269">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-270">Rappresenta l'operatore esponenziale (^) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-270">Represents the Visual Basic exponent (^) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-271">Risultato di <paramref name="Left" /> elevato alla potenza di <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-271">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-272">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-272">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" />
        <Parameter Name="Arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="vbOp">
          <span data-ttu-id="48fcc-273">Operatore definito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-273">The user-defined operator.</span>
          </span>
        </param>
        <param name="Arguments">
          <span data-ttu-id="48fcc-274">Valori degli argomenti da passare all'operatore definito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-274">Argument values to pass to the user-defined operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-275">Esegue una valutazione ad associazione tardiva di un operatore definito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-275">Executes a late-bound evaluation of a user-defined operator.</span>
          </span>
          <span data-ttu-id="48fcc-276">Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-276">This helper method is not meant to be called directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-277">Risultato restituito dall'operatore definito dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-277">The result returned from the user-defined operator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-278">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-278">Required.</span>
          </span>
          <span data-ttu-id="48fcc-279">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-279">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-280">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-280">Required.</span>
          </span>
          <span data-ttu-id="48fcc-281">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-281">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-282">Rappresenta l'operatore di divisione con valori interi (\\) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-282">Represents the Visual Basic integer division (\\) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-283">Quoziente intero di <paramref name="Left" /> diviso per <paramref name="Right" />, in cui l'eventuale resto viene ignorato e viene mantenuta solo la parte intera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-283">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-284">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-284">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="48fcc-285">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-285">Required.</span>
          </span>
          <span data-ttu-id="48fcc-286">Espressione numerica integrale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-286">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="48fcc-287">Schema di bit da spostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-287">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="48fcc-288">Il tipo di dati deve essere integrale (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-288">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="48fcc-289">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-289">Required.</span>
          </span>
          <span data-ttu-id="48fcc-290">Espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-290">Numeric expression.</span>
          </span>
          <span data-ttu-id="48fcc-291">Numero di bit per spostare lo schema di bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-291">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="48fcc-292">Il tipo di dati deve essere <see langword="Integer" /> o ampliato a <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-292">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-293">Rappresenta l'operatore di scorrimento a sinistra aritmetico (&lt;&lt;) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-293">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-294">Valore numerico integrale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-294">An integral numeric value.</span>
          </span>
          <span data-ttu-id="48fcc-295">Risultato dello spostamento dello schema di bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-295">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="48fcc-296">Il tipo di dati corrisponde a quello di <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-296">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-297">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="48fcc-298">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-298">Required.</span>
          </span>
          <span data-ttu-id="48fcc-299">Qualsiasi espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-299">Any expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="48fcc-300">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-300">Required.</span>
          </span>
          <span data-ttu-id="48fcc-301">Qualsiasi espressione stringa conforme alle convenzioni sui criteri di ricerca descritte nell'operatore Like.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-301">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="48fcc-302">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-302">Required.</span>
          </span>
          <span data-ttu-id="48fcc-303">Valore <see cref="T:Microsoft.VisualBasic.CompareMethod" /> che specifica che l'operazione utilizza un confronto di testo o binario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-303">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-304">Rappresenta l'operatore <see langword="Like" /> di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-304">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-305">
            <see langword="True" /> se la rappresentazione di stringa del valore in <paramref name="Source" /> soddisfa il modello contenuto in <paramref name="Pattern" />; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-305">
              <see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="48fcc-306">
            <see langword="True" /> se <paramref name="Source" /> e <paramref name="Pattern" /> sono <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-306">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-307">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-307">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="48fcc-308">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-308">Required.</span>
          </span>
          <span data-ttu-id="48fcc-309">Qualsiasi espressione <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-309">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="48fcc-310">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-310">Required.</span>
          </span>
          <span data-ttu-id="48fcc-311">Qualsiasi espressione <see langword="String" /> conforme alle convenzioni sui criteri di ricerca descritte nell'operatore Like.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-311">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="48fcc-312">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-312">Required.</span>
          </span>
          <span data-ttu-id="48fcc-313">Valore <see cref="T:Microsoft.VisualBasic.CompareMethod" /> che specifica che l'operazione utilizza un confronto di testo o binario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-313">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-314">Rappresenta l'operatore <see langword="Like" /> di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-314">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-315">
            <see langword="True" /> se il valore in <paramref name="Source" /> soddisfa il modello contenuto in <paramref name="Pattern" />; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-315">
              <see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="48fcc-316">
            <see langword="True" /> se <paramref name="Source" /> e <paramref name="Pattern" /> sono vuoti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-316">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-317">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-317">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-318">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-318">Required.</span>
          </span>
          <span data-ttu-id="48fcc-319">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-319">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-320">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-320">Required.</span>
          </span>
          <span data-ttu-id="48fcc-321">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-321">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-322">Rappresenta l'operatore <see langword="Mod" /> di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-322">Represents the Visual Basic <see langword="Mod" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-323">Resto ottenuto dividendo <paramref name="Left" /> per <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-323">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-324">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-324">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-325">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-325">Required.</span>
          </span>
          <span data-ttu-id="48fcc-326">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-326">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-327">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-327">Required.</span>
          </span>
          <span data-ttu-id="48fcc-328">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-328">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-329">Rappresenta l'operatore di moltiplicazione (\*) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-329">Represents the Visual Basic multiply (\*) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-330">Prodotto di <paramref name="Left" /> e <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-330">The product of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-331">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-331">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="48fcc-332">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-332">Required.</span>
          </span>
          <span data-ttu-id="48fcc-333">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-333">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-334">Rappresenta l'operatore meno (–) unario di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-334">Represents the Visual Basic unary minus (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-335">Valore negativo di <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-335">The negative value of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-336">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-336">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="48fcc-337">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-337">Required.</span>
          </span>
          <span data-ttu-id="48fcc-338">Qualsiasi espressione <see langword="Boolean" /> o numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-338">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-339">Rappresenta l'operatore <see langword="Not" /> di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-339">Represents the Visual Basic <see langword="Not" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-340">Nel caso di operazioni <see langword="Boolean" />, <see langword="False" /> se <paramref name="Operand" /> è <see langword="True" />; in caso contrario, <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-340">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="48fcc-341">Nel caso di operazioni bit per bit, 1 se <paramref name="Operand" /> è 0; in caso contrario, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-341">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-342">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-342">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-343">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-343">Required.</span>
          </span>
          <span data-ttu-id="48fcc-344">Qualsiasi espressione <see langword="Boolean" /> o numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-344">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-345">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-345">Required.</span>
          </span>
          <span data-ttu-id="48fcc-346">Qualsiasi espressione <see langword="Boolean" /> o numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-346">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-347">Rappresenta l'operatore <see langword="Or" /> di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-347">Represents the Visual Basic <see langword="Or" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-348">Nel caso di operazioni <see langword="Boolean" />, <see langword="False" /> se <paramref name="Left" /> e <paramref name="Right" /> hanno entrambi un valore pari a <see langword="False" />; in caso contrario, <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-348">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="48fcc-349">Nel caso di operazioni bit per bit, 0 se <paramref name="Left" /> e <paramref name="Right" /> hanno entrambi un valore pari a 0; in caso contrario, 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-349">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-350">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-350">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="48fcc-351">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-351">Required.</span>
          </span>
          <span data-ttu-id="48fcc-352">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-352">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-353">Rappresenta l'operatore più (+) unario di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-353">Represents the Visual Basic unary plus (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-354">Valore di <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-354">The value of <paramref name="Operand" />.</span>
          </span>
          <span data-ttu-id="48fcc-355">Il segno di <paramref name="Operand" /> resta invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-355">(The sign of the <paramref name="Operand" /> is unchanged.)</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-356">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-356">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="48fcc-357">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-357">Required.</span>
          </span>
          <span data-ttu-id="48fcc-358">Espressione numerica integrale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-358">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="48fcc-359">Schema di bit da spostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-359">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="48fcc-360">Il tipo di dati deve essere integrale (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-360">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="48fcc-361">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-361">Required.</span>
          </span>
          <span data-ttu-id="48fcc-362">Espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-362">Numeric expression.</span>
          </span>
          <span data-ttu-id="48fcc-363">Numero di bit per spostare lo schema di bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-363">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="48fcc-364">Il tipo di dati deve essere <see langword="Integer" /> o ampliato a <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-364">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-365">Rappresenta l'operatore di scorrimento a destra aritmetico (&gt;&gt;) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-365">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-366">Valore numerico integrale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-366">An integral numeric value.</span>
          </span>
          <span data-ttu-id="48fcc-367">Risultato dello spostamento dello schema di bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-367">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="48fcc-368">Il tipo di dati corrisponde a quello di <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-368">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-369">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-369">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-370">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-370">Required.</span>
          </span>
          <span data-ttu-id="48fcc-371">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-371">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-372">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-372">Required.</span>
          </span>
          <span data-ttu-id="48fcc-373">Qualsiasi espressione numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-373">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-374">Rappresenta l'operatore di sottrazione (–) di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-374">Represents the Visual Basic subtraction (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-375">Differenza tra <paramref name="Left" /> e <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-375">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-376">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="48fcc-377">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-377">Required.</span>
          </span>
          <span data-ttu-id="48fcc-378">Qualsiasi espressione <see langword="Boolean" /> o numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-378">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="48fcc-379">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-379">Required.</span>
          </span>
          <span data-ttu-id="48fcc-380">Qualsiasi espressione <see langword="Boolean" /> o numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-380">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48fcc-381">Rappresenta l'operatore <see langword="Xor" /> di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-381">Represents the Visual Basic <see langword="Xor" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48fcc-382">Valore <see langword="Boolean" /> o numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-382">A <see langword="Boolean" /> or numeric value.</span>
          </span>
          <span data-ttu-id="48fcc-383">Nel caso di un confronto <see langword="Boolean" />, il valore restituito è l'esclusione logica (disgiunzione logica esclusiva) di due valori <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-383">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span>
          </span>
          <span data-ttu-id="48fcc-384">Nel caso di operazioni bit per bit (numeriche), il valore restituito è un valore numerico che rappresenta l'esclusione bit per bit (disgiunzione bit per bit esclusiva) di due schemi di bit numerici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-384">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          </span>
          <span data-ttu-id="48fcc-385">Per altre informazioni, vedere [Operatore Xor](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="48fcc-385">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48fcc-386">Questa classe supporta il compilatore Visual Basic e non deve essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="48fcc-386">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>