<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileLogTraceListener.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f10a9802efb1d279e05da80d00df15b90b54dd3d7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10a9802efb1d279e05da80d00df15b90b54dd3d7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Provides a simple listener that directs logging output to file.</source>
          <target state="translated">Viene fornito un listener semplice che indirizza l'output di registrazione in un file.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe fornisce funzioni di manutenzione automatica per archiviare i file di log in base alle esigenze, su base giornaliera o per ogni applicazione.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</source>
          <target state="translated">Questa funzione di archiviazione automatica consente di ridurre le responsabilità di manutenzione di sviluppatori e amministratori.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>An instance of <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> can be added to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collections to redirect output from logging to a text file.</source>
          <target state="translated">Un'istanza di <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> possono essere aggiunti al <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph> o <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> raccolte per reindirizzare l'output della registrazione a un file di testo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Instances of this class can also be added to <ph id="ph1">`My.Application.Log`</ph> or <ph id="ph2">`My.Log`</ph> (for Web applications) in Visual Basic applications.</source>
          <target state="translated">Le istanze di questa classe è inoltre possibile aggiungere a <ph id="ph1">`My.Application.Log`</ph> o <ph id="ph2">`My.Log`</ph> (per le applicazioni Web) nelle applicazioni Visual Basic.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Changing Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept><ph id="ph1">`.`</ph></source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>procedura dettagliata: modifica di destinazione di scrittura delle informazioni con My<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept><ph id="ph1">`.`</ph></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The main features of this class are:</source>
          <target state="translated">Le principali funzionalità di questa classe sono:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">*</bpt>Archival functionality<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Funzionalità di archiviazione<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</source>
          <target state="translated">I file di log generati da questa classe sono denominati in base al nome di base e la data, insieme a un numero per distinguere il file di log rispetto alle versioni successive del log.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>New log files are created on an as-needed basis.</source>
          <target state="translated">Nuovi file di log vengono creati in base alle esigenze.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The explicit form of the file name is <ph id="ph1">`baseName`</ph>[-<ph id="ph2">`dateStamp`</ph>][-<ph id="ph3">`version`</ph>].log, where:</source>
          <target state="translated">Il formato esplicito del nome file è <ph id="ph1">`baseName`</ph>[-<ph id="ph2">`dateStamp`</ph>] [-<ph id="ph3">`version`</ph>]. log, dove:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">`baseName`</ph> part is the fundamental log name, specified by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">`baseName`</ph> parte è il nome di log fondamentale, specificato da di <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">`dateStamp`</ph> part has the format "YYYY-MM-DD", and it is shown when <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> is <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">`dateStamp`</ph> parte ha il formato "Aaaa-MM-GG" e viene mostrata se <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> è <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> o <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If more than one log file is needed with the same <ph id="ph1">`baseName`</ph> and <ph id="ph2">`dateStamp`</ph>, the <ph id="ph3">`version`</ph> part, a positive <ph id="ph4">`Integer`</ph>, is added to the file name.</source>
          <target state="translated">Se è necessaria più di un file di log con lo stesso <ph id="ph1">`baseName`</ph> e <ph id="ph2">`dateStamp`</ph>, <ph id="ph3">`version`</ph> parte positivo <ph id="ph4">`Integer`</ph>, viene aggiunto al nome del file.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">*</bpt>Multiple class instances<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Più istanze di classe<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If an instance of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class writes to a file that is in use:</source>
          <target state="translated">Se un'istanza di <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe scrive in un file che è in uso:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The class shares the file if it is being used by another instance of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class in the same process.</source>
          <target state="translated">La classe condivide il file è utilizzato da un'altra istanza di <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe nello stesso processo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The class creates a new log file using the next available name if the file is being used by another process.</source>
          <target state="translated">La classe crea un nuovo file di log utilizzando il nome successivo disponibile se il file è utilizzato da un altro processo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">*</bpt>Thread safety<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Sicurezza dei thread<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class is thread safe.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe è thread-safe.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>This allows you to safely write messages to the log from multiple threads without using locks.</source>
          <target state="translated">Ciò consente di scrivere in modo sicuro i messaggi del log da più thread senza l'utilizzo dei blocchi.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Location<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Percorso del File di log<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property takes a <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> enumeration to specify one of the typical directories to write the log file to.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> proprietà richiede un <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> enumerazione per specificare una delle directory comuni in cui scrivere il file di log.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To write the log to another location, set the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property to that location.</source>
          <target state="translated">Per scrivere il log in un'altra posizione, impostare il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> proprietà in tale posizione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Name<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Nome del File di log<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The base name for the log file is specified by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated">Il nome di base per il file di log specificato da di <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The current log file name can be read from the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> property.</source>
          <target state="translated">Nome del file di registro corrente può essere lette dal <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>It is derived from several other properties and the current state of the logs in the file system.</source>
          <target state="translated">Deriva da diverse altre proprietà e lo stato corrente dei log nel file system.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log Maintenance<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Manutenzione del log<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The minimum frequency for creating new log files is determined by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property.</source>
          <target state="translated">La frequenza minima per la creazione di nuovi file di log è determinata dal <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>When the value is <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> name.</source>
          <target state="translated">Quando il valore è <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> o <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>, viene creato un nuovo file di log almeno una volta al giorno o settimana e viene inserito un indicatore di data nel <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> nome.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The maximum size (in bytes) of the log file is determined by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> property.</source>
          <target state="translated">La dimensione massima (in byte) del file di log è il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property, an exception is thrown.</source>
          <target state="translated">Se le dimensioni del file di log superano questa dimensione, ulteriori messaggi scritti nel log vengono scartati e, a seconda di <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> proprietà, viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> property determines how much free space (in bytes) must be available.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> proprietà determina la quantità di spazio libero (in byte) deve essere disponibile.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>This helps ensure that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class will not consume all available disk space.</source>
          <target state="translated">Ciò garantisce che la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe non utilizzi tutto lo spazio disponibile su disco.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property to specify the behavior of log writes when there are less than <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> bytes free.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> proprietà per specificare il comportamento del log viene registrata quando sono presenti meno di <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> byte liberi.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Output Settings<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Impostazioni di Output del File di log<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> proprietà specifica se il flusso sottostante deve essere scaricato automaticamente dopo ogni operazione di scrittura nel file di log.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> proprietà specifica se accodare i messaggi al file di log corrente, se consentito, o scriverli in un nuovo file di log.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies the string to use for delimiting the fields within a log message.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> proprietà specifica la stringa da usare per delimitare i campi all'interno di un messaggio di log.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> property specifies the encoding to use when creating a new log file.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> proprietà specifica la codifica da utilizzare quando si crea un nuovo file di log.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Output<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Output del File di log<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> methods write messages to the log file.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> e <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> metodi scrivono messaggi nel file di log.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>These methods check the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property, along with any existing logs with the same base name to determine if a new log should be created.</source>
          <target state="translated">Questi metodi controllano la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> proprietà, insieme a eventuali log esistenti con lo stesso nome di base per determinare se è necessario creare un nuovo log.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> method flushes any messages currently in the output buffer to the log file.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> metodo scarica eventuali messaggi attualmente nel buffer di output nel file di log.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> method closes the log file so that it can be used by other processes.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> metodo chiude il file di log in modo che può essere utilizzato da altri processi.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Enabling Output<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Abilitazione di Output<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated">È necessario abilitare l'analisi o di debug per l'utilizzo di un listener di traccia.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">La sintassi seguente è specifica del compilatore.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">Se si utilizzano compilatori diversi da c# o Visual Basic, vedere la documentazione del compilatore.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or you can add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">Per abilitare il debug in c#, aggiungere il <ph id="ph1">`/d:DEBUG`</ph> flag alla riga di comando del compilatore quando si compila il codice, oppure è possibile aggiungere <ph id="ph2">`#define DEBUG`</ph> all'inizio del file.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated">In Visual Basic, aggiungere il <ph id="ph1">`/d:DEBUG=True`</ph> flag alla riga di comando del compilatore.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">Per abilitare la traccia in c#, aggiungere il <ph id="ph1">`/d:TRACE`</ph> flag alla riga di comando del compilatore quando si compila il codice o aggiungere <ph id="ph2">`#define TRACE`</ph> all'inizio del file.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated">In Visual Basic, aggiungere il <ph id="ph1">`/d:TRACE=True`</ph> flag alla riga di comando del compilatore.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To set the level of your listener, edit the configuration file for your application.</source>
          <target state="translated">Per impostare il livello del listener, modificare il file di configurazione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">All'interno di questo file, è possibile aggiungere un listener, impostarne il tipo di impostare i parametri, rimuovere un listener o cancellare tutti i listener precedentemente impostati dall'applicazione.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The configuration file should be formatted like the following example.</source>
          <target state="translated">Il file di configurazione deve essere formattato come nell'esempio seguente.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>For this example to run, you must provide the fully qualified assembly name.</source>
          <target state="translated">Per eseguire questo esempio, è necessario fornire il nome completo dell'assembly.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>For information about how to obtain the fully qualified assembly name, see <bpt id="p1">[</bpt>Assembly Names<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>.</source>
          <target state="translated">Per informazioni su come ottenere il nome completo dell'assembly, vedere <bpt id="p1">[</bpt>i nomi degli Assembly<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> class and sets the name.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> e ne imposta il nome.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> class with the default name.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> con il nome predefinito.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
          <source>This method sets the instance name of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class to FileLogTraceListener.</source>
          <target state="translated">Questo metodo imposta il nome dell'istanza di <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe a FileLogTraceListener.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
          <source>You can access the instance name through the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property.</source>
          <target state="translated">È possibile accedere tramite il nome dell'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>The name of the instance object.</source>
          <target state="translated">Nome dell'oggetto dell'istanza.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> class with the supplied name.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> con il nome specificato.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>This method sets the instance name of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class to <ph id="ph2">`name`</ph>.</source>
          <target state="translated">Questo metodo imposta il nome dell'istanza di <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe <ph id="ph2">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>You can access the instance name thought the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property.</source>
          <target state="translated">È possibile accedere al nome dell'istanza mediante il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>Determines whether to append the output to the current file or write it to a new file.</source>
          <target state="translated">Determina se aggiungere l'output al file corrente o se scriverlo in un nuovo file.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, with <ph id="ph2">&lt;see langword="True" /&gt;</ph> indicating that the output is appended to the current file, and <ph id="ph3">&lt;see langword="False" /&gt;</ph> indicating that output is written to a new file.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, con valore <ph id="ph2">&lt;see langword="True" /&gt;</ph> che indica che l'output viene aggiunto al file corrente e <ph id="ph3">&lt;see langword="False" /&gt;</ph> che indica che verrà scritto in un nuovo file.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The default setting for this property is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">L'impostazione predefinita di questa proprietà è <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> property is <ph id="ph2">`False`</ph>, the output is written to a new file.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> proprietà <ph id="ph2">`False`</ph>, l'output viene scritto in un nuovo file.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>When the property is <ph id="ph1">`True`</ph>, the output is appended to the current file, unless:</source>
          <target state="translated">Quando la proprietà è <ph id="ph1">`True`</ph>, l'output viene aggiunto al file corrente, a meno che:</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The output file is locked by another process.</source>
          <target state="translated">Il file di output è bloccato da un altro processo.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>In this situation, a new log file is created with a version number that is incorporated into the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> name.</source>
          <target state="translated">In questo caso, viene creato un nuovo file di log con un numero di versione che viene incorporato nel <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> nome.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The current file size is greater than what the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> property allows.</source>
          <target state="translated">Le dimensioni del file corrente sono maggiore di quella di <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> consente di proprietà.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>In this situation, additional messages are discarded and, depending on the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property, an exception is thrown.</source>
          <target state="translated">In questo caso, i messaggi aggiuntivi vengono scartati e, a seconda di <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> proprietà, viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The existing file name is out of date according to the log-creation schedule specified by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property.</source>
          <target state="translated">Il nome del file esistente viene aggiornato in base alla pianificazione per la creazione di log specificata da di <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>In this situation, a new log file is created and the date stamp is incorporated into the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> name.</source>
          <target state="translated">In questo caso, viene creato un nuovo file di log e della data e ora viene incorporata nel <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> nome.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>Indicates whether or not the writing to the log file stream flushes the buffer.</source>
          <target state="translated">Indica se la scrittura nel flusso del file di log deve scaricare il buffer o meno.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, with <ph id="ph2">&lt;see langword="True" /&gt;</ph> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, con valore <ph id="ph2">&lt;see langword="True" /&gt;</ph> che indica che il flusso deve essere scaricato dopo ogni scrittura; in caso contrario le voci di log vengono inserite nel buffer e scritte in modo più efficace.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>The default setting for this property is <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">L'impostazione predefinita di questa proprietà è <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>The <ph id="ph1">`False`</ph> setting for the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</source>
          <target state="translated">Il <ph id="ph1">`False`</ph> impostazione per il <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> proprietà offre le migliori prestazioni per la maggior parte delle applicazioni, poiché è più efficiente per scrivere contemporaneamente più messaggi nel file di log.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>You can use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> method to flush any messages currently in the log file's output buffer.</source>
          <target state="translated">È possibile utilizzare il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> buffer di output del metodo per scaricare i messaggi attualmente nel file di log.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>You can also use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> method, which implicitly flushes the stream before closing the log file.</source>
          <target state="translated">È inoltre possibile utilizzare il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> metodo, che scarica in modo implicito il flusso prima di chiudere il file di log.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>Gets or sets the base name for the log files, which is used to create the full log-file name.</source>
          <target state="translated">Ottiene o imposta il nome base per i file di log, utilizzato per la creazione del nome completo del file di log.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The base name for the log files.</source>
          <target state="translated">Nome base dei file di log.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The default is the application's product name.</source>
          <target state="translated">Il nome predefinito è quello del prodotto dell'applicazione.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property determines the base name for the log files that the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class writes to.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> proprietà determina il nome di base per i file di registro che il <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> scritti dalla classe.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> property gives the current full log-file name.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> proprietà fornisce il nome completo del file di log corrente.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</source>
          <target state="translated">Viene generato in base il percorso del log, il nome di base, la data e un numero per distinguerlo da diverse versioni del log.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>New log files are created on an as-needed basis.</source>
          <target state="translated">Nuovi file di log vengono creati in base alle esigenze.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The explicit form of the full log file name is <ph id="ph1">`path`</ph><ph id="ph2">\\</ph><ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>][-<ph id="ph5">`iteration`</ph>].log, where</source>
          <target state="translated">Il formato del nome del file di log completo esplicito è <ph id="ph1">`path`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>] [-<ph id="ph5">`iteration`</ph>]. log, in cui</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">`path`</ph> part is determined by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property and, if that property value is set to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, the <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">`path`</ph> parte è determinata dal <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> proprietà e, se il valore della proprietà è impostato su <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">`baseName`</ph> part is the fundamental log name, specified by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">`baseName`</ph> parte è il nome di log fondamentale, specificato da di <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">`dateStamp`</ph> part has the format "YYYY-MM-DD", and it is shown when <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">`dateStamp`</ph> parte ha il formato "Aaaa-MM-GG" e viene mostrata se <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> è impostato su <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> o <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>If more than one log file is needed with the same <ph id="ph1">`baseName`</ph> and <ph id="ph2">`dateStamp`</ph>, the <ph id="ph3">`iteration`</ph> part, a positive <ph id="ph4">`Integer`</ph>, is added to the file name.</source>
          <target state="translated">Se è necessaria più di un file di log con lo stesso <ph id="ph1">`baseName`</ph> e <ph id="ph2">`dateStamp`</ph>, <ph id="ph3">`iteration`</ph> parte positivo <ph id="ph4">`Integer`</ph>, viene aggiunto al nome del file.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
          <source>Closes the underlying stream for the current log file and releases any resources associated with the current stream.</source>
          <target state="translated">Chiude il flusso sottostante per il file di log corrente e rilascia tutte le risorse associate al flusso corrente.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
          <source>You do not need to call the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> method explicitly, because the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class manages the underlying steam.</source>
          <target state="translated">Non è necessario chiamare il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> metodo in modo esplicito, perché la <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe gestisce il flusso sottostante.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>Gets or sets the log file directory when the <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /&gt;</ph> property is set to <ph id="ph2">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /&gt;</ph>.</source>
          <target state="translated">Ottiene o imposta la directory del file di log se la proprietà <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /&gt;</ph> e impostata su <ph id="ph2">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>, which is the name of the log-file directory.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> che rappresenta il nome della directory del file di log.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>The default setting for this property is the user's directory for application data.</source>
          <target state="translated">L'impostazione predefinita per questa proprietà è la directory dell'utente per i dati dell'applicazione.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property is set, it also sets the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> è impostata, l'opzione imposta inoltre il <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> proprietà <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property will throw an exception if the directory cannot be resolved.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> proprietà genererà un'eccezione se la directory non può essere risolta.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source>Gets or sets the delimiter used to delimit fields within a log message.</source>
          <target state="translated">Ottiene o imposta il delimitatore utilizzato per delimitare i campi all'interno di un messaggio di log.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>, which is the delimiter used for fields within a log message.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> che rappresenta il delimitatore utilizzato per i campi all'interno di un messaggio di log.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source>The default setting for this property is the TAB character.</source>
          <target state="translated">L'impostazione predefinita di questa proprietà è il carattere TAB.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property allows you to change the default delimiter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> proprietà consente di modificare il delimitatore predefinito.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>Determines what to do when writing to the log file and there is less free disk space available than specified by the <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph> property.</source>
          <target state="translated">Determina quale comportamento seguire se durante la scrittura del file di log viene rilevato meno spazio libero su disco disponibile di quello specificato dalla proprietà <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph> property, or if the log file size is greater than what the <ph id="ph2">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /&gt;</ph> property allows.</source>
          <target state="translated">Determina il comportamento da adottare durante il tentativo di scrittura nel file di log quando lo spazio libero su disco è inferiore a quello specificato dalla proprietà <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph> o la dimensione del file di log è maggiore di quella consentita dalla proprietà <ph id="ph2">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>The default value is <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages&gt;</ph>, the log messages are silently discarded if there is not enough reserved disk space.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> è impostata su <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages&gt;</ph>, i messaggi di log vengono eliminati automaticamente se non è sufficiente spazio su disco riservato.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</source>
          <target state="translated">Si tratta del comportamento predefinito e impedisce alle applicazioni semplici non riesca se il disco sia pieno.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>More robust applications can set the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property to <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException&gt;</ph>, and add <ph id="ph3">`Try...Catch`</ph> blocks around all code that writes to the log.</source>
          <target state="translated">Le applicazioni più affidabili possono impostare il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> proprietà <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException&gt;</ph>e aggiungere <ph id="ph3">`Try...Catch`</ph> blocchi tutto il codice che scrive nel log.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> releases both managed and unmanaged resources; <ph id="ph2">&lt;see langword="False" /&gt;</ph> releases only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> rilascia sia le risorse gestite che quelle non gestite; <ph id="ph2">&lt;see langword="False" /&gt;</ph> rilascia solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>Closes the underlying stream and optionally releases the managed resources.</source>
          <target state="translated">Chiude il flusso sottostante ed eventualmente rilascia le risorse gestite. </target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`True`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> references.</source>
          <target state="translated">Se il parametro <ph id="ph1">`disposing`</ph> è <ph id="ph2">`True`</ph>, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> fa riferimento.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Il metodo richiama il metodo <ph id="ph1">`Dispose`</ph> di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> può essere chiamato più volte da altri oggetti.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">In caso di override di <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, non fare riferimento a oggetti già eliminati in una chiamata precedente a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>This method calls the <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> method of the base class, <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> metodo della classe di base, <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source>Gets or sets the encoding to use when creating a new log file.</source>
          <target state="translated">Ottiene o imposta la codifica da utilizzare durante la creazione di un nuovo file di log.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>, which is the encoding to use when creating a new log file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>, che rappresenta la codifica da utilizzare durante la creazione di un nuovo file di log.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source>The default value of this property is <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito di questa proprietà è <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source>When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> property.</source>
          <target state="translated">Se si aggiunge testo a un file di log esistente, la codifica per il file viene utilizzata anziché la codifica specificata dal <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
          <source>Flushes the underlying stream that writes to the current log file.</source>
          <target state="translated">Scarica il flusso sottostante che scrive ne file di log corrente.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> method to write all buffered data to the current log file.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> metodo per scrivere tutti i buffer di dati in file di log corrente.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>Gets the current full log-file name.</source>
          <target state="translated">Ottiene il nome corrente completo del file di log.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>, which is the current full log-file name.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>, che rappresenta il nome corrente completo del file di log.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> property gives the current full log-file name.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> proprietà fornisce il nome completo del file di log corrente.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</source>
          <target state="translated">Viene generato in base il percorso del log, il nome di base, la data e un numero per distinguerlo da diverse versioni del log.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>New log files are created on an as-needed basis.</source>
          <target state="translated">Nuovi file di log vengono creati in base alle esigenze.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The explicit form of the full log-file name is <ph id="ph1">`path`</ph><ph id="ph2">\\</ph><ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>][-<ph id="ph5">`iteration`</ph>].log, where:</source>
          <target state="translated">Il formato esplicito del nome completo del file di log è <ph id="ph1">`path`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>] [-<ph id="ph5">`iteration`</ph>]. log, dove:</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">`path`</ph> part is determined by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property and, if that property value is set to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, the <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">`path`</ph> parte è determinata dal <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> proprietà e, se il valore della proprietà è impostato su <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">`baseName`</ph> part is the fundamental log name, specified by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">`baseName`</ph> parte è il nome di log fondamentale, specificato da di <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">`dateStamp`</ph> part has the format YYYY-MM-DD, and it is shown when <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> is <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">`dateStamp`</ph> parte ha il formato AAAA-MM-GG, e viene mostrata se <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> è <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> o <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>If more than one log file is needed with the same <ph id="ph1">`baseName`</ph> and <ph id="ph2">`dateStamp`</ph>, the <ph id="ph3">`iteration`</ph> part, a positive <ph id="ph4">`Integer`</ph>, is added to the file name.</source>
          <target state="translated">Se è necessaria più di un file di log con lo stesso <ph id="ph1">`baseName`</ph> e <ph id="ph2">`dateStamp`</ph>, <ph id="ph3">`iteration`</ph> parte positivo <ph id="ph4">`Integer`</ph>, viene aggiunto al nome del file.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source>Gets the custom XML configuration attributes supported by the trace listener.</source>
          <target state="translated">Ottiene gli attributi di configurazione XML personalizzati supportati dal listener di traccia.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> array containing the XML configuration attributes recognized by this listener.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see langword="String" /&gt;</ph> contenente gli attributi di configurazione XML riconosciuti da questo listener.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source>The custom attributes for the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> can be used in the XML configuration file for controlling the behavior of an instance of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class.</source>
          <target state="translated">Gli attributi personalizzati per il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> può essere usato nel file di configurazione XML per controllare il comportamento di un'istanza del <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source>Using any other attribute causes a configuration exception.</source>
          <target state="translated">Utilizzo di qualsiasi altro attributo causa un'eccezione di configurazione.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>Indicates whether or not the host name of the logging machine should be included in the output.</source>
          <target state="translated">Indica se includere o meno nell'output il nome dell'host della macchina che esegue la registrazione.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>Use <ph id="ph1">&lt;see langword="True" /&gt;</ph> if the host identifier should be included; otherwise use <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;see langword="True" /&gt;</ph> se è necessario includere l'identificatore host; in caso contrario, utilizzare <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>The default value is <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>Use the property to configure the behavior of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> methods.</source>
          <target state="translated">Utilizzare la proprietà per configurare il comportamento del <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> e <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>Gets or sets location for the log files.</source>
          <target state="translated">Ottiene o imposta il percorso dei file di log.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" /&gt;</ph>, which is the location for the log file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" /&gt;</ph>, che rappresenta il percorso per il file di log.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The default value is <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property to set the log path to one of the predefined paths, determined by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> enumeration values.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> proprietà per impostare il percorso del log su uno dei percorsi predefiniti, determinati dal <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> valori di enumerazione.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source><bpt id="p1">**</bpt>Location value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Valore del percorso<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source><bpt id="p1">**</bpt>Path<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Percorso<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path for the application data that is shared among all users, with the format:</source>
          <target state="translated">Il percorso per i dati dell'applicazione condivisi fra tutti gli utenti, con il formato:</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>A typical value for <ph id="ph1">`BasePath`</ph> is:</source>
          <target state="translated">Un tipico valore per <ph id="ph1">`BasePath`</ph> è:</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>C:\Documents and Settings\All Users\Application Data</source>
          <target state="translated">C:\Documents and Settings\All Users\dati</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The values of <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, and <ph id="ph3">`ProductVersion`</ph> come from the assembly.</source>
          <target state="translated">I valori di <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, e <ph id="ph3">`ProductVersion`</ph> derivano dall'assembly.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path for the executable file that started the application.</source>
          <target state="translated">Percorso del file eseguibile che ha avviato l'applicazione.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path for the application data of a user, with the format:</source>
          <target state="translated">Il percorso per i dati dell'applicazione di un utente, con il formato:</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>A typical value for <ph id="ph1">`BasePath`</ph> is:</source>
          <target state="translated">Un tipico valore per <ph id="ph1">`BasePath`</ph> è:</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>C:\Documents and Settings<ph id="ph1">\\</ph><ph id="ph2">`username`</ph>\Application Data</source>
          <target state="translated">C:\Documents and Settings\<ph id="ph1">\\</ph><ph id="ph2">`username`</ph>\Dati applicazioni</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The values of <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, and <ph id="ph3">`ProductVersion`</ph> come form the assembly.</source>
          <target state="translated">I valori di <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, e <ph id="ph3">`ProductVersion`</ph> derivano dall'assembly.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path of the current system's temporary folder.</source>
          <target state="translated">Il percorso della cartella temporanea del sistema corrente.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>If the string specified by <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> is not empty, then use it as the path; otherwise use the path for the application data of a user.</source>
          <target state="translated">Se la stringa specificata da <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> è non vuoto, quindi utilizzarlo come percorso; in caso contrario, utilizzare il percorso per i dati dell'applicazione di un utente.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Determines which date to include in the names of the log files.</source>
          <target state="translated">Determina che data includere nei nomi dei file di log.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>This indicates which date to include in the log-file names.</source>
          <target state="translated">Indica la data da includere nei nomi dei file di log.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>The default value is <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Assign one of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;</ph> enumeration values to the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property to specify which date to include in the names of the log files.</source>
          <target state="translated">Assegnare uno del <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;</ph> valori di enumerazione per la <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> proprietà per specificare la data da includere nei nomi dei file di log.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>The format of the date is YYYY-MM-DD.</source>
          <target state="translated">Il formato della data è aaaa-MM-GG.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>For more information on the format of the log file name, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni sul formato del nome del file di log, vedere <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source><bpt id="p1">**</bpt>LogFileCreationSchedule value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Valore LogFileCreationSchedule<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source><bpt id="p1">**</bpt>Date in the log file name<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Data nel nome del file di log<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Include the current date in the log file name.</source>
          <target state="translated">Includere la data corrente nel nome del file di log.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Do not include the date in the log file name.</source>
          <target state="translated">Non includere la data nel nome del file di log.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Include the first day of the current week in the log file name.</source>
          <target state="translated">Includere il primo giorno della settimana corrente nel nome del file di log.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>The week starts on Saturday.</source>
          <target state="translated">La settimana inizia domenica.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>Gets or sets the maximum allowed size of the log file, in bytes.</source>
          <target state="translated">Ottiene o imposta la dimensione massima consentita in byte del file di log.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>This is the maximum allowed log-file size, in bytes.</source>
          <target state="translated">Dimensione massima consentita, in byte, per il file di log.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>The default value is 5000000.</source>
          <target state="translated">Il valore predefinito è 5000000.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>Use this property to make sure that the log files do not grow too large.</source>
          <target state="translated">Utilizzare questa proprietà per assicurarsi che i file di log non raggiungano dimensioni eccessive.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>If the log file size (in bytes) is greater than the value of this property, then when the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property.</source>
          <target state="translated">Se il file di log dimensioni (in byte) è maggiore del valore di questa proprietà, quindi quando il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe tenta di scrivere un messaggio nel log, il messaggio viene ignorato e l'errore è invisibile all'utente o un'eccezione viene generata in base al valore di <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph>proprietà.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph>.</source>
          <target state="translated">In caso contrario, il messaggio viene scritto nel log, se la quantità di spazio libero su disco (in byte) è minore di <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>When this property is set to a value less than 1000.</source>
          <target state="translated">Se questa proprietà è impostata su un valore minore di 1000.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</source>
          <target state="translated">Ottiene o imposta la quantità di spazio libero su disco in byte, necessaria per la scrittura dei messaggi nel file di log.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>This is the amount of free disk space necessary.</source>
          <target state="translated">Quantità di spazio libero su disco necessaria.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>The default value is 10000000.</source>
          <target state="translated">Il valore predefinito è 10000000.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>Use this property to make sure that the log files do not completely fill the disk.</source>
          <target state="translated">Utilizzare questa proprietà per assicurarsi che i file di log non riempiano completamente il disco.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>If the amount of free disk space (in bytes) is less than the value of this property, then when the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property.</source>
          <target state="translated">Se la quantità di disco spazio (in byte) è minore del valore di questa proprietà, quindi quando il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe tenta di scrivere un messaggio nel log, il messaggio viene ignorato e l'errore è invisibile all'utente o un'eccezione viene generata in base al valore di &lt; C2 &gt; <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph>  proprietà.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph>.</source>
          <target state="translated">In caso contrario, il messaggio viene scritto nel log, se le dimensioni del file di log (in byte) sono maggiore di <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>When this property is set to a value less than 0.</source>
          <target state="translated">Quando la proprietà è impostata su un valore minore di 0.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Writes trace data to the output file.</source>
          <target state="translated">Scrive dati di traccia nel file di output.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> metodi non sono destinati a essere chiamato dal codice dell'applicazione.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>These methods are called by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Questi metodi vengono chiamati dai membri del <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> per scrivere i dati di traccia nell'output.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">Nome dell'origine di traccia richiamata da questo metodo.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">Uno dei valori dell'enumerazione <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificatore numerico per l'evento.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The trace data to emit.</source>
          <target state="translated">I dati di traccia da creare.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes trace information, a data object, and event information to the output file or stream.</source>
          <target state="translated">Scrive informazioni di traccia, un oggetto dati e informazioni di evento nel file o nel flusso di output.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>This method:</source>
          <target state="translated">Questo metodo:</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Formats the data and context information for output.</source>
          <target state="translated">Formatta le informazioni di dati e il contesto per l'output.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Creates a new log file, if necessary.</source>
          <target state="translated">Crea un nuovo file di log, se necessario.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes the information to the log file.</source>
          <target state="translated">Scrive le informazioni nel file di log.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>For more information on creating new log files, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni sulla creazione di nuovi file di log, vedere <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The following table lists the output fields in the order they appear.</source>
          <target state="translated">Nella tabella seguente elenca i campi di output nell'ordine in cui appaiono.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and are followed by a line terminator.</source>
          <target state="translated">I campi sono delimitati dalla stringa che la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> proprietà specifica e sono seguiti da un terminatore di riga.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Campo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Condizione di output<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Descrizione<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated">Valore di <ph id="ph1">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">Il nome del valore di enumerazione <ph id="ph1">`eventType`</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated">Rappresentazione di stringa di <ph id="ph1">`id`</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of <ph id="ph1">`data`</ph>.</source>
          <target state="translated">Rappresentazione di stringa di <ph id="ph1">`data`</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Rappresentazione di stringa del <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Le impostazioni cultura invarianti viene utilizzata per la conversione di stringa.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Rappresentazione di stringa del <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Le impostazioni cultura invarianti viene utilizzata per la conversione di stringa.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Rappresentazione di stringa del <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Le impostazioni cultura invarianti viene utilizzata per la conversione di stringa.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> proprietà <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The name of the computer.</source>
          <target state="translated">Il nome del computer.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The name of the trace source that invoked this method.</source>
          <target state="translated">Nome dell'origine di traccia richiamata da questo metodo.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">Uno dei valori dell'enumerazione <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificatore numerico per l'evento.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>An array of objects to emit as data.</source>
          <target state="translated">Matrice di oggetti dati da creare come dati.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes trace information, an array of data objects, and event information to the output file or stream.</source>
          <target state="translated">Scrive informazioni di traccia, una matrice di oggetti dati e informazioni di evento nel flusso o nel file di output.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>This method:</source>
          <target state="translated">Questo metodo:</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Formats the data and context information for output,</source>
          <target state="translated">Formatta le informazioni di dati e il contesto per l'output,</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Creates a new log file, if necessary,</source>
          <target state="translated">Crea un nuovo file di log, se necessario,</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes the information to the log file.</source>
          <target state="translated">Scrive le informazioni nel file di log.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>For more information on creating new log files, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni sulla creazione di nuovi file di log, vedere <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>This table lists the output fields in the order they appear.</source>
          <target state="translated">Questa tabella elenca i campi di output nell'ordine in cui appaiono.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and are followed by a line terminator.</source>
          <target state="translated">I campi sono delimitati dalla stringa che la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> proprietà specifica e sono seguiti da un terminatore di riga.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Campo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Condizione di output<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Descrizione<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated">Valore di <ph id="ph1">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">Il nome del valore di enumerazione <ph id="ph1">`eventType`</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated">Rappresentazione di stringa di <ph id="ph1">`id`</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string consisting of the string representation of each element in <ph id="ph1">`data`</ph>, each separated by <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph>.</source>
          <target state="translated">La stringa composta da della rappresentazione di stringa di ogni elemento <ph id="ph1">`data`</ph>, ciascuno separato da <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Rappresentazione di stringa del <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Le impostazioni cultura invarianti viene utilizzata per la conversione di stringa.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Rappresentazione di stringa del <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Le impostazioni cultura invarianti viene utilizzata per la conversione di stringa.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Rappresentazione di stringa del <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Le impostazioni cultura invarianti viene utilizzata per la conversione di stringa.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> proprietà <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The name of the computer.</source>
          <target state="translated">Il nome del computer.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Writes trace and event information to the output file or stream.</source>
          <target state="translated">Scrive informazioni relative alle tracce e agli eventi nel file o flusso di output.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> metodi non sono destinati a essere chiamato dal codice dell'applicazione.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>These methods are called by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Questi metodi vengono chiamati dai membri del <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> per scrivere i dati di traccia nell'output.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">Nome dell'origine di traccia richiamata da questo metodo.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">Uno dei valori dell'enumerazione <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificatore numerico per l'evento.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A message to write.</source>
          <target state="translated">Messaggio da scrivere.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes trace information, a message and event information to the output file or stream.</source>
          <target state="translated">Scrive informazioni di traccia, un messaggio e informazioni di evento nel flusso o nel file di output.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>This method:</source>
          <target state="translated">Questo metodo:</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Formats the data and context information for output.</source>
          <target state="translated">Formatta le informazioni di dati e il contesto per l'output.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Creates a new log file, if necessary.</source>
          <target state="translated">Crea un nuovo file di log, se necessario.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes the information to the log file.</source>
          <target state="translated">Scrive le informazioni nel file di log.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>For more information on creating new log files, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni sulla creazione di nuovi file di log, vedere <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>This table lists the output fields in the order in which they appear.</source>
          <target state="translated">Questa tabella elenca i campi di output nell'ordine in cui appaiono.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and are followed by a line terminator.</source>
          <target state="translated">I campi sono delimitati dalla stringa che la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> proprietà specifica e sono seguiti da un terminatore di riga.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Campo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Condizione di output<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Descrizione<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated">Valore di <ph id="ph1">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">Il nome del valore di enumerazione <ph id="ph1">`eventType`</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated">Rappresentazione di stringa di <ph id="ph1">`id`</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The value of <ph id="ph1">`message`</ph>.</source>
          <target state="translated">Valore di <ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Rappresentazione di stringa del <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Le impostazioni cultura invarianti viene utilizzata per la conversione di stringa.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Rappresentazione di stringa del <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Le impostazioni cultura invarianti viene utilizzata per la conversione di stringa.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Rappresentazione di stringa del <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Le impostazioni cultura invarianti viene utilizzata per la conversione di stringa.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> proprietà <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The name of the computer.</source>
          <target state="translated">Il nome del computer.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">Nome dell'origine di traccia richiamata da questo metodo.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">Uno dei valori dell'enumerazione <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificatore numerico per l'evento.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A format string that contains zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Stringa di formato che contiene zero o più elementi di formato, corrispondenti a oggetti nella matrice <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see langword="Object" /&gt;</ph> array containing zero or more objects to format.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see langword="Object" /&gt;</ph> che contiene zero o più oggetti da formattare.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes trace information, a formatted array of objects, and event information to the output file or stream.</source>
          <target state="translated">Scrive informazioni di traccia, una matrice di oggetti formattata e informazioni di evento nel flusso o nel file di output.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>This method:</source>
          <target state="translated">Questo metodo:</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Formats the data and context information for output.</source>
          <target state="translated">Formatta le informazioni di dati e il contesto per l'output.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Creates a new a new log file, if necessary.</source>
          <target state="translated">Crea un nuovo un nuovo file di log, se necessario.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes the information to the log file.</source>
          <target state="translated">Scrive le informazioni nel file di log.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>For more information on creating new log file, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni sulla creazione di nuovi file di log, vedere <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>This table lists the output fields in the order in which they appear.</source>
          <target state="translated">Questa tabella elenca i campi di output nell'ordine in cui appaiono.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and followed by a line terminator.</source>
          <target state="translated">I campi sono delimitati dalla stringa che la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> proprietà specifica, seguita da un terminatore di riga.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Campo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Condizione di output<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Descrizione<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated">Valore di <ph id="ph1">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">Il nome del valore di enumerazione <ph id="ph1">`eventType`</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated">Rappresentazione di stringa di <ph id="ph1">`id`</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The data in <ph id="ph1">`args`</ph> formatted with the <ph id="ph2">`format`</ph> string and using the invariant culture for string conversions.</source>
          <target state="translated">I dati in <ph id="ph1">`args`</ph> formattato con il <ph id="ph2">`format`</ph> stringa e utilizza le impostazioni cultura invarianti per le conversioni di stringa.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Rappresentazione di stringa del <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Le impostazioni cultura invarianti viene utilizzata per la conversione di stringa.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Rappresentazione di stringa del <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Le impostazioni cultura invarianti viene utilizzata per la conversione di stringa.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag è impostato <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Rappresentazione di stringa del <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> proprietà <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Le impostazioni cultura invarianti viene utilizzata per la conversione di stringa.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> proprietà <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The name of the computer.</source>
          <target state="translated">Il nome del computer.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>The custom message to write.</source>
          <target state="translated">Messaggio personalizzato da scrivere.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>Writes a verbatim message to disk, without any additional context information.</source>
          <target state="translated">Scrive un messaggio testuale sul disco, senza ulteriori informazioni contestuali.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A&gt;</ph> method writes a specific message to the log file, without any additional context information.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A&gt;</ph> metodo scrive un messaggio specifico nel file di log, senza informazioni di contesto aggiuntive.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>Use the one of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> methods to include the context information in the log output.</source>
          <target state="translated">Utilizzare uno del <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> metodi per includere le informazioni di contesto nell'output del log.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>The custom message to write.</source>
          <target state="translated">Messaggio personalizzato da scrivere.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</source>
          <target state="translated">Scrive un messaggio testuale sul disco, seguito dal terminatore di riga corrente, senza ulteriori informazioni contestuali.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A&gt;</ph> method writes a specific message to the log file, without any additional context information.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A&gt;</ph> metodo scrive un messaggio specifico nel file di log, senza informazioni di contesto aggiuntive.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>Use the one of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> methods to include the context information in the log output.</source>
          <target state="translated">Utilizzare uno del <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> metodi per includere le informazioni di contesto nell'output del log.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>