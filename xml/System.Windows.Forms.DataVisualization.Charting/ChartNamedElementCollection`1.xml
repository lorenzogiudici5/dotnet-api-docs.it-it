<Type Name="ChartNamedElementCollection&lt;T&gt;" FullName="System.Windows.Forms.DataVisualization.Charting.ChartNamedElementCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91ec53f094aa302324b26816d1e545d22a0992c1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36360394" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChartNamedElementCollection&lt;T&gt; : System.Windows.Forms.DataVisualization.Charting.ChartElementCollection&lt;T&gt; where T : ChartNamedElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChartNamedElementCollection`1&lt;(class System.Windows.Forms.DataVisualization.Charting.ChartNamedElement) T&gt; extends System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.ChartNamedElementCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChartNamedElementCollection(Of T)&#xA;Inherits ChartElementCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : ChartNamedElementpublic ref class ChartNamedElementCollection abstract : System::Windows::Forms::DataVisualization::Charting::ChartElementCollection&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ChartNamedElementCollection&lt;'T (requires 'T :&gt; ChartNamedElement)&gt; = class&#xA;    inherit ChartElementCollection&lt;'T (requires 'T :&gt; ChartNamedElement)&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.ChartNamedElement</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.ChartElementCollection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="ee792-101">Un oggetto <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee792-101">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" /> object.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="ee792-102">Rappresenta la classe di base per tutte le raccolte di elementi del grafico denominati.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee792-102">Represents the base class for all collections of named chart elements.</span>
      </span>
      <span data-ttu-id="ee792-103">Gestisce i nomi e ne impone l'univocit√†.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee792-103">Performs name management and enforces the uniqueness of the names.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FindByName">
      <MemberSignature Language="C#" Value="public virtual T FindByName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T FindByName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartNamedElementCollection`1.FindByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindByName (name As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T FindByName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member FindByName : string -&gt; 'T&#xA;override this.FindByName : string -&gt; 'T" Usage="chartNamedElementCollection.FindByName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ee792-104">Nome dell'elemento del grafico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-104">The name of the chart element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee792-105">Trova un elemento del grafico in base al nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-105">Finds the chart element by the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee792-106">Oggetto <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" /> nell'insieme con il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-106">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" /> object of the specified name in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartNamedElementCollection`1.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.IndexOf : string -&gt; int" Usage="chartNamedElementCollection.IndexOf name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ee792-107">Nome dell'elemento del grafico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-107">The name of the chart element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee792-108">Trova l'indice dell'elemento del grafico con il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-108">Finds the index of the chart element with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee792-109">Valore <see langword="integer" /> che rappresenta la posizione dell'elemento del grafico in un indice in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-109">An <see langword="integer" /> value that represents the position of the chart element in the zero-based index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartNamedElementCollection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, T item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'T -&gt; unit" Usage="chartNamedElementCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ee792-110">Indice in base zero in cui inserire l'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-110">The zero-based index where the item is to be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ee792-111">Oggetto da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-111">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee792-112">Inserisce l'elemento specificato nell'insieme in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-112">Inserts the specified item in the collection at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUniqueName">
      <MemberSignature Language="C#" Value="public virtual bool IsUniqueName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUniqueName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartNamedElementCollection`1.IsUniqueName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsUniqueName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUniqueName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member IsUniqueName : string -&gt; bool&#xA;override this.IsUniqueName : string -&gt; bool" Usage="chartNamedElementCollection.IsUniqueName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.DataVisualization.Charting.INameController.IsUniqueName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ee792-113">Nome del nuovo elemento del grafico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-113">The new chart element name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee792-114">Determina se l'elemento del grafico con il nome specificato esiste gi√† nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-114">Determines whether the chart element with the specified name already exists in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee792-115">
            <see langword="True" /> se il nome del nuovo elemento del grafico √® univoco. In caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-115">
              <see langword="True" /> if the new chart element name is unique, otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartNamedElementCollection`1.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[System::String ^] { T get(System::String ^ name); void set(System::String ^ name, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : 'T with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartNamedElementCollection&lt;'T (requires 'T :&gt; System.Windows.Forms.DataVisualization.Charting.ChartNamedElement)&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ee792-116">Nome dell'elemento del grafico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-116">The name of the chart element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee792-117">Ottiene o imposta l'elemento del grafico con il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-117">Gets or sets the chart element with the specified name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee792-118">Oggetto <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" /> nell'insieme con il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-118">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" /> object of the specified name in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamePrefix">
      <MemberSignature Language="C#" Value="protected virtual string NamePrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartNamedElementCollection`1.NamePrefix" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property NamePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ NamePrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamePrefix : string" Usage="System.Windows.Forms.DataVisualization.Charting.ChartNamedElementCollection&lt;'T (requires 'T :&gt; System.Windows.Forms.DataVisualization.Charting.ChartNamedElement)&gt;.NamePrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee792-119">Ottiene il prefisso del nome utilizzato per creare nomi univoci degli elementi del grafico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-119">Gets the name prefix that is used to create unique chart element names.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee792-120">Valore <see langword="string" /> che rappresenta il prefisso del nome predefinito degli elementi del grafico archiviati nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-120">A <see langword="string" /> value that represents the default name prefix of the chart elements stored in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextUniqueName">
      <MemberSignature Language="C#" Value="public virtual string NextUniqueName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NextUniqueName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartNamedElementCollection`1.NextUniqueName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextUniqueName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ NextUniqueName();" />
      <MemberSignature Language="F#" Value="abstract member NextUniqueName : unit -&gt; string&#xA;override this.NextUniqueName : unit -&gt; string" Usage="chartNamedElementCollection.NextUniqueName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee792-121">Trova il nome univoco per il nuovo elemento da aggiungere all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-121">Finds the unique name for the new element to be added to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee792-122">Valore <see langword="string" /> che rappresenta il successivo nome univoco dell'elemento del grafico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-122">A <see langword="string" /> value that represents the next unique chart element name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartNamedElementCollection`1.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="chartNamedElementCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ee792-123">Indice in base zero dell'elemento del grafico da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-123">The zero-based index of the chart element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee792-124">Rimuove l'elemento del grafico in corrispondenza dell'indice specificato nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-124">Removes the chart element at the specified index of the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartNamedElementCollection`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * 'T -&gt; unit" Usage="chartNamedElementCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ee792-125">Indice in base zero dell'elemento del grafico da sostituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-125">The zero-based index of the chart element to replace.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ee792-126">Nuovo elemento del grafico da inserire in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-126">The new chart element to insert at the specified index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee792-127">Sostituisce l'elemento del grafico in corrispondenza dell'indice specificato con un nuovo elemento del grafico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee792-127">Replaces the chart element at the specified index with a new chart element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>