<Type Name="StatisticFormula" FullName="System.Windows.Forms.DataVisualization.Charting.StatisticFormula">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe94b8b43688179da9c74296687175f9fcce213d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36358279" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StatisticFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatisticFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />
  <TypeSignature Language="VB.NET" Value="Public Class StatisticFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class StatisticFormula" />
  <TypeSignature Language="F#" Value="type StatisticFormula = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d3f7a-101">Calcola formule statistiche.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d3f7a-101">Calculates statistical formulas.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3f7a-102">Le formule possono essere raggruppate approssimativamente nelle categorie seguenti: le distribuzioni, incluse le distribuzioni inverse; test; e formule statistiche di base.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-102">Formulas can be loosely grouped into the following categories: distributions, including inverse distributions; tests; and basic statistical formulas.</span></span> <span data-ttu-id="d3f7a-103">Ogni gruppo ha caratteristiche comuni per quanto riguarda i relativi valori di input e restituiti.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-103">Each group has common characteristics with respect to their input and return values.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anova">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova (double probability, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova(float64 probability, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Anova (probability As Double, inputSeriesNames As String) As AnovaResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::AnovaResult ^ Anova(double probability, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Anova : double * string -&gt; System.Windows.Forms.DataVisualization.Charting.AnovaResult" Usage="statisticFormula.Anova (probability, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AnovaResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="d3f7a-104">Valore alfa che indica la probabilità che l'ipotesi venga rifiutata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-104">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="d3f7a-105">L'intervallo consentito è 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-105">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="inputSeriesNames">
          <span data-ttu-id="d3f7a-106">Elenco di nomi di serie di input delimitato da virgole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-106">A comma-delimited list of input series names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-107">Esegue un test ANOVA per determinare se è presente una differenza statisticamente significativa tra i valori medi di due o più gruppi di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-107">Performs an ANOVA test to determine whether there is a statistically significant difference between the mean values of two or more groups of data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-108">Oggetto <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnovaResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-108">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnovaResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3f7a-109">Un test ANOVA viene usato per testare la differenza tra i valori medi di due o più gruppi di dati.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-109">An ANOVA test is used to test the difference between the means of two or more groups of data.</span></span>  
  
 <span data-ttu-id="d3f7a-110">È necessario specificare due o più gruppi di serie dati e ogni serie deve avere lo stesso numero di punti dati. in caso contrario, verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-110">Two or more groups of series data must be specified, and each series must have the same number of data points; otherwise, an exception will be raised.</span></span>  
  
 <span data-ttu-id="d3f7a-111">Se una serie di input specificata non esiste nel <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> al momento della chiamata al metodo, verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-111">If a specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaFunction">
      <MemberSignature Language="C#" Value="public double BetaFunction (double m, double n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 BetaFunction(float64 m, float64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaFunction (m As Double, n As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BetaFunction(double m, double n);" />
      <MemberSignature Language="F#" Value="member this.BetaFunction : double * double -&gt; double" Usage="statisticFormula.BetaFunction (m, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double" />
        <Parameter Name="n" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="d3f7a-112">Primo valore per la funzione beta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-112">The first value for the beta function.</span>
          </span>
        </param>
        <param name="n">
          <span data-ttu-id="d3f7a-113">Secondo valore per la funzione beta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-113">The second value for the beta function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-114">Restituisce il valore della funzione beta per due valori specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-114">Returns the beta function value for two given values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-115">Valore <see langword="double" /> che rappresenta la funzione beta per due valori specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-115">A <see langword="double" /> value that represents the beta function for the two given values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3f7a-116">Questo metodo restituisce il valore della funzione beta per due valori specificati che sono specificati da `m` e `n`.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-116">This method returns the beta function value for two given values that are specified by `m` and `n`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlation">
      <MemberSignature Language="C#" Value="public double Correlation (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Correlation(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Correlation (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Correlation(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Correlation : string * string -&gt; double" Usage="statisticFormula.Correlation (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">
          <span data-ttu-id="d3f7a-117">Nome della prima serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-117">The first input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="d3f7a-118">Nome della seconda serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-118">The second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-119">Restituisce il valore di correlazione per due serie di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-119">Returns the correlation value for two data series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-120">Valore <see langword="double" /> che rappresenta la correlazione tra due serie di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-120">A <see langword="double" /> value that represents the correlation between two data series.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3f7a-121">Correlazione misura la relazione tra due set di dati che vengono ridimensionati per essere indipendente dall'unità di misura.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-121">Correlation measures the relationship between two data sets that are scaled to be independent of the unit of measurement.</span></span> <span data-ttu-id="d3f7a-122">Il <xref:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation%2A> metodo restituisce la covarianza di due set di dati diviso per il prodotto delle rispettive deviazioni standard e sempre compreso tra -1 e 1.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-122">The <xref:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation%2A> method returns the covariance of two data sets divided by the product of their standard deviations, and always ranges from -1 to 1.</span></span>  
  
 <span data-ttu-id="d3f7a-123">Utilizzare la correlazione per determinare se due intervalli di dati crescono; vale a dire, se i valori di grandi dimensioni di un set sono associati a valori di grandi dimensioni di altri (correlazione positiva), se valori bassi di un set sono associati a valori di grandi dimensioni di altri (correlazione negativo) o se i valori in entrambi i set sono (non correlato correlazione vicino a zero).</span><span class="sxs-lookup"><span data-stu-id="d3f7a-123">Use correlation to determine whether two ranges of data move together; that is, whether large values of one set are associated with large values of the other (positive correlation), whether small values of one set are associated with large values of the other (negative correlation), or whether values in both sets are unrelated (correlation near zero).</span></span>  
  
 <span data-ttu-id="d3f7a-124">Se una serie di input specificata non esiste nella raccolta di serie al momento della chiamata al metodo, verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-124">If a specified input series does not exist in the series collection at the time of the method call, an exception will be thrown.</span></span> <span data-ttu-id="d3f7a-125">Verrà inoltre generata un'eccezione se la serie specificata non è lo stesso numero di punti dati.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-125">An exception will also be raised if the specified series do not have the same number of data points.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance">
      <MemberSignature Language="C#" Value="public double Covariance (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Covariance(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Covariance : string * string -&gt; double" Usage="statisticFormula.Covariance (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">
          <span data-ttu-id="d3f7a-126">Nome della prima serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-126">The first input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="d3f7a-127">Nome della seconda serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-127">The second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-128">Restituisce il valore di covarianza per due serie di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-128">Returns the covariance value for two data series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-129">Valore <see langword="double" /> che rappresenta la covarianza tra due serie di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-129">A <see langword="double" /> value that represents the covariance between two data series.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FDistribution">
      <MemberSignature Language="C#" Value="public double FDistribution (double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 FDistribution(float64 value, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FDistribution (value As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FDistribution(double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.FDistribution : double * int * int -&gt; double" Usage="statisticFormula.FDistribution (value, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d3f7a-130">Valore f.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-130">The F value.</span>
          </span>
        </param>
        <param name="firstDegreeOfFreedom">
          <span data-ttu-id="d3f7a-131">Primo grado di libertà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-131">First degree of freedom.</span>
          </span>
        </param>
        <param name="secondDegreeOfFreedom">
          <span data-ttu-id="d3f7a-132">Secondo grado di libertà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-132">Second degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-133">Restituisce la probabilità della funzione di distribuzione F cumulativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-133">Returns the cumulative F distribution function probability.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-134">Valore <see langword="double" /> che rappresenta la probabilità della funzione di distribuzione F cumulativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-134">A <see langword="double" /> value that represents the cumulative F distribution function probability.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.FTestResult FTest (double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.FTestResult FTest(float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FTest (probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As FTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::FTestResult ^ FTest(double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.FTest : double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.FTestResult" Usage="statisticFormula.FTest (probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="d3f7a-135">Valore alfa che indica la probabilità che l'ipotesi venga rifiutata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-135">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="d3f7a-136">L'intervallo consentito è 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-136">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="d3f7a-137">Nome della prima serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-137">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="d3f7a-138">Nome della seconda serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-138">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-139">Esegue un test F con due campioni utilizzando la distribuzione F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-139">Performs a two-sample F Test using the F distribution.</span>
          </span>
          <span data-ttu-id="d3f7a-140">Questo test viene utilizzato per determinare se i campioni hanno varianze diverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-140">This test is used to determine if the samples have different variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-141">Oggetto <see cref="T:System.Windows.Forms.DataVisualization.Charting.FTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-141">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.FTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaFunction">
      <MemberSignature Language="C#" Value="public double GammaFunction (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GammaFunction(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaFunction (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaFunction(double value);" />
      <MemberSignature Language="F#" Value="member this.GammaFunction : double -&gt; double" Usage="statisticFormula.GammaFunction value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d3f7a-142">Variabile di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-142">The input variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-143">Restituisce il valore della funzione beta per due valori specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-143">Returns the gamma function value for the given variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-144">Valore <see langword="double" /> che rappresenta la funzione gamma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-144">A <see langword="double" /> value that represents the gamma function.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseFDistribution">
      <MemberSignature Language="C#" Value="public double InverseFDistribution (double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseFDistribution(float64 probability, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseFDistribution (probability As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseFDistribution(double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseFDistribution : double * int * int -&gt; double" Usage="statisticFormula.InverseFDistribution (probability, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="d3f7a-145">Valore alfa che indica la probabilità che l'ipotesi venga rifiutata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-145">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="d3f7a-146">L'intervallo consentito è 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-146">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstDegreeOfFreedom">
          <span data-ttu-id="d3f7a-147">Primo grado di libertà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-147">First degree of freedom.</span>
          </span>
        </param>
        <param name="secondDegreeOfFreedom">
          <span data-ttu-id="d3f7a-148">Secondo grado di libertà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-148">Second degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-149">Restituisce l'inverso della distribuzione cumulativa F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-149">Returns the inverse of the F cumulative distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-150">Valore <see langword="double" /> dalla funzione di distribuzione F inversa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-150">A <see langword="double" /> value from the inverse F distribution function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3f7a-151">Questo metodo restituisce il valore F per la probabilità della distribuzione F specificato.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-151">This method returns the F value for the given F distribution probability.</span></span>  
  
 <span data-ttu-id="d3f7a-152">La distribuzione F è utilizzabile in un test F che confronta il livello di variabilità nelle due set di dati.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-152">The F distribution can be used in an F-test that compares the degree of variability in two data sets.</span></span>  
  
 <span data-ttu-id="d3f7a-153">Questo metodo può restituire un'eccezione a seconda dei valori di parametro.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-153">This method may return an exception depending on the parameter values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d3f7a-154">Condizione: impossibile continuare il calcolo usando i valori di parametro specificati a causa di restrizioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-154">Condition: Cannot continue calculation using specified parameter values because of limitation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InverseNormalDistribution">
      <MemberSignature Language="C#" Value="public double InverseNormalDistribution (double probability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseNormalDistribution(float64 probability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseNormalDistribution (probability As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseNormalDistribution(double probability);" />
      <MemberSignature Language="F#" Value="member this.InverseNormalDistribution : double -&gt; double" Usage="statisticFormula.InverseNormalDistribution probability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="d3f7a-155">Valore alfa che indica la probabilità che l'ipotesi venga rifiutata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-155">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="d3f7a-156">L'intervallo consentito è 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-156">The allowable range is 0-1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-157">Restituisce l'inverso della distribuzione cumulativa normale standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-157">Returns the inverse of the standard normal cumulative distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-158">Valore <see langword="double" /> della funzione di distribuzione cumulativa normale standard inversa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-158">A <see langword="double" /> value from the inverse standard normal cumulative distribution function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3f7a-159">Questo metodo restituisce il valore F per la probabilità della distribuzione F specificato.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-159">This method returns the F value for the given F distribution probability.</span></span>  
  
 <span data-ttu-id="d3f7a-160">Si presuppone che la distribuzione ha media 0 (zero) e una deviazione standard pari a 1.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-160">It is assumed that the distribution has a mean of 0 (zero) and a standard deviation of one.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseTDistribution">
      <MemberSignature Language="C#" Value="public double InverseTDistribution (double probability, int degreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseTDistribution(float64 probability, int32 degreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseTDistribution (probability As Double, degreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseTDistribution(double probability, int degreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseTDistribution : double * int -&gt; double" Usage="statisticFormula.InverseTDistribution (probability, degreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="d3f7a-161">Valore alfa che indica la probabilità che l'ipotesi venga rifiutata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-161">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="d3f7a-162">L'intervallo consentito è 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-162">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="degreeOfFreedom">
          <span data-ttu-id="d3f7a-163">Grado di libertà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-163">The degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-164">Restituisce il valore t inverso della distribuzione t di Student come funzione di probabilità e grado di libertà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-164">Returns the inverse t-value of the Students t-distribution as a function of probability and degree of freedom.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-165">Valore <see langword="double" /> che rappresenta la distribuzione t inversa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-165">A <see langword="double" /> value that represents the inverse T distribution.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3f7a-166">Questo metodo restituisce il valore di t per la probabilità della distribuzione T specificato.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-166">This method returns the t value for the given T distribution probability.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mean">
      <MemberSignature Language="C#" Value="public double Mean (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Mean(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Mean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mean (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Mean(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Mean : string -&gt; double" Usage="statisticFormula.Mean inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="d3f7a-167">Nome della serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-167">Input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-168">Restituisce la media di tutti i punti dati archiviati nella serie specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-168">Returns the average of all data points stored in the specified series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-169">Valore <see langword="double" /> che rappresenta la media di tutti i punti dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-169">A <see langword="double" /> value that represents the average of all data points.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3f7a-170">Usare questo metodo per calcolare la media (vale a dire, la media) dei punti archiviati in una serie.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-170">Use this method to calculate the mean (that is, the average) of the points stored in a series.</span></span>  
  
 <span data-ttu-id="d3f7a-171">Se la serie di input specificata non esiste nel <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> al momento della chiamata al metodo, verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-171">If the specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Median">
      <MemberSignature Language="C#" Value="public double Median (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Median(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Median(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Median (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Median(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Median : string -&gt; double" Usage="statisticFormula.Median inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="d3f7a-172">Nome della serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-172">Input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-173">Restituisce la mediana di tutti i punti dati nella serie specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-173">Returns the median of all data points in the specified series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-174">Valore <see langword="double" /> che rappresenta la mediana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-174">A <see langword="double" /> value that represents the median.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3f7a-175">Usare questo metodo per calcolare la mediana dei punti archiviati in una serie.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-175">Use this method to calculate the median of the points stored in a series.</span></span>  
  
 <span data-ttu-id="d3f7a-176">Il valore mediano è il valore medio di un set di esempio, in cui metà dei membri sono valori più grandi e metà dei membri sono minori dimensioni.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-176">The median is the middle value of a sample set, where half of the members are greater in size and half the members are lesser in size.</span></span>  
  
 <span data-ttu-id="d3f7a-177">Se la serie di input specificata non esiste nel <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> al momento della chiamata al metodo, verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d3f7a-177">If the specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalDistribution">
      <MemberSignature Language="C#" Value="public double NormalDistribution (double zValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 NormalDistribution(float64 zValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormalDistribution (zValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormalDistribution(double zValue);" />
      <MemberSignature Language="F#" Value="member this.NormalDistribution : double -&gt; double" Usage="statisticFormula.NormalDistribution zValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="zValue">
          <span data-ttu-id="d3f7a-178">Valore z per cui è richiesta la probabilità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-178">The Z value for which the probability is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-179">Restituisce la probabilità per la funzione di distribuzione cumulativa normale standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-179">Returns the probability for the standard normal cumulative distribution function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-180">Valore <see langword="double" /> della funzione di distribuzione cumulativa normale standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-180">A <see langword="double" /> value from the standard normal cumulative distribution function.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TDistribution">
      <MemberSignature Language="C#" Value="public double TDistribution (double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 TDistribution(float64 value, int32 degreeOfFreedom, bool oneTail) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TDistribution (value As Double, degreeOfFreedom As Integer, oneTail As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TDistribution(double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="F#" Value="member this.TDistribution : double * int * bool -&gt; double" Usage="statisticFormula.TDistribution (value, degreeOfFreedom, oneTail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
        <Parameter Name="oneTail" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d3f7a-181">Valore t</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-181">The T value</span>
          </span>
        </param>
        <param name="degreeOfFreedom">
          <span data-ttu-id="d3f7a-182">Grado di libertà</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-182">Degree of freedom</span>
          </span>
        </param>
        <param name="oneTail">
          <span data-ttu-id="d3f7a-183">Se <see langword="true" />, viene utilizzata una distribuzione a una coda. In caso contrario viene utilizzata una distribuzione a due code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-183">If <see langword="true" />, a one-tailed distribution is used; otherwise, a two-tailed distribution is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-184">Restituisce la probabilità per la distribuzione t (distribuzione di Student).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-184">Returns the probability for the T distribution (Student's distribution).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-185">Valore <see langword="double" /> che rappresenta una funzione cumulativa della distribuzione t.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-185">A <see langword="double" /> value that represents a T Distribution cumulative function.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestEqualVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestEqualVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestEqualVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestEqualVariances : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestEqualVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="d3f7a-186">Differenza media ipotizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-186">Hypothesized mean difference.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="d3f7a-187">Valore alfa che indica la probabilità che l'ipotesi venga rifiutata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-187">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="d3f7a-188">L'intervallo consentito è 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-188">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="d3f7a-189">Nome della prima serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-189">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="d3f7a-190">Nome della seconda serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-190">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-191">Esegue un test t utilizzando la distribuzione di Student (distribuzione t) con varianze uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-191">Performs a T Test using Student's distribution (T distribution) with equal variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-192">Un oggetto <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-192">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestPaired">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestPaired (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestPaired(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestPaired : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestPaired (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="d3f7a-193">Differenza media ipotizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-193">Hypothesized mean difference.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="d3f7a-194">Valore alfa che indica la probabilità che l'ipotesi venga rifiutata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-194">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="d3f7a-195">L'intervallo consentito è 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-195">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="d3f7a-196">Nome della prima serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-196">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="d3f7a-197">Nome della seconda serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-197">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-198">Esegue un test t utilizzando la distribuzione di Student (distribuzione t) con campioni accoppiati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-198">Performs a T Test using Student's distribution (T distribution) with paired samples.</span>
          </span>
          <span data-ttu-id="d3f7a-199">Questo test è utile quando è presente un accoppiamento naturale di osservazioni nei campioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-199">This is useful when there is a natural pairing of observations in samples.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-200">Un oggetto <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-200">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestUnequalVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestUnequalVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestUnequalVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestUnequalVariances : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestUnequalVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="d3f7a-201">Differenza media ipotizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-201">Hypothesized mean difference.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="d3f7a-202">Valore alfa che indica la probabilità che l'ipotesi venga rifiutata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-202">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="d3f7a-203">L'intervallo consentito è 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-203">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="d3f7a-204">Nome della prima serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-204">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="d3f7a-205">Nome della seconda serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-205">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-206">Esegue un test t utilizzando la distribuzione di Student (distribuzione t) con varianze disuguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-206">Performs a T Test using Student's distribution (T distribution) with unequal variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-207">Un oggetto <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-207">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variance">
      <MemberSignature Language="C#" Value="public double Variance (string inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Variance(string inputSeriesName, bool sampleVariance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Variance (inputSeriesName As String, sampleVariance As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Variance(System::String ^ inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="F#" Value="member this.Variance : string * bool -&gt; double" Usage="statisticFormula.Variance (inputSeriesName, sampleVariance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="sampleVariance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="d3f7a-208">Nome della serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-208">The input series name.</span>
          </span>
        </param>
        <param name="sampleVariance">
          <span data-ttu-id="d3f7a-209">
            <see langword="True" /> se i dati sono un campione della popolazione. <see langword="false" /> se i dati sono l'intera popolazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-209">
              <see langword="True" /> if the data is a sample of the population; <see langword="false" /> if the data is the entire population.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-210">Restituisce la varianza per una serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-210">Returns the variance for a series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-211">Valore <see langword="double" /> che rappresenta la varianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-211">A <see langword="double" /> value that represents the variance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest (double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest(float64 hypothesizedMeanDifference, float64 varianceFirstGroup, float64 varianceSecondGroup, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ZTest (hypothesizedMeanDifference As Double, varianceFirstGroup As Double, varianceSecondGroup As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As ZTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::ZTestResult ^ ZTest(double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.ZTest : double * double * double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.ZTestResult" Usage="statisticFormula.ZTest (hypothesizedMeanDifference, varianceFirstGroup, varianceSecondGroup, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ZTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="varianceFirstGroup" Type="System.Double" />
        <Parameter Name="varianceSecondGroup" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="d3f7a-212">Differenza media ipotizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-212">Hypothesized mean difference.</span>
          </span>
        </param>
        <param name="varianceFirstGroup">
          <span data-ttu-id="d3f7a-213">Varianza del primo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-213">Variance of the first group.</span>
          </span>
        </param>
        <param name="varianceSecondGroup">
          <span data-ttu-id="d3f7a-214">Varianza del secondo gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-214">Variance of the second group.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="d3f7a-215">Valore alfa che indica la probabilità che l'ipotesi venga rifiutata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-215">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="d3f7a-216">L'intervallo consentito è 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-216">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="d3f7a-217">Nome della prima serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-217">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="d3f7a-218">Nome della seconda serie di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-218">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3f7a-219">Esegue un test z utilizzando la distribuzione normale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-219">Performs a Z Test using the Normal distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3f7a-220">Un oggetto <see cref="T:System.Windows.Forms.DataVisualization.Charting.ZTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3f7a-220">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ZTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>