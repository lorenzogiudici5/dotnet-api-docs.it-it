<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RuleExpressionWalker.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56686367a16010c4fb9b7c9a90571b78d95a7be39.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6686367a16010c4fb9b7c9a90571b78d95a7be39</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Activities.Rules.RuleExpressionWalker">
          <source>Propagates the current behavior in the expression to child nodes.</source>
          <target state="translated">Propaga il comportamento corrente all'interno dell'espressione ai nodi figlio.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Workflow.Activities.Rules.RuleExpressionWalker">
          <source>This class cannot be inherited.</source>
          <target state="translated">Questa classe non può essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Activities.Rules.RuleExpressionWalker">
          <source>This class is used by all <ph id="ph1">&lt;xref:System.Workflow.Activities.Rules.IRuleExpression&gt;</ph> methods to propagate behavior to child nodes.</source>
          <target state="translated">Questa classe è utilizzata da tutti i metodi <ph id="ph1">&lt;xref:System.Workflow.Activities.Rules.IRuleExpression&gt;</ph> per propagare il comportamento ai nodi figlio.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /&gt;</ph> instance that stores symbols representing the properties and fields used by rule conditions and actions.</source>
          <target state="translated">Istanza <ph id="ph1">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /&gt;</ph> che archivia i simboli che rappresentano le proprietà e i campi utilizzati da condizioni e azioni della regola.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
          <source>The expression being executed.</source>
          <target state="translated">Espressione in esecuzione.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if fields and properties read by a <ph id="ph2">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAction" /&gt;</ph> are to be added to <ph id="ph3">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se campi e proprietà letti da una classe <ph id="ph2">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAction" /&gt;</ph> devono essere aggiunti a <ph id="ph3">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /&gt;</ph>. In caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if fields and properties written by a <ph id="ph2">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAction" /&gt;</ph> are to be added to <ph id="ph3">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se campi e proprietà scritti da una classe <ph id="ph2">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAction" /&gt;</ph> devono essere aggiunti a <ph id="ph3">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /&gt;</ph>. In caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
          <source>The path of a field or property determined up to this point.</source>
          <target state="translated">Percorso di un campo o di una proprietà determinato fino a questo punto.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
          <source>Identifies the fields and properties used by an expression and adds these as symbols to the <ph id="ph1">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /&gt;</ph> instance.</source>
          <target state="translated">Identifica i campi e le proprietà utilizzate da un'espressione e li aggiunge come simboli all'istanza <ph id="ph1">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
          <source><ph id="ph1">&lt;paramref name="analysis" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="analysis" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)">
          <source>The expression that the clone is based on.</source>
          <target state="translated">Espressione sulla quale viene basata la copia.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)">
          <source>Creates a deep copy of the child nodes of the current <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>.</source>
          <target state="translated">Crea una copia completa dei nodi figlio della classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> that is identical to this instance.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> identica all’istanza.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> that contains the mutable string of characters.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> che contiene la stringa mutabile di caratteri.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
          <source>The parent <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>.</source>
          <target state="translated">Elemento padre <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
          <source>Decompiles the child nodes of the expression into string form.</source>
          <target state="translated">Decompila i nodi figlio dell'espressione in formato stringa.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Activities.Rules.RuleExecution" /&gt;</ph> to execute the expression.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Workflow.Activities.Rules.RuleExecution" /&gt;</ph> per l'esecuzione dell'espressione.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> to evaluate.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> da valutare.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)">
          <source>Evaluates the expression and all child expressions.</source>
          <target state="translated">Valuta l'espressione e tutte le espressioni figlio.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Activities.Rules.RuleExpressionResult" /&gt;</ph> that indicates the result of the expression evaluation.</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Workflow.Activities.Rules.RuleExpressionResult" /&gt;</ph> che indica il risultato della valutazione dell'espressione.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)">
          <source><ph id="ph1">&lt;paramref name="execution" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="execution" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> in the comparison.</source>
          <target state="translated">La prima classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> nel confronto.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> in the comparison.</source>
          <target state="translated">La seconda classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> nel confronto.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
          <source>Compares the current expression and child nodes to another expression to determine whether they are equal.</source>
          <target state="translated">Confronta l'espressione corrente e i nodi figlio con un'altra espressione per determinare se sono uguali.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the expressions are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se le espressioni sono uguali. In caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Activities.Rules.RuleValidation" /&gt;</ph> to manage the validation process.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Workflow.Activities.Rules.RuleValidation" /&gt;</ph> per la gestione del processo di convalida.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> to evaluate.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> da valutare.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if fields and properties written by a <ph id="ph2">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAction" /&gt;</ph> are stored in by <ph id="ph3">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se campi e proprietà scritti da una classe <ph id="ph2">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAction" /&gt;</ph> sono immagazzinati da <ph id="ph3">&lt;see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /&gt;</ph>. In caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)">
          <source>Verifies that the expression and child nodes are configured correctly and has no errors.</source>
          <target state="translated">Verifica che l'espressione e i nodi figlio siano configurati correttamente e privi di errori.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" /&gt;</ph> per l'oggetto <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="validation" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="validation" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="expression" /&gt;</ph> is null and the errors collection on the <ph id="ph2">&lt;see cref="T:System.Workflow.Activities.Rules.RuleValidation" /&gt;</ph> object is a null reference (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated">L'<ph id="ph1">&lt;paramref name="expression" /&gt;</ph> è null e la raccolta di errori nell'oggetto <ph id="ph2">&lt;see cref="T:System.Workflow.Activities.Rules.RuleValidation" /&gt;</ph> è un riferimento null (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>