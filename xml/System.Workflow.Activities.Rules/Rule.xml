<Type Name="Rule" FullName="System.Workflow.Activities.Rules.Rule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f22e2b373f2bd6daea0448b27f8d21830960c4b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36455486" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Rule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Rule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.Rule" />
  <TypeSignature Language="VB.NET" Value="Public Class Rule" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rule" />
  <TypeSignature Language="F#" Value="type Rule = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definisce una condizione con un set associato di azioni da eseguire.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una classe <xref:System.Workflow.Activities.Rules.Rule> è costituita da una classe <xref:System.Workflow.Activities.Rules.RuleCondition> e da una o da entrambe le raccolte <xref:System.Workflow.Activities.Rules.Rule.ThenActions%2A> e <xref:System.Workflow.Activities.Rules.Rule.ElseActions%2A>.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come creare un oggetto <xref:System.Workflow.Activities.Rules.Rule> denominato.  
  
```csharp  
private Rule firstRule = new Rule("firstRule");  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.Rule : string -&gt; System.Workflow.Activities.Rules.Rule" Usage="new System.Workflow.Activities.Rules.Rule name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome di <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.Rules.Rule" /> mediante il nome dell'elemento <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rule (string name, System.Workflow.Activities.Rules.RuleCondition condition, System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; thenActions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Workflow.Activities.Rules.RuleCondition condition, class System.Collections.Generic.IList`1&lt;class System.Workflow.Activities.Rules.RuleAction&gt; thenActions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, condition As RuleCondition, thenActions As IList(Of RuleAction))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rule(System::String ^ name, System::Workflow::Activities::Rules::RuleCondition ^ condition, System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ thenActions);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.Rule : string * System.Workflow.Activities.Rules.RuleCondition * System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; -&gt; System.Workflow.Activities.Rules.Rule" Usage="new System.Workflow.Activities.Rules.Rule (name, condition, thenActions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="condition" Type="System.Workflow.Activities.Rules.RuleCondition" />
        <Parameter Name="thenActions" Type="System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;" />
      </Parameters>
      <Docs>
        <param name="name">Nome di <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
        <param name="condition">Oggetto <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> per l'oggetto <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
        <param name="thenActions">Raccolta di oggetti <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> da valutare se la condizione è true.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.Rules.Rule" /> utilizzando il nome <see langword="Rule" />, la condizione della regola e un elenco di azioni THEN.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rule (string name, System.Workflow.Activities.Rules.RuleCondition condition, System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; thenActions, System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; elseActions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Workflow.Activities.Rules.RuleCondition condition, class System.Collections.Generic.IList`1&lt;class System.Workflow.Activities.Rules.RuleAction&gt; thenActions, class System.Collections.Generic.IList`1&lt;class System.Workflow.Activities.Rules.RuleAction&gt; elseActions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, condition As RuleCondition, thenActions As IList(Of RuleAction), elseActions As IList(Of RuleAction))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rule(System::String ^ name, System::Workflow::Activities::Rules::RuleCondition ^ condition, System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ thenActions, System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ elseActions);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.Rule : string * System.Workflow.Activities.Rules.RuleCondition * System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; * System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; -&gt; System.Workflow.Activities.Rules.Rule" Usage="new System.Workflow.Activities.Rules.Rule (name, condition, thenActions, elseActions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="condition" Type="System.Workflow.Activities.Rules.RuleCondition" />
        <Parameter Name="thenActions" Type="System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;" />
        <Parameter Name="elseActions" Type="System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;" />
      </Parameters>
      <Docs>
        <param name="name">Nome di <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
        <param name="condition">Oggetto <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> per l'oggetto <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
        <param name="thenActions">Raccolta di oggetti <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> da valutare se la condizione è true.</param>
        <param name="elseActions">Raccolta di oggetti <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> da valutare se la condizione è false.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.Rules.Rule" /> utilizzando il nome <see langword="Rule" />, la condizione della regola, un elenco di azioni THEN e un elenco di azioni ELSE.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="public bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.Active" />
      <MemberSignature Language="VB.NET" Value="Public Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Workflow.Activities.Rules.Rule.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se è necessario valutare la classe <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
        <value>
          <see langword="true" /> se la regola deve essere valutata. In caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In caso di impostazione su `false`, questa proprietà è simile a un'impostazione della regola come commento. Il valore predefinito è `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.Rules.Rule Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.Rules.Rule Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Rule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::Rules::Rule ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Workflow.Activities.Rules.Rule" Usage="rule.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.Rule</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia completa dell'oggetto corrente della classe <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
        <returns>Classe <see cref="T:System.Workflow.Activities.Rules.Rule" /> identica all’istanza.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.Rules.RuleCondition Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.Rules.RuleCondition Condition" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Property Condition As RuleCondition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::Rules::RuleCondition ^ Condition { System::Workflow::Activities::Rules::RuleCondition ^ get(); void set(System::Workflow::Activities::Rules::RuleCondition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Condition : System.Workflow.Activities.Rules.RuleCondition with get, set" Usage="System.Workflow.Activities.Rules.Rule.Condition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.RuleCondition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una classe <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> per la classe <see cref="T:System.Workflow.Activities.Rules.Rule" /> da valutare.</summary>
        <value>Classe <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> per la classe <see cref="T:System.Workflow.Activities.Rules.Rule" /> da valutare.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Workflow.Activities.Rules.Rule.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la descrizione della classe <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
        <value>Descrizione della classe <see cref="T:System.Workflow.Activities.Rules.Rule" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElseActions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; ElseActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Workflow.Activities.Rules.RuleAction&gt; ElseActions" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.ElseActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElseActions As IList(Of RuleAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ ElseActions { System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElseActions : System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;" Usage="System.Workflow.Activities.Rules.Rule.ElseActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una raccolta delle classi <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> utilizzate nel caso ELSE.</summary>
        <value>Raccolta delle classi <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> utilizzate nel caso ELSE.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La proprietà <xref:System.Workflow.Activities.Rules.Rule.ElseActions%2A> in genere imposta un valore variabile in una delle proprietà dell'attività, chiama un metodo dell'attività o chiama metodi statici sui tipi negli assembly a cui si fa riferimento.  
  
 La classe <xref:System.Workflow.Activities.Rules.RuleHaltAction> fa sì che la classe <xref:System.Workflow.Activities.Rules.RuleSet> interrompa l'esecuzione e restituisca il controllo al metodo di chiamata. Una classe <xref:System.Workflow.Activities.Rules.RuleStatementAction> modifica una proprietà o chiama un metodo. Una classe <xref:System.Workflow.Activities.Rules.RuleUpdateAction> indica in modo esplicito che una regola sta aggiornando una variabile. Provoca la rivalutazione di qualsiasi regola modificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rule.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da confrontare all'oggetto corrente.</param>
        <summary>Consente di determinare se questa istanza della classe <see cref="T:System.Workflow.Activities.Rules.Rule" /> e l'oggetto passato come parametro hanno lo stesso valore.</summary>
        <returns>
          <see langword="true" /> se l'oggetto corrente corrisponde all'oggetto <paramref name="obj" />. In caso contrario <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rule.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il codice hash per l'istanza.</summary>
        <returns>Codice hash per l'istanza.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Workflow.Activities.Rules.Rule.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome di <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
        <value>Nome di <see cref="T:System.Workflow.Activities.Rules.Rule" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : int with get, set" Usage="System.Workflow.Activities.Rules.Rule.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica l'ordine in cui è necessario eseguire la classe <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
        <value>Valore che indica l'ordine in cui è necessario eseguire la classe <see cref="T:System.Workflow.Activities.Rules.Rule" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi <xref:System.Workflow.Activities.Rules.Rule> con priorità più elevata vengono eseguite prima delle classi <xref:System.Workflow.Activities.Rules.Rule> con priorità più bassa. Le regole che hanno la stessa priorità vengono eseguite in ordine alfabetico in base alla proprietà nome.  
  
 Il valore della proprietà <xref:System.Workflow.Activities.Rules.Rule.Priority%2A> può essere positivo o negativo. Il valore predefinito per tutte le classi <xref:System.Workflow.Activities.Rules.Rule> è 0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluationBehavior">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.Rules.RuleReevaluationBehavior ReevaluationBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.Activities.Rules.RuleReevaluationBehavior ReevaluationBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.ReevaluationBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property ReevaluationBehavior As RuleReevaluationBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::Rules::RuleReevaluationBehavior ReevaluationBehavior { System::Workflow::Activities::Rules::RuleReevaluationBehavior get(); void set(System::Workflow::Activities::Rules::RuleReevaluationBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.ReevaluationBehavior : System.Workflow.Activities.Rules.RuleReevaluationBehavior with get, set" Usage="System.Workflow.Activities.Rules.Rule.ReevaluationBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.RuleReevaluationBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se una classe <see cref="T:System.Workflow.Activities.Rules.Rule" /> può essere rivalutata.</summary>
        <value>La proprietà <see cref="T:System.Workflow.Activities.Rules.RuleReevaluationBehavior" /> indica se la classe <see cref="T:System.Workflow.Activities.Rules.Rule" /> può essere rivalutata.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenActions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; ThenActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Workflow.Activities.Rules.RuleAction&gt; ThenActions" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.ThenActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThenActions As IList(Of RuleAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ ThenActions { System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThenActions : System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;" Usage="System.Workflow.Activities.Rules.Rule.ThenActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una raccolta delle classi <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> utilizzate nel caso THEN.</summary>
        <value>Raccolta delle classi <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> utilizzate nel caso THEN.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La proprietà <xref:System.Workflow.Activities.Rules.Rule.ThenActions%2A> in genere imposta un valore variabile in una delle proprietà dell'attività, chiama un metodo dell'attività o chiama metodi statici sui tipi negli assembly a cui si fa riferimento.  
  
 La classe <xref:System.Workflow.Activities.Rules.RuleHaltAction> fa sì che la classe <xref:System.Workflow.Activities.Rules.RuleSet> interrompa l'esecuzione e restituisca il controllo al metodo di chiamata. Una classe <xref:System.Workflow.Activities.Rules.RuleUpdateAction> indica in modo esplicito che una regola sta aggiornando una variabile. Provoca la rivalutazione di qualsiasi regola modificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>