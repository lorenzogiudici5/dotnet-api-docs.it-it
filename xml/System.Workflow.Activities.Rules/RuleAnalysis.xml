<Type Name="RuleAnalysis" FullName="System.Workflow.Activities.Rules.RuleAnalysis">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15d667a7a73b732d25d697997e11b7bfa2d33fb9" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37488177" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RuleAnalysis" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RuleAnalysis extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.RuleAnalysis" />
  <TypeSignature Language="VB.NET" Value="Public Class RuleAnalysis" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleAnalysis" />
  <TypeSignature Language="F#" Value="type RuleAnalysis = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Archivia campi e proprietà letti da una condizione o scritti da un'azione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le informazioni archiviate da <xref:System.Workflow.Activities.Rules.RuleAnalysis> sono importanti perché identificano dipendenze ed effetti collaterali di regole nel set di regole. Tali dipendenze ed effetti collaterali guidano il comportamento del concatenamento.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleAnalysis (System.Workflow.Activities.Rules.RuleValidation validation, bool forWrites);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.Activities.Rules.RuleValidation validation, bool forWrites) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleAnalysis.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validation As RuleValidation, forWrites As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleAnalysis(System::Workflow::Activities::Rules::RuleValidation ^ validation, bool forWrites);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleAnalysis : System.Workflow.Activities.Rules.RuleValidation * bool -&gt; System.Workflow.Activities.Rules.RuleAnalysis" Usage="new System.Workflow.Activities.Rules.RuleAnalysis (validation, forWrites)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validation" Type="System.Workflow.Activities.Rules.RuleValidation" />
        <Parameter Name="forWrites" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validation">Classe <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> per la gestione del processo di convalida.</param>
        <param name="forWrites">Valore <see langword="Boolean" /> che indica se l'analisi è fatta per scrittura (nel caso di oggetti <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> ) o lettura (nel caso di oggetti <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> ).</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSymbol">
      <MemberSignature Language="C#" Value="public void AddSymbol (string symbol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSymbol(string symbol) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSymbol (symbol As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSymbol(System::String ^ symbol);" />
      <MemberSignature Language="F#" Value="member this.AddSymbol : string -&gt; unit" Usage="ruleAnalysis.AddSymbol symbol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="symbol">Stringa che rappresenta il percorso di un campo o di una proprietà.</param>
        <summary>Aggiunge i campi e le proprietà utilizzati da un'espressione come simboli all'istanza <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usa il metodo <xref:System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol%2A> per aggiungere i campi e le proprietà utilizzati da un'espressione alla lista dei simboli per l'istanza <xref:System.Workflow.Activities.Rules.RuleAnalysis>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForWrites">
      <MemberSignature Language="C#" Value="public bool ForWrites { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForWrites" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.RuleAnalysis.ForWrites" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForWrites As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForWrites { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ForWrites : bool" Usage="System.Workflow.Activities.Rules.RuleAnalysis.ForWrites" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'analisi è fatta per scrittura o lettura.</summary>
        <value>
          <see langword="true" /> se l'analisi è fatta per scrittura (nel caso di oggetti <see cref="T:System.Workflow.Activities.Rules.RuleAction" />). In caso contrario, <see langword="false" /> se l'analisi è fatta per scrittura (nel caso di oggetti <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSymbols">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; GetSymbols ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;string&gt; GetSymbols() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSymbols () As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ GetSymbols();" />
      <MemberSignature Language="F#" Value="member this.GetSymbols : unit -&gt; System.Collections.Generic.ICollection&lt;string&gt;" Usage="ruleAnalysis.GetSymbols " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'elenco dei simboli dall'istanza <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />.</summary>
        <returns>Elenco dei simboli per l'istanza <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>