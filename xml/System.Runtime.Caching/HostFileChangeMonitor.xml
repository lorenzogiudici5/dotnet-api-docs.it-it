<Type Name="HostFileChangeMonitor" FullName="System.Runtime.Caching.HostFileChangeMonitor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9766bc72336871e34c9cfc627b4f217c5c9854da" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36637454" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostFileChangeMonitor extends System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.HostFileChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostFileChangeMonitor&#xA;Inherits FileChangeMonitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostFileChangeMonitor sealed : System::Runtime::Caching::FileChangeMonitor" />
  <TypeSignature Language="F#" Value="type HostFileChangeMonitor = class&#xA;    inherit FileChangeMonitor" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Caching.FileChangeMonitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Monitora le directory e percorsi dei file e notifica alla cache le modifiche apportate agli elementi monitorati. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Runtime.Caching.HostFileChangeMonitor> classe è un'implementazione concreta del <xref:System.Runtime.Caching.FileChangeMonitor> tipo. Questa classe è sealed, pertanto non può essere estesa. Questa classe è utile se si desidera utilizzare un'implementazione di cache esistente e per monitorare i file e directory per le modifiche.  
  
 Per ogni file specificato o un percorso di directory, il <xref:System.Runtime.Caching.HostFileChangeMonitor> classe genera una notifica di modifica se si verifica una delle modifiche seguenti:  
  
-   Il nome del file monitorati o modifiche alla directory.  
  
-   Il file specificato o la directory non esisteva al momento il monitoraggio è stato creato, ma è stato creato in un secondo momento. In altre parole, un file o directory è stato creato nell'ambito di elementi monitorati.  
  
-   Modificate le dimensioni di un file monitorato.  
  
-   Il contenuto di un file monitorato, o modificato il contenuto di una directory monitorata.  
  
-   L'elenco di controllo di accesso (ACL) del file o della directory è stata modificata.  
  
-   File monitorati o della directory è stata eliminata.  
  
 Se si verificano modifiche troppi una directory o file monitorati allo stesso tempo, il <xref:System.Runtime.Caching.HostFileChangeMonitor> istanza può perdere traccia delle modifiche specifiche. In questo scenario, il <xref:System.Runtime.Caching.HostFileChangeMonitor> classe genera una notifica di modifica. Questo scenario è più probabile che si verificano quando il <xref:System.Runtime.Caching.HostFileChangeMonitor> istanza esegue il monitoraggio di una directory e si verificano numerose modifiche nell'ambito della struttura di directory in un breve periodo di tempo.  
  
 Poiché lo scopo del <xref:System.Runtime.Caching.HostFileChangeMonitor> classe è solo per segnalare che un elemento è stato modificato tra il set di file monitorati e directory, non è considerato importante che non vengono acquisite informazioni dettagliate su una modifica specifica. Lo scopo del <xref:System.Runtime.Caching.HostFileChangeMonitor> classe consiste nel fornire notifica di tale stato modificato in modo che una voce della cache (o le voci) possono essere rimossa. Poiché il <xref:System.Runtime.Caching.HostFileChangeMonitor> classe non indica esattamente ciò che è stato modificato, il rilevamento delle modifiche interna overflow è irrilevante.  
  
 Quando si specificano i percorsi per un <xref:System.Runtime.Caching.HostFileChangeMonitor> istanza, la directory e file è necessario usare percorsi completi alla directory o al file. Caratteri jolly nei percorsi e i percorsi relativi non sono consentiti.  
  
 Quando il <xref:System.Runtime.Caching.HostFileChangeMonitor> classe viene utilizzata in un'applicazione ASP.NET, l'identità di Windows utilizzato per l'accesso agli elementi monitorati è l'identità dell'applicazione per l'applicazione ASP.NET. In altre parole, l'identità dell'applicazione sarà uno dei valori seguenti:  
  
-   L'identità del processo.  
  
-   L'identità di applicazione configurata.  
  
-   Le credenziali UNC se l'applicazione viene eseguita da una condivisione UNC.  
  
 Quando il <xref:System.Runtime.Caching.HostFileChangeMonitor> classe viene utilizzata in un'applicazione non ASP.NET, il <xref:System.IO.FileSystemWatcher> classe viene utilizzata internamente per monitorare i file. Di conseguenza, qualsiasi elenco di controllo di accesso (ACL) si applica a una directory o file monitorato viene applicato all'identità Windows del thread corrente.  
  
> [!NOTE]
>  I chiamanti devono disporre del livello adeguato di autorizzazioni di sicurezza dall'accesso di codice e devono disporre delle autorizzazioni NTFS per tutte le directory e monitorati i percorsi.  
  
   
  
## Examples  
 L'esempio seguente crea un elemento della cache che utilizza un <xref:System.Runtime.Caching.HostFileChangeMonitor> oggetto per monitorare lo stato dei dati di origine (ovvero un file) nel file system. La voce della cache è stata definita tramite una <xref:System.Runtime.Caching.CacheItemPolicy> oggetto per fornire i dettagli di scadenza e rimozione della voce della cache.  
  
 [!code-csharp[CachingASPNetApplications#1](~/samples/snippets/csharp/VS_Snippets_WebNet/cachingaspnetapplications/cs/default.aspx.cs#1)]
 [!code-vb[CachingASPNetApplications#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/cachingaspnetapplications/vb/default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostFileChangeMonitor (System.Collections.Generic.IList&lt;string&gt; filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;string&gt; filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filePaths As IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostFileChangeMonitor(System::Collections::Generic::IList&lt;System::String ^&gt; ^ filePaths);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Caching.HostFileChangeMonitor : System.Collections.Generic.IList&lt;string&gt; -&gt; System.Runtime.Caching.HostFileChangeMonitor" Usage="new System.Runtime.Caching.HostFileChangeMonitor filePaths" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="filePaths">Elenco contenente uno o più percorsi di directory o di file da monitorare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le chiamate ai <xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A> costruttore necessario fornire un valore non null per il `filePaths` parametro. Come minimo, il costruttore convalida la raccolta di percorsi che viene passata al suo interno e quindi inizializza il monitoraggio per tali percorsi.  
  
> [!NOTE]
>  Il costruttore esegue solo la convalida delle stringhe del nome del percorso. Non rende canonici i percorsi o verificare che i percorsi esistano.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filePaths" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filePaths" /> contiene zero elementi.  -oppure- Un percorso nell'elenco <paramref name="filePaths" /> è <see langword="null" /> o è una stringa vuota.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hostFileChangeMonitor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePaths">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FilePaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FilePaths" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FilePaths As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FilePaths { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePaths : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di directory e di percorsi di file passato al costruttore <see cref="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />.</summary>
        <value>Insieme di directory e di percorsi di file.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public override DateTimeOffset LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastModified" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LastModified As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTimeOffset LastModified { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.LastModified : DateTimeOffset" Usage="System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore di sola lettura che indica l'ora dell'ultima scrittura di un file o percorso monitorato.</summary>
        <value>Ora dell'ultima scrittura di un file o percorso monitorato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un monitoraggio delle modifiche ai file esegue il monitoraggio più file o percorsi, questa proprietà restituisce l'ora di scrittura più recente nel set di tutti i file e percorsi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public override string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueId : string" Usage="System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un identificatore per l'istanza di <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" /> basata sul set di directory e di percorsi di file monitorati.</summary>
        <value>Identificatore del monitoraggio delle modifiche.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La stringa che costituisce il <xref:System.Runtime.Caching.HostFileChangeMonitor.UniqueId%2A> valore della proprietà viene costruito dalle parti seguenti:  
  
-   Un percorso del file o directory.  
  
-   L'ora di scrittura più recente nell'ora UTC, misurato come segni di graduazione ma rappresentato sotto forma di stringa esadecimale.  
  
-   Le dimensioni del file rappresentata sotto forma di stringa esadecimale.  
  
 Se una modifica del file monitoraggio esegue il monitoraggio più percorsi, le informazioni restituite da questa proprietà sono concatenate in un'unica stringa per tutte le directory monitorate e i percorsi dei file.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>