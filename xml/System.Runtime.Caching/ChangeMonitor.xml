<Type Name="ChangeMonitor" FullName="System.Runtime.Caching.ChangeMonitor">
  <TypeSignature Language="C#" Value="public abstract class ChangeMonitor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChangeMonitor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChangeMonitor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChangeMonitor abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ec2f0-101">Fornisce una classe base per un tipo personalizzato derivato che monitora le modifiche dello stato dei dati da cui dipende un elemento della cache.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-101">Provides a base class for a derived custom type that monitors changes in the state of the data which a cache item depends on.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2f0-102">La <xref:System.Runtime.Caching.ChangeMonitor> classe viene utilizzata come classe base per classi derivate di monitoraggio che sono specializzate per le implementazioni di cache specifica.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-102">The <xref:System.Runtime.Caching.ChangeMonitor> class is used as the base class for derived monitor classes that are specialized for particular cache implementations.</span></span> <span data-ttu-id="ec2f0-103">Oggetto <xref:System.Runtime.Caching.ChangeMonitor> istanza consente di monitorare le modifiche allo stato dei dati che dipende da un elemento della cache.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-103">A <xref:System.Runtime.Caching.ChangeMonitor> instance monitors changes in the state of data which a cache item depends on.</span></span> <span data-ttu-id="ec2f0-104">Ad esempio, l'elemento può essere un'entità di dati o file il cui contenuto viene memorizzati nella cache.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-104">For example, the item can be a file or data entity whose contents are cached.</span></span> <span data-ttu-id="ec2f0-105">Se l'entità di file o i dati verrà aggiornato, è necessario modificare anche la voce della cache associata.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-105">If the file or data entity is updated, the associated cache entry must be changed also.</span></span> <span data-ttu-id="ec2f0-106">Gli elementi comuni che possono essere monitorati includono le entità di dati (ad esempio campi di database, i valori, righe o tabelle), un'altra voce di cache e i file e gli attributi di file.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-106">Common items that can be monitored include data entities (such as database fields, values, rows, or tables), another cache entry, and files and file attributes.</span></span>  
  
 <span data-ttu-id="ec2f0-107">Una modifica apportata alla dipendenza è una modifica nello stato di una dipendenza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-107">A dependency change is a change in the state of a dependency.</span></span> <span data-ttu-id="ec2f0-108">In un'implementazione tipica della cache, dopo un <xref:System.Runtime.Caching.ChangeMonitor> istanza notifica della cache che ha modificato una dipendenza, la cache esegue l'azione richiesta, ad esempio invalidazione voce cache inserito.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-108">In a typical cache implementation, after a <xref:System.Runtime.Caching.ChangeMonitor> instance notifies the cache that a dependency has changed, the cache performs the required action, such as invalidating the inserted cache entry.</span></span>  
  
 <span data-ttu-id="ec2f0-109">Derivato <xref:System.Runtime.Caching.ChangeMonitor> classi possono essere personalizzate per monitorare le modifiche di dipendenza per gli archivi dati diversi specifici.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-109">Derived <xref:System.Runtime.Caching.ChangeMonitor> classes can be customized to monitor dependency changes for specific different data stores.</span></span> <span data-ttu-id="ec2f0-110">Ad esempio, sono disponibili implementazioni di cache per un file system, memoria fisica o un database.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-110">For example, there are cache implementations for a file system, physical memory, or a database.</span></span> <span data-ttu-id="ec2f0-111">La <xref:System.Runtime.Caching.ChangeMonitor> classe esamina le modifiche apportate all'esterno della cache e quindi gli avvisi della cache che sono state apportate modifiche.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-111">The <xref:System.Runtime.Caching.ChangeMonitor> class examines changes that occur outside the cache, and then alerts the cache that changes have occurred.</span></span>  
  
 <span data-ttu-id="ec2f0-112">Il [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] include le seguenti classi che derivano da <xref:System.Runtime.Caching.ChangeMonitor> classe:</span><span class="sxs-lookup"><span data-stu-id="ec2f0-112">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] includes the following classes that derive from <xref:System.Runtime.Caching.ChangeMonitor> class:</span></span>  
  
-   <xref:System.Runtime.Caching.CacheEntryChangeMonitor>  
  
-   <xref:System.Runtime.Caching.FileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.HostFileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.SqlChangeMonitor>  
  
 <span data-ttu-id="ec2f0-113">Ognuna di queste classi funziona con diversi tipi di dipendenze.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-113">Each of these classes works with different types of dependencies.</span></span> <span data-ttu-id="ec2f0-114">Ad esempio, derivata <xref:System.Runtime.Caching.FileChangeMonitor> classe controlla le modifiche a una cache per i dati del file system (file e cartelle) che l'elemento della cache dipende.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-114">For example, the derived <xref:System.Runtime.Caching.FileChangeMonitor> class monitors changes to a cache for file system data (files and folders) that the cache item depends on.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ec2f0-115">Questo tipo è thread-safe.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-115">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="ec2f0-116">Se si crea un oggetto personalizzato implementazione della cache o una tipo di monitoraggio delle modifiche derivato è necessario seguire determinate linee guida.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-116">If you create a custom cache implementation or a derived change monitor type, you must follow certain guidelines.</span></span> <span data-ttu-id="ec2f0-117">Nell'elenco seguente sono riepilogate queste linee guida.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-117">The following list summarizes these guidelines.</span></span> <span data-ttu-id="ec2f0-118">Per ulteriori informazioni, vedere la documentazione per i singoli metodi o proprietà.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-118">For more information, see the documentation for individual methods or properties.</span></span>  
  
-   <span data-ttu-id="ec2f0-119">Il costruttore di una classe derivata deve impostare la <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> proprietà, iniziare il monitoraggio e chiamare <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> metodo prima il metodo restituisce.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-119">The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the method returns.</span></span> <span data-ttu-id="ec2f0-120">Se un costruttore rileva un errore durante le costruzioni e deve disporre per eliminare le risorse, il costruttore è possibile chiamare solo il <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload dopo il <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> metodo viene chiamato perché il <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload genererà un <see cref="T:System.InvalidOperationException" /> eccezione se non viene completata l'inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-120">If a constructor encounters an error during constructions and must have to dispose of resources, the constructor can only call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called because the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload will throw an <see cref="T:System.InvalidOperationException" /> exception if initialization is not completed.</span></span>  
  
-   <span data-ttu-id="ec2f0-121">Se si verificano modifiche in completare i dati che viene monitorati prima dell'inizializzazione, il costruttore deve chiamare il <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> metodo prima di chiamare il <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> metodo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-121">If changes occur in the data that is being monitored before initialization is complete, the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span></span>  
  
-   <span data-ttu-id="ec2f0-122">Dopo un oggetto derivato <see cref="T:System.Runtime.Caching.ChangeMonitor" /> viene creata un'istanza di tipo, è necessario inserire il monitoraggio in un oggetto personalizzato <see cref="T:System.Runtime.Caching.ObjectCache" /> implementazione.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-122">After a derived <see cref="T:System.Runtime.Caching.ChangeMonitor" /> type is instantiated, you must insert the monitor into a custom <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation.</span></span> <span data-ttu-id="ec2f0-123">O se si è terminato di utilizzare il monitoraggio delle modifiche, chiamare il <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-123">Or if you are finished using the change monitor, call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span></span>  
  
-   <span data-ttu-id="ec2f0-124">Dopo un <see cref="T:System.Runtime.Caching.ChangeMonitor" /> istanza viene inserita un <see cref="T:System.Runtime.Caching.ObjectCache" /> implementazione, il <see cref="T:System.Runtime.Caching.ObjectCache" /> istanza richiedono che il monitoraggio delle modifiche è stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-124">After a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance is inserted into a <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation, the <see cref="T:System.Runtime.Caching.ObjectCache" /> instance require that the change monitor is disposed.</span></span> <span data-ttu-id="ec2f0-125">Anche se l'inserimento non è valido e genera un'eccezione, il <see cref="T:System.Runtime.Caching.ObjectCache" /> deve chiamare l'implementazione di <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-125">Even if the insertion is invalid and causes an exception, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span></span>  
  
-   <span data-ttu-id="ec2f0-126">Dopo un monitoraggio delle modifiche derivato viene inserito in una cache, il <see cref="T:System.Runtime.Caching.ObjectCache" /> deve chiamare l'implementazione <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />, passando un <see cref="T:System.Runtime.Caching.OnChangedCallback" /> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-126">After a derived change monitor is inserted into a cache, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />, by passing a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object.</span></span> <span data-ttu-id="ec2f0-127">Il <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> metodo può essere chiamato solo una volta.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-127">The <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method can be called only one time.</span></span> <span data-ttu-id="ec2f0-128">Se una modifica apportata alla dipendenza è già verificato, il <see cref="T:System.Runtime.Caching.OnChangedCallback" /> istanza sarà chiamata immediatamente quando <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-128">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span></span> <span data-ttu-id="ec2f0-129">In caso contrario, il <see cref="T:System.Runtime.Caching.OnChangedCallback" /> istanza verrà chiamata solo una volta.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-129">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called only one time.</span></span> <span data-ttu-id="ec2f0-130">Questo una volta chiamata si verifica quando il <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> metodo viene chiamato perché il <see cref="T:System.Runtime.Caching.ChangeMonitor" /> istanza ha rilevato una modifica, o quando il <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodo viene chiamato sul <see cref="T:System.Runtime.Caching.ChangeMonitor" />, qualunque si verifichi prima.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-130">This one time call occurs either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called because the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance detected a change, or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called on the <see cref="T:System.Runtime.Caching.ChangeMonitor" />, whichever occurs first.</span></span>  
  
-   <span data-ttu-id="ec2f0-131">Il <see cref="T:System.Runtime.Caching.OnChangedCallback" /> istanza fornito da un <see cref="T:System.Runtime.Caching.ObjectCache" /> implementazione deve rimuovere la voce della cache associata e specificare un motivo utilizzando il <see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" /> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-131">The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance that is provided by an <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation should remove the associated cache entry and specify a reason by using the <see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" /> enumeration.</span></span>  
  
-   <span data-ttu-id="ec2f0-132">A <see cref="T:System.Runtime.Caching.ChangeMonitor" /> istanza è possibile chiamare il <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> metodo prima che un'implementazione della cache è chiamato <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> metodo o dopo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-132">A <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method either before a cache implementation has called <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or after.</span></span> <span data-ttu-id="ec2f0-133">Se il <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> metodo viene chiamato prima <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> viene chiamato, la base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> implementazione notifica della cache che si è verificato e attiverà il callback deve essere passato <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> immediatamente quando <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> viene richiamato.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-133">If the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called before <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called, the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> implementation will notify the cache that this has occurred and will trigger the callback to be passed to <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is invoked.</span></span> <span data-ttu-id="ec2f0-134">I dati di stato che viene passati al <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> salvato per il monitoraggio delle modifiche e successivamente passato al metodo il <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> metodo quando il <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> metodo viene richiamato.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-134">Any state data that is passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is saved by the change monitor and subsequently passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method when the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method is invoked.</span></span>  
  
-   <span data-ttu-id="ec2f0-135">Monitoraggio delle modifiche è necessario implementare la <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> metodo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-135">A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method.</span></span> <span data-ttu-id="ec2f0-136">Per altre informazioni, vedere la documentazione del metodo <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-136">For more information, see the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method documentation.</span></span>  
  
-   <span data-ttu-id="ec2f0-137">Il <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload del metodo deve essere chiamato per eliminare il <see cref="T:System.Runtime.Caching.ChangeMonitor" /> istanza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-137">The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload must be called to dispose of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span> <span data-ttu-id="ec2f0-138">Le regole per la chiamata Dispose sono come segue:</span><span class="sxs-lookup"><span data-stu-id="ec2f0-138">The rules for calling Dispose are as follows:</span></span>  
  
    -   <span data-ttu-id="ec2f0-139">Prima di un elemento viene inserito nella cache, è responsabilità del chiamante per eliminare un <see cref="T:System.Runtime.Caching.ChangeMonitor" /> istanza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-139">Before an item is inserted into the cache, it is the responsibility of caller to dispose of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span>  
  
    -   <span data-ttu-id="ec2f0-140">Una volta l'elemento della cache e <see cref="T:System.Runtime.Caching.ChangeMonitor" /> istanze che esso associati vengono passate a una cache, l'implementatore della cache deve assicurarsi che il <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodo viene chiamato, anche se l'inserimento ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-140">Once cache item and the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances that are associated with it are passed to a cache, the cache implementer must make sure that that the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, even if the insert fails.</span></span>  
  
    -   <span data-ttu-id="ec2f0-141">Dopo un elemento e l'identificatore associato <see cref="T:System.Runtime.Caching.ChangeMonitor" /> le istanze sono passate a una cache, il chiamante non deve eliminare la dipendenza perché quando il <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodo viene chiamato, la chiamata viene considerata come se la dipendenza è stata modificata.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-141">After an item and its associated <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances are passed to a cache, the caller must not dispose the dependency because when the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, the call is treated as if the dependency has changed.</span></span> <span data-ttu-id="ec2f0-142">Di conseguenza, il <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> metodo viene richiamato automaticamente.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-142">As a result, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is automatically invoked.</span></span>  
  
-   <span data-ttu-id="ec2f0-143">Considerare queste regole, il <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodo deve essere chiamato in uno dei modi seguenti:</span><span class="sxs-lookup"><span data-stu-id="ec2f0-143">Taking these rules into consideration, the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method must be called in one of the following ways:</span></span>  
  
    -   <span data-ttu-id="ec2f0-144">Gli utenti devono chiamare il <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload del metodo se si decide di non inserire l'istanza di monitoraggio delle modifiche in una cache.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-144">Users must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload if they decide not to insert the derived change-monitor instance into a cache.</span></span>  
  
    -   <span data-ttu-id="ec2f0-145">Se l'implementazione tenta di inserire l'istanza di monitoraggio delle modifiche in una cache dell'oggetto, ma l'inserimento ha esito negativo, l'implementazione della cache è responsabile della chiamata di <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-145">If the implementation tries to insert the change-monitor instance into an object cache but the insertion fails, the cache implementation is responsible for calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span></span> <span data-ttu-id="ec2f0-146">Quando il tentativo di inserimento provoca un'eccezione, l'implementazione della cache deve eliminare qualsiasi dipendenza associata.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-146">When the insertion attempt causes an exception, the cache implementation must dispose of any associated dependencies.</span></span>  
  
    -   <span data-ttu-id="ec2f0-147">Se viene rimossa la voce della cache, l'implementazione della cache deve anche eliminare la dipendenza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-147">If the cache entry is removed, the cache implementation must also dispose of the dependency.</span></span>  
  
    -   <span data-ttu-id="ec2f0-148">L'implementazione interna del <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> chiama automaticamente il <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodo dopo aver chiamato un callback registrato tramite <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-148">The internal implementation of the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method automatically calls the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method after it calls a callback that is registered through <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="ec2f0-149">Questa chiamata automatica al metodo dispose durante la generazione dell'evento si verifica solo se l'inizializzazione del <see cref="T:System.Runtime.Caching.ChangeMonitor" /> istanza è stata completata in precedenza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-149">This automatic call to the dispose method during the event firing only occurs if the initialization of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance was previously completed.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="ec2f0-150">Quando viene chiamato il costruttore di un monitoraggio delle modifiche derivato il <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> metodo, se lo stato del monitoraggio delle modifiche è già stato modificato (ovvero, lo stato monitorato è già cambiato quando il costruttore è ancora attivo) il <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> verrà (metodo) Elimina automaticamente il monitoraggio delle modifiche.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-150">When a derived change monitor's constructor calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method, if the state of the change monitor has already changed (that is, the state that is monitored already changed when the constructor was still active) then the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method will automatically dispose of the change monitor.</span></span>  
  
-   <span data-ttu-id="ec2f0-151">Il <see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" /> è impostata su <see langword="true" /> dopo il <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> metodo viene chiamato dall'istanza di monitoraggio delle modifiche, indipendentemente dal fatto che un <see cref="T:System.Runtime.Caching.OnChangedCallback" /> oggetto è stato impostato da una chiamata al <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> metodo o non.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-151">The <see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" /> property is set to <see langword="true" /> after the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called by the derived change-monitor instance, regardless of whether a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object has been set by a call to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or not.</span></span></para>
    </block>
    <altmember cref="N:System.Web.Caching" />
    <altmember cref="T:System.Runtime.Caching.ObjectCache" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChangeMonitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChangeMonitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec2f0-152">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-152">Initializes a new instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span> <span data-ttu-id="ec2f0-153">Questo costruttore viene chiamato da costruttori in classi derivate per inizializzare la classe base.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-153">This constructor is called from constructors in derived classes to initialize the base class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2f0-154">La <xref:System.Runtime.Caching.ChangeMonitor> classe ha un costruttore predefinito.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-154">The <xref:System.Runtime.Caching.ChangeMonitor> class has a default constructor.</span></span> <span data-ttu-id="ec2f0-155">Tuttavia, le classi che ereditano dalla base <xref:System.Runtime.Caching.ChangeMonitor> classe e definire personalizzato il monitoraggio modifica il comportamento necessario eseguire l'inizializzazione nel costruttore.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-155">However, classes that inherit from the base <xref:System.Runtime.Caching.ChangeMonitor> class and define custom change-monitoring behavior must perform initialization in the constructor.</span></span> <span data-ttu-id="ec2f0-156">Per ulteriori informazioni, vedere la sezione Note per gli eredi.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-156">For more information, see the Notes for Inheritors section.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="ec2f0-157">Il costruttore di una classe derivata deve impostare la <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> proprietà, iniziare il monitoraggio e chiamare il <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> classe prima della restituzione.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-157">The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> class before it returns.</span></span> <span data-ttu-id="ec2f0-158">Se una dipendenza viene modificata prima dell'inizializzazione è completa (ad esempio, se non viene trovata una chiave di cache dipendente nella cache), è necessario chiamare il costruttore di <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> metodo prima di chiamare il <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> metodo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-158">If a dependency changes before initialization is complete (for example, if a dependent cache key is not found in the cache), the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before it calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span></span> <span data-ttu-id="ec2f0-159">In questo caso, è possibile chiamare costruttore la <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodo solo dopo che il <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> metodo viene chiamato, perché il <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodo genera un'eccezione se non viene completata l'inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-159">In this case, constructor can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec2f0-160">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-160">Releases all resources used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2f0-161">Il <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo viene utilizzato per rilasciare il <xref:System.Runtime.Caching.ChangeMonitor> istanza e le relative risorse.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-161">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is used to release the <xref:System.Runtime.Caching.ChangeMonitor> instance and related resources.</span></span> <span data-ttu-id="ec2f0-162">Pubblico <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo viene richiamato per coordinare il processo di eliminazione con gli eventi principali del ciclo di vita delle classi di monitoraggio delle modifiche (ad esempio l'inizializzazione) e per rilasciare il <xref:System.Runtime.Caching.ChangeMonitor> istanza in modo che l'istanza può essere sottoposto a garbage collection.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-162">The public <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is invoked to coordinate the disposal process with key life-cycle events of derived change-monitor classes (such as initialization), and to release the <xref:System.Runtime.Caching.ChangeMonitor> instance so that the instance can be garbage collected.</span></span> <span data-ttu-id="ec2f0-163">Il <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo viene implementato dalle classi di monitoraggio delle modifiche per eliminare le relative risorse gestite e non gestite.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-163">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is implemented by derived change-monitor classes to dispose of their managed and unmanaged resources.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec2f0-164">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-164">Releases all resources that are used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2f0-165">Il <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo richiama il <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo delle classi derivate solo una volta, la prima volta che viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-165">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method invokes the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method of derived classes only one time, the first time it is called.</span></span> <span data-ttu-id="ec2f0-166">Le chiamate successive al <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> (metodo) non hanno alcun effetto.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-166">Subsequent calls to the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method have no effect.</span></span> <span data-ttu-id="ec2f0-167">Dopo che è stato chiamato il metodo, il <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-167">After the method has been called, the <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="ec2f0-168">Il <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload deve essere chiamato per eliminare un <xref:System.Runtime.Caching.ChangeMonitor> istanza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-168">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload must be called to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="ec2f0-169">Di seguito è riportate le regole per la chiamata al metodo dispose:</span><span class="sxs-lookup"><span data-stu-id="ec2f0-169">The following are the rules for calling the dispose method:</span></span>  
  
-   <span data-ttu-id="ec2f0-170">Prima di un elemento viene inserito nella cache, è responsabilità del chiamante per eliminare un <xref:System.Runtime.Caching.ChangeMonitor> istanza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-170">Before an item is inserted into the cache, it is the caller's responsibility to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
-   <span data-ttu-id="ec2f0-171">Una volta l'elemento della cache e <xref:System.Runtime.Caching.ChangeMonitor> istanze che esso associati vengono passate a una cache, l'implementatore della cache che è necessario assicurarsi che <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> viene chiamato, anche se l'inserimento ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-171">Once cache item and the <xref:System.Runtime.Caching.ChangeMonitor> instances that are associated with it are passed to a cache, the cache implementer that must make sure that <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> is called, even if the insert fails.</span></span>  
  
-   <span data-ttu-id="ec2f0-172">Dopo un elemento e l'identificatore associato <xref:System.Runtime.Caching.ChangeMonitor> le istanze sono passate a una cache, il chiamante non deve eliminare la dipendenza perché quando il <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo viene chiamato, la chiamata viene considerata come se la dipendenza è stata modificata.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-172">After an item and its associated <xref:System.Runtime.Caching.ChangeMonitor> instances are passed to a cache, the caller must not dispose the dependency because when the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is called, the call is treated as if the dependency has changed.</span></span> <span data-ttu-id="ec2f0-173">Di conseguenza, il <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodo viene richiamato automaticamente.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-173">As a result, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is automatically invoked.</span></span>  
  
-   <span data-ttu-id="ec2f0-174">Considerare queste regole, il <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo deve essere chiamato in uno dei modi seguenti:</span><span class="sxs-lookup"><span data-stu-id="ec2f0-174">Taking these rules into consideration, the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method must be called in one of the following ways:</span></span>  
  
    -   <span data-ttu-id="ec2f0-175">Gli utenti devono chiamare il <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload del metodo se si decide di non inserire l'istanza di monitoraggio delle modifiche in una cache.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-175">Users must call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method overload if they decide not to insert the derived change-monitor instance into a cache.</span></span>  
  
    -   <span data-ttu-id="ec2f0-176">L'implementazione della cache è responsabile della chiamata di <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload se l'implementazione tenta di inserire l'istanza di monitoraggio delle modifiche in una cache dell'oggetto, ma l'inserimento ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-176">The cache implementation is responsible for calling the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload if the implementation tries to insert the change-monitor instance into an object cache but the insertion fails.</span></span> <span data-ttu-id="ec2f0-177">Quando il tentativo di inserimento provoca un'eccezione, l'implementazione della cache deve eliminare qualsiasi dipendenza associata.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-177">When the insertion attempt causes an exception, the cache implementation must dispose any associated dependencies.</span></span>  
  
    -   <span data-ttu-id="ec2f0-178">Se la voce della cache viene rimosso, l'implementazione della cache dovrà anche eliminare la dipendenza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-178">If the cache entry is removed, the cache implementation must also dispose the dependency.</span></span>  
  
 <span data-ttu-id="ec2f0-179">L'implementazione interna del <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> chiama automaticamente il <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo dopo aver chiamato un callback registrato tramite il <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-179">The internal implementation of the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method after it calls a callback that is registered through the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2f0-180">Questa eliminazione automatica durante la generazione dell'evento si verifica solo se l'inizializzazione del <xref:System.Runtime.Caching.ChangeMonitor> istanza è stata completata in precedenza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-180">This automatic dispose during the event firing only occurs if the initialization of the <xref:System.Runtime.Caching.ChangeMonitor> instance previously completed.</span></span>  
  
 <span data-ttu-id="ec2f0-181">Quando viene chiamato il costruttore di un monitoraggio delle modifiche derivato il <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> metodo, se lo stato del monitoraggio delle modifiche è già stato modificato (ovvero, lo stato che viene monitorato già cambiato quando il costruttore è stato ancora attivo) quindi <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> verrà (metodo) Elimina automaticamente il monitoraggio delle modifiche.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-181">When a derived change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, if the state of the change monitor has already changed (that is, the state that is monitored has already changed when the constructor was still active) then <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method will automatically dispose the change monitor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2f0-182">Gli utenti non devono chiamare il <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-182">Users should not call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="ec2f0-183">È tuttavia, non è possibile impedire agli utenti di chiamata al metodo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-183">However, you cannot prevent users from calling the method.</span></span> <span data-ttu-id="ec2f0-184">Pertanto, in caso affermativo, la <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodo viene richiamato.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-184">Therefore, if they do, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked.</span></span> <span data-ttu-id="ec2f0-185">In tal caso, la voce della cache viene informata come se la dipendenza è stata modificata.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-185">In that case, the cache entry is notified as if the dependency has changed.</span></span>  
  
 <span data-ttu-id="ec2f0-186">Per impedire alle classi derivate di eseguire l'override <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo, il metodo non è un'implementazione esplicita dell'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-186">To prevent derived classes from overriding <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method, the method is not an explicit interface implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec2f0-187">L'inizializzazione non è completa nella classe derivata di monitoraggio delle modifiche che ha chiamato il metodo di base <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-187">Initialization is not complete in the derived change-monitor class that called the base <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span></span></exception>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected abstract void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ec2f0-188"><see langword="true" /> per rilasciare le risorse gestite e non gestite ed eventuali riferimenti a un'istanza di <see cref="T:System.Runtime.Caching.ChangeMonitor" />. <see langword="false" /> per rilasciare solo le risorse non gestite.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-188"><see langword="true" /> to release managed and unmanaged resources and any references to a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance; <see langword="false" /> to release only unmanaged resources.</span></span> <span data-ttu-id="ec2f0-189">Quando viene passato <see langword="false" />, il metodo <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> viene chiamato da un thread <see langword="finalizer" /> e i riferimenti gestiti esterni probabilmente non sono più validi perché sono già stati raccolti nel Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-189">When <see langword="false" /> is passed, the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method is called by a <see langword="finalizer" /> thread and any external managed references are likely no longer valid because they have already been garbage collected.</span></span></param>
        <summary><span data-ttu-id="ec2f0-190">Rilascia tutte le risorse gestite e non gestite ed eventuali riferimenti all'istanza di <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-190">Releases all managed and unmanaged resources and any references to the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span> <span data-ttu-id="ec2f0-191">Questo overload deve essere implementato dalle classi derivate di monitoraggio delle modifiche.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-191">This overload must be implemented by derived change-monitor classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2f0-192">Quando il valore di `disposing` valore `true`, tutte le risorse gestite e non gestite vengano eliminate e qualsiasi riferimento a questo oggetto viene rilasciato in modo che l'istanza di monitoraggio delle modifiche può essere sottoposto a garbage collection.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-192">When the value of `disposing` value is `true`, all managed and unmanaged resources are disposed and any references to this object are released so that the derived change-monitor instance can be garbage collected.</span></span> <span data-ttu-id="ec2f0-193">Viene garantito che la base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo richiamerà implementato <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo solo una volta.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-193">It is guaranteed that the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method will invoke the implemented <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method only one time.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="ec2f0-194">Monitoraggio delle modifiche è necessario implementare la <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload per rilasciare tutte le risorse gestite e quando il valore di <paramref name="disposing" /> è <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-194">A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload to release all managed and unmanaged resources when the value of <paramref name="disposing" /> is <see langword="true" />.</span></span> <span data-ttu-id="ec2f0-195">Il <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload del metodo che ha un <paramref name="disposing" /> valore <see langword="true" /> viene chiamato solo una volta, in particolare, quando viene eliminata l'istanza per la prima volta.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-195">The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method overload that has a <paramref name="disposing" /> value of <see langword="true" /> is called only one time, namely, when the instance is disposed for the first time.</span></span> <span data-ttu-id="ec2f0-196">Monitoraggio delle modifiche non è necessario chiamare il <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> sottoposto a overload direttamente.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-196">A change monitor must not call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload directly.</span></span> <span data-ttu-id="ec2f0-197">Un monitoraggio delle modifiche derivato può chiamare pubblico senza parametri <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodo sulla base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> classe.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-197">A derived change monitor can call the public parameter-less <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method on the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span>  
  
 <span data-ttu-id="ec2f0-198">In alternativa, un monitoraggio delle modifiche può implementare un metodo finalizzatore.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-198">Alternatively, a change monitor can implement a finalizer method.</span></span> <span data-ttu-id="ec2f0-199">In tal caso, è possibile richiamare il finalizzatore di <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> (metodo) e passare un <paramref name="disposing" /> valore <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-199">In that case, the finalizer can invoke the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method and pass it a <paramref name="disposing" /> value of <see langword="false" />.</span></span> <span data-ttu-id="ec2f0-200">Tuttavia, si tratta in genere non necessario.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-200">However, this is usually unnecessary.</span></span> <span data-ttu-id="ec2f0-201">Monitoraggio delle modifiche di dipendenza viene solitamente eseguito da un servizio che mantiene un riferimento all'istanza di monitoraggio delle modifiche.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-201">Monitoring for dependency changes is typically performed by a service that maintains a reference to the change-monitor instance.</span></span> <span data-ttu-id="ec2f0-202">Il riferimento impedisce che l'istanza di garbage collection e pertanto il metodo di un finalizzatore non necessari.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-202">The reference prevents the instance from being garbage collected, and therefore makes a finalizer method unnecessary.</span></span> <span data-ttu-id="ec2f0-203">Per evitare perdite di memoria, quando viene modificata una dipendenza, il <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> metodo elimina l'istanza di monitoraggio delle modifiche (a meno che l'inizializzazione non è ancora terminata).</span><span class="sxs-lookup"><span data-stu-id="ec2f0-203">To avoid memory leaks, when a dependency changes, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method disposes the change-monitor instance (unless initialization has not finished).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2f0-204">Ottiene un valore che indica che lo stato monitorato dalla classe <see cref="T:System.Runtime.Caching.ChangeMonitor" /> è stato modificato.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-204">Gets a value that indicates that the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class has changed.</span></span></summary>
        <value>
          <span data-ttu-id="ec2f0-205"><see langword="true" /> se lo stato monitorato dall'istanza di <see cref="T:System.Runtime.Caching.ChangeMonitor" /> è stato modificato; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-205"><see langword="true" /> if the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance has changed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2f0-206">È possibile controllare il valore di questa proprietà in una classe <xref:System.Runtime.Caching.ChangeMonitor> classe per vedere se è stata modificata una dipendenza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-206">You can check the value of this property in a derived <xref:System.Runtime.Caching.ChangeMonitor> class to see whether a dependency has changed.</span></span>  
  
 <span data-ttu-id="ec2f0-207">Il valore è impostato su `true` quando viene apportata una modifica dipendenza (ovvero, quando il <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodo viene chiamato).</span><span class="sxs-lookup"><span data-stu-id="ec2f0-207">The value is set to `true` when a dependency change occurs (that is, when the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called).</span></span> <span data-ttu-id="ec2f0-208">Dopo il <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodo viene chiamato dalla classe derivata, il valore della <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> proprietà sarà `true`, indipendentemente dal fatto che un <xref:System.Runtime.Caching.OnChangedCallback> istanza ha ricevuto alcuna notifica da una chiamata al <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-208">After the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called by the derived class, the value of the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property will be `true`, regardless of whether a <xref:System.Runtime.Caching.OnChangedCallback> instance has been notified by a call to the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2f0-209">I chiamanti possono controllare il <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> proprietà per verificare se è stata modificata una dipendenza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-209">Callers can check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property to see whether a dependency has changed.</span></span> <span data-ttu-id="ec2f0-210">Tuttavia, in un ambiente a thread multipli, un approccio più semplice e più gestibile è inserire i dati in un'implementazione della cache senza verificare la <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-210">However, in a multi-threaded environment, a simpler and more maintainable approach is to insert data into a cache implementation without checking the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property.</span></span> <span data-ttu-id="ec2f0-211">Le implementazioni della cache devono controllare il <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> proprietà automaticamente e non deve eseguire un'istruzione insert o operazione set se uno o più delle relative dipendenze sono già stati modificati.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-211">Cache implementations must check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property for you and must not perform an insert or set operation if one or more associated dependencies have already changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InitializationComplete">
      <MemberSignature Language="C#" Value="protected void InitializationComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializationComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializationComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializationComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec2f0-212">Chiamato dal costruttore di classi derivate per indicare che l'inizializzazione è terminata.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-212">Called from the constructor of derived classes to indicate that initialization is finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2f0-213">Se una dipendenza viene modificata prima che l'inizializzazione è completa in una classe derivata, è necessario richiamare il costruttore della classe derivata di <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-213">If a dependency changes before initialization is complete in a derived class, the constructor of the derived class must invoke the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span>  
  
 <span data-ttu-id="ec2f0-214">Quando il <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodo viene richiamato, il <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> proprietà viene impostata automaticamente su `true` dal monitoraggio delle modifiche.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-214">When the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked, the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is automatically set to `true` by the change monitor.</span></span> <span data-ttu-id="ec2f0-215">Di conseguenza, quando chiama il costruttore del monitoraggio cambia il <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> metodo, la classe di base chiamerà automaticamente il <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-215">As a result, when the change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, the base class will automatically call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="ec2f0-216">Se l'inizializzazione è completa, il <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodo elimina automaticamente l'istanza di monitoraggio delle modifiche.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-216">If initialization is complete, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically disposes the derived change-monitor instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="ec2f0-217">Il costruttore di una classe derivata deve chiamare la base <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> metodo prima di restituire il costruttore.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-217">The constructor of a derived class must call the base <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the constructor returns.</span></span> <span data-ttu-id="ec2f0-218">Può chiamare il costruttore di una classe derivata di <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodo solo dopo che <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> viene chiamato, perché il <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodo genera un'eccezione se non viene completata l'inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-218">The constructor of a derived class can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2f0-219">Ottiene un valore che indica che viene eliminata un'istanza derivata di una classe <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-219">Gets a value that indicates that the derived instance of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class is disposed.</span></span></summary>
        <value>
          <span data-ttu-id="ec2f0-220"><see langword="true" /> se l'istanza è stata eliminata. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-220"><see langword="true" /> if the instance is disposed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2f0-221">La proprietà è impostata su `true` dopo la base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> chiamate al metodo di <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodo in una classe derivata per eliminare l'istanza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-221">The property is set to `true` after the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method in a derived class to dispose of the instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnChanged">
      <MemberSignature Language="C#" Value="public void NotifyOnChanged (System.Runtime.Caching.OnChangedCallback onChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyOnChanged(class System.Runtime.Caching.OnChangedCallback onChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyOnChanged(System::Runtime::Caching::OnChangedCallback ^ onChangedCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
      </Parameters>
      <Docs>
        <param name="onChangedCallback"><span data-ttu-id="ec2f0-222">Riferimento a un metodo richiamato quando viene modificata una dipendenza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-222">A reference to a method that is invoked when a dependency has changed.</span></span></param>
        <summary><span data-ttu-id="ec2f0-223">Chiamato dalle implementazioni della cache per registrare un callback e notificare a un'istanza <see cref="T:System.Runtime.Caching.ObjectCache" /> tramite il delegato <see cref="T:System.Runtime.Caching.OnChangedCallback" /> quando una dipendenza viene modificata.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-223">Called by Cache implementers to register a callback and notify an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance through the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> delegate when a dependency has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2f0-224">I responsabili dell'implementazione della cache di utilizzare questo metodo per associarsi a un monitoraggio delle modifiche.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-224">Cache implementers use this method to wire themselves up to a change monitor.</span></span> <span data-ttu-id="ec2f0-225">Se si associa uno o più monitoraggi con l'elemento della cache delle modifiche, si passa un <xref:System.Runtime.Caching.CacheItemPolicy> istanza con una proprietà di monitoraggi modifiche compilata per l'elemento della cache.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-225">If you associate one or more change monitors with the cache item, you pass a <xref:System.Runtime.Caching.CacheItemPolicy> instance with a populated change monitors property to the cache item.</span></span> <span data-ttu-id="ec2f0-226">Un implementatore della cache che supporta monitoraggi delle modifiche è responsabile per l'iterazione di <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A> proprietà e registrare il <xref:System.Runtime.Caching.OnChangedCallback> delegati con ogni monitoraggio delle modifiche che trova.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-226">A cache implementer that supports change monitors is responsible for iterating over the <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A> property and register the <xref:System.Runtime.Caching.OnChangedCallback> delegates with each change monitor that it finds.</span></span>  
  
 <span data-ttu-id="ec2f0-227">Poiché il <xref:System.Runtime.Caching.OnChangedCallback> delegato include un parametro di stato facoltative, un'implementazione di monitoraggio delle modifiche concreto possibile passare le informazioni di stato facoltative.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-227">Because the <xref:System.Runtime.Caching.OnChangedCallback> delegate includes an optional state parameter, a concrete change monitor implementation can pass optional state information.</span></span> <span data-ttu-id="ec2f0-228">L'implementatore della cache determina se una dipendenza esplicita del tipo di stato di un monitoraggio delle modifiche personalizzato passa come parte del metodo di callback può essere ottenuta.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-228">The cache implementer determines whether an explicit dependency on the type of state that a custom change monitor passes as part of the callback can be taken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec2f0-229">API di estensibilità della cache di base non presenta requisiti per dipendenza esplicita del tipo di stato.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-229">The base cache extensibility API has no requirement for explicit dependency on the type of state.</span></span>  
  
 <span data-ttu-id="ec2f0-230">L'implementazione del <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> metodo determina automaticamente se lo stato del monitoraggio è già stato modificato al momento <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> metodo viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-230">The implementation of the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method automatically determines whether the state of the monitor has already changed at the time <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called.</span></span> <span data-ttu-id="ec2f0-231">Se il <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> proprietà `true`, quindi il metodo viene chiamato automaticamente il <xref:System.Runtime.Caching.OnChangedCallback> gestore dell'evento, che è stato registrato, tramite il <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-231">If the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is `true`, then the method automatically calls the <xref:System.Runtime.Caching.OnChangedCallback> event handler, that was registered, through the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span> <span data-ttu-id="ec2f0-232">Questo errore si verifica poiché è possibile che dal momento in cui che un'implementazione della cache consente di creare un monitoraggio delle modifiche, all'ora di un'implementazione della cache Ottiene il monitoraggio e collega ad esso, lo stato monitorato sottostante è stato modificato.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-232">This occurs because it is possible that from the time a cache implementation creates a change monitor, to the time a cache implementation gets the monitor and wires itself up to it, the underlying monitored state has changed.</span></span> <span data-ttu-id="ec2f0-233">Se lo stato è già stato modificato, l'oggetto viene passato per il <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodo `null`.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-233">If the state has already changed then the object that is passed to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is `null`.</span></span>  
  
 <span data-ttu-id="ec2f0-234">Il <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> metodo può essere richiamato solo una volta e verrà generata un'eccezione per le chiamate successive.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-234">The <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method can be invoked only one time, and will throw an exception on subsequent calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec2f0-235">Il metodo callback è stato già richiamato.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-235">The callback method has already been invoked.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec2f0-236"><paramref name="onChangedCallback" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-236"><paramref name="onChangedCallback" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para>1.  <span data-ttu-id="ec2f0-237">È necessario chiamare il <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> metodo ricevere notifica delle modifiche di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-237">You must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method to be notified of any dependency changes.</span></span> <span data-ttu-id="ec2f0-238">Se una modifica apportata alla dipendenza è già verificato, il <see cref="T:System.Runtime.Caching.OnChangedCallback" /> istanza verrà chiamata quando <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-238">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span></span> <span data-ttu-id="ec2f0-239">In caso contrario, il <see cref="T:System.Runtime.Caching.OnChangedCallback" /> istanza verrà chiamata una sola volta, quando il <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> metodo viene chiamato o quando il <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodo viene chiamato, qualunque si verifichi prima.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-239">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called one time, either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, whichever occurs first.</span></span> <span data-ttu-id="ec2f0-240">Il <see cref="T:System.Runtime.Caching.OnChangedCallback" /> istanza fornito dall'implementazione della cache deve rimuovere la voce della cache e se viene richiesto dal chiamante della cache, genera la modifica necessaria o un evento di aggiornamento al chiamante originale della cache.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-240">The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance provided by the cache implementation should remove the cache entry and if it is requested by the cache caller, raise the necessary change or update event back to the original cache caller.</span></span>  
  
2.  <span data-ttu-id="ec2f0-241">L'implementazione della cache oggetti è necessario rimuovere la voce della cache associata a una modifica della dipendenza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-241">The object cache implementation must remove the cache entry that is associated with a dependency change.</span></span></para>
        </block>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnChanged (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnChanged(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="ec2f0-242">Dati per l'evento di modifica.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-242">The data for the change event.</span></span> <span data-ttu-id="ec2f0-243">Il valore può essere <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-243">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ec2f0-244">Chiamato dalle classi derivate per generare l'evento quando viene modificata una dipendenza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-244">Called by derived classes to raise the event when a dependency changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2f0-245">In genere, il <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodo viene chiamato quando si verificano le modifiche di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-245">Typically, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called when dependency changes occur.</span></span> <span data-ttu-id="ec2f0-246">Il <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodo viene richiamato anche quando un'istanza di monitoraggio delle modifiche viene eliminata, ma l'eliminazione si verifica solo se non è già stato richiamato il callback.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-246">The <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is also invoked when a change-monitor instance is disposed but the disposal occurs only if the callback has not already been invoked.</span></span>  
  
 <span data-ttu-id="ec2f0-247">Se il <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodo viene chiamato prima di <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> metodo viene chiamato, i dati dello stato dalla chiamata al <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodo viene salvato dall'implementazione della cache.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-247">If the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called before the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called, the state data from the call to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is saved by the cache implementation.</span></span> <span data-ttu-id="ec2f0-248">Inoltre, il callback di <xref:System.Runtime.Caching.OnChangedCallback> metodo viene richiamato immediatamente quando il <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> metodo viene richiamato.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-248">Also, the callback to the <xref:System.Runtime.Caching.OnChangedCallback> method is invoked immediately when the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public abstract string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec2f0-249">Ottiene un valore che rappresenta l'istanza della classe <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-249">Gets a value that represents the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class instance.</span></span></summary>
        <value><span data-ttu-id="ec2f0-250">Identificatore di un'istanza di monitoraggio delle modifiche.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-250">The identifier for a change-monitor instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2f0-251">Il <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> valore della proprietà in genere costituito da dati stringa nomi combinato di dipendenza che identifica in modo univoco i dati monitorati da un <xref:System.Runtime.Caching.ChangeMonitor> istanza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-251">The <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property value typically consists of dependency names combined string data that uniquely identifiers the data that is being monitored by a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="ec2f0-252">Il valore di <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> proprietà è una stringa.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-252">The value of the <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property is a string.</span></span> <span data-ttu-id="ec2f0-253">Il valore della stringa viene utilizzato per assegnare l'ID univoco del <xref:System.Runtime.Caching.ChangeMonitor> istanza.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-253">The value of the string is used to assign the unique ID of the <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="ec2f0-254">Eseguendo l'override della proprietà, è possibile definire un'implementazione personalizzata per il valore stringa della proprietà per assegnare un ID univoco.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-254">By overriding the property, you can define a custom implementation for the string value of the property in order to assign it a unique ID.</span></span></para>
        </block>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="ec2f0-255">Nelle classi derivate, è necessario impostare il valore della proprietà nel costruttore.</span><span class="sxs-lookup"><span data-stu-id="ec2f0-255">In derived classes, you must set the value of the property in the constructor.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>