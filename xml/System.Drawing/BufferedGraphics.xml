<Type Name="BufferedGraphics" FullName="System.Drawing.BufferedGraphics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ac2636a6aa0a0e2fd1c8ca2f77c099113b6d3fc" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49136660" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BufferedGraphics : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphics extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphics&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphics sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphics = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b0421-101">Fornisce un buffer grafico per il doppio buffer.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0421-101">Provides a graphics buffer for double buffering.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0421-102">Il <xref:System.Drawing.BufferedGraphics> classe consente di implementare il doppio buffer personalizzato per le immagini.</span><span class="sxs-lookup"><span data-stu-id="b0421-102">The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="b0421-103">Fornisce un wrapper per un buffer di grafica, insieme ai metodi che è possibile utilizzare per scrivere nel buffer ed eseguire il rendering del contenuto in un dispositivo di output.</span><span class="sxs-lookup"><span data-stu-id="b0421-103">It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="b0421-104">Le immagini che utilizzano il doppio buffer possono ridurre o evitare lo sfarfallio causato dal ridisegno una superficie di visualizzazione.</span><span class="sxs-lookup"><span data-stu-id="b0421-104">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span> <span data-ttu-id="b0421-105">Quando si usa il doppio buffer, le immagini aggiornate prima di tutto vengono disegnate in un buffer in memoria e il contenuto di questo buffer viene quindi scritti da alcuni o tutti la superficie visualizzata rapidamente.</span><span class="sxs-lookup"><span data-stu-id="b0421-105">When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</span></span> <span data-ttu-id="b0421-106">La sovrascrittura relativamente breve della grafica visualizzata in genere consente di ridurre o Elimina lo sfarfallio che talvolta si verifica quando le immagini vengono aggiornate.</span><span class="sxs-lookup"><span data-stu-id="b0421-106">This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0421-107">Il modo più semplice per usare il doppio buffer consiste nell'impostare il <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> controllare il flag di stile di visualizzazione su un controllo utilizzando il <xref:System.Windows.Forms.Control.SetStyle%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="b0421-107">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="b0421-108">L'impostazione di <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag per un controllo reindirizza tutti i disegni per il controllo tramite un buffer grafico predefinita, senza richiedere codice aggiuntivo.</span><span class="sxs-lookup"><span data-stu-id="b0421-108">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="b0421-109">Questo flag è impostato su `true` per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="b0421-109">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="b0421-110">Il <xref:System.Drawing.BufferedGraphics> classe non dispone di alcun costruttore pubblico e deve essere creato dal <xref:System.Drawing.BufferedGraphicsContext> per un dominio applicazione usando il <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="b0421-110">The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="b0421-111">È possibile recuperare il <xref:System.Drawing.BufferedGraphicsContext> per il dominio applicazione corrente da statico <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="b0421-111">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b0421-112">Il <xref:System.Drawing.BufferedGraphics.Graphics%2A> proprietà può essere utilizzata per disegnare la grafica nel buffer.</span><span class="sxs-lookup"><span data-stu-id="b0421-112">The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer.</span></span> <span data-ttu-id="b0421-113">Questa proprietà fornisce l'accesso per il <xref:System.Drawing.Graphics> che disegna il buffer di grafica allocato per questo oggetto <xref:System.Drawing.BufferedGraphics> oggetto.</span><span class="sxs-lookup"><span data-stu-id="b0421-113">This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 <span data-ttu-id="b0421-114">Il <xref:System.Drawing.BufferedGraphics.Render%2A> metodo con alcun argomenti consente di disegnare il contenuto della grafica nel buffer nell'area di specificato quando è stato allocato il buffer.</span><span class="sxs-lookup"><span data-stu-id="b0421-114">The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</span></span> <span data-ttu-id="b0421-115">Altri overload del <xref:System.Drawing.BufferedGraphics.Render%2A> metodo consentono di specificare un <xref:System.Drawing.Graphics> oggetto o un <xref:System.IntPtr> oggetto che punta a un contesto di dispositivo in cui disegnare il contenuto del buffer grafico.</span><span class="sxs-lookup"><span data-stu-id="b0421-115">Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer.</span></span>  
  
 <span data-ttu-id="b0421-116">Per altre informazioni sulla creazione grafica a doppio buffer, vedere [grafica a doppio buffer](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span><span class="sxs-lookup"><span data-stu-id="b0421-116">For more information about drawing double-buffered graphics, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0421-117">Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Drawing.BufferedGraphics> oggetto su cui disegnare immagini mediante diversi tipi di implementazioni di memorizzazione nel buffer.</span><span class="sxs-lookup"><span data-stu-id="b0421-117">The following code example demonstrates using a <xref:System.Drawing.BufferedGraphics> object to draw graphics using several types of buffering implementations.</span></span> <span data-ttu-id="b0421-118">In alternativa facendo clic sulla forma avvia e arresta un timer che causa disegna gli aggiornamenti.</span><span class="sxs-lookup"><span data-stu-id="b0421-118">Clicking the form alternately starts and stops a timer that causes draw updates.</span></span> <span data-ttu-id="b0421-119">Gli aggiornamenti di disegno consentono di osservare gli effetti del buffering doppio.</span><span class="sxs-lookup"><span data-stu-id="b0421-119">The draw updates allow you to observe the effect of double buffering.</span></span> <span data-ttu-id="b0421-120">Pulsante destro del mouse i cicli di form tramite la modalità di disegno seguenti:</span><span class="sxs-lookup"><span data-stu-id="b0421-120">Right-clicking the form cycles through the following drawing modes:</span></span>  
  
-   <span data-ttu-id="b0421-121">Disegno direttamente la <xref:System.Windows.Forms.Control.Handle%2A> per un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="b0421-121">Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.</span></span>  
  
-   <span data-ttu-id="b0421-122">Disegno eseguendo l'override di <xref:System.Windows.Forms.Form.OnPaint%2A> metodo utilizzando il <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> controllano lo stile.</span><span class="sxs-lookup"><span data-stu-id="b0421-122">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
-   <span data-ttu-id="b0421-123">Disegno eseguendo l'override di <xref:System.Windows.Forms.Form.OnPaint%2A> per il metodo form senza usare il <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> controllano lo stile.</span><span class="sxs-lookup"><span data-stu-id="b0421-123">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
 <span data-ttu-id="b0421-124">In ciascuna modalità, viene disegnato il testo che identifica la modalità corrente e viene descritto il comportamento che si verifica quando ogni pulsante del mouse viene premuto.</span><span class="sxs-lookup"><span data-stu-id="b0421-124">In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.</span></span>  
  
 [!code-cpp[BufferedGraphicsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferedGraphicsExample/CPP/bufferingtest.cpp#1)]
 [!code-csharp[BufferedGraphicsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferedGraphicsExample/CS/bufferingtest.cs#1)]
 [!code-vb[BufferedGraphicsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferedGraphicsExample/VB/bufferingtest.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="b0421-125">La classe <see cref="T:System.Drawing.BufferedGraphics" /> non è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0421-125">The <see cref="T:System.Drawing.BufferedGraphics" /> class is not thread safe.</span>
      </span>
      <span data-ttu-id="b0421-126">Quando si accede a un buffer di grafica da un thread separato, è importante usare un meccanismo di controllo di accesso di thread per evitare conflitti.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0421-126">When accessing a graphics buffer from separate threads, it is important to use a thread-access control mechanism to prevent conflicts.</span>
      </span>
    </threadsafe>
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
      <span data-ttu-id="b0421-127">Grafica a doppio buffer</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0421-127">Double Buffered Graphics</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphics.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0421-128">Rilascia tutte le risorse usate dall'oggetto <see cref="T:System.Drawing.BufferedGraphics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-128">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphics" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0421-129">Chiamare <xref:System.Drawing.BufferedGraphics.Dispose%2A> termine usando il <xref:System.Drawing.BufferedGraphics> oggetto.</span><span class="sxs-lookup"><span data-stu-id="b0421-129">Call <xref:System.Drawing.BufferedGraphics.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="b0421-130">Il <xref:System.Drawing.BufferedGraphics.Dispose%2A> metodo lascia il <xref:System.Drawing.BufferedGraphics> oggetto in uno stato inutilizzabile.</span><span class="sxs-lookup"><span data-stu-id="b0421-130">The <xref:System.Drawing.BufferedGraphics.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphics> object in an unusable state.</span></span> <span data-ttu-id="b0421-131">Dopo la chiamata <xref:System.Drawing.BufferedGraphics.Dispose%2A>, è necessario rilasciare tutti i riferimenti per il <xref:System.Drawing.BufferedGraphics> dell'oggetto in modo che il garbage collector di recuperare la memoria che il <xref:System.Drawing.BufferedGraphics> occupata dall'oggetto.</span><span class="sxs-lookup"><span data-stu-id="b0421-131">After calling <xref:System.Drawing.BufferedGraphics.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphics> object so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphics> object was occupying.</span></span> <span data-ttu-id="b0421-132">Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementa un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="b0421-132">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0421-133">Chiamare sempre <xref:System.Drawing.BufferedGraphics.Dispose%2A> prima di rilasciare l'ultimo riferimento al <xref:System.Drawing.BufferedGraphics> oggetto.</span><span class="sxs-lookup"><span data-stu-id="b0421-133">Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="b0421-134">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Drawing.BufferedGraphics> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="b0421-134">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="b0421-135">Grafica a doppio buffer</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-135">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphics ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphics.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0421-136">Consente a un oggetto di effettuare un tentativo di liberare risorse ed eseguire altre operazioni di pulizia prima che venga recuperato da Garbage Collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-136">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphics.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Drawing.BufferedGraphics.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0421-137">Ottiene un oggetto <see cref="T:System.Drawing.Graphics" /> con output nel buffer grafico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-137">Gets a <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0421-138">Oggetto <see cref="T:System.Drawing.Graphics" /> con output nel buffer grafico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-138">A <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0421-139">Questa proprietà fornisce un <xref:System.Drawing.Graphics> che disegna il buffer di grafica allocato per questo oggetto <xref:System.Drawing.BufferedGraphics> oggetto.</span><span class="sxs-lookup"><span data-stu-id="b0421-139">This property provides a <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="b0421-140">Grafica a doppio buffer</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-140">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Render">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0421-141">Scrive il contenuto del buffer grafico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-141">Writes the contents of the graphics buffer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render();" />
      <MemberSignature Language="F#" Value="member this.Render : unit -&gt; unit" Usage="bufferedGraphics.Render " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0421-142">Scrive il contenuto del buffer grafico nel dispositivo predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-142">Writes the contents of the graphics buffer to the default device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0421-143">Questo metodo scrive il contenuto del buffer grafico al dispositivo specificato chiamando il <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metodo per il <xref:System.Drawing.BufferedGraphicsContext> usato per creare questa <xref:System.Drawing.BufferedGraphics> oggetto.</span><span class="sxs-lookup"><span data-stu-id="b0421-143">This method writes the contents of the graphics buffer to the device specified by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method of the <xref:System.Drawing.BufferedGraphicsContext> used to create this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="b0421-144">Grafica a doppio buffer</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-144">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Drawing.Graphics target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Drawing.Graphics target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (target As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Drawing::Graphics ^ target);" />
      <MemberSignature Language="F#" Value="member this.Render : System.Drawing.Graphics -&gt; unit" Usage="bufferedGraphics.Render target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0421-145">Oggetto <see cref="T:System.Drawing.Graphics" /> in cui scrivere il contenuto del buffer grafico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-145">A <see cref="T:System.Drawing.Graphics" /> object to which to write the contents of the graphics buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0421-146">Scrive il contenuto del buffer grafico nell'oggetto specificato <see cref="T:System.Drawing.Graphics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-146">Writes the contents of the graphics buffer to the specified <see cref="T:System.Drawing.Graphics" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0421-147">Questo metodo scrive il contenuto del buffer grafico specificato <xref:System.Drawing.Graphics> oggetto.</span><span class="sxs-lookup"><span data-stu-id="b0421-147">This method writes the contents of the graphics buffer to the specified <xref:System.Drawing.Graphics> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0421-148">Esempio di codice seguente dimostra il rendering del contenuto del buffer grafico per un determinato <xref:System.Drawing.Graphics> oggetto.</span><span class="sxs-lookup"><span data-stu-id="b0421-148">The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="b0421-149">Questo codice è parte di un esempio più esaustivo disponibile per il <xref:System.Drawing.BufferedGraphics> classe.</span><span class="sxs-lookup"><span data-stu-id="b0421-149">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#5)]
 [!code-csharp[BufferingExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#5)]
 [!code-vb[BufferingExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="b0421-150">Grafica a doppio buffer</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-150">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (IntPtr targetDC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(native int targetDC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (targetDC As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(IntPtr targetDC);" />
      <MemberSignature Language="F#" Value="member this.Render : nativeint -&gt; unit" Usage="bufferedGraphics.Render targetDC" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="targetDC">
          <span data-ttu-id="b0421-151">Oggetto <see cref="T:System.IntPtr" /> che fa riferimento al contesto di dispositivo in cui scrivere il contenuto del buffer grafico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-151">An <see cref="T:System.IntPtr" /> that points to the device context to which to write the contents of the graphics buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0421-152">Scrive il contenuto del buffer grafico nel contesto di dispositivo associato all'handle <see cref="T:System.IntPtr" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-152">Writes the contents of the graphics buffer to the device context associated with the specified <see cref="T:System.IntPtr" /> handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0421-153">Questo metodo scrive il contenuto del buffer grafico al contesto di dispositivo associato all'oggetto specificato <xref:System.IntPtr> gestire.</span><span class="sxs-lookup"><span data-stu-id="b0421-153">This method writes the contents of the graphics buffer to the device context associated with the specified <xref:System.IntPtr> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0421-154">Il codice seguente viene illustrato come eseguire il rendering di contenuto del buffer di grafica `grafx` a un contesto di dispositivo specificato.</span><span class="sxs-lookup"><span data-stu-id="b0421-154">The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context.</span></span> <span data-ttu-id="b0421-155">Questo codice è parte di un esempio più esaustivo disponibile per il <xref:System.Drawing.BufferedGraphics> classe.</span><span class="sxs-lookup"><span data-stu-id="b0421-155">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#6)]
 [!code-csharp[BufferingExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#6)]
 [!code-vb[BufferingExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b0421-156">Per accedere al codice non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-156">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="b0421-157">Enumerazione correlata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-157">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.IntPtr" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="b0421-158">Grafica a doppio buffer</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0421-158">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>