<Type Name="TextureBrush" FullName="System.Drawing.TextureBrush">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1cfe8cfd45b38104c44f10850b708e8c8defebd9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36488448" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TextureBrush : System.Drawing.Brush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextureBrush extends System.Drawing.Brush" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.TextureBrush" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextureBrush&#xA;Inherits Brush" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextureBrush sealed : System::Drawing::Brush" />
  <TypeSignature Language="F#" Value="type TextureBrush = class&#xA;    inherit Brush" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Brush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ciascuna proprietà della classe <see cref="T:System.Drawing.TextureBrush" /> rappresenta un oggetto <see cref="T:System.Drawing.Brush" /> che utilizza un'immagine per riempire la parte interna di una forma. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come ottenere una nuova bitmap mediante il <xref:System.Drawing.Image.FromFile%2A> metodo. Viene inoltre illustrato un <xref:System.Drawing.TextureBrush>.  
  
 In questo esempio è progettato per essere utilizzato con Windows Form. Creare un form contenente un pulsante denominato Button2. Incollare il codice nel form e associare il metodo Button2_Click con il pulsante `Click` evento.  
  
 [!code-cpp[System.Drawing.ImageExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ImageExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ImageExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.TextureBrush" /> che utilizza l'immagine specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image bitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bitmap As Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ bitmap);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush bitmap" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="bitmap">Oggetto <see cref="T:System.Drawing.Image" /> con il quale <see cref="T:System.Drawing.TextureBrush" /> riempie le parti interne.</param>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.TextureBrush" /> che utilizza l'immagine specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come ottenere una nuova bitmap mediante il <xref:System.Drawing.Image.FromFile%2A> metodo. Viene inoltre illustrato un <xref:System.Drawing.TextureBrush>.  
  
 In questo esempio è progettato per essere utilizzato con Windows Form. Creare un form contenente un pulsante denominato Button2. Incollare il codice nel form e associare il metodo Button2_Click con il pulsante `Click` evento.  
  
 [!code-cpp[System.Drawing.ImageExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ImageExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ImageExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.Drawing2D.WrapMode wrapMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.Drawing2D.WrapMode wrapMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::Drawing2D::WrapMode wrapMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.Drawing2D.WrapMode -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, wrapMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="wrapMode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="image">Oggetto <see cref="T:System.Drawing.Image" /> con il quale <see cref="T:System.Drawing.TextureBrush" /> riempie le parti interne.</param>
        <param name="wrapMode">Enumerazione <see cref="T:System.Drawing.Drawing2D.WrapMode" /> che specifica come viene affiancato questo oggetto <see cref="T:System.Drawing.TextureBrush" />.</param>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.TextureBrush" /> che utilizza l'immagine specificata e la modalità A capo automatico.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.Rectangle dstRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.Rectangle dstRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::Rectangle dstRect);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.Rectangle -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, dstRect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="dstRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="image">Oggetto <see cref="T:System.Drawing.Image" /> con il quale <see cref="T:System.Drawing.TextureBrush" /> riempie le parti interne.</param>
        <param name="dstRect">Struttura <see cref="T:System.Drawing.Rectangle" /> che rappresenta il rettangolo di delimitazione per questo oggetto <see cref="T:System.Drawing.TextureBrush" />.</param>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.TextureBrush" /> che utilizza l'immagine e il rettangolo di delimitazione specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.RectangleF dstRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.RectangleF dstRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::RectangleF dstRect);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.RectangleF -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, dstRect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="dstRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="image">Oggetto <see cref="T:System.Drawing.Image" /> con il quale <see cref="T:System.Drawing.TextureBrush" /> riempie le parti interne.</param>
        <param name="dstRect">Struttura <see cref="T:System.Drawing.RectangleF" /> che rappresenta il rettangolo di delimitazione per questo oggetto <see cref="T:System.Drawing.TextureBrush" />.</param>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.TextureBrush" /> che utilizza l'immagine e il rettangolo di delimitazione specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.Drawing2D.WrapMode wrapMode, System.Drawing.Rectangle dstRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.Drawing2D.WrapMode wrapMode, valuetype System.Drawing.Rectangle dstRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::Drawing2D::WrapMode wrapMode, System::Drawing::Rectangle dstRect);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.Drawing2D.WrapMode * System.Drawing.Rectangle -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, wrapMode, dstRect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="wrapMode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="dstRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="image">Oggetto <see cref="T:System.Drawing.Image" /> con il quale <see cref="T:System.Drawing.TextureBrush" /> riempie le parti interne.</param>
        <param name="wrapMode">Enumerazione <see cref="T:System.Drawing.Drawing2D.WrapMode" /> che specifica come viene affiancato questo oggetto <see cref="T:System.Drawing.TextureBrush" />.</param>
        <param name="dstRect">Struttura <see cref="T:System.Drawing.Rectangle" /> che rappresenta il rettangolo di delimitazione per questo oggetto <see cref="T:System.Drawing.TextureBrush" />.</param>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.TextureBrush" /> che utilizza l'immagine, la modalità A capo automatico e il rettangolo di delimitazione specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.Drawing2D.WrapMode wrapMode, System.Drawing.RectangleF dstRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.Drawing2D.WrapMode wrapMode, valuetype System.Drawing.RectangleF dstRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::Drawing2D::WrapMode wrapMode, System::Drawing::RectangleF dstRect);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.Drawing2D.WrapMode * System.Drawing.RectangleF -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, wrapMode, dstRect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="wrapMode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="dstRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="image">Oggetto <see cref="T:System.Drawing.Image" /> con il quale <see cref="T:System.Drawing.TextureBrush" /> riempie le parti interne.</param>
        <param name="wrapMode">Enumerazione <see cref="T:System.Drawing.Drawing2D.WrapMode" /> che specifica come viene affiancato questo oggetto <see cref="T:System.Drawing.TextureBrush" />.</param>
        <param name="dstRect">Struttura <see cref="T:System.Drawing.RectangleF" /> che rappresenta il rettangolo di delimitazione per questo oggetto <see cref="T:System.Drawing.TextureBrush" />.</param>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.TextureBrush" /> che utilizza l'immagine, la modalità A capo automatico e il rettangolo di delimitazione specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.Rectangle dstRect, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.Rectangle dstRect, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::Rectangle dstRect, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.Rectangle * System.Drawing.Imaging.ImageAttributes -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, dstRect, imageAttr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="dstRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image">Oggetto <see cref="T:System.Drawing.Image" /> con il quale <see cref="T:System.Drawing.TextureBrush" /> riempie le parti interne.</param>
        <param name="dstRect">Struttura <see cref="T:System.Drawing.Rectangle" /> che rappresenta il rettangolo di delimitazione per questo oggetto <see cref="T:System.Drawing.TextureBrush" />.</param>
        <param name="imageAttr">Oggetto <see cref="T:System.Drawing.Imaging.ImageAttributes" /> che contiene informazioni aggiuntive sull'immagine utilizzata da <see cref="T:System.Drawing.TextureBrush" />.</param>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.TextureBrush" /> che utilizza l'immagine, il rettangolo di delimitazione e gli attributi dell'immagine specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.RectangleF dstRect, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.RectangleF dstRect, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::RectangleF dstRect, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.RectangleF * System.Drawing.Imaging.ImageAttributes -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, dstRect, imageAttr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="dstRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image">Oggetto <see cref="T:System.Drawing.Image" /> con il quale <see cref="T:System.Drawing.TextureBrush" /> riempie le parti interne.</param>
        <param name="dstRect">Struttura <see cref="T:System.Drawing.RectangleF" /> che rappresenta il rettangolo di delimitazione per questo oggetto <see cref="T:System.Drawing.TextureBrush" />.</param>
        <param name="imageAttr">Oggetto <see cref="T:System.Drawing.Imaging.ImageAttributes" /> che contiene informazioni aggiuntive sull'immagine utilizzata da <see cref="T:System.Drawing.TextureBrush" />.</param>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.TextureBrush" /> che utilizza l'immagine, il rettangolo di delimitazione e gli attributi dell'immagine specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="textureBrush.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia esatta dell'oggetto <see cref="T:System.Drawing.TextureBrush" />.</summary>
        <returns>Oggetto <see cref="T:System.Drawing.TextureBrush" /> creato da questo metodo, di cui viene eseguito il cast come oggetto <see cref="T:System.Object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del `Paint` gestore dell'evento. Il codice crea un <xref:System.Drawing.TextureBrush> oggetto e una copia esatta di esso, quindi la copia viene usato per riempire un rettangolo sullo schermo.  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public System.Drawing.Image Image { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.TextureBrush.Image" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Image : System.Drawing.Image" Usage="System.Drawing.TextureBrush.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Drawing.Image" /> associato a questo <see cref="T:System.Drawing.TextureBrush" />.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Image" /> che rappresenta l'immagine con cui <see cref="T:System.Drawing.TextureBrush" /> riempie le forme.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Moltiplica l'oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> che rappresenta la trasformazione geometrica locale di questo oggetto <see cref="T:System.Drawing.TextureBrush" /> per l'oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> specificato nell'ordine indicato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="textureBrush.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">Oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> per il quale moltiplicare la trasformazione geometrica.</param>
        <summary>Moltiplica l'oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> che rappresenta la trasformazione geometrica locale di questo oggetto <see cref="T:System.Drawing.TextureBrush" /> per l'oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> specificato anteponendo l'oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Matrice di trasformazione di un <xref:System.Drawing.TextureBrush> oggetto specifica il modo in cui l'immagine che definisce la trama viene trasformato. Ad esempio, se la matrice di trasformazione specifica una rotazione di 90 gradi in senso orario, l'immagine di trama viene ruotata di 90 gradi in senso orario.  
  
   
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del `Paint` gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un oggetto <xref:System.Drawing.TextureBrush>.  
  
-   Crea una nuova matrice che specifica una traslazione di 50 unità nella direzione x.  
  
-   Moltiplica la matrice con la matrice di trasformazione del pennello trama.  
  
-   Riempimento di un rettangolo, mediante il pennello di trama.  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="textureBrush.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">Oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> per il quale moltiplicare la trasformazione geometrica.</param>
        <param name="order">Enumerazione <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> che specifica l'ordine in cui moltiplicare le due matrici.</param>
        <summary>Moltiplica l'oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> che rappresenta la trasformazione geometrica locale di questo oggetto <see cref="T:System.Drawing.TextureBrush" /> per l'oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> specificato nell'ordine indicato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Matrice di trasformazione di un <xref:System.Drawing.TextureBrush> oggetto specifica il modo in cui l'immagine che definisce la trama viene trasformato. Ad esempio, se la matrice di trasformazione specifica una rotazione di 90 gradi in senso orario, l'immagine di trama viene ruotata di 90 gradi in senso orario.  
  
   
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del `Paint` gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un oggetto <xref:System.Drawing.TextureBrush>.  
  
-   Crea una nuova matrice che specifica una traslazione di 50 unità nella direzione x.  
  
-   Moltiplica la matrice con la matrice di trasformazione del pennello trama.  
  
-   Riempimento di un rettangolo, mediante il pennello di trama.  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="textureBrush.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reimposta la proprietà <see langword="Transform" /> di questo oggetto <see cref="T:System.Drawing.TextureBrush" /> sull'identità.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del `Paint` gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un oggetto <xref:System.Drawing.TextureBrush>.  
  
-   Consente di ruotare di 90 gradi l'immagine di trama.  
  
-   Riempimento di un rettangolo.  
  
-   Reimposta la matrice di trasformazione di identità.  
  
-   Riempimento di un secondo rettangolo.  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruota la trasformazione geometrica locale di questo oggetto <see cref="T:System.Drawing.TextureBrush" /> in base al valore specificato. Questo metodo antepone la rotazione alla trasformazione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="textureBrush.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">Angolo di rotazione.</param>
        <summary>Ruota la trasformazione geometrica locale di questo oggetto <see cref="T:System.Drawing.TextureBrush" /> in base al valore specificato. Questo metodo antepone la rotazione alla trasformazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del `Paint` gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un oggetto <xref:System.Drawing.TextureBrush>.  
  
-   Consente di ruotare di 90 gradi l'immagine di trama.  
  
-   Riempimento di un rettangolo.  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="textureBrush.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">Angolo di rotazione.</param>
        <param name="order">Enumerazione <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> che specifica se accodare o anteporre la matrice di rotazione.</param>
        <summary>Ruota la trasformazione geometrica locale di questo oggetto <see cref="T:System.Drawing.TextureBrush" /> in base agli importi specificati nell'ordine indicato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del `Paint` gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un oggetto <xref:System.Drawing.TextureBrush>.  
  
-   Consente di ruotare di 90 gradi l'immagine di trama.  
  
-   Riempimento di un rettangolo.  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scala la trasformazione geometrica locale di questo oggetto <see cref="T:System.Drawing.TextureBrush" /> in base al valore specificato. Il metodo antepone la matrice di scala alla trasformazione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="textureBrush.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx">Importo in base al quale scalare la trasformazione nella direzione dell'asse X.</param>
        <param name="sy">Importo in base al quale scalare la trasformazione nella direzione dell'asse Y.</param>
        <summary>Scala la trasformazione geometrica locale di questo oggetto <see cref="T:System.Drawing.TextureBrush" /> in base al valore specificato. Il metodo antepone la matrice di scala alla trasformazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del `Paint` gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un oggetto <xref:System.Drawing.TextureBrush>.  
  
-   Ridimensiona la trama dell'immagine da due volte nella direzione x.  
  
-   Riempimento di un rettangolo sullo schermo, mediante il pennello di trama.  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="textureBrush.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx">Importo in base al quale scalare la trasformazione nella direzione dell'asse X.</param>
        <param name="sy">Importo in base al quale scalare la trasformazione nella direzione dell'asse Y.</param>
        <param name="order">Enumerazione <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> che specifica se accodare o anteporre la matrice di ridimensionamento.</param>
        <summary>Scala la trasformazione geometrica locale di questo oggetto <see cref="T:System.Drawing.TextureBrush" /> in base agli importi specificati nell'ordine indicato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del `Paint` gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un oggetto <xref:System.Drawing.TextureBrush>.  
  
-   Ridimensiona la trama dell'immagine da due volte nella direzione x.  
  
-   Riempimento di un rettangolo sullo schermo, mediante il pennello di trama.  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.TextureBrush.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.TextureBrush.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una copia dell'oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> che definisce una trasformazione geometrica locale dell'immagine associata all'oggetto <see cref="T:System.Drawing.TextureBrush" />.</summary>
        <value>Copia dell'oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> che definisce una trasformazione geometrica che può essere applicata solo a riempimenti realizzati utilizzando questo oggetto <see cref="T:System.Drawing.TextureBrush" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una trasformazione geometrica può essere utilizzata per tradurre, scala, rotazione o distorcere l'immagine che definisce la trama del pennello. Poiché la matrice restituita e dal <xref:System.Drawing.TextureBrush.Transform%2A> proprietà è una copia della trasformazione geometrica del pennello, è necessario eliminarlo quando non è più necessario.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Trasla la trasformazione geometrica locale di questo oggetto <see cref="T:System.Drawing.TextureBrush" /> in base alle dimensioni specificate nell'ordine indicato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="textureBrush.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">Dimensione in base alla quale traslare la trasformazione nella direzione x.</param>
        <param name="dy">Dimensione in base alla quale traslare la trasformazione nella direzione y.</param>
        <summary>Trasla la trasformazione geometrica locale di questo oggetto <see cref="T:System.Drawing.TextureBrush" /> in base alle dimensioni specificate. Questo metodo antepone la traslazione alla trasformazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del `Paint` gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un oggetto <xref:System.Drawing.TextureBrush>.  
  
-   Converte la trama immagine 50 unità nella direzione dell'asse x.  
  
-   Riempimento di un rettangolo sullo schermo, mediante il pennello di trama.  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="textureBrush.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx">Dimensione in base alla quale traslare la trasformazione nella direzione x.</param>
        <param name="dy">Dimensione in base alla quale traslare la trasformazione nella direzione y.</param>
        <param name="order">Ordine, di anteposizione o accodamento, in cui applicare la traslazione.</param>
        <summary>Trasla la trasformazione geometrica locale di questo oggetto <see cref="T:System.Drawing.TextureBrush" /> in base alle dimensioni specificate nell'ordine indicato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del `Paint` gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un oggetto <xref:System.Drawing.TextureBrush>.  
  
-   Converte la trama immagine 50 unità nella direzione dell'asse x.  
  
-   Riempimento di un rettangolo sullo schermo, mediante il pennello di trama.  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.WrapMode WrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.TextureBrush.WrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapMode As WrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::WrapMode WrapMode { System::Drawing::Drawing2D::WrapMode get(); void set(System::Drawing::Drawing2D::WrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.WrapMode : System.Drawing.Drawing2D.WrapMode with get, set" Usage="System.Drawing.TextureBrush.WrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.WrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'enumerazione <see cref="T:System.Drawing.Drawing2D.WrapMode" /> che indica la modalità A capo automatico per questo oggetto <see cref="T:System.Drawing.TextureBrush" />.</summary>
        <value>Enumerazione <see cref="T:System.Drawing.Drawing2D.WrapMode" /> che specifica come vengono affiancati i riempimenti realizzati utilizzando l'oggetto <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come ottenere una nuova bitmap mediante il <xref:System.Drawing.Image.FromFile%2A> metodo. Viene inoltre illustrato il <xref:System.Drawing.TextureBrush.WrapMode%2A> proprietà e il <xref:System.Drawing.Drawing2D.WrapMode> enumerazione.  
  
 In questo esempio è progettato per essere utilizzato con Windows Form. Creare un form contenente un pulsante denominato Button2. Incollare il codice nel form e associare il metodo Button2_Click con il pulsante `Click` evento.  
  
 [!code-cpp[System.Drawing.ImageExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ImageExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ImageExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>