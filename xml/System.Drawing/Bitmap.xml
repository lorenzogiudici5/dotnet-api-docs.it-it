<Type Name="Bitmap" FullName="System.Drawing.Bitmap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="38d9a47c3be3553a9154f3be704836828bc64d80" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410635" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Bitmap : System.Drawing.Image" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Bitmap extends System.Drawing.Image" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Bitmap" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Bitmap&#xA;Inherits Image" />
  <TypeSignature Language="C++ CLI" Value="public ref class Bitmap sealed : System::Drawing::Image" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Image</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Incapsula una bitmap GDI+ costituita dai dati pixel di un'immagine e dai relativi attributi. <see cref="T:System.Drawing.Bitmap" /> è un oggetto utilizzato per operare con immagini definite dai dati pixel.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una bitmap è costituito da dati pixel di un'immagine e i relativi attributi. Esistono numerosi formati standard per il salvataggio di una bitmap in un file. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] supporta i formati di file seguenti: BMP, GIF, EXIF, JPG, PNG e TIFF. Per ulteriori informazioni sui formati supportati, vedere [tipi di bitmap](~/docs/framework/winforms/advanced/types-of-bitmaps.md).  
  
 È possibile creare immagini da file, flussi e altre origini utilizzando uno del <xref:System.Drawing.Bitmap.%23ctor%2A> costruttori e salvarle in un flusso o nel file System con il <xref:System.Drawing.Image.Save%2A> metodo. Le immagini vengono disegnate sullo schermo o alla memoria con il <xref:System.Drawing.Graphics.DrawImage%2A> metodo il <xref:System.Drawing.Graphics> oggetto. Per un elenco di argomenti sull'utilizzo dei file di immagine, vedere [utilizzo di immagini, bitmap, icone e metafile](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md).  
  
> [!NOTE]
>  La <xref:System.Drawing.Bitmap> classe non è accessibile in domini applicazione. Ad esempio, se si crea un dinamico <xref:System.AppDomain> e creare diversi pennelli, penne e bitmap in tale dominio, quindi passare questi oggetti nuovamente nel dominio dell'applicazione principale, è possibile utilizzare correttamente le penne e pennelli. Tuttavia, se si chiama il <xref:System.Drawing.Graphics.DrawImage%2A> metodo consente di disegnare il marshalling <xref:System.Drawing.Bitmap>, si riceve l'eccezione seguente.  
>   
>  Servizi remoti Impossibile trovare il campo "immagini native" sul tipo "System.Drawing.Image".  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come costruire un nuovo <xref:System.Drawing.Bitmap> da un file, utilizzando il <xref:System.Drawing.Bitmap.GetPixel%2A> e <xref:System.Drawing.Bitmap.SetPixel%2A> metodi per ricolorare l'immagine. Utilizza inoltre il <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Width%2A>, e <xref:System.Drawing.Image.Height%2A> proprietà.  
  
 In questo esempio è progettato per essere utilizzato con un Windows Form che contiene un <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, e <xref:System.Windows.Forms.Button> denominato `Label1`, `PictureBox1`, e `Button1`, rispettivamente. Incollare il codice nel form e associare il `Button1_Click` (metodo) con il pulsante <xref:System.Windows.Forms.Control.Click> evento.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.PictureBox" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Bitmap" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="original">Oggetto <see cref="T:System.Drawing.Image" /> da cui creare il nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Bitmap" /> a partire dall'immagine esistente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Flusso di dati utilizzato per caricare l'immagine.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Bitmap" /> dal flusso dei dati specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario mantenere il flusso aperto per la durata del <xref:System.Drawing.Bitmap>.  
  
 A causa di una limitazione del [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] decodificatore un <xref:System.ArgumentException?displayProperty=nameWithType> viene generata se si crea una bitmap da un file di immagine PNG con una singola dimensione maggiore di 65.535 pixel.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come caricare una bitmap da un flusso.  
  
 In questo esempio è progettato per essere utilizzato con Windows Form. Creare un form contenente un <xref:System.Windows.Forms.PictureBox> denominato `PictureBox1`. Incollare il codice nel form e chiamare il `InitializeStreamBitmap` metodo dal costruttore del form o <xref:System.Windows.Forms.Form.Load> il metodo di gestione degli eventi.  
  
 [!code-cpp[System.Drawing.BitmapMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.BitmapMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#2)]
 [!code-vb[System.Drawing.BitmapMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> non contiene dati di immagine o è <see langword="null" />.  
  
 oppure  
  
 <paramref name="stream" /> contiene un file di immagine PNG con una singola dimensione superiore a 65.535 pixel.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Nome e percorso del file bitmap.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Bitmap" /> dal file specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il nome del file e il percorso può essere relativo all'applicazione o un percorso assoluto. Utilizzare questo costruttore per aprire le immagini con formati di file seguenti: BMP, GIF, EXIF, JPG, PNG e TIFF. Per ulteriori informazioni sui formati supportati, vedere [tipi di bitmap](~/docs/framework/winforms/advanced/types-of-bitmaps.md). Il file rimarrà bloccato fino a quando il <xref:System.Drawing.Bitmap> è stato eliminato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">Il file specificato non è stato trovato.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, System.Drawing.Size newSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, valuetype System.Drawing.Size newSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, newSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, System::Drawing::Size newSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="newSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="original">Oggetto <see cref="T:System.Drawing.Image" /> da cui creare il nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="newSize">Struttura <see cref="T:System.Drawing.Size" /> che rappresenta le dimensioni del nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Bitmap" /> dall'immagine specificata esistente, adattata in base alle dimensioni indicate.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">Larghezza, in pixel, del nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Altezza, in pixel, del nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Bitmap" /> con le dimensioni specificate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore crea un <xref:System.Drawing.Bitmap> con un <xref:System.Drawing.Imaging.PixelFormat> valore di enumerazione <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream, bool useIcm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Flusso di dati utilizzato per caricare l'immagine.</param>
        <param name="useIcm">
          <see langword="true" /> per utilizzare la correzione dei colori per questo oggetto <see cref="T:System.Drawing.Bitmap" />; in caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Bitmap" /> dal flusso dei dati specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario mantenere il flusso aperto per la durata del <xref:System.Drawing.Bitmap>.  
  
 A causa di una limitazione del [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] decodificatore un <xref:System.ArgumentException?displayProperty=nameWithType> viene generata se si crea una bitmap da un file di immagine PNG con una singola dimensione maggiore di 65.535 pixel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> non contiene dati di immagine o è <see langword="null" />.  
  
 oppure  
  
 <paramref name="stream" /> contiene un file di immagine PNG con una singola dimensione superiore a 65.535 pixel.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, useIcm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename, bool useIcm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">Nome del file bitmap.</param>
        <param name="useIcm">
          <see langword="true" /> per utilizzare la correzione dei colori per questo oggetto <see cref="T:System.Drawing.Bitmap" />; in caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Bitmap" /> dal file specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per aprire le immagini con formati di file seguenti: BMP, GIF, EXIF, JPG, PNG e TIFF. Per ulteriori informazioni sui formati supportati, vedere [tipi di bitmap](~/docs/framework/winforms/advanced/types-of-bitmaps.md). Il file rimarrà bloccato fino a quando il <xref:System.Drawing.Bitmap> è stato eliminato.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come costruire una nuova bitmap da un file. Nell'esempio viene utilizzato il <xref:System.Drawing.Bitmap.GetPixel%2A> e <xref:System.Drawing.Bitmap.SetPixel%2A> metodi per ricolorare l'immagine. Viene inoltre utilizzata la <xref:System.Drawing.Image.PixelFormat%2A> proprietà.  
  
 In questo esempio è progettato per essere utilizzato con un Windows Form che contiene un <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> e <xref:System.Windows.Forms.Button> denominato `Label1`, `PictureBox1` e `Button1`, rispettivamente. Incollare il codice nel form e associare il `Button1_Click` (metodo) con il pulsante <xref:System.Windows.Forms.Control.Click> evento.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione correlati: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (Type type, string resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(Type ^ type, System::String ^ resource);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Classe utilizzata per estrarre la risorsa.</param>
        <param name="resource">Nome della risorsa.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Bitmap" /> da una risorsa specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore consente di combinare lo spazio dei nomi del tipo specificato con il nome della stringa della risorsa e Cerca una corrispondenza nel manifesto dell'assembly. È ad esempio possibile passare il <xref:System.Windows.Forms.Button> tipo e `Button.bmp` a questo costruttore, che cerca una risorsa denominata `System.Windows.Forms.Button.bmp`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come costruire una bitmap da un tipo e come utilizzare il <xref:System.Drawing.Image.Save%2A> metodo. Per eseguire questo esempio, incollare il codice in un Windows Form. Gestire il modulo <xref:System.Windows.Forms.Control.Paint> eventi e chiamate di `ConstructFromResourceSaveAsGif` , passando `e` come <xref:System.Windows.Forms.PaintEventArgs>  
  
 [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, int width, int height);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">Oggetto <see cref="T:System.Drawing.Image" /> da cui creare il nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="width">Larghezza, in pixel, del nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Altezza, in pixel, del nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Bitmap" /> dall'immagine specificata esistente, adattata in base alle dimensioni indicate.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, g As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Graphics ^ g);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="width">Larghezza, in pixel, del nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Altezza, in pixel, del nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="g">Oggetto <see cref="T:System.Drawing.Graphics" /> che specifica la risoluzione del nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Bitmap" /> con le dimensioni specificate e la risoluzione dell'oggetto <see cref="T:System.Drawing.Graphics" /> indicato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il nuovo <xref:System.Drawing.Bitmap> creato da questo metodo accetta una risoluzione orizzontale e verticale dal <xref:System.Drawing.Graphics.DpiX%2A> e <xref:System.Drawing.Graphics.DpiY%2A> le proprietà di `g`, rispettivamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, format As PixelFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Imaging::PixelFormat format);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="width">Larghezza, in pixel, del nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Altezza, in pixel, del nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Formato pixel per il nuovo oggetto <see cref="T:System.Drawing.Bitmap" />. Deve specificare un valore che inizia con <c>Format</c>.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Bitmap" /> con le dimensioni e il formato specificati.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Viene specificato un valore <see cref="T:System.Drawing.Imaging.PixelFormat" /> il cui nome non inizia con *Format*. Ad esempio, specificare <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" />, provocherà un <see cref="T:System.ArgumentException" />, al contrario di <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, int stride, System.Drawing.Imaging.PixelFormat format, IntPtr scan0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, int32 stride, valuetype System.Drawing.Imaging.PixelFormat format, native int scan0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, stride As Integer, format As PixelFormat, scan0 As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, int stride, System::Drawing::Imaging::PixelFormat format, IntPtr scan0);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="scan0" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="width">Larghezza, in pixel, del nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Altezza, in pixel, del nuovo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="stride">Integer che specifica l'offset di byte tra l'inizio di una linea di digitalizzazione e la successiva. In genere, ma non necessariamente, rappresenta il numero di byte in formato di pixel (ad esempio, 2 x 16 bit per pixel) moltiplicato per la larghezza della bitmap. Il valore passato a questo parametro deve essere un multiplo di quattro.</param>
        <param name="format">Formato pixel per il nuovo oggetto <see cref="T:System.Drawing.Bitmap" />. Deve specificare un valore che inizia con <c>Format</c>.</param>
        <param name="scan0">Puntatore a una matrice di byte in cui sono contenuti i dati del record.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Bitmap" /> con le dimensioni, il formato pixel e i dati pixel specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il chiamante è responsabile per allocare e liberare il blocco di memoria specificata per il `scan0` parametro. Tuttavia, la memoria non deve essere rilasciata fino correlata <xref:System.Drawing.Bitmap> viene rilasciato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Drawing.Bitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Drawing.Imaging.PixelFormat%2CSystem.IntPtr%29> costruttore. In questo esempio è progettato per essere utilizzato con Windows Form e richiede un <xref:System.Windows.Forms.PaintEventArgs> parametro, che è un parametro del <xref:System.Windows.Forms.Control.Paint> evento.  
  
 [!code-csharp[System.Drawing.MiscExamples#Constructor](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#constructor)]
 [!code-vb[System.Drawing.MiscExamples#Constructor](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#constructor)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Viene specificato un valore <see cref="T:System.Drawing.Imaging.PixelFormat" /> il cui nome non inizia con *Format*. Ad esempio, specificare <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" />, provocherà un <see cref="T:System.ArgumentException" />, al contrario di <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione correlati: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Clone">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una copia della sezione di questo oggetto <see cref="T:System.Drawing.Bitmap" /> definita con un'enumerazione <see cref="T:System.Drawing.Imaging.PixelFormat" /> specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.Rectangle rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As Rectangle, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::Rectangle rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Definisce la parte dell'oggetto <see cref="T:System.Drawing.Bitmap" /> da copiare. Le coordinate sono relative a questo oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Formato pixel per il nuovo oggetto <see cref="T:System.Drawing.Bitmap" />. Deve specificare un valore che inizia con <c>Format</c>.</param>
        <summary>Crea una copia della sezione dell'oggetto <see cref="T:System.Drawing.Bitmap" /> definita dalla struttura <see cref="T:System.Drawing.Rectangle" /> e con un'enumerazione <see cref="T:System.Drawing.Imaging.PixelFormat" /> specificata.</summary>
        <returns>Nuovo oggetto <see cref="T:System.Drawing.Bitmap" /> creato da questo metodo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un <xref:System.Drawing.Bitmap> da un file.  
  
-   Clona una parte dell'oggetto <xref:System.Drawing.Bitmap>.  
  
-   Disegna la parte clonata sullo schermo.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <paramref name="rect" /> non è compreso entro i limiti della bitmap di origine.</exception>
        <exception cref="T:System.ArgumentException">L'altezza o la larghezza di <paramref name="rect" /> è uguale a 0.  
  
 oppure  
  
 Viene specificato un valore <see cref="T:System.Drawing.Imaging.PixelFormat" /> il cui nome non inizia con *Format*. Ad esempio, specificare <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" />, provocherà un <see cref="T:System.ArgumentException" />, al contrario di <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.RectangleF rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As RectangleF, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::RectangleF rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Definisce la parte dell'oggetto <see cref="T:System.Drawing.Bitmap" /> da copiare.</param>
        <param name="format">Specifica l'enumerazione <see cref="T:System.Drawing.Imaging.PixelFormat" /> per l'oggetto <see cref="T:System.Drawing.Bitmap" /> di destinazione.</param>
        <summary>Crea una copia della sezione di questo oggetto <see cref="T:System.Drawing.Bitmap" /> definita con un'enumerazione <see cref="T:System.Drawing.Imaging.PixelFormat" /> specificata.</summary>
        <returns>Oggetto <see cref="T:System.Drawing.Bitmap" /> creato con questo metodo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un <xref:System.Drawing.Bitmap> da un file.  
  
-   Clona una parte dell'oggetto <xref:System.Drawing.Bitmap>.  
  
-   Disegna la parte clonata sullo schermo.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <paramref name="rect" /> non è compreso entro i limiti della bitmap di origine.</exception>
        <exception cref="T:System.ArgumentException">L'altezza o la larghezza di <paramref name="rect" /> è uguale a 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromHicon">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHicon (IntPtr hicon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHicon(native int hicon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHicon (hicon As IntPtr) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromHicon(IntPtr hicon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hicon" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hicon">Handle per un'icona.</param>
        <summary>Crea un oggetto <see cref="T:System.Drawing.Bitmap" /> da un handle di Windows per un'icona.</summary>
        <returns>Oggetto <see cref="T:System.Drawing.Bitmap" /> creato con questo metodo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Ottiene l'handle a un'immagine icona esistente.  
  
-   Crea un <xref:System.Drawing.Bitmap> dall'handle.  
  
-   Disegna il <xref:System.Drawing.Bitmap> sullo schermo.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione correlati: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromResource">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromResource (IntPtr hinstance, string bitmapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromResource(native int hinstance, string bitmapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromResource (hinstance As IntPtr, bitmapName As String) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromResource(IntPtr hinstance, System::String ^ bitmapName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hinstance" Type="System.IntPtr" />
        <Parameter Name="bitmapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hinstance">Handle per un'istanza di un file eseguibile contenente la risorsa.</param>
        <param name="bitmapName">Stringa contenente il nome della bitmap di risorsa.</param>
        <summary>Crea un oggetto <see cref="T:System.Drawing.Bitmap" /> dalla risorsa di Windows specificata.</summary>
        <returns>Oggetto <see cref="T:System.Drawing.Bitmap" /> creato con questo metodo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Bitmap.FromResource%2A> è richiesta l'autorizzazione di sicurezza per chiamare codice non gestito. Per un'alternativa gestita per la creazione di una bitmap da una risorsa incorporata, vedere <xref:System.Drawing.Bitmap.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>. <xref:System.Drawing.Bitmap.FromResource%2A> funziona solo con bitmap che rappresentano risorse denominate in una DLL.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione correlati: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHbitmap">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un oggetto bitmap GDI da un oggetto <see cref="T:System.Drawing.Bitmap" /> GDI+.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un oggetto bitmap [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] da questo oggetto <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>Handle per l'oggetto bitmap [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] creato da questo metodo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si è responsabile della chiamata di [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` metodo per liberare la memoria utilizzata dal [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] oggetto bitmap. Per ulteriori informazioni sulle bitmap GDI, vedere [bitmap](http://go.microsoft.com/fwlink/?LinkId=205685) nella documentazione di GDI di Windows.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Drawing.Bitmap.GetHbitmap%2A>.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'altezza o la larghezza della bitmap è maggiore di <see cref="F:System.Int16.MaxValue" />.</exception>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione correlati: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap (System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap(valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap (background As Color) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap(System::Drawing::Color background);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="background">Struttura <see cref="T:System.Drawing.Color" /> che specifica il colore di sfondo. Questo parametro viene ignorato se la bitmap è completamente opaca.</param>
        <summary>Crea un oggetto bitmap [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] da questo oggetto <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>Handle per l'oggetto bitmap [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] creato da questo metodo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si è responsabile della chiamata di [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` metodo per liberare la memoria utilizzata dal [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] oggetto bitmap. Per ulteriori informazioni sulle bitmap GDI, vedere [bitmap](http://go.microsoft.com/fwlink/?LinkId=205685) nella documentazione di GDI di Windows.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Drawing.Bitmap.GetHbitmap%2A>. Method.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'altezza o la larghezza della bitmap è maggiore di <see cref="F:System.Int16.MaxValue" />.</exception>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione correlati: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHicon">
      <MemberSignature Language="C#" Value="public IntPtr GetHicon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHicon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHicon" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHicon () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHicon();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'handle per un'icona.</summary>
        <returns>Handle Windows per un'icona con la stessa immagine dell'oggetto <see cref="T:System.Drawing.Bitmap" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inizialmente, un'icona creata dall'handle avrà la stessa dimensione della bitmap originale.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un oggetto <xref:System.Drawing.Bitmap>.  
  
-   Disegna l'oggetto sullo schermo.  
  
-   Ottiene un handle di icona per il <xref:System.Drawing.Bitmap>.  
  
-   Imposta il <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=nameWithType> attributo del modulo per un'icona creata dall'handle.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione correlati: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPixel">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetPixel (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetPixel(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPixel (x As Integer, y As Integer) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetPixel(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata x del pixel da recuperare.</param>
        <param name="y">Coordinata y del pixel da recuperare.</param>
        <summary>Ottiene il colore del pixel specificato in questo oggetto <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore del pixel specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Il codice ottiene il colore di un pixel in una bitmap e quindi riempie un rettangolo con il colore.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="x" /> è minore di 0 oppure maggiore o uguale all'oggetto <see cref="P:System.Drawing.Image.Width" />.  
  
 oppure  
  
 <paramref name="y" /> è minore di 0 oppure maggiore o uguale all'oggetto <see cref="P:System.Drawing.Image.Height" />.</exception>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LockBits">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Blocca un oggetto <see cref="T:System.Drawing.Bitmap" /> nella memoria di sistema.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function LockBits (rect As Rectangle, flags As ImageLockMode, format As PixelFormat) As BitmapData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.Rectangle" /> che specifica la parte dell'oggetto <see cref="T:System.Drawing.Bitmap" /> da bloccare.</param>
        <param name="flags">Enumerazione di <see cref="T:System.Drawing.Imaging.ImageLockMode" /> che specifica il livello di accesso (lettura/scrittura) per l'oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Enumerazione di <see cref="T:System.Drawing.Imaging.PixelFormat" /> che specifica il formato dati dell'oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Blocca un oggetto <see cref="T:System.Drawing.Bitmap" /> nella memoria di sistema.</summary>
        <returns>Oggetto <see cref="T:System.Drawing.Imaging.BitmapData" /> contenente informazioni sull'operazione di blocco.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Drawing.Bitmap.LockBits%2A> metodo per bloccare una bitmap esistente nella memoria di sistema, in modo che può essere modificato a livello di codice. È possibile modificare il colore di un'immagine con il <xref:System.Drawing.Bitmap.SetPixel%2A> (metodo), anche se il <xref:System.Drawing.Bitmap.LockBits%2A> metodo offre prestazioni migliori per le modifiche su larga scala.  
  
 Il <xref:System.Drawing.Imaging.BitmapData> specifica gli attributi del <xref:System.Drawing.Bitmap>, ad esempio dimensioni, il formato di pixel, l'indirizzo iniziale dei dati pixel in memoria e la lunghezza di ogni linea digitalizzazione ().  
  
 Quando si chiama questo metodo, è necessario utilizzare un membro del <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> enumerazione che contiene un valore specifico bit per pixel (BPP). Utilizzando <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> valori, ad esempio <xref:System.Drawing.Imaging.PixelFormat.Indexed> e <xref:System.Drawing.Imaging.PixelFormat.Gdi> genererà un <xref:System.ArgumentException?displayProperty=nameWithType>. Inoltre, passando il formato non corretto per una bitmap verrà generata una <xref:System.ArgumentException?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, e <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> proprietà; <xref:System.Drawing.Bitmap.LockBits%2A> e <xref:System.Drawing.Bitmap.UnlockBits%2A> metodi; e <xref:System.Drawing.Imaging.ImageLockMode> enumerazione. In questo esempio è progettato per essere utilizzato con Windows Form. In questo esempio non è progettato per funzionare correttamente con tutti i formati di pixel, ma per fornire un esempio di come utilizzare il <xref:System.Drawing.Bitmap.LockBits%2A> metodo. Per eseguire questo esempio, incollarlo in un form e gestire il modulo <xref:System.Windows.Forms.Control.Paint> evento chiamando il `LockUnlockBitsExample` , passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.Drawing.Imaging.PixelFormat" /> non rappresenta un valore bit per pixel specifico.  
  
 oppure  
  
 Per una bitmap viene passato un <see cref="T:System.Drawing.Imaging.PixelFormat" /> non corretto.</exception>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
      </Docs>
    </Member>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format, System.Drawing.Imaging.BitmapData bitmapData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format, class System.Drawing.Imaging.BitmapData bitmapData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format, System::Drawing::Imaging::BitmapData ^ bitmapData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="bitmapData" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura rettangolare che specifica la parte dell'oggetto <see cref="T:System.Drawing.Bitmap" /> da bloccare.</param>
        <param name="flags">Uno dei valori di <see cref="T:System.Drawing.Imaging.ImageLockMode" /> che specifica il livello di accesso (lettura/scrittura) per l'oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Uno dei valori di <see cref="T:System.Drawing.Imaging.PixelFormat" /> che specifica il formato dati di <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="bitmapData">Oggetto <see cref="T:System.Drawing.Imaging.BitmapData" /> contenente informazioni sull'operazione di blocco.</param>
        <summary>Blocca un oggetto <see cref="T:System.Drawing.Bitmap" /> nella memoria di sistema</summary>
        <returns>Oggetto <see cref="T:System.Drawing.Imaging.BitmapData" /> contenente informazioni sull'operazione di blocco.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Drawing.Bitmap.LockBits%2A> metodo per bloccare una bitmap esistente nella memoria di sistema, in modo che può essere modificato a livello di codice. È possibile modificare il colore di un'immagine con il <xref:System.Drawing.Bitmap.SetPixel%2A> (metodo), anche se il <xref:System.Drawing.Bitmap.LockBits%2A> metodo offre prestazioni migliori per le modifiche su larga scala.  
  
 Quando si chiama questo metodo, è necessario utilizzare un membro del <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> enumerazione che contiene un valore specifico bit per pixel (BPP). Utilizzando <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> valori, ad esempio <xref:System.Drawing.Imaging.PixelFormat.Indexed> e <xref:System.Drawing.Imaging.PixelFormat.Gdi>, genererà un <xref:System.ArgumentException?displayProperty=nameWithType>. Inoltre, passando il formato non corretto per una bitmap verrà generata una <xref:System.ArgumentException?displayProperty=nameWithType>.  
  
 Questa versione di <xref:System.Drawing.Bitmap.LockBits%2A> metodo è destinato a essere utilizzato con un `flags` valore <xref:System.Drawing.Imaging.ImageLockMode.UserInputBuffer?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Il valore di <see cref="T:System.Drawing.Imaging.PixelFormat" /> non rappresenta un valore bit per pixel specifico.  
  
 oppure  
  
 Per una bitmap viene passato un <see cref="T:System.Drawing.Imaging.PixelFormat" /> non corretto.</exception>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeTransparent">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rende trasparente il colore predefinito per l'oggetto <see cref="T:System.Drawing.Bitmap" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rende trasparente il colore predefinito per l'oggetto <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tavolozza di sistema definisce un colore come colore trasparente o alfa, impostazione predefinita. Questo metodo rende trasparente il colore trasparente predefinito per l'oggetto <xref:System.Drawing.Bitmap>. Se non viene specificato alcun colore trasparente dal sistema, <xref:System.Drawing.Color.LightGray%2A> è il colore trasparente.  
  
 Quando si chiama <xref:System.Drawing.Bitmap.MakeTransparent%2A>, verrà convertita in bitmap di <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb> formattare, poiché questo formato supporta un canale alfa.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Il codice rende il colore trasparente predefinito di sistema per `myBitmap`e quindi disegna il <xref:System.Drawing.Bitmap> sullo schermo.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il formato di immagine di <see cref="T:System.Drawing.Bitmap" /> è un formato di icona.</exception>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
      </Docs>
    </Member>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent (System.Drawing.Color transparentColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent(valuetype System.Drawing.Color transparentColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent (transparentColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent(System::Drawing::Color transparentColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transparentColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="transparentColor">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore da rendere trasparente.</param>
        <summary>Rende trasparente il colore specificato per l'oggetto <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si chiama <xref:System.Drawing.Bitmap.MakeTransparent%2A>, verrà convertita in bitmap di <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb> formattare, poiché questo formato supporta un canale alfa.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Ottiene il colore di un pixel in un <xref:System.Drawing.Bitmap>.  
  
-   Rende il colore trasparente per la bitmap.  
  
-   Disegna il <xref:System.Drawing.Bitmap> sullo schermo.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il formato di immagine di <see cref="T:System.Drawing.Bitmap" /> è un formato di icona.</exception>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPixel">
      <MemberSignature Language="C#" Value="public void SetPixel (int x, int y, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixel(int32 x, int32 y, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPixel(int x, int y, System::Drawing::Color color);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata x del pixel da impostare.</param>
        <param name="y">Coordinata y del pixel da impostare.</param>
        <param name="color">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore da assegnare al pixel specificato.</param>
        <summary>Imposta il colore del pixel specificato in questo oggetto <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare <xref:System.Drawing.Bitmap.SetPixel%2A> per impostare il colore di un singolo pixel in un'immagine a livello di codice. È inoltre possibile modificare un'immagine a livello di codice utilizzando il <xref:System.Drawing.Bitmap.LockBits%2A> metodo. In genere per le modifiche su larga scala, il <xref:System.Drawing.Bitmap.LockBits%2A> metodo offre prestazioni migliori.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un oggetto <xref:System.Drawing.Bitmap>.  
  
-   Imposta il colore di ciascun pixel della bitmap in nero.  
  
-   Disegna l'immagine bitmap.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetResolution">
      <MemberSignature Language="C#" Value="public void SetResolution (float xDpi, float yDpi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResolution(float32 xDpi, float32 yDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResolution (xDpi As Single, yDpi As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResolution(float xDpi, float yDpi);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xDpi" Type="System.Single" />
        <Parameter Name="yDpi" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xDpi">Risoluzione orizzontale in punti per pollice dell'oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="yDpi">Risoluzione verticale in punti per pollice dell'oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Imposta la risoluzione per questo oggetto <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per impostare la risoluzione desiderata su una bitmap appena creata. Modifica della risoluzione dell'immagine non modifica le dimensioni fisiche.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Drawing.Bitmap.SetResolution%2A> metodo.  
  
 [!code-csharp[System.Drawing.Misc3#SetResolution](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#setresolution)]
 [!code-vb[System.Drawing.Misc3#SetResolution](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#setresolution)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockBits">
      <MemberSignature Language="C#" Value="public void UnlockBits (System.Drawing.Imaging.BitmapData bitmapdata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnlockBits(class System.Drawing.Imaging.BitmapData bitmapdata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnlockBits(System::Drawing::Imaging::BitmapData ^ bitmapdata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmapdata" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="bitmapdata">Oggetto <see cref="T:System.Drawing.Imaging.BitmapData" /> che specifica le informazioni relative all'operazione di blocco.</param>
        <summary>Sblocca l'oggetto <see cref="T:System.Drawing.Bitmap" /> dalla memoria di sistema.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Drawing.Imaging.BitmapData> specifica gli attributi del <xref:System.Drawing.Bitmap>, ad esempio dimensioni, il formato di pixel, l'indirizzo iniziale dei dati pixel in memoria e la lunghezza di ogni linea digitalizzazione ().  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, e <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> proprietà; <xref:System.Drawing.Bitmap.LockBits%2A> e <xref:System.Drawing.Bitmap.UnlockBits%2A> metodi; e <xref:System.Drawing.Imaging.ImageLockMode> enumerazione. In questo esempio non è progettato per funzionare correttamente con tutti i formati di pixel, ma per fornire un esempio di come utilizzare il <xref:System.Drawing.Bitmap.LockBits%2A> metodo. In questo esempio è progettato per essere utilizzato con Windows Form. Per eseguire questo esempio, incollarlo in un form e gestire il modulo <xref:System.Windows.Forms.Control.Paint> evento chiamando il `LockUnlockBitsExample` , passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operazione non riuscita.</exception>
      </Docs>
    </Member>
  </Members>
</Type>