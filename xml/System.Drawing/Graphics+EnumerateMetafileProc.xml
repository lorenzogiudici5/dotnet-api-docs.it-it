<Type Name="Graphics+EnumerateMetafileProc" FullName="System.Drawing.Graphics+EnumerateMetafileProc">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ebe6ddc1efe819ffd6d6caaf2a818b44c4aabdeb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36489111" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate bool Graphics.EnumerateMetafileProc(EmfPlusRecordType recordType, int flags, int dataSize, IntPtr data, PlayRecordCallback callbackData);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed Graphics/EnumerateMetafileProc extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Graphics.EnumerateMetafileProc" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Graphics.EnumerateMetafileProc(recordType As EmfPlusRecordType, flags As Integer, dataSize As Integer, data As IntPtr, callbackData As PlayRecordCallback) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public: delegate bool Graphics::EnumerateMetafileProc(EmfPlusRecordType recordType, int flags, int dataSize, IntPtr data, PlayRecordCallback ^ callbackData);" />
  <TypeSignature Language="F#" Value="type Graphics.EnumerateMetafileProc = delegate of EmfPlusRecordType * int * int * nativeint * PlayRecordCallback -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="recordType" Type="System.Drawing.Imaging.EmfPlusRecordType" />
    <Parameter Name="flags" Type="System.Int32" />
    <Parameter Name="dataSize" Type="System.Int32" />
    <Parameter Name="data" Type="System.IntPtr" />
    <Parameter Name="callbackData" Type="System.Drawing.Imaging.PlayRecordCallback" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="recordType">Membro dell'enumerazione <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> che specifica il tipo di record del metafile.</param>
    <param name="flags">Insieme di flag che specificano gli attributi di un record.</param>
    <param name="dataSize">Numero di byte contenuti nei dati del record.</param>
    <param name="data">Puntatore a un buffer che contiene i dati del record.</param>
    <param name="callbackData">Non usato.</param>
    <summary>Fornisce un metodo di callback per il metodo <see cref="Overload:System.Drawing.Graphics.EnumerateMetafile" />.</summary>
    <returns>Restituisce <see langword="true" /> se si desidera continuare a enumerare i record; in caso contrario, <see langword="false" /> .</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato in combinazione con il <xref:System.Drawing.Graphics.EnumerateMetafile%2A> metodo la <xref:System.Drawing.Graphics> classe. Determinati overload del <xref:System.Drawing.Graphics.EnumerateMetafile%2A> metodo chiamare un metodo di callback definita dall'applicazione di questo tipo per ogni record del metafile specificato. La funzione di callback pu√≤ visualizzare ogni record (o record selezionati) chiamando il <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> metodo del <xref:System.Drawing.Imaging.Metafile> enumerato.  
  
 Una dichiarazione di utente di questo metodo di callback deve avere gli stessi parametri di <xref:System.Drawing.Graphics.EnumerateMetafileProc> dichiarazione di delegato.  
  
   
  
## Examples  
 Per un esempio vedere <xref:System.Drawing.Graphics.EnumerateMetafile%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>