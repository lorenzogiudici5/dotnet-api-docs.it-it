<Type Name="BufferedGraphicsContext" FullName="System.Drawing.BufferedGraphicsContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c249e19e1e0ddac209202d4c2db95a78198f0d5" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39982888" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BufferedGraphicsContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphicsContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphicsContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphicsContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphicsContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphicsContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornisce metodi per la creazione di buffer grafici che possono essere utilizzati per il doppio buffer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Drawing.BufferedGraphicsContext> classe consente di implementare il doppio buffer personalizzato per le immagini. Le immagini che utilizzano il doppio buffer possono ridurre o evitare lo sfarfallio causato dal ridisegno una superficie di visualizzazione.  
  
> [!NOTE]
>  Il modo più semplice per usare il doppio buffer consiste nell'impostare il <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> controllare il flag di stile di visualizzazione su un controllo utilizzando il <xref:System.Windows.Forms.Control.SetStyle%2A> (metodo). L'impostazione di <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag degli stili di controllo per un controllo reindirizza tutti i disegni per il controllo tramite un buffer grafico predefinita, senza richiedere codice aggiuntivo. Questo flag è impostato su `true` per impostazione predefinita.  
  
 Il <xref:System.Drawing.BufferedGraphicsContext> classe fornisce metodi per la creazione e configurazione di un buffer grafico. Il <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metodo crea un <xref:System.Drawing.BufferedGraphics>, che è un wrapper per un buffer di grafica che fornisce inoltre metodi che è possibile usare per scrivere nel buffer e il rendering del contenuto in un dispositivo di output.  
  
 È possibile recuperare il <xref:System.Drawing.BufferedGraphicsContext> per il dominio applicazione corrente da statico <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> proprietà. Per le applicazioni a grafica intensiva, ad esempio di animazione, è possibile creare un oggetto dedicato <xref:System.Drawing.BufferedGraphicsContext> utilizzando il costruttore, ma per la maggior parte delle applicazioni di <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> proprietà saranno sufficiente.  
  
 Per altre informazioni sulla creazione di grafica memorizzata nel buffer e le implementazioni personalizzate di inserimento nel buffer, vedere [grafica a doppio buffer](~/docs/framework/winforms/advanced/double-buffered-graphics.md) e [procedura: gestire manualmente le immagini memorizzate nel buffer](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come acquisire il <xref:System.Drawing.BufferedGraphicsContext> per il dominio applicazione corrente. Questo codice è parte di un esempio più esaustivo disponibile per il <xref:System.Drawing.BufferedGraphics> classe.  
  
 [!code-cpp[BufferingExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#1)]
 [!code-csharp[BufferingExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#1)]
 [!code-vb[BufferingExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.BufferedGraphics" />
    <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
    <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedGraphicsContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.BufferedGraphicsContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per le applicazioni a grafica intensiva, ad esempio di animazione, è talvolta possibile migliorare le prestazioni usando un oggetto dedicato <xref:System.Drawing.BufferedGraphicsContext> invece dell'istanza predefinita fornita dal <xref:System.Drawing.BufferedGraphicsManager>. In questo modo è possibile creare e gestire i buffer grafici.  
  
> [!NOTE]
>  È sempre necessario chiamare <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> dopo avere utilizzato un oggetto dedicato <xref:System.Drawing.BufferedGraphicsContext>.  
  
 Per altre informazioni sui buffer di grafica dedicata, vedere [procedura: gestire manualmente le immagini memorizzate nel buffer](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Allocate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un buffer grafico.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(class System.Drawing.Graphics targetGraphics, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetGraphics As Graphics, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(System::Drawing::Graphics ^ targetGraphics, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetGraphics, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetGraphics" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetGraphics">Classe <see cref="T:System.Drawing.Graphics" /> a cui far corrispondere il formato pixel per il nuovo buffer.</param>
        <param name="targetRectangle">Struttura <see cref="T:System.Drawing.Rectangle" /> che indica le dimensioni del buffer da creare.</param>
        <summary>Crea un buffer grafico delle dimensioni specificate utilizzando il formato pixel della classe <see cref="T:System.Drawing.Graphics" /> specificata.</summary>
        <returns>Classe <see cref="T:System.Drawing.BufferedGraphics" /> che può essere utilizzata per creare un buffer delle dimensioni specificate.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si chiama il <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metodo con un rettangolo le cui dimensioni superano il valore della <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> proprietà, una variabile temporanea <xref:System.Drawing.BufferedGraphicsContext> viene creato per allocare il buffer e fornire un contesto temporaneo per il buffer. Il nuovo <xref:System.Drawing.BufferedGraphicsContext> è diverso dal <xref:System.Drawing.BufferedGraphicsContext> per l'applicazione di dominio e viene eliminato automaticamente quando il <xref:System.Drawing.BufferedGraphics> restituito dal <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metodo è stato eliminato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata la creazione di un buffer grafico mediante la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> (metodo). Questo codice è parte di un esempio più esaustivo disponibile per il <xref:System.Drawing.BufferedGraphics> classe.  
  
 [!code-cpp[BufferingExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#3)]
 [!code-csharp[BufferingExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#3)]
 [!code-vb[BufferingExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(native int targetDC, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetDC As IntPtr, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(IntPtr targetDC, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : nativeint * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetDC, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetDC">Oggetto <see cref="T:System.IntPtr" /> per un contesto di periferica a cui far corrispondere il formato pixel del nuovo buffer.</param>
        <param name="targetRectangle">Struttura <see cref="T:System.Drawing.Rectangle" /> che indica le dimensioni del buffer da creare.</param>
        <summary>Crea un buffer grafico delle dimensioni specificate utilizzando il formato pixel della classe <see cref="T:System.Drawing.Graphics" /> specificata.</summary>
        <returns>Classe <see cref="T:System.Drawing.BufferedGraphics" /> che può essere utilizzata per creare un buffer delle dimensioni specificate.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si chiama il <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metodo con un rettangolo le cui dimensioni superano il valore della <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> proprietà, una variabile temporanea <xref:System.Drawing.BufferedGraphicsContext> viene creato per allocare il buffer e fornire un contesto temporaneo per il buffer. Il nuovo <xref:System.Drawing.BufferedGraphicsContext> è diverso dal <xref:System.Drawing.BufferedGraphicsContext> per l'applicazione di dominio e viene eliminato automaticamente quando il <xref:System.Drawing.BufferedGraphics> restituito dal <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metodo è stato eliminato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata la creazione di un buffer grafico mediante la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> (metodo). Questo codice è parte di un esempio più esaustivo disponibile per il <xref:System.Drawing.BufferedGraphics> classe.  
  
 [!code-cpp[BufferingExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#4)]
 [!code-csharp[BufferingExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#4)]
 [!code-vb[BufferingExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per accedere al codice non gestito. Enumerazione correlati: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.IntPtr" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphicsContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate da <see cref="T:System.Drawing.BufferedGraphicsContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare il metodo <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Drawing.BufferedGraphicsContext>. Il metodo <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> lascia l'oggetto <xref:System.Drawing.BufferedGraphicsContext> in una condizione di inutilizzabilità. Dopo la chiamata <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, è necessario rilasciare tutti i riferimenti per il <xref:System.Drawing.BufferedGraphicsContext> in modo che il garbage collector di recuperare la memoria che il <xref:System.Drawing.BufferedGraphicsContext> occupata. Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementa un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Chiamare sempre il metodo <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.Drawing.BufferedGraphicsContext>. In caso contrario, le risorse utilizzate non vengono liberate finché il garbage collector chiama il <xref:System.Object.Finalize%2A> metodo di <xref:System.Drawing.BufferedGraphicsContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphicsContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphicsContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consente a un oggetto di effettuare un tentativo di liberare risorse ed eseguire altre operazioni di pulizia prima che venga recuperato da Garbage Collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="bufferedGraphicsContext.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Elimina il buffer grafico corrente in caso di buffer allocato e non ancora eliminato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il buffer di grafica è in uso, verrà contrassegnata per l'eliminazione, non appena viene liberato; in caso contrario, sarà eliminato immediatamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumBuffer">
      <MemberSignature Language="C#" Value="public System.Drawing.Size MaximumBuffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumBuffer As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size MaximumBuffer { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumBuffer : System.Drawing.Size with get, set" Usage="System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la dimensione massima del buffer da utilizzare.</summary>
        <value>Struttura <see cref="T:System.Drawing.Size" /> che indica le dimensioni massime del buffer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di ottenere o impostare le dimensioni massime per un buffer che deve essere mantenuto in memoria. È possibile allocare un buffer di qualsiasi dimensione, tuttavia i buffer con dimensioni maggiori di <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> dimensioni saranno usare temporaneamente e quindi viene eliminato quando il <xref:System.Drawing.BufferedGraphics> oggetto viene rilasciato.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare le dimensioni massime per il buffer per un <xref:System.Drawing.BufferedGraphicsContext>. Questo codice è parte di un esempio più esaustivo disponibile per il <xref:System.Drawing.BufferedGraphics> classe.  
  
 [!code-cpp[BufferingExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#2)]
 [!code-csharp[BufferingExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#2)]
 [!code-vb[BufferingExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'altezza o la larghezza della dimensione è minore o uguale a zero.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per consentire l'accesso utente a tutte le finestre. Enumerazione correlati: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>