<Type Name="Region" FullName="System.Drawing.Region">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="46b513f444c6805ff26cff96b1d21b5210268219" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410595" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Region : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Region extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Region" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Region&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Region sealed : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Descrive la parte interna di una forma grafica composta da rettangoli e tracciati. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'area è scalabile poiché le coordinate sono specificate in coordinate globali. In una superficie di disegno, tuttavia, è dipendente dalle dimensioni dei pixel che rappresenta tale interna. Un'applicazione può utilizzare le aree per visualizzare l'output delle operazioni di disegno. Tali aree sono definite aree di visualizzazione. Per ulteriori informazioni sull'utilizzo delle regioni per il ritaglio, vedere [procedura: utilizzare il ritaglio con un'area](~/docs/framework/winforms/advanced/how-to-use-clipping-with-a-region.md).  
  
 Un'applicazione può inoltre utilizzare le aree nelle operazioni di hit test, ad esempio verifica se un punto o un rettangolo interseca un'area. Per ulteriori informazioni sull'utilizzo delle regioni per l'hit test, vedere [How to: Use Hit Testing con un'area](~/docs/framework/winforms/advanced/how-to-use-hit-testing-with-a-region.md).  
  
 Un'applicazione può riempire un'area con il <xref:System.Drawing.Graphics.FillRegion%2A?displayProperty=nameWithType> (metodo) e un <xref:System.Drawing.Brush> oggetto.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento.  L'esempio di codice viene illustrato come utilizzare il <xref:System.Drawing.Drawing2D.RegionData.Data%2A> da uno <xref:System.Drawing.Drawing2D.RegionData> per impostare il <xref:System.Drawing.Drawing2D.RegionData.Data%2A> per un'altra <xref:System.Drawing.Drawing2D.RegionData>.  
  
 [!code-cpp[System.Drawing.MiscExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.MiscExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.MiscExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#13)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Rectangle" />
    <altmember cref="T:System.Drawing.Drawing2D.GraphicsPath" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.Region" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza un nuovo <xref:System.Drawing.Region> con una parte interna infinita.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">Oggetto <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> che definisce il nuovo oggetto <see cref="T:System.Drawing.Region" />.</param>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.Region" /> con il <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea un nuovo <xref:System.Drawing.Region> con un <xref:System.Drawing.Drawing2D.GraphicsPath>. La nuova area è definita come l'area interna del <xref:System.Drawing.Drawing2D.GraphicsPath> specificato per il `path` parametro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (System.Drawing.Drawing2D.RegionData rgnData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.RegionData rgnData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.RegionData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rgnData As RegionData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region(System::Drawing::Drawing2D::RegionData ^ rgnData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rgnData" Type="System.Drawing.Drawing2D.RegionData" />
      </Parameters>
      <Docs>
        <param name="rgnData">Oggetto <see cref="T:System.Drawing.Drawing2D.RegionData" /> che definisce l'interno della nuova <see cref="T:System.Drawing.Region" />.</param>
        <summary>Inizializza una nuova classe <see cref="T:System.Drawing.Region" /> usando i dati specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea un nuovo <xref:System.Drawing.Region> con una parte interna definita da un oggetto esistente <xref:System.Drawing.Region>. Il `rgnData` parametro è una matrice che contiene la definizione di un oggetto esistente <xref:System.Drawing.Region>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rgnData" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region(System::Drawing::Rectangle rect);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.Rectangle" /> che definisce la parte interna della nuova classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Inizializza una nuova classe <see cref="T:System.Drawing.Region" /> dalla struttura <see cref="T:System.Drawing.Rectangle" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea un nuovo <xref:System.Drawing.Region> con una parte interna rettangolare. L'interno è definito per il `rect` parametro.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Drawing.Region.%23ctor%2A> costruttore e <xref:System.Drawing.Region.MakeEmpty%2A> metodo. In questo esempio è progettato per essere utilizzato con Windows Form. Creare un form e incollarvi il codice seguente. Chiamare il `FillEmptyRegion` metodo del modulo <xref:System.Windows.Forms.Control.Paint> gestione degli eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.MiscExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.MiscExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.MiscExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region(System::Drawing::RectangleF rect);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.RectangleF" /> che definisce la parte interna della nuova classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Inizializza una nuova classe <see cref="T:System.Drawing.Region" /> dalla struttura <see cref="T:System.Drawing.RectangleF" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea un nuovo <xref:System.Drawing.Region> con una parte interna rettangolare. L'interno è definito per il `rect` parametro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Region Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Region Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Region ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia esatta di questo <see cref="T:System.Drawing.Region" />.</summary>
        <returns>Oggetto <see cref="T:System.Drawing.Region" /> creato con questo metodo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Complement">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> alla parte della struttura <see cref="T:System.Drawing.RectangleF" /> specificata che non interseca questa classe <see cref="T:System.Drawing.Region" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Complement">
      <MemberSignature Language="C#" Value="public void Complement (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complement(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Complement(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complement (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complement(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">Oggetto <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> a integrazione di questa <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa <see cref="T:System.Drawing.Region" /> per contenere la parte dell'oggetto <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> specificato che non si interseca con questa <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Creazione di un rettangolo e disegnato sullo schermo in nero.  
  
-   Crea un secondo rettangolo che si interseca con il primo e disegnato sullo schermo in rosso.  
  
-   Crea un'area utilizzando il primo rettangolo.  
  
-   Crea un <xref:System.Drawing.Drawing2D.GraphicsPath>e aggiunge il secondo rettangolo.  
  
-   Ottiene il complemento dell'area in combinazione con il <xref:System.Drawing.Drawing2D.GraphicsPath>.  
  
-   Riempie l'area di complemento in blu e disegnato sullo schermo.  
  
 Si noti che l'area della <xref:System.Drawing.Drawing2D.GraphicsPath> che non si interseca con l'area è di colore blu.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicRegionExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Complement">
      <MemberSignature Language="C#" Value="public void Complement (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complement(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Complement(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complement (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complement(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.Rectangle" /> che funge da complemento a questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> in modo che contenga la parte della struttura <see cref="T:System.Drawing.Rectangle" /> specificata che non interseca questa classe <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio, vedere il <xref:System.Drawing.Region.Complement%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complement">
      <MemberSignature Language="C#" Value="public void Complement (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complement(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Complement(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complement (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complement(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.RectangleF" /> che funge da complemento a questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> in modo che contenga la parte della struttura <see cref="T:System.Drawing.RectangleF" /> specificata che non interseca questa classe <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Creazione di un rettangolo e disegnato sullo schermo in nero.  
  
-   Crea un secondo rettangolo che si interseca con il primo e disegnato sullo schermo in rosso.  
  
-   Crea un'area utilizzando il primo rettangolo.  
  
-   Ottiene il complemento di tale area combinato con il secondo rettangolo.  
  
-   Riempie l'area di complemento in blu e disegnato sullo schermo.  
  
 Si noti che l'area del rettangolo di secondo che non si interseca con l'area è di colore blu.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicRegionExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complement">
      <MemberSignature Language="C#" Value="public void Complement (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complement(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Complement(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complement(System::Drawing::Region ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">Oggetto <see cref="T:System.Drawing.Region" /> da aggiungere come complemento all'oggetto <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa <see cref="T:System.Drawing.Region" /> per contenere la parte dell'oggetto <see cref="T:System.Drawing.Region" /> specificato che non si interseca con questa <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Creazione di un rettangolo e disegnato sullo schermo in nero  
  
-   Crea un secondo rettangolo che si interseca con il primo e disegnato sullo schermo in rosso.  
  
-   Crea un'area utilizzando il primo rettangolo e crea una seconda area utilizzando il secondo rettangolo.  
  
-   Ottiene il complemento della prima area in combinazione con la seconda area.  
  
-   Riempie l'area di complemento in blu e disegnato sullo schermo.  
  
 Si noti che l'area della seconda area che non si interseca con la prima area è di colore blu.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicRegionExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate da questa classe <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Drawing.Region.Dispose%2A> le risorse utilizzate da questo <xref:System.Drawing.Region> riallocazione per altri scopi.  
  
 Chiamare il metodo <xref:System.Drawing.Region.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Drawing.Region>. Il metodo <xref:System.Drawing.Region.Dispose%2A> lascia l'oggetto <xref:System.Drawing.Region> in una condizione di inutilizzabilità. Dopo la chiamata <xref:System.Drawing.Region.Dispose%2A>, è necessario rilasciare tutti i riferimenti al <xref:System.Drawing.Region> in modo che il garbage collector può recuperare la memoria che di <xref:System.Drawing.Region> occupata. Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Chiamare sempre il metodo <xref:System.Drawing.Region.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.Drawing.Region>. In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Drawing.Region> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra il <xref:System.Drawing.Region.%23ctor%2A> costruttore e <xref:System.Drawing.Region.Exclude%2A> e <xref:System.Drawing.Region.Dispose%2A> metodi.  
  
 In questo esempio è progettato per essere utilizzato con Windows Form. Incollare il codice in un form e chiamare il `FillRegionExcludingPath` metodo quando si gestisce il modulo <xref:System.Windows.Forms.Control.Paint> evento passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.GraphicsProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.GraphicsProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#1)]
 [!code-vb[System.Drawing.GraphicsProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Drawing.Region region, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class System.Drawing.Region region, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Equals(System.Drawing.Region,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Drawing::Region ^ region, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="region">Oggetto <see cref="T:System.Drawing.Region" /> da verificare.</param>
        <param name="g">Classe <see cref="T:System.Drawing.Graphics" /> che rappresenta una superficie di disegno.</param>
        <summary>Verifica se l'oggetto <see cref="T:System.Drawing.Region" /> specificato è identico all'oggetto <see cref="T:System.Drawing.Region" /> sulla superficie di disegno specificata.</summary>
        <returns>
          <see langword="true" /> se la parte interna dell'area è identica alla parte interna di quest'area quando viene applicata la trasformazione associata al parametro <paramref name="g" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La trasformazione corrente del contesto grafico `g` viene utilizzato per calcolare le parti interne delle aree sulla superficie di disegno.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" /> o <paramref name="region" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Exclude">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> alla sezione della parte interna che non interseca la struttura <see cref="T:System.Drawing.Rectangle" /> specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public void Exclude (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Exclude(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Exclude(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Exclude (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Exclude(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">Classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> da escludere da questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> in modo che contenga solo la sezione della parte interna che non interseca la classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente illustra il <xref:System.Drawing.Region.%23ctor%2A> costruttore e <xref:System.Drawing.Region.Exclude%2A> e <xref:System.Drawing.Region.Dispose%2A> metodi.  
  
 In questo esempio è progettato per essere utilizzato con Windows Form. Incollare il codice in un form e chiamare il `FillRegionExcludingPath` metodo quando si gestisce il modulo <xref:System.Windows.Forms.Control.Paint> evento passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.GraphicsProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.GraphicsProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#1)]
 [!code-vb[System.Drawing.GraphicsProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public void Exclude (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Exclude(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Exclude(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Exclude (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Exclude(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.Rectangle" /> da escludere da questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> in modo che contenga solo la sezione della parte interna che non interseca la struttura <see cref="T:System.Drawing.Rectangle" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.Exclude%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public void Exclude (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Exclude(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Exclude(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Exclude (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Exclude(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.RectangleF" /> da escludere da questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> in modo che contenga solo la sezione della parte interna che non interseca la struttura <see cref="T:System.Drawing.RectangleF" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Creazione di un rettangolo e disegnato sullo schermo in nero  
  
-   Crea un secondo rettangolo che si interseca con il primo e disegnato sullo schermo in rosso.  
  
-   Crea un'area utilizzando il primo rettangolo.  
  
-   Ottiene l'area colorazione dell'area in combinazione con il secondo rettangolo.  
  
-   Riempie l'area colorazione in blu e disegnato sullo schermo.  
  
 Si noti che l'area dell'area dell'area che non si interseca con il rettangolo è di colore blu.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicRegionExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public void Exclude (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Exclude(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Exclude(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Exclude(System::Drawing::Region ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">Classe <see cref="T:System.Drawing.Region" /> da escludere da questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> in modo che contenga solo la sezione della parte interna che non interseca la classe <see cref="T:System.Drawing.Region" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per esempi di codice, vedere il <xref:System.Drawing.Region.Exclude%28System.Drawing.RectangleF%29> e <xref:System.Drawing.Region.Complement%28System.Drawing.Region%29> metodi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Region ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Region ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consente a un oggetto di effettuare un tentativo di liberare risorse ed eseguire altre operazioni di pulizia prima che venga recuperato da Garbage Collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHrgn">
      <MemberSignature Language="C#" Value="public static System.Drawing.Region FromHrgn (IntPtr hrgn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Region FromHrgn(native int hrgn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.FromHrgn(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHrgn (hrgn As IntPtr) As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Region ^ FromHrgn(IntPtr hrgn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hrgn" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hrgn">Handle per una classe <see cref="T:System.Drawing.Region" /> esistente.</param>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.Region" /> da un handle nell'area [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] esistente specificata.</summary>
        <returns>Nuovo oggetto <see cref="T:System.Drawing.Region" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea un nuovo <xref:System.Drawing.Region> con una parte interna definita da esistenti <xref:System.Drawing.Region> a cui fa riferimento l'handle di `hrgn` parametro.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per l'accesso a codice non gestito. Enumerazione correlata <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.GetBounds(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds (g As Graphics) As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g">Classe <see cref="T:System.Drawing.Graphics" /> su cui viene disegnata questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Ottiene una struttura <see cref="T:System.Drawing.RectangleF" /> che rappresenta un rettangolo che delimita questa classe <see cref="T:System.Drawing.Region" /> sulla superficie di disegno di un oggetto<see cref="T:System.Drawing.Graphics" />.</summary>
        <returns>Struttura <see cref="T:System.Drawing.RectangleF" /> che rappresenta il rettangolo di delimitazione di questa classe <see cref="T:System.Drawing.Region" /> sulla superficie di disegno specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La trasformazione corrente del contesto grafico viene utilizzata per calcolare l'area interna di area nell'area di disegno. Il rettangolo di delimitazione non è sempre il più piccolo rettangolo di delimitazione possibili a seconda della trasformazione corrente.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un <xref:System.Drawing.Drawing2D.GraphicsPath> e aggiunta di un'ellisse.  
  
-   Il percorso viene riempito con blu e disegnato sullo schermo.  
  
-   Crea un'area che usa il <xref:System.Drawing.Drawing2D.GraphicsPath>.  
  
-   Ottiene l'area colorazione dell'area in combinazione con il secondo rettangolo.  
  
-   Ottiene il rettangolo di delimitazione per l'area e disegnato sullo schermo in rosso.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicRegionExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHrgn">
      <MemberSignature Language="C#" Value="public IntPtr GetHrgn (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHrgn(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.GetHrgn(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHrgn (g As Graphics) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHrgn(System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g">Classe <see cref="T:System.Drawing.Graphics" /> su cui viene disegnata questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Restituisce un handle Windows per questa classe <see cref="T:System.Drawing.Region" /> nel contesto grafico specificato.</summary>
        <returns>Handle Windows per questo oggetto <see cref="T:System.Drawing.Region" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegionData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.RegionData GetRegionData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.RegionData GetRegionData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.GetRegionData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegionData () As RegionData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::RegionData ^ GetRegionData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.RegionData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una classe <see cref="T:System.Drawing.Drawing2D.RegionData" /> che rappresenta le informazioni che descrivono questa classe <see cref="T:System.Drawing.Region" />.</summary>
        <returns>Classe <see cref="T:System.Drawing.Drawing2D.RegionData" /> che rappresenta le informazioni che descrivono questa classe <see cref="T:System.Drawing.Region" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Drawing.Region> classe consente di definire una forma personalizzata. La forma può essere costituita da linee, poligoni e curve. <xref:System.Drawing.Region.GetRegionData%2A> descrive la forma contenuta in questo <xref:System.Drawing.Region>.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento.  L'esempio di codice viene illustrato come utilizzare il <xref:System.Drawing.Drawing2D.RegionData.Data%2A> da uno <xref:System.Drawing.Drawing2D.RegionData> per impostare il <xref:System.Drawing.Drawing2D.RegionData.Data%2A> per un'altra <xref:System.Drawing.Drawing2D.RegionData>.  
  
 [!code-cpp[System.Drawing.MiscExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.MiscExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.MiscExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionScans">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF[] GetRegionScans (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF[] GetRegionScans(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.GetRegionScans(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Drawing::RectangleF&gt; ^ GetRegionScans(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">Classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> che rappresenta una trasformazione geometrica da applicare all'area.</param>
        <summary>Restituisce una matrice di strutture <see cref="T:System.Drawing.RectangleF" /> che si approssimano a questa classe <see cref="T:System.Drawing.Region" /> dopo l'applicazione della matrice di trasformazione.</summary>
        <returns>Matrice di strutture <see cref="T:System.Drawing.RectangleF" /> che si approssimano a questa classe <see cref="T:System.Drawing.Region" /> dopo l'applicazione della matrice di trasformazione.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="matrix" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiorna questa istanza di <see cref="T:System.Drawing.Region" /> con la sua intersezione con l'oggetto <see cref="T:System.Drawing.Region" /> specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Intersect(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Intersect (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">Oggetto <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> da intersecare con questa istanza di <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa istanza di <see cref="T:System.Drawing.Region" /> con la sua intersezione con l'oggetto <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per esempi di codice, vedere il <xref:System.Drawing.RectangleF.Intersect%28System.Drawing.RectangleF%29?displayProperty=nameWithType> e <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> metodi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Intersect(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Intersect (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.Rectangle" /> da intersecare con questa istanza di <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa istanza di <see cref="T:System.Drawing.Region" /> con la sua intersezione con la struttura <see cref="T:System.Drawing.Rectangle" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.Intersect%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Intersect(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Intersect (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.RectangleF" /> da intersecare con questa istanza di <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa istanza di <see cref="T:System.Drawing.Region" /> con la sua intersezione con la struttura <see cref="T:System.Drawing.RectangleF" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Creazione del primo rettangolo e disegnato sullo schermo in nero.  
  
-   Crea il secondo rettangolo e disegnato sullo schermo in rosso.  
  
-   Crea un'area dal primo rettangolo.  
  
-   Ottiene l'area di intersezione per l'area in combinazione con il secondo rettangolo.  
  
-   Riempie l'area di intersezione in blu e disegnato sullo schermo.  
  
 Si noti che solo l'area sovrapposta per l'area e di un rettangolo blu.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicRegionExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Intersect(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Drawing::Region ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">Oggetto <see cref="T:System.Drawing.Region" /> da intersecare con questa istanza di <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa istanza di <see cref="T:System.Drawing.Region" /> con la sua intersezione con l'oggetto <see cref="T:System.Drawing.Region" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per esempi di codice, vedere il <xref:System.Drawing.Region.Intersect%28System.Drawing.RectangleF%29> e <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> (metodo)`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEmpty(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsEmpty(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEmpty (g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEmpty(System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g">Classe <see cref="T:System.Drawing.Graphics" /> che rappresenta una superficie di disegno.</param>
        <summary>Verifica se questa classe <see cref="T:System.Drawing.Region" /> ha una parte interna vuota sulla superficie di disegno specificata.</summary>
        <returns>
          <see langword="true" /> se la parte interna di questa classe <see cref="T:System.Drawing.Region" /> è vuota quando viene applicata la trasformazione associata al parametro <paramref name="g" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La trasformazione corrente del contesto grafico `g` viene utilizzato per calcolare l'area interna di area nell'area di disegno.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsInfinite">
      <MemberSignature Language="C#" Value="public bool IsInfinite (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInfinite(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsInfinite(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInfinite (g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInfinite(System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g">Classe <see cref="T:System.Drawing.Graphics" /> che rappresenta una superficie di disegno.</param>
        <summary>Verifica se questa classe <see cref="T:System.Drawing.Region" /> ha una parte interna infinita sulla superficie di disegno specificata.</summary>
        <returns>
          <see langword="true" /> se la parte interna di questa classe <see cref="T:System.Drawing.Region" /> è infinita quando viene applicata la trasformazione associata al parametro <paramref name="g" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La trasformazione corrente del contesto grafico `g` viene utilizzato per calcolare l'area interna di area nell'area di disegno.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Verifica se il rettangolo specificato è contenuto all'interno di questa classe <see cref="T:System.Drawing.Region" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">Struttura <see cref="T:System.Drawing.Point" /> da sottoporre a verifica.</param>
        <summary>Verifica se la struttura <see cref="T:System.Drawing.Point" /> specificata è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />.</summary>
        <returns>
          <see langword="true" /> quando il parametro <paramref name="point" /> è contenuto all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point">Struttura <see cref="T:System.Drawing.PointF" /> da sottoporre a verifica.</param>
        <summary>Verifica se la struttura <see cref="T:System.Drawing.PointF" /> specificata è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />.</summary>
        <returns>
          <see langword="true" /> quando il parametro <paramref name="point" /> è contenuto all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As Rectangle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.Rectangle" /> da sottoporre a verifica.</param>
        <summary>Verifica se una parte della struttura <see cref="T:System.Drawing.Rectangle" /> specificata è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />.</summary>
        <returns>Questo metodo restituisce <see langword="true" /> se una parte di <paramref name="rect" /> è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, restituisce <see langword="false" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As RectangleF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.RectangleF" /> da sottoporre a verifica.</param>
        <summary>Verifica se una parte della struttura <see cref="T:System.Drawing.RectangleF" /> specificata è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />.</summary>
        <returns>
          <see langword="true" /> quando una parte del parametro <paramref name="rect" /> è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Creazione del primo rettangolo e disegnato sullo schermo in blu.  
  
-   Crea il secondo rettangolo e disegnato sullo schermo in rosso.  
  
-   Crea un'area dal primo rettangolo.  
  
-   Determina se qualsiasi parte del rettangolo interseca l'area.  
  
-   Consente di visualizzare il `true` o `false` risultato sullo schermo.  
  
 Si noti che il rettangolo interseca l'area, pertanto il risultato è `true`.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicRegionExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="point">Struttura <see cref="T:System.Drawing.Point" /> da sottoporre a verifica.</param>
        <param name="g">Classe <see cref="T:System.Drawing.Graphics" /> che rappresenta un contesto grafico.</param>
        <summary>Verifica se la struttura <see cref="T:System.Drawing.Point" /> specificata è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />, quando viene disegnata utilizzando la classe <see cref="T:System.Drawing.Graphics" /> specificata.</summary>
        <returns>
          <see langword="true" /> quando il parametro <paramref name="point" /> è contenuto all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La trasformazione corrente del contesto grafico viene utilizzata per calcolare l'area interna di area e le coordinate del punto nell'area di disegno.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="point">Struttura <see cref="T:System.Drawing.PointF" /> da sottoporre a verifica.</param>
        <param name="g">Classe <see cref="T:System.Drawing.Graphics" /> che rappresenta un contesto grafico.</param>
        <summary>Verifica se la struttura <see cref="T:System.Drawing.PointF" /> specificata è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />, quando viene disegnata utilizzando la classe <see cref="T:System.Drawing.Graphics" /> specificata.</summary>
        <returns>
          <see langword="true" /> quando il parametro <paramref name="point" /> è contenuto all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La trasformazione corrente del contesto grafico viene utilizzata per calcolare l'area interna di area e le coordinate del punto nell'area di disegno.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Rectangle rect, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Rectangle rect, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As Rectangle, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Rectangle rect, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.Rectangle" /> da sottoporre a verifica.</param>
        <param name="g">Classe <see cref="T:System.Drawing.Graphics" /> che rappresenta un contesto grafico.</param>
        <summary>Verifica se una parte della struttura <see cref="T:System.Drawing.Rectangle" /> specificata è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />, quando viene disegnata utilizzando la classe <see cref="T:System.Drawing.Graphics" /> specificata.</summary>
        <returns>
          <see langword="true" /> quando una parte del parametro <paramref name="rect" /> è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La trasformazione corrente del contesto grafico viene utilizzata per calcolare l'area interna di area e le coordinate del rettangolo nell'area di disegno.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.RectangleF rect, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.RectangleF rect, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As RectangleF, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::RectangleF rect, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.RectangleF" /> da sottoporre a verifica.</param>
        <param name="g">Classe <see cref="T:System.Drawing.Graphics" /> che rappresenta un contesto grafico.</param>
        <summary>Verifica se una parte della struttura <see cref="T:System.Drawing.RectangleF" /> specificata è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />, quando viene disegnata utilizzando la classe <see cref="T:System.Drawing.Graphics" /> specificata.</summary>
        <returns>
          <see langword="true" /> quando il parametro <paramref name="rect" /> è contenuto all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La trasformazione corrente del contesto grafico viene utilizzata per calcolare l'area interna di area e le coordinate del rettangolo nell'area di disegno.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata x del punto da verificare.</param>
        <param name="y">Coordinata y del punto da verificare.</param>
        <summary>Verifica se il punto specificato è contenuto all'interno di questa classe <see cref="T:System.Drawing.Region" />.</summary>
        <returns>
          <see langword="true" /> quando il punto specificato è contenuto all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata x del punto da verificare.</param>
        <param name="y">Coordinata y del punto da verificare.</param>
        <param name="g">Classe <see cref="T:System.Drawing.Graphics" /> che rappresenta un contesto grafico.</param>
        <summary>Verifica se il punto specificato è contenuto in questo oggetto <see cref="T:System.Drawing.Region" />, quando viene disegnato utilizzando la classe <see cref="T:System.Drawing.Graphics" /> indicata.</summary>
        <returns>
          <see langword="true" /> quando il punto specificato è contenuto all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La trasformazione corrente del contesto grafico viene utilizzata per calcolare l'area interna di area e le coordinate del punto nell'area di disegno.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata x del punto da verificare.</param>
        <param name="y">Coordinata y del punto da verificare.</param>
        <param name="g">Classe <see cref="T:System.Drawing.Graphics" /> che rappresenta un contesto grafico.</param>
        <summary>Verifica se il punto specificato è contenuto all'interno di questa classe, <see cref="T:System.Drawing.Region" />, quando viene disegnato utilizzando la classe <see cref="T:System.Drawing.Graphics" /> specificata.</summary>
        <returns>
          <see langword="true" /> quando il punto specificato è contenuto all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La trasformazione corrente del contesto grafico viene utilizzata per calcolare l'area interna di area e le coordinate del punto nell'area di disegno.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer, width As Integer, height As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata x dell'angolo superiore sinistro del rettangolo da verificare.</param>
        <param name="y">Coordinata y dell'angolo superiore sinistro del rettangolo da verificare.</param>
        <param name="width">Larghezza del rettangolo da verificare.</param>
        <param name="height">Altezza del rettangolo da verificare.</param>
        <summary>Verifica se una parte del rettangolo specificato è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />.</summary>
        <returns>
          <see langword="true" /> quando una parte del rettangolo specificato è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single, width As Single, height As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, float width, float height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata x dell'angolo superiore sinistro del rettangolo da verificare.</param>
        <param name="y">Coordinata y dell'angolo superiore sinistro del rettangolo da verificare.</param>
        <param name="width">Larghezza del rettangolo da verificare.</param>
        <param name="height">Altezza del rettangolo da verificare.</param>
        <summary>Verifica se una parte del rettangolo specificato è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />.</summary>
        <returns>
          <see langword="true" /> quando una parte del rettangolo specificato è contenuta all'interno di questo oggetto <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, int width, int height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, int32 width, int32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer, width As Integer, height As Integer, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, int width, int height, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata x dell'angolo superiore sinistro del rettangolo da verificare.</param>
        <param name="y">Coordinata y dell'angolo superiore sinistro del rettangolo da verificare.</param>
        <param name="width">Larghezza del rettangolo da verificare.</param>
        <param name="height">Altezza del rettangolo da verificare.</param>
        <param name="g">Classe <see cref="T:System.Drawing.Graphics" /> che rappresenta un contesto grafico.</param>
        <summary>Verifica se una parte del rettangolo specificato è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />, quando viene disegnato utilizzando la classe <see cref="T:System.Drawing.Graphics" /> specificata.</summary>
        <returns>
          <see langword="true" /> quando una parte del rettangolo specificato è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La trasformazione corrente del contesto grafico viene utilizzata per calcolare l'area interna di area e le coordinate del rettangolo nell'area di disegno.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, float width, float height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, float32 width, float32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single, width As Single, height As Single, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, float width, float height, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata x dell'angolo superiore sinistro del rettangolo da verificare.</param>
        <param name="y">Coordinata y dell'angolo superiore sinistro del rettangolo da verificare.</param>
        <param name="width">Larghezza del rettangolo da verificare.</param>
        <param name="height">Altezza del rettangolo da verificare.</param>
        <param name="g">Classe <see cref="T:System.Drawing.Graphics" /> che rappresenta un contesto grafico.</param>
        <summary>Verifica se una parte del rettangolo specificato è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />, quando viene disegnato utilizzando la classe <see cref="T:System.Drawing.Graphics" /> specificata.</summary>
        <returns>
          <see langword="true" /> quando una parte del rettangolo specificato è contenuta all'interno di questa classe <see cref="T:System.Drawing.Region" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La trasformazione corrente del contesto grafico viene utilizzata per calcolare l'area interna di area e le coordinate del rettangolo nell'area di disegno.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeEmpty">
      <MemberSignature Language="C#" Value="public void MakeEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.MakeEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inizializza questa classe <see cref="T:System.Drawing.Region" /> su una parte interna vuota.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Drawing.Region.%23ctor%2A> costruttore e <xref:System.Drawing.Region.MakeEmpty%2A> metodo. In questo esempio è progettato per essere utilizzato con Windows Form. Creare un form e incollarvi il codice seguente. Chiamare il `FillEmptyRegion` metodo del modulo <xref:System.Windows.Forms.Control.Paint> gestione degli eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.MiscExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.MiscExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.MiscExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeInfinite">
      <MemberSignature Language="C#" Value="public void MakeInfinite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeInfinite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.MakeInfinite" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeInfinite ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeInfinite();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inizializza questo oggetto <see cref="T:System.Drawing.Region" /> su una parte interna infinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Drawing.Region.MakeInfinite%2A>. In questo esempio è progettato per essere utilizzato con Windows Form. Creare un form e incollarvi il codice seguente. Chiamare il `FillEmptyRegion` metodo del modulo <xref:System.Windows.Forms.Control.Paint> gestione degli eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.MiscExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.MiscExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.MiscExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHrgn">
      <MemberSignature Language="C#" Value="public void ReleaseHrgn (IntPtr regionHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseHrgn(native int regionHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.ReleaseHrgn(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHrgn (regionHandle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHrgn(IntPtr regionHandle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionHandle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="regionHandle">Handle per la classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Rilascia l'handle della classe <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="regionHandle" /> è <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per accedere al codice non gestito. Enumerazione correlata <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">Classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> in base alla quale trasformare questa classe<see cref="T:System.Drawing.Region" />.</param>
        <summary>Trasforma questa classe <see cref="T:System.Drawing.Region" /> in base alla classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Creazione di un rettangolo e disegnato sullo schermo in blu.  
  
-   Crea un'area dal rettangolo.  
  
-   Crea una matrice di trasformazione e lo imposta su 45 gradi.  
  
-   Applica la trasformazione all'area.  
  
-   Riempie l'area trasformato con rosso e disegna l'area trasformato sullo schermo in rosso.  
  
 Si noti che il rettangolo rosso ruotato di 45 gradi rispetto al rettangolo originale, visualizzati in blu.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicRegionExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="matrix" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Esegue l'offset delle coordinate di questa classe <see cref="T:System.Drawing.Region" /> in base al valore specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (int dx, int dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(int32 dx, int32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Translate(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (dx As Integer, dy As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(int dx, int dy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dx">Valore di offset orizzontale di questa classe <see cref="T:System.Drawing.Region" />.</param>
        <param name="dy">Valore di offset verticale di questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Esegue l'offset delle coordinate di questa classe <see cref="T:System.Drawing.Region" /> in base al valore specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Creazione di un rettangolo e disegnato sullo schermo in blu.  
  
-   Crea un'area dal rettangolo.  
  
-   Applica la traslazione alla regione.  
  
-   Riempie l'area tradotto con rosso e disegna l'area tradotto sullo schermo in rosso.  
  
 Si noti che il rettangolo rosso viene spostato in basso e a destra del rettangolo originale, visualizzati in blu.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicRegionExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Translate(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float dx, float dy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">Valore di offset orizzontale di questa classe <see cref="T:System.Drawing.Region" />.</param>
        <param name="dy">Valore di offset verticale di questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Esegue l'offset delle coordinate di questa classe <see cref="T:System.Drawing.Region" /> in base al valore specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.Translate%28System.Single%2CSystem.Single%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> all'unione della stessa con la classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Union(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Union (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">Classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> da unire a questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> all'unione della stessa con la classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.Union%28System.Drawing.RectangleF%29> e <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> metodi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Union(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Union (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.Rectangle" /> da unire a questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> all'unione della stessa con la struttura <see cref="T:System.Drawing.Rectangle" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.Union%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Union(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Union (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.RectangleF" /> da unire a questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> all'unione della stessa con la struttura <see cref="T:System.Drawing.RectangleF" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`. Nel codice vengono eseguite le seguenti azioni:  
  
-   Creazione del primo rettangolo e disegnato sullo schermo in nero.  
  
-   Crea un secondo rettangolo e disegnato sullo schermo in rosso.  
  
-   Crea un'area utilizzando il primo rettangolo.  
  
-   Ottiene l'area di unione per `myRegion` in combinazione con `complementRect`.  
  
-   Colorazione dell'area di unione in blu e disegnato sullo schermo.  
  
 Si noti che entrambi i rettangoli vengono riempiti con blu, inclusa l'area di sovrapposizione.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.ClassicRegionExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Union(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Drawing::Region ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">Classe <see cref="T:System.Drawing.Region" /> da unire a questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> all'unione della stessa con la classe <see cref="T:System.Drawing.Region" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.Union%28System.Drawing.RectangleF%29> e <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Xor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiorna questo oggetto <see cref="T:System.Drawing.Region" /> all'unione meno l'intersezione dello stesso con l'oggetto <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public void Xor (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Xor(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Xor (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Xor(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">Classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> da <see cref="Overload:System.Drawing.Region.Xor" /> con questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> all'unione meno l'intersezione della stessa con la classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.Xor%28System.Drawing.RectangleF%29> e <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> metodi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public void Xor (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Xor(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Xor(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Xor (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Xor(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.Rectangle" /> a cui applicare <see cref="Overload:System.Drawing.Region.Xor" /> con questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> all'unione meno l'intersezione della stessa con la struttura <see cref="T:System.Drawing.Rectangle" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.Xor%28System.Drawing.RectangleF%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public void Xor (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Xor(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Xor(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Xor (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Xor(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.RectangleF" /> a cui applicare <see cref="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)" /> con questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> all'unione meno l'intersezione della stessa con la struttura <see cref="T:System.Drawing.RectangleF" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Creazione del primo rettangolo e disegnato sullo schermo in nero.  
  
-   Crea un secondo rettangolo e disegnato sullo schermo in rosso.  
  
-   Crea un'area utilizzando il primo rettangolo.  
  
-   Ottiene il <xref:System.Drawing.Region.Xor%2A> area per `myRegion` in combinazione con `complementRect`.  
  
-   Riempie il <xref:System.Drawing.Region.Xor%2A> area in blu e disegnato sullo schermo.  
  
 Si noti che entrambi i rettangoli vengono riempiti con blue, ad eccezione dell'area della sovrapposizione.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.ClassicRegionExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public void Xor (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Xor(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Xor(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Xor(System::Drawing::Region ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">Classe <see cref="T:System.Drawing.Region" /> da <see cref="Overload:System.Drawing.Region.Xor" /> con questa classe <see cref="T:System.Drawing.Region" />.</param>
        <summary>Aggiorna questa classe <see cref="T:System.Drawing.Region" /> all'unione meno l'intersezione della stessa con la classe <see cref="T:System.Drawing.Region" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Region.Xor%28System.Drawing.RectangleF%29> e <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> metodi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>