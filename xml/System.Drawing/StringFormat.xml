<Type Name="StringFormat" FullName="System.Drawing.StringFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d7a239b2e59a29ea0bbb907f6ad0adae07fe5f7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39726063" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class StringFormat : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StringFormat extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.StringFormat" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StringFormat&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringFormat sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type StringFormat = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Incapsula le informazioni di layout del testo (come l'allineamento, l'orientamento e i punti di tabulazione), le operazioni di modifica della visualizzazione (come l'inserimento dei puntini di sospensione e la sostituzione di numeri nazionali) e le funzionalità OpenType. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Molti formati comuni vengono forniti tramite il <xref:System.Drawing.StringFormatFlags> enumerazione. <xref:System.Drawing.StringFormat> gli oggetti possono essere modificati.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.StringFormat" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringFormat();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.StringFormat" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente vengono illustrati i valori iniziali delle proprietà di un'istanza della classe <xref:System.Drawing.StringFormat>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|FormatFlags|0 (Nessun flag impostato)|  
|<xref:System.Drawing.StringFormat.HotkeyPrefix%2A>|<xref:System.Drawing.Text.HotkeyPrefix.None>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringFormat (System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringFormat(System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="new System.Drawing.StringFormat : System.Drawing.StringFormat -&gt; System.Drawing.StringFormat" Usage="new System.Drawing.StringFormat format" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="format">Oggetto <see cref="T:System.Drawing.StringFormat" /> da cui inizializzare il nuovo oggetto <see cref="T:System.Drawing.StringFormat" />.</param>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.StringFormat" /> dall'oggetto <see cref="T:System.Drawing.StringFormat" /> specificato esistente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente illustra i membri seguenti:  
  
-   <xref:System.Drawing.Rectangle.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.Alignment%2A>  
  
-   <xref:System.Drawing.StringFormat.LineAlignment%2A>  
  
-   <xref:System.Drawing.StringAlignment>  
  
-   <xref:System.Drawing.StringFormatFlags>  
  
 In questo esempio è progettato per essere usato con Windows Form. Incollare il codice in un form e si chiama il `ShowLineAndAlignment` metodo durante la gestione del modulo <xref:System.Windows.Forms.Control.Paint> evento passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.Misc2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Misc2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Misc2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringFormat (System.Drawing.StringFormatFlags options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.StringFormatFlags options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As StringFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringFormat(System::Drawing::StringFormatFlags options);" />
      <MemberSignature Language="F#" Value="new System.Drawing.StringFormat : System.Drawing.StringFormatFlags -&gt; System.Drawing.StringFormat" Usage="new System.Drawing.StringFormat options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="options" Type="System.Drawing.StringFormatFlags" />
      </Parameters>
      <Docs>
        <param name="options">Enumerazione <see cref="T:System.Drawing.StringFormatFlags" /> per il nuovo oggetto <see cref="T:System.Drawing.StringFormat" />.</param>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.StringFormat" /> con l'enumerazione <see cref="T:System.Drawing.StringFormatFlags" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente illustra i membri seguenti:  
  
-   <xref:System.Drawing.Rectangle.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.Alignment%2A>  
  
-   <xref:System.Drawing.StringFormat.LineAlignment%2A>  
  
-   <xref:System.Drawing.StringAlignment>  
  
-   <xref:System.Drawing.StringFormatFlags>  
  
 In questo esempio è progettato per essere usato con Windows Form. Incollare il codice in un form e si chiama il `ShowLineAndAlignment` metodo durante la gestione del modulo <xref:System.Windows.Forms.Control.Paint> evento passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.Misc2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Misc2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Misc2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringFormat (System.Drawing.StringFormatFlags options, int language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.StringFormatFlags options, int32 language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As StringFormatFlags, language As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringFormat(System::Drawing::StringFormatFlags options, int language);" />
      <MemberSignature Language="F#" Value="new System.Drawing.StringFormat : System.Drawing.StringFormatFlags * int -&gt; System.Drawing.StringFormat" Usage="new System.Drawing.StringFormat (options, language)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.Drawing.StringFormatFlags" />
        <Parameter Name="language" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="options">Enumerazione <see cref="T:System.Drawing.StringFormatFlags" /> per il nuovo oggetto <see cref="T:System.Drawing.StringFormat" />.</param>
        <param name="language">Valore che indica la lingua del testo.</param>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.StringFormat" /> con l'enumerazione <see cref="T:System.Drawing.StringFormatFlags" /> e la lingua specificate.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment Alignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Drawing.StringAlignment with get, set" Usage="System.Drawing.StringFormat.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'allineamento orizzontale della stringa.</summary>
        <value>Enumerazione <see cref="T:System.Drawing.StringAlignment" /> che specifica l'allineamento orizzontale della stringa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare <xref:System.Drawing.StringFormat.LineAlignment%2A> per specificare l'allineamento verticale della stringa.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Drawing.StringFormat.LineAlignment%2A> e <xref:System.Drawing.StringFormat.Alignment%2A> delle proprietà e il <xref:System.Drawing.StringAlignment> enumerazione per allineare le stringhe. In questo esempio è progettato per essere usato con Windows Form. Incollare il codice in un form e si chiama il `ShowLineAndAlignment` metodo durante la gestione del modulo <xref:System.Windows.Forms.Control.Paint> evento passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.Misc2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Misc2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Misc2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="stringFormat.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia esatta dell'oggetto <see cref="T:System.Drawing.StringFormat" />.</summary>
        <returns>Oggetto <see cref="T:System.Drawing.StringFormat" /> creato dal metodo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DigitSubstitutionLanguage">
      <MemberSignature Language="C#" Value="public int DigitSubstitutionLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DigitSubstitutionLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.DigitSubstitutionLanguage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DigitSubstitutionLanguage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DigitSubstitutionLanguage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DigitSubstitutionLanguage : int" Usage="System.Drawing.StringFormat.DigitSubstitutionLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la lingua usata quando numeri locali vengono sostituiti da numeri europei.</summary>
        <value>Un identificatore delle impostazioni internazionali NLS (National Language Support, supporto tecnico linguistico) che identifica la lingua che verrà usata quando i numeri locali vengono sostituiti con i numeri europei. È possibile passare la proprietà <see cref="P:System.Globalization.CultureInfo.LCID" /> di un oggetto <see cref="T:System.Globalization.CultureInfo" /> come identificatore delle impostazioni internazionali NLS (National Support Language, supporto linguistico nazionale). Si supponga, ad esempio, di creare un oggetto <see cref="T:System.Globalization.CultureInfo" /> passando la stringa "ar-EG" a un costruttore <see cref="T:System.Globalization.CultureInfo" />. Se si passa la proprietà <see cref="P:System.Globalization.CultureInfo.LCID" /> di tale oggetto <see cref="T:System.Globalization.CultureInfo" /> insieme a <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> al metodo <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" />, i numeri indo-arabici verranno sostituiti dai numeri europei al momento della visualizzazione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DigitSubstitutionMethod">
      <MemberSignature Language="C#" Value="public System.Drawing.StringDigitSubstitute DigitSubstitutionMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringDigitSubstitute DigitSubstitutionMethod" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.DigitSubstitutionMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DigitSubstitutionMethod As StringDigitSubstitute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringDigitSubstitute DigitSubstitutionMethod { System::Drawing::StringDigitSubstitute get(); };" />
      <MemberSignature Language="F#" Value="member this.DigitSubstitutionMethod : System.Drawing.StringDigitSubstitute" Usage="System.Drawing.StringFormat.DigitSubstitutionMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringDigitSubstitute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il metodo da usare per la sostituzione dei numeri.</summary>
        <value>Valore di enumerazione <see cref="T:System.Drawing.StringDigitSubstitute" /> che specifica come sostituire i caratteri di una stringa che non possono essere visualizzati perché non supportati dal tipo di carattere corrente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="stringFormat.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate dall'oggetto <see cref="T:System.Drawing.StringFormat" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Drawing.StringFormat.Dispose%2A> le risorse utilizzate da questo <xref:System.Drawing.StringFormat> oggetto riallocazione per altri scopi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~StringFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!StringFormat ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="stringFormat.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consente a un oggetto di effettuare un tentativo di liberare risorse ed eseguire altre operazioni di pulizia prima che venga recuperato da Garbage Collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatFlags">
      <MemberSignature Language="C#" Value="public System.Drawing.StringFormatFlags FormatFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringFormatFlags FormatFlags" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.FormatFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatFlags As StringFormatFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringFormatFlags FormatFlags { System::Drawing::StringFormatFlags get(); void set(System::Drawing::StringFormatFlags value); };" />
      <MemberSignature Language="F#" Value="member this.FormatFlags : System.Drawing.StringFormatFlags with get, set" Usage="System.Drawing.StringFormat.FormatFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'enumerazione <see cref="T:System.Drawing.StringFormatFlags" /> che contiene informazioni di formattazione.</summary>
        <value>Enumerazione <see cref="T:System.Drawing.StringFormatFlags" /> che contiene informazioni di formattazione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericDefault">
      <MemberSignature Language="C#" Value="public static System.Drawing.StringFormat GenericDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.StringFormat GenericDefault" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.GenericDefault" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GenericDefault As StringFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::StringFormat ^ GenericDefault { System::Drawing::StringFormat ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GenericDefault : System.Drawing.StringFormat" Usage="System.Drawing.StringFormat.GenericDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Drawing.StringFormat" /> generico predefinito.</summary>
        <value>Oggetto <see cref="T:System.Drawing.StringFormat" /> generico predefinito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente illustra i valori iniziali delle proprietà per un'istanza predefinita generico del <xref:System.Drawing.StringFormat> classe.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Drawing.StringFormat.FormatFlags%2A>|0|  
|<xref:System.Drawing.StringFormat.Alignment%2A>|<xref:System.Drawing.StringAlignment.Near>|  
|<xref:System.Drawing.StringFormat.LineAlignment%2A>|<xref:System.Drawing.StringAlignment.Near>|  
|<xref:System.Drawing.StringFormat.Trimming%2A>|<xref:System.Drawing.StringTrimming.Character>|  
|<xref:System.Drawing.StringFormat.HotkeyPrefix%2A>|<xref:System.Drawing.Text.HotkeyPrefix.None>|  
|<xref:System.Drawing.StringFormat.DigitSubstitutionMethod%2A>|<xref:System.Drawing.StringDigitSubstitute.User>|  
|<xref:System.Drawing.StringFormat.DigitSubstitutionLanguage%2A>|0|  
  
 Se si apportano modifiche per il <xref:System.Drawing.StringFormat> oggetto restituito dal <xref:System.Drawing.StringFormat.GenericDefault%2A> proprietà, tali modifiche restano effettive e le chiamate successive al <xref:System.Drawing.StringFormat.GenericDefault%2A> proprietà queste variazioni si rifletta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericTypographic">
      <MemberSignature Language="C#" Value="public static System.Drawing.StringFormat GenericTypographic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.StringFormat GenericTypographic" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.GenericTypographic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GenericTypographic As StringFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::StringFormat ^ GenericTypographic { System::Drawing::StringFormat ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GenericTypographic : System.Drawing.StringFormat" Usage="System.Drawing.StringFormat.GenericTypographic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto tipografico <see cref="T:System.Drawing.StringFormat" /> generico.</summary>
        <value>Oggetto tipografico <see cref="T:System.Drawing.StringFormat" /> generico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente illustra i valori iniziali delle proprietà per un'istanza generica tipografica del <xref:System.Drawing.StringFormat> classe.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Drawing.StringFormat.FormatFlags%2A>|24580 (<xref:System.Drawing.StringFormatFlags.NoClip>, <xref:System.Drawing.StringFormatFlags.FitBlackBox> e <xref:System.Drawing.StringFormatFlags.LineLimit>.)|  
|<xref:System.Drawing.StringFormat.Alignment%2A>|<xref:System.Drawing.StringAlignment.Near>|  
|<xref:System.Drawing.StringFormat.LineAlignment%2A>|<xref:System.Drawing.StringAlignment.Near>|  
|<xref:System.Drawing.StringFormat.Trimming%2A>|<xref:System.Drawing.StringTrimming.None>|  
|<xref:System.Drawing.StringFormat.HotkeyPrefix%2A>|<xref:System.Drawing.Text.HotkeyPrefix.None>|  
|<xref:System.Drawing.StringFormat.DigitSubstitutionMethod%2A>|<xref:System.Drawing.StringDigitSubstitute.User>|  
|<xref:System.Drawing.StringFormat.DigitSubstitutionLanguage%2A>|0|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTabStops">
      <MemberSignature Language="C#" Value="public float[] GetTabStops (out float firstTabOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32[] GetTabStops([out] float32&amp; firstTabOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.GetTabStops(System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTabStops (ByRef firstTabOffset As Single) As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;float&gt; ^ GetTabStops([Runtime::InteropServices::Out] float % firstTabOffset);" />
      <MemberSignature Language="F#" Value="member this.GetTabStops :  -&gt; single[]" Usage="stringFormat.GetTabStops firstTabOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstTabOffset" Type="System.Single" RefType="out" />
      </Parameters>
      <Docs>
        <param name="firstTabOffset">Numero di spazi compresi tra l'inizio di una riga di testo e la prima tabulazione.</param>
        <summary>Ottiene le tabulazioni per questo oggetto <see cref="T:System.Drawing.StringFormat" />.</summary>
        <returns>Matrice di distanze, in numero di spazi, tra le tabulazioni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Imposta i punti di tabulazione del <xref:System.Drawing.StringFormat>.  
  
-   Disegna la stringa e il rettangolo di layout. Si noti che la stringa contiene le schede. Impostazioni di tabulazione del <xref:System.Drawing.StringFormat> specificano gli offset del testo a schede.  
  
-   Ottiene i punti di tabulazione e Usa o esamina i valori.  
  
 [!code-cpp[System.Drawing.ClassicStringFormatExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicStringFormatExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicStringFormatExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HotkeyPrefix">
      <MemberSignature Language="C#" Value="public System.Drawing.Text.HotkeyPrefix HotkeyPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Text.HotkeyPrefix HotkeyPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.HotkeyPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property HotkeyPrefix As HotkeyPrefix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Text::HotkeyPrefix HotkeyPrefix { System::Drawing::Text::HotkeyPrefix get(); void set(System::Drawing::Text::HotkeyPrefix value); };" />
      <MemberSignature Language="F#" Value="member this.HotkeyPrefix : System.Drawing.Text.HotkeyPrefix with get, set" Usage="System.Drawing.StringFormat.HotkeyPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.HotkeyPrefix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Drawing.Text.HotkeyPrefix" /> per questo oggetto <see cref="T:System.Drawing.StringFormat" />.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Text.HotkeyPrefix" /> per questo oggetto <see cref="T:System.Drawing.StringFormat" />. L'impostazione predefinita è <see cref="F:System.Drawing.Text.HotkeyPrefix.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un'interfaccia utente grafica, tasti di scelta è la lettera sottolineata in una parola (in genere combinata con un'altra chiave, ad esempio il tasto Alt) che è possibile premere sulla tastiera per attivare la funzionalità che rappresenta la parola.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare una scelta rapida da tastiera usando le <xref:System.Drawing.StringFormat.HotkeyPrefix%2A> proprietà. Viene inoltre illustrato come utilizzare il <xref:System.Drawing.SystemBrushes.FromSystemColor%2A> (metodo). Per eseguire questo esempio, incollare il codice in un form, la gestione del modulo <xref:System.Windows.Forms.Control.Paint> eventi e chiamare il metodo seguente, passando e come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.MiscExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.MiscExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.MiscExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineAlignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment LineAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment LineAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.LineAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property LineAlignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment LineAlignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.LineAlignment : System.Drawing.StringAlignment with get, set" Usage="System.Drawing.StringFormat.LineAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'allineamento verticale della stringa.</summary>
        <value>Enumerazione <see cref="T:System.Drawing.StringAlignment" /> che rappresenta l'allineamento verticale della riga.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare <xref:System.Drawing.StringFormat.Alignment%2A> per specificare l'allineamento orizzontale della stringa.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Drawing.StringFormat.LineAlignment%2A> e <xref:System.Drawing.StringFormat.Alignment%2A> delle proprietà e il <xref:System.Drawing.StringAlignment> enumerazione per allineare le stringhe. In questo esempio è progettato per essere usato con Windows Form. Incollare il codice in un form e si chiama il `ShowLineAndAlignment` metodo durante la gestione del modulo <xref:System.Windows.Forms.Control.Paint> evento passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.Misc2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Misc2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Misc2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDigitSubstitution">
      <MemberSignature Language="C#" Value="public void SetDigitSubstitution (int language, System.Drawing.StringDigitSubstitute substitute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDigitSubstitution(int32 language, valuetype System.Drawing.StringDigitSubstitute substitute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDigitSubstitution (language As Integer, substitute As StringDigitSubstitute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDigitSubstitution(int language, System::Drawing::StringDigitSubstitute substitute);" />
      <MemberSignature Language="F#" Value="member this.SetDigitSubstitution : int * System.Drawing.StringDigitSubstitute -&gt; unit" Usage="stringFormat.SetDigitSubstitution (language, substitute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.Int32" />
        <Parameter Name="substitute" Type="System.Drawing.StringDigitSubstitute" />
      </Parameters>
      <Docs>
        <param name="language">Un identificatore delle impostazioni internazionali NLS (National Language Support, supporto tecnico linguistico) che identifica la lingua che verrà usata quando i numeri locali vengono sostituiti con i numeri europei. È possibile passare la proprietà <see cref="P:System.Globalization.CultureInfo.LCID" /> di un oggetto <see cref="T:System.Globalization.CultureInfo" /> come identificatore delle impostazioni internazionali NLS (National Support Language, supporto linguistico nazionale). Si supponga, ad esempio, di creare un oggetto <see cref="T:System.Globalization.CultureInfo" /> passando la stringa "ar-EG" a un costruttore <see cref="T:System.Globalization.CultureInfo" />. Se si passa la proprietà <see cref="P:System.Globalization.CultureInfo.LCID" /> di tale oggetto <see cref="T:System.Globalization.CultureInfo" /> insieme a <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> al metodo <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" />, i numeri indo-arabici verranno sostituiti dai numeri europei al momento della visualizzazione.</param>
        <param name="substitute">Elemento dell'enumerazione <see cref="T:System.Drawing.StringDigitSubstitute" /> che specifica come sono visualizzati i numeri.</param>
        <summary>Definizione della lingua e del metodo da usare quando i numeri locali vengono sostituiti con i numeri europei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Set, per il <xref:System.Drawing.StringFormat>, la lingua da usare e il metodo di sostituzione da usare.  
  
-   Disegna la stringa.  
  
-   Ripete i due passaggi precedenti per le due diverse lingue (arabo e tailandese).  
  
 Il metodo di sostituzione nazionali e il metodo tradizionale di sostituzione vengono illustrate per ognuno dei due linguaggi. Il metodo National Visualizza le cifre in base alla lingua nazionale ufficiale delle impostazioni locali dell'utente. Il metodo tradizionale Visualizza le cifre in base al linguaggio, che potrebbe essere diverso dalla lingua nazionale ufficiale o allo script nativo dell'utente.  
  
 [!code-cpp[System.Drawing.ClassicStringFormatExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicStringFormatExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicStringFormatExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMeasurableCharacterRanges">
      <MemberSignature Language="C#" Value="public void SetMeasurableCharacterRanges (System.Drawing.CharacterRange[] ranges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMeasurableCharacterRanges(valuetype System.Drawing.CharacterRange[] ranges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMeasurableCharacterRanges (ranges As CharacterRange())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMeasurableCharacterRanges(cli::array &lt;System::Drawing::CharacterRange&gt; ^ ranges);" />
      <MemberSignature Language="F#" Value="member this.SetMeasurableCharacterRanges : System.Drawing.CharacterRange[] -&gt; unit" Usage="stringFormat.SetMeasurableCharacterRanges ranges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranges" Type="System.Drawing.CharacterRange[]" />
      </Parameters>
      <Docs>
        <param name="ranges">Matrice di strutture <see cref="T:System.Drawing.CharacterRange" /> che specifica gli intervalli di caratteri misurati con una chiamata al metodo <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />.</param>
        <summary>Specifica una matrice di strutture <see cref="T:System.Drawing.CharacterRange" /> che rappresenta gli intervalli di caratteri misurati con una chiamata al metodo <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'impostazione di più di 32 intervalli di caratteri non è consentito e causerà un <xref:System.OverflowException?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Imposta gli intervalli di caratteri del <xref:System.Drawing.StringFormat>.  
  
-   Misura gli intervalli di caratteri per un rettangolo di layout e di stringa specificato.  
  
-   Disegna il rettangolo di layout e stringa.  
  
-   Disegna le aree. Ogni <xref:System.Drawing.Region> specifica un'area occupata da un intervallo di caratteri. I valori nelle aree vengono impostati quando gli intervalli di carattere vengono misurati dal <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> (metodo).  
  
-   Ripete i primi quattro passaggi, ma include spazi finali nella misurazione di ogni intervallo di caratteri.  
  
-   Cancella i flag di formato del <xref:System.Drawing.StringFormat> in modo che gli spazi finali non sono inclusi nella misurazione di ogni intervallo di caratteri.  
  
-   Ripete i primi quattro passaggi, ma usa un rettangolo di layout diversi solo per dimostrare che il rettangolo di layout influisce sulle misurazioni del CRTM degli intervalli di caratteri. La dimensione del tipo di carattere influirà anche la misura.  
  
 [!code-cpp[System.Drawing.ClassicStringFormatExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicStringFormatExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicStringFormatExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">Sono impostati più di 32 intervalli di caratteri.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTabStops">
      <MemberSignature Language="C#" Value="public void SetTabStops (float firstTabOffset, float[] tabStops);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTabStops(float32 firstTabOffset, float32[] tabStops) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTabStops (firstTabOffset As Single, tabStops As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTabStops(float firstTabOffset, cli::array &lt;float&gt; ^ tabStops);" />
      <MemberSignature Language="F#" Value="member this.SetTabStops : single * single[] -&gt; unit" Usage="stringFormat.SetTabStops (firstTabOffset, tabStops)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstTabOffset" Type="System.Single" />
        <Parameter Name="tabStops" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="firstTabOffset">Numero di spazi compresi tra l'inizio di una riga di testo e la prima tabulazione.</param>
        <param name="tabStops">Matrice delle distanze compresa tra le tabulazioni nelle unità specificate dalla proprietà <see cref="P:System.Drawing.Graphics.PageUnit" />.</param>
        <summary>Imposta le tabulazioni per questo oggetto <see cref="T:System.Drawing.StringFormat" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni offset di tabulazione nel `tabStops` matrice, ad eccezione del primo, è rispetto alla precedente. Il primo offset di tabulazione è relativo alla posizione di offset iniziale specificata dal `firstTabOffset`. Ad esempio, se la posizione di offset iniziale è 8 e il primo offset di tabulazione è 50, quindi non è la prima tabulazione nella posizione 58. Se la posizione di offset iniziale è zero, il primo offset di tabulazione è relativo alla posizione 0, l'origine di stringa.  
  
   
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Imposta i punti di tabulazione del <xref:System.Drawing.StringFormat>.  
  
-   Disegna la stringa e il rettangolo di layout. Si noti che la stringa contiene le schede. Impostazioni di tabulazione del <xref:System.Drawing.StringFormat> specificano gli offset del testo a schede.  
  
-   Ottiene i punti di tabulazione e Usa o esamina i valori.  
  
 [!code-cpp[System.Drawing.ClassicStringFormatExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicStringFormatExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicStringFormatExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stringFormat.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converte l'oggetto <see cref="T:System.Drawing.StringFormat" /> in una stringa leggibile.</summary>
        <returns>Rappresentazione di stringa dell'oggetto <see cref="T:System.Drawing.StringFormat" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Solo il valore della <xref:System.Drawing.StringFormat.FormatFlags%2A> proprietà viene convertita.  
  
   
  
## Examples  
 Nell'esempio seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Converte un <xref:System.Drawing.StringFormat> oggetto in una stringa.  
  
-   Disegna la stringa.  
  
-   Modifica di alcune proprietà di <xref:System.Drawing.StringFormat> oggetto.  
  
-   Disegna la stringa. La stringa sarà diversa perché le proprietà del <xref:System.Drawing.StringFormat> oggetto sono state modificate.  
  
 [!code-cpp[System.Drawing.ClassicStringFormatExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicStringFormatExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicStringFormatExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Trimming">
      <MemberSignature Language="C#" Value="public System.Drawing.StringTrimming Trimming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringTrimming Trimming" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.Trimming" />
      <MemberSignature Language="VB.NET" Value="Public Property Trimming As StringTrimming" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringTrimming Trimming { System::Drawing::StringTrimming get(); void set(System::Drawing::StringTrimming value); };" />
      <MemberSignature Language="F#" Value="member this.Trimming : System.Drawing.StringTrimming with get, set" Usage="System.Drawing.StringFormat.Trimming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringTrimming</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'enumerazione <see cref="T:System.Drawing.StringTrimming" /> per questo oggetto <see cref="T:System.Drawing.StringFormat" />.</summary>
        <value>Enumerazione <see cref="T:System.Drawing.StringTrimming" /> che indica in che modo il testo creato con questo oggetto <see cref="T:System.Drawing.StringFormat" /> viene ritagliato quando supera i bordi del rettangolo di layout.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Drawing.StringFormat.Trimming%2A> proprietà e come usare il <xref:System.Drawing.StringTrimming> enumerazione. In questo esempio è progettato per essere usato con un modulo di Windows. Incollare questo codice in un form e si chiama il `ShowStringTrimming` metodo durante la gestione del modulo <xref:System.Windows.Forms.Control.Paint> evento, passando e come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.Misc2#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Misc2#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Misc2#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>