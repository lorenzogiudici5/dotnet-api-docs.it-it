<Type Name="CharacterRange" FullName="System.Drawing.CharacterRange">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c633f45ec418ee430a5cca9b3a5d066885a27f7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30409515" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CharacterRange" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CharacterRange extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.CharacterRange" />
  <TypeSignature Language="VB.NET" Value="Public Structure CharacterRange" />
  <TypeSignature Language="C++ CLI" Value="public value class CharacterRange" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specifica un intervallo di posizioni di caratteri all'interno di una stringa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come creare un <xref:System.Drawing.CharacterRange> e utilizzarla per evidenziare una parte di una stringa. In questo esempio è progettato per essere utilizzato con Windows Form. Incollare l'esempio in un form e chiamare il `HighlightACharacterRange` metodo quando si gestisce il modulo <xref:System.Windows.Forms.Control.Paint> evento passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterRange (int First, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 First, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (First As Integer, Length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterRange(int First, int Length);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="First" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="First">Posizione del primo carattere dell'intervallo. Ad esempio, se <c>First</c> è impostato su 0, la prima posizione dell'intervallo corrisponderà alla posizione 0 nella stringa.</param>
        <param name="Length">Numero di posizioni nell'intervallo.</param>
        <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Drawing.CharacterRange" />, specificando un intervallo di posizioni di caratteri all'interno di una stringa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come creare un <xref:System.Drawing.CharacterRange> e utilizzarla per evidenziare una parte di una stringa. In questo esempio è progettato per essere utilizzato con Windows Form. Incollare l'esempio in un form e chiamare il `HighlightACharacterRange` metodo quando si gestisce il modulo <xref:System.Windows.Forms.Control.Paint> evento passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da confrontare per l'uguaglianza.</param>
        <summary>Ottiene un valore che indica se l'oggetto è equivalente all'oggetto specificato.</summary>
        <returns>
          <see langword="true" /> per indicare che l'oggetto specificato è un'istanza con la stessa struttura <see cref="P:System.Drawing.CharacterRange.First" /> e valore <see cref="P:System.Drawing.CharacterRange.Length" /> dell'istanza; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È inoltre possibile utilizzare <xref:System.Drawing.CharacterRange.op_Equality%2A> per verificare l'uguaglianza.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del metodo <xref:System.Drawing.CharacterRange.Equals%2A>. Per eseguire questo esempio, incollarlo in un Windows Form. Handle del modulo <xref:System.Windows.Forms.Control.Paint> eventi e chiamate di `CharacterRangeEquality2` metodo il <xref:System.Windows.Forms.Control.Paint> gestione degli eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#2)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="First">
      <MemberSignature Language="C#" Value="public int First { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 First" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.CharacterRange.First" />
      <MemberSignature Language="VB.NET" Value="Public Property First As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int First { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la posizione nella stringa del primo carattere di questo oggetto <see cref="T:System.Drawing.CharacterRange" />.</summary>
        <value>Prima posizione dell'oggetto <see cref="T:System.Drawing.CharacterRange" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il codice hash per l'istanza.</summary>
        <returns>Intero con segno a 32 bit che rappresenta il codice hash per questa istanza.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.CharacterRange.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero di posizioni in questo <see cref="T:System.Drawing.CharacterRange" />.</summary>
        <value>Numero di posizioni in questo <see cref="T:System.Drawing.CharacterRange" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Drawing.CharacterRange cr1, valuetype System.Drawing.CharacterRange cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (cr1 As CharacterRange, cr2 As CharacterRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Drawing::CharacterRange cr1, System::Drawing::CharacterRange cr2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Drawing.CharacterRange" />
        <Parameter Name="cr2" Type="System.Drawing.CharacterRange" />
      </Parameters>
      <Docs>
        <param name="cr1">Struttura <see cref="T:System.Drawing.CharacterRange" /> da confrontare per l'uguaglianza.</param>
        <param name="cr2">Struttura <see cref="T:System.Drawing.CharacterRange" /> da confrontare per l'uguaglianza.</param>
        <summary>Confronta due oggetti <see cref="T:System.Drawing.CharacterRange" />. Ottiene un valore che indica se i valori <see cref="P:System.Drawing.CharacterRange.First" /> e <see cref="P:System.Drawing.CharacterRange.Length" /> dei due oggetti <see cref="T:System.Drawing.CharacterRange" /> sono uguali.</summary>
        <returns>
          <see langword="true" /> per indicare che i due oggetti <see cref="T:System.Drawing.CharacterRange" /> hanno gli stessi valori <see cref="P:System.Drawing.CharacterRange.First" /> e <see cref="P:System.Drawing.CharacterRange.Length" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È inoltre possibile verificare l'uguaglianza utilizzando il <xref:System.Drawing.CharacterRange.Equals%2A> metodo.  
  
 Il metodo equivalente per l'operatore è <xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType>  
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Drawing.CharacterRange.op_Equality%2A> operatore. Per eseguire questo esempio, incollarlo in un Windows Form. Handle del modulo <xref:System.Windows.Forms.Control.Paint> eventi e chiamate di `CharacterRangeEquality1` metodo il <xref:System.Windows.Forms.Control.Paint> gestione degli eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Drawing.CharacterRange cr1, valuetype System.Drawing.CharacterRange cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (cr1 As CharacterRange, cr2 As CharacterRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Drawing::CharacterRange cr1, System::Drawing::CharacterRange cr2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Drawing.CharacterRange" />
        <Parameter Name="cr2" Type="System.Drawing.CharacterRange" />
      </Parameters>
      <Docs>
        <param name="cr1">Struttura <see cref="T:System.Drawing.CharacterRange" /> da confrontare per la disuguaglianza.</param>
        <param name="cr2">Struttura <see cref="T:System.Drawing.CharacterRange" /> da confrontare per la disuguaglianza.</param>
        <summary>Confronta due oggetti <see cref="T:System.Drawing.CharacterRange" />. Ottiene un valore che indica se i valori <see cref="P:System.Drawing.CharacterRange.First" /> o <see cref="P:System.Drawing.CharacterRange.Length" /> dei due oggetti <see cref="T:System.Drawing.CharacterRange" /> non sono uguali.</summary>
        <returns>
          <see langword="true" /> per indicare che il valore <see cref="P:System.Drawing.CharacterRange.First" /> o <see cref="P:System.Drawing.CharacterRange.Length" /> dei due oggetti <see cref="T:System.Drawing.CharacterRange" /> è differente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Drawing.CharacterRange.op_Inequality%2A> il metodo restituisce l'opposto del <xref:System.Drawing.CharacterRange.op_Equality%2A> metodo.  
  
 Il metodo equivalente per l'operatore è <xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType>  
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del metodo <xref:System.Drawing.CharacterRange.op_Inequality%2A>. Per eseguire questo esempio, incollarlo in un Windows Form. Handle del modulo <xref:System.Windows.Forms.Control.Paint> eventi e chiamate di `CharacterRangeInequality` metodo il <xref:System.Windows.Forms.Control.Paint> gestione degli eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#3)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.CharacterRange.Equals(System.Object)" />
        <altmember cref="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      </Docs>
    </Member>
  </Members>
</Type>