<Namespace Name="System.Diagnostics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef6aeaebe2981ce7e1b191a089dab9ae242e488a" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30734995" />
  </Metadata>
  <Docs>
    <summary>Lo spazio dei nomi <see cref="N:System.Diagnostics" /> fornisce le classi che consentono di interagire con i processi del sistema, i log eventi e i contatori delle prestazioni.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   Il <xref:System.Diagnostics.EventLog> componente fornisce funzionalità per scrivere i log eventi, leggi le voci del registro eventi, creare ed eliminare i registri eventi e le origini eventi nella rete. Il <xref:System.Diagnostics.EntryWrittenEventHandler> fornisce un modo per interagire con i registri eventi in modo asincrono. Classi di supporto forniscono accesso a un controllo più dettagliato, tra cui: restrizioni alle autorizzazioni, la possibilità di specificare i tipi di log eventi (che controlla il tipo di dati predefinito che viene scritto con una voce del registro eventi) e scorrere le raccolte del registro eventi voci. Per ulteriori informazioni su queste attività, vedere il <xref:System.Diagnostics.EventLogPermission>, <xref:System.Diagnostics.EventLogEntryType>, e <xref:System.Diagnostics.EventLogEntryCollection> classi.  
  
-   La <xref:System.Diagnostics.Process> classe fornisce funzionalità per monitorare i processi di sistema attraverso la rete e avviare e arrestare i processi di sistema locale. Oltre a richiamare gli elenchi di processi in esecuzione (specificando il computer, il nome del processo o l'id di processo) o la visualizzazione di informazioni sul processo che dispone attualmente dell'accesso per il processore, è possibile ottenere una conoscenza approfondita di thread di processo e i moduli tramite il <xref:System.Diagnostics.Process> classe stessa e interagendo con la <xref:System.Diagnostics.ProcessThread> e <xref:System.Diagnostics.ProcessModule> classi. La <xref:System.Diagnostics.ProcessStartInfo> classe consente di specificare un'ampia gamma di elementi con cui avviare un nuovo processo, ad esempio i flussi di input, output e di errore, directory di lavoro e i verbi di riga di comando e gli argomenti. Tali opzioni consentono un controllo accurato sul funzionamento dei processi. Altre classi correlate consentono di specificare gli stili di finestra, processo e le priorità di thread e interagisce con le raccolte di moduli e thread.  
  
-   Il <xref:System.Diagnostics.PerformanceCounter> classe consente di monitorare le prestazioni del sistema, mentre la <xref:System.Diagnostics.PerformanceCounterCategory> classe fornisce un modo per creare nuovi contatori personalizzati e le categorie. È possibile scrivere nei contatori personalizzati locali e leggere i contatori locali e remoti (sistema, nonché personalizzato). Esempi di contatori utilizzando il <xref:System.Diagnostics.PerformanceCounter> classe e calcolare i risultati degli esempi di contatori delle prestazioni successive utilizzando il <xref:System.Diagnostics.CounterSample> classe. La <xref:System.Diagnostics.CounterCreationData> classe consente di creare più contatori in una categoria e specificare i relativi tipi. Altre classi associate al componente contatore delle prestazioni forniscono l'accesso agli insiemi di contatori, autorizzazione di contatore e tipi di contatori.  
  
 Il <xref:System.Diagnostics> dello spazio dei nomi fornisce anche classi che consentono di eseguire il debug dell'applicazione e per tracciare l'esecuzione del codice. Per altre informazioni, vedere le classi <xref:System.Diagnostics.Trace> e <xref:System.Diagnostics.Debug>.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>