<Type Name="PersistenceProvider" FullName="System.ServiceModel.Persistence.PersistenceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ebe9bdbc77c412be76a9af2ba4f3d529de11c781" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48740317" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PersistenceProvider : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceProvider extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceProvider&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceProvider abstract : System::ServiceModel::Channels::CommunicationObject" />
  <TypeSignature Language="F#" Value="type PersistenceProvider = class&#xA;    inherit CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1ab2d-101">Classe di base astratta dalla quale vengono derivati tutti i provider di persistenza del servizio durevole.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ab2d-101">The abstract base class from which all durable service persistence providers are derived.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab2d-102">Gli utenti possono creare classi derivate da questo tipo per creare provider di persistenza del servizio durevole che utilizzano archivi di persistenza personalizzati, ad esempio database di terze parti, il file system o sistemi di archiviazione a cui è possibile accedere in modalità remota.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-102">Users can create classes derived from this type to create durable service persistence providers that use custom persistence stores, such as third-party databases, the file system, or storage systems accessed remotely.</span></span> <span data-ttu-id="1ab2d-103">Per creare un'implementazione fornita dal sistema di questo tipo che utilizza Microsoft SQL Server come archivio di persistenza, vedere <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-103">To create a system-provided implementation of this type that uses Microsoft SQL Server as a persistence store, see <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1ab2d-104">Quando si creano implementazioni del provider di persistenza, è importante mantenere l'identità originale del thread nei metodi del nuovo provider (ad esempio <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.)</span><span class="sxs-lookup"><span data-stu-id="1ab2d-104">When creating persistence provider implementations, it is important to maintain the thread's original identity in the new provider's methods (such as <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</span></span> <span data-ttu-id="1ab2d-105">In caso contrario, è possibile creare punti deboli nella sicurezza, poiché le operazioni vengono eseguite con l'identità errata.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-105">Otherwise, security loopholes could be created, because operations would then run under the wrong identity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ab2d-106">Per un'implementazione di questo tipo che utilizza il file system come archivio di persistenza, vedere il file FilePersistenceProviderFactory.cs nell'esempio SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-106">For an implementation of this type that uses the file system as a persistence store, see the FilePersistenceProviderFactory.cs file in the DurableServiceFactory SDK sample.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (id As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceProvider(Guid id);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.PersistenceProvider : Guid -&gt; System.ServiceModel.Persistence.PersistenceProvider" Usage="new System.ServiceModel.Persistence.PersistenceProvider id" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="1ab2d-107">Identificatore univoco dei dati relativi allo stato del servizio salvati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-107">The unique identifier of the service state data being saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-108">Quando viene implementato in una classe derivata, inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-108">When implemented in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-109">Nel codice seguente viene illustrato come utilizzare il costruttore <xref:System.ServiceModel.Persistence.PersistenceProvider>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-109">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider> constructor.</span></span> <span data-ttu-id="1ab2d-110">Questo esempio di codice è parte dell'esempio SDK DurableServiceFactory nel file FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-110">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="1ab2d-111">Per ulteriori informazioni, vedere l'esempio SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-111">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#0](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginCreate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCreate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginCreate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1ab2d-112">Stato dell'istanza effettivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-112">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1ab2d-113">Periodo di tempo dopo il quale il provider di persistenza interrompe il tentativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-113">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1ab2d-114">Metodo da chiamare al termine dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-114">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1ab2d-115">Oggetto fornito dall'utente che distingue questa specifica operazione asincrona da altre operazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-115">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-116">Una volta implementato in una classe derivata, rappresenta l'inizio della fase di creazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-116">When implemented in a derived class, represents the beginning of the Create phase.</span>
          </span>
          <span data-ttu-id="1ab2d-117">La fase di creazione si verifica al momento della creazione dei record dell'istanza di servizio nell'archivio di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-117">The Create phase occurs when service instance records are first created in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab2d-118">Stato della chiamata asincrona <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-118">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-119">Nel codice seguente viene illustrato come implementare il metodo <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-119">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#14](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDelete">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginDelete (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDelete(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginDelete (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginDelete(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDelete : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginDelete (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1ab2d-120">Stato dell'istanza effettivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-120">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1ab2d-121">Periodo di tempo dopo il quale il provider di persistenza interrompe il tentativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-121">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1ab2d-122">Metodo da chiamare al termine dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-122">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1ab2d-123">Oggetto fornito dall'utente che distingue questa specifica operazione asincrona da altre operazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-123">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-124">Una volta implementato in una classe derivata, rappresenta l'inizio della fase di eliminazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-124">When implemented in a derived class, represents the beginning of the Delete phase.</span>
          </span>
          <span data-ttu-id="1ab2d-125">La fase di eliminazione si verifica quando i dati relativi allo stato del servizio vengono eliminati in modo permanente dall'archivio di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-125">The Delete phase occurs when service state data is permanently deleted from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab2d-126">Stato della chiamata asincrona <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-126">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-127">Nel codice seguente viene illustrato come implementare il metodo `BeginDelete`.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-127">The following code demonstrates how to implement the `BeginDelete` method.</span></span> <span data-ttu-id="1ab2d-128">Questo esempio di codice è parte dell'esempio SDK DurableServiceFactory nel file FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-128">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="1ab2d-129">Per ulteriori informazioni, vedere l'esempio SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-129">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#6](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginLoad (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginLoad(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginLoad : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginLoad (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1ab2d-130">Periodo di tempo dopo il quale il provider di persistenza interrompe il tentativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-130">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1ab2d-131">Metodo da chiamare al termine dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-131">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1ab2d-132">Oggetto fornito dall'utente che distingue questa specifica operazione asincrona da altre operazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-132">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-133">Una volta implementato in una classe derivata, rappresenta l'inizio della fase di caricamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-133">When implemented in a derived class, represents the beginning of the Load phase.</span>
          </span>
          <span data-ttu-id="1ab2d-134">La fase di caricamento si verifica quando i dati relativi allo stato vengono caricati nel provider di persistenza dall'archivio di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-134">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab2d-135">Stato della chiamata asincrona <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-135">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-136">Nel codice seguente viene illustrato come implementare il metodo `BeginLoad`.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-136">The following code demonstrates how to implement the `BeginLoad` method.</span></span> <span data-ttu-id="1ab2d-137">Questo esempio di codice è parte dell'esempio SDK DurableServiceFactory nel file FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-137">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="1ab2d-138">Per ulteriori informazioni, vedere l'esempio SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-138">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#7](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginLoadIfChanged : TimeSpan * obj * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginLoadIfChanged : TimeSpan * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginLoadIfChanged (timeout, instanceToken, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1ab2d-139">Periodo di tempo dopo il quale il provider di persistenza interrompe il tentativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-139">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="instanceToken">
          <span data-ttu-id="1ab2d-140">Token restituito da un metodo <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> o <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> precedente che rappresenta lo stato corrente utilizzato dal chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-140">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> that represents the current state held by the caller.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1ab2d-141">Metodo da chiamare al termine dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-141">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1ab2d-142">Oggetto fornito dall'utente che distingue questa specifica operazione asincrona da altre operazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-142">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-143">Una volta implementato in una classe derivata, rappresenta l'inizio della fase LoadIfChanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-143">When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</span>
          </span>
          <span data-ttu-id="1ab2d-144">La fase LoadIfChanged si verifica quando i dati relativi allo stato vengono caricati nel provider di persistenza dall'archivio di persistenza, e i dati relativi allo stato nell'archivio di persistenza sono stati modificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-144">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab2d-145">Stato della chiamata asincrona <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-145">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-146">Nel codice seguente viene illustrato come implementare il metodo <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-146">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#11](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUpdate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginUpdate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginUpdate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1ab2d-147">Stato dell'istanza effettivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-147">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1ab2d-148">Periodo di tempo dopo il quale il provider di persistenza interrompe il tentativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-148">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1ab2d-149">Metodo da chiamare al termine dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-149">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1ab2d-150">Oggetto fornito dall'utente che distingue questa specifica operazione asincrona da altre operazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-150">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-151">Una volta implementato in una classe derivata, rappresenta l'inizio della fase di aggiornamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-151">When implemented in a derived class, represents the beginning of the Update phase.</span>
          </span>
          <span data-ttu-id="1ab2d-152">La fase di aggiornamento si verifica quando i dati relativi allo stato del servizio vengono aggiornati nell'archivio di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-152">The Update phase occurs when service state data is updated in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab2d-153">Stato della chiamata asincrona <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-153">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-154">Nel codice seguente viene illustrato come implementare il metodo <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-154">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#17](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract object Create (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Create(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Create : obj * TimeSpan -&gt; obj" Usage="persistenceProvider.Create (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1ab2d-155">Stato dell'istanza effettivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-155">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1ab2d-156">Periodo di tempo dopo il quale il provider di persistenza interrompe il tentativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-156">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-157">Una volta implementato in una classe derivata, crea un record dello stato del servizio nell'archivio di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-157">When implemented in a derived class, creates a service state record in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab2d-158">Il token dell'istanza corrispondente allo stato salvato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-158">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="1ab2d-159">Può essere passato a <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> per determinare se lo stato nell'archivio di persistenza è diverso dallo stato attivo nel momento in cui è stato chiamato Create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-159">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-160">Nel codice seguente viene illustrato come implementare il metodo <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-160">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#15](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public abstract void Delete (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Delete (instance As Object, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Delete(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Delete : obj * TimeSpan -&gt; unit" Usage="persistenceProvider.Delete (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1ab2d-161">Stato dell'istanza effettivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-161">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1ab2d-162">Periodo di tempo dopo il quale il provider di persistenza interrompe il tentativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-162">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-163">Una volta implementato in una classe derivata, elimina in modo permanente le informazioni sullo stato del servizio dall'archivio di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-163">When implemented in a derived class, permanently deletes service state information from the persistence store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-164">Nel codice seguente viene illustrato come implementare il metodo <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-164">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A> method.</span></span> <span data-ttu-id="1ab2d-165">Questo esempio di codice è parte dell'esempio SDK DurableServiceFactory nel file FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-165">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="1ab2d-166">Per ulteriori informazioni, vedere l'esempio SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-166">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#9](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreate">
      <MemberSignature Language="C#" Value="public abstract object EndCreate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndCreate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndCreate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndCreate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCreate : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndCreate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="1ab2d-167">Riferimento al risultato dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-167">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-168">Una volta implementato in una classe derivata, rappresenta la fine della fase di creazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-168">When implemented in a derived class, represents the end of the Create phase.</span>
          </span>
          <span data-ttu-id="1ab2d-169">La fase di creazione si verifica al momento della creazione dei record sullo stato del servizio nell'archivio di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-169">The Create phase occurs when service state records are first created in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab2d-170">Il token dell'istanza corrispondente allo stato salvato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-170">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="1ab2d-171">Può essere passato a <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> per determinare se lo stato nell'archivio di persistenza è diverso dallo stato attivo nel momento in cui è stato chiamato Create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-171">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-172">Nel codice seguente viene illustrato come implementare il metodo <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-172">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#16](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDelete">
      <MemberSignature Language="C#" Value="public abstract void EndDelete (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDelete(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndDelete (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndDelete(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDelete : IAsyncResult -&gt; unit" Usage="persistenceProvider.EndDelete result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="1ab2d-173">Riferimento al risultato dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-173">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-174">Una volta implementato in una classe derivata, rappresenta la fine della fase di eliminazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-174">When implemented in a derived class, represents the end of the Delete phase.</span>
          </span>
          <span data-ttu-id="1ab2d-175">La fase di eliminazione si verifica quando i dati relativi allo stato vengono eliminati in modo permanente dall'archivio di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-175">The Delete phase occurs when state data is permanently deleted from the persistence store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-176">Nel codice seguente viene illustrato come implementare il metodo <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-176">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A> method.</span></span> <span data-ttu-id="1ab2d-177">Questo esempio di codice è parte dell'esempio SDK DurableServiceFactory nel file FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-177">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="1ab2d-178">Per ulteriori informazioni, vedere l'esempio SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-178">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#5](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public abstract object EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndLoad (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndLoad : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="1ab2d-179">Riferimento al risultato dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-179">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-180">Una volta implementato in una classe derivata, rappresenta la fine della fase di caricamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-180">When implemented in a derived class, represents the end of the Load phase.</span>
          </span>
          <span data-ttu-id="1ab2d-181">La fase di caricamento si verifica quando i dati relativi allo stato vengono caricati nel provider di persistenza dall'archivio di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-181">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab2d-182">Informazioni sullo stato del servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-182">The service state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-183">Nel codice seguente viene illustrato come utilizzare il metodo `EndLoad`.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-183">The following code demonstrates how to use the `EndLoad` method.</span></span> <span data-ttu-id="1ab2d-184">Questo esempio di codice è parte dell'esempio SDK DurableServiceFactory nel file FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-184">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="1ab2d-185">Per ulteriori informazioni, vedere l'esempio SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-185">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#1](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool EndLoadIfChanged (IAsyncResult result, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndLoadIfChanged(class System.IAsyncResult result, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndLoadIfChanged (result As IAsyncResult, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndLoadIfChanged(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="abstract member EndLoadIfChanged : IAsyncResult *  -&gt; bool&#xA;override this.EndLoadIfChanged : IAsyncResult *  -&gt; bool" Usage="persistenceProvider.EndLoadIfChanged (result, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="instance" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="1ab2d-186">Riferimento al risultato dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-186">A reference to the result of the operation.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="1ab2d-187">Stato dell'istanza effettivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-187">The actual instance state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-188">Una volta implementato in una classe derivata, rappresenta la fine della fase LoadIfChanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-188">When implemented in a derived class, represents the end of the LoadIfChanged phase.</span>
          </span>
          <span data-ttu-id="1ab2d-189">La fase LoadIfChanged si verifica quando i dati relativi allo stato vengono caricati nel provider di persistenza dall'archivio di persistenza, e i dati relativi allo stato nell'archivio di persistenza sono stati modificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-189">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab2d-190">È <see langword="true" /> se il parametro <see langword="out" /> dell'istanza è stato impostato con l'ultima copia recuperata dall'archivio di persistenza ed è <see langword="false" /> se lo stato memorizzato nella cache locale è già aggiornato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-190">
              <see langword="true" /> if the instance <see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up-to-date.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-191">Nel codice seguente viene illustrato come implementare il metodo <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-191">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#12](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public abstract object EndUpdate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndUpdate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndUpdate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndUpdate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndUpdate : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndUpdate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="1ab2d-192">Riferimento al risultato dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-192">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-193">Rappresenta la fine della fase di aggiornamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-193">Represents the end of the Update phase.</span>
          </span>
          <span data-ttu-id="1ab2d-194">La fase di aggiornamento si verifica quando i record sullo stato del servizio vengono aggiornati nell'archivio di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-194">The Update phase occurs when service state records are updated in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab2d-195">Il token dell'istanza corrispondente allo stato salvato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-195">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="1ab2d-196">Può essere passato a <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> per determinare se lo stato nell'archivio di persistenza è diverso dallo stato attivo nel momento in cui è stato chiamato Create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-196">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-197">Nel codice seguente viene illustrato come implementare il metodo <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-197">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#19](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.PersistenceProvider.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.ServiceModel.Persistence.PersistenceProvider.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ab2d-198">Rappresenta la struttura <see cref="T:System.Guid" /> associata a questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-198">Represents the <see cref="T:System.Guid" /> associated with this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ab2d-199">GUID associato a questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-199">The GUID associated with this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-200">Nel codice riportato di seguito viene illustrato come utilizzare la proprietà <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-200">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A> property.</span></span>  
  
 [!code-csharp[PersistenceProvider#10](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract object Load (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Load (timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Load(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Load : TimeSpan -&gt; obj" Usage="persistenceProvider.Load timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1ab2d-201">Periodo di tempo dopo il quale il provider di persistenza interrompe il tentativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-201">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-202">Una volta implementato in una classe derivata, carica le informazioni sullo stato del servizio dall'archivio di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-202">When implemented in a derived class, loads service state information from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab2d-203">Stato dell'istanza caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-203">The loaded instance state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab2d-204">Le modifiche apportate al token di sicurezza nel metodo <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>, se non ripristinate, resteranno valide per la parte rimanente dell'elaborazione del messaggio.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-204">Changes made to the security token in the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method, if not reverted, stay in effect for the remainder of that message's processing.</span></span> <span data-ttu-id="1ab2d-205">Questo significa che il codice utente dell'operazione del servizio, il percorso del messaggio di risposta tramite il dispatcher così come qualsiasi percorso di errore, verrà eseguito nel contesto di sicurezza modificato.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-205">This means that the service operation's user code, the response message path through the dispatcher, as well as any error paths, run in the changed security context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ab2d-206">Nel codice seguente viene illustrato come implementare il metodo <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-206">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method.</span></span> <span data-ttu-id="1ab2d-207">Questo esempio di codice è parte dell'esempio SDK DurableServiceFactory nel file FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-207">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="1ab2d-208">Per ulteriori informazioni, vedere l'esempio SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-208">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#3](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="abstract member LoadIfChanged : TimeSpan * obj *  -&gt; bool&#xA;override this.LoadIfChanged : TimeSpan * obj *  -&gt; bool" Usage="persistenceProvider.LoadIfChanged (timeout, instanceToken, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="instance" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1ab2d-209">Periodo di tempo dopo il quale il provider di persistenza interrompe il tentativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-209">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="instanceToken">
          <span data-ttu-id="1ab2d-210">Token restituito da un metodo <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> o <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> precedente che rappresenta lo stato corrente utilizzato dal chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-210">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />, which represents the current state held by the caller.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="1ab2d-211">Stato dell'istanza effettivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-211">The actual instance state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-212">Una volta implementato in una classe derivata, carica le informazioni sullo stato del servizio dall'archivio di persistenza se i dati sono stati modificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-212">When implemented in a derived class, loads service state information from the persistence store if that data has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab2d-213">
            <see langword="true" /> se il parametro <paramref name="instance" /><see langword="out" /> è stato impostato con l'ultima copia recuperata dall'archivio di persistenza; <see langword="false" /> se lo stato memorizzato nella cache locale è già aggiornato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-213">
              <see langword="true" /> if the <paramref name="instance" /><see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up to date.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-214">Nel codice seguente viene illustrato come implementare il metodo <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-214">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#13](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract object Update (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Update (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Update(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Update : obj * TimeSpan -&gt; obj" Usage="persistenceProvider.Update (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1ab2d-215">Stato dell'istanza effettivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-215">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1ab2d-216">Periodo di tempo dopo il quale il provider di persistenza interrompe il tentativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-216">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab2d-217">Una volta implementato in una classe derivata, aggiorna i record dello stato del servizio nell'archivio di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-217">When implemented in a derived class, updates service state records in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab2d-218">Il token dell'istanza corrispondente allo stato salvato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-218">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="1ab2d-219">Può essere passato a <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> per determinare se lo stato nell'archivio di persistenza è diverso dallo stato attivo nel momento in cui è stato chiamato Create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab2d-219">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1ab2d-220">Nel codice seguente viene illustrato come implementare il metodo <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab2d-220">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#18](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>