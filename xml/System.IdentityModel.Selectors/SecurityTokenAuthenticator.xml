<Type Name="SecurityTokenAuthenticator" FullName="System.IdentityModel.Selectors.SecurityTokenAuthenticator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f53343ce4976ac50e797153cd9ddf9358c2bb551" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37650784" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenAuthenticator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenAuthenticator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenAuthenticator" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenAuthenticator abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenAuthenticator = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9fe10-101">Authenticates a security token.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9fe10-101">Authenticates a security token.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe10-102">La classe <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> e le relative classi derivate vengono utilizzate per autenticare i token di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="9fe10-102">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> class and the classes that derive from it authenticate security tokens.</span></span> <span data-ttu-id="9fe10-103">In genere una classe viene derivata direttamente dalla classe <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> solo quando si crea un token di sicurezza personalizzato.</span><span class="sxs-lookup"><span data-stu-id="9fe10-103">Typically, you would only derive a class directly from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> when you create a custom security token.</span></span> <span data-ttu-id="9fe10-104">Se si desidera eseguire l'override dei comportamenti di autenticazione o di autorizzazione predefiniti dei token di sicurezza incorporati, derivare da una delle classi che derivano dalla classe <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, ad esempio <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>.</span><span class="sxs-lookup"><span data-stu-id="9fe10-104">If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, such as <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>.</span></span>  
  
 <span data-ttu-id="9fe10-105">Quando si deriva una classe dalla classe <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, è necessario eseguire l'override dei due metodi seguenti: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> e <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="9fe10-105">When you derive a class from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, override the following two methods: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>.</span></span> <span data-ttu-id="9fe10-106">Il metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> determina se l'autenticatore del token di sicurezza corrente è in grado di autenticare un token di sicurezza specifico.</span><span class="sxs-lookup"><span data-stu-id="9fe10-106">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method determines whether this security token authenticator can authenticate a specific security token.</span></span> <span data-ttu-id="9fe10-107">Il metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> autentica il token di sicurezza e definisce un set di criteri di autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="9fe10-107">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method authenticates the security token and establishes a set of authorization policies for authorization.</span></span> <span data-ttu-id="9fe10-108">Questi criteri di autorizzazione eseguono il mapping delle attestazioni rilevate nel token di sicurezza alle attestazioni richieste dall'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9fe10-108">The authorization policies map the claims found in the security token to claims required by the application.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenAuthenticator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenAuthenticator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fe10-109">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-109">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public bool CanValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanValidateToken (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenAuthenticator.CanValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="9fe10-110">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-110">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fe10-111">Gets a value indicating whether the specified security token can be validated by this security token authenticator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-111">Gets a value indicating whether the specified security token can be validated by this security token authenticator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fe10-112">
            <see langword="true" /> when token can be validated; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-112">
              <see langword="true" /> when token can be validated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe10-113">Il metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> controlla se il parametro "token" è `null` e quindi chiama il metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> per determinare se questo autenticatore del token di sicurezza è in grado di autenticare il tipo di token di sicurezza indicato dal parametro `token`.</span><span class="sxs-lookup"><span data-stu-id="9fe10-113">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method checks whether the token parameter is `null` and then calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9fe10-114">
            <paramref name="token" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-114">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="CanValidateTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanValidateTokenCore (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member CanValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenAuthenticator.CanValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="9fe10-115">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-115">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fe10-116">When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-116">When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fe10-117">
            <see langword="true" /> when <paramref name="token" /> can be validated; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-117">
              <see langword="true" /> when <paramref name="token" /> can be validated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe10-118">Il metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> viene chiamato dal metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> per determinare se questo autenticatore del token di sicurezza è in grado di autenticare il tipo di token di sicurezza indicato dal parametro `token`.</span><span class="sxs-lookup"><span data-stu-id="9fe10-118">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`.</span></span> <span data-ttu-id="9fe10-119">Questo metodo non autentica il token di sicurezza. L'autenticazione viene invece eseguita dal metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>.</span><span class="sxs-lookup"><span data-stu-id="9fe10-119">This does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="securityTokenAuthenticator.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="9fe10-120">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-120">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fe10-121">Authenticates the specified security token and returns the set of authorization policies for the security token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-121">Authenticates the specified security token and returns the set of authorization policies for the security token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fe10-122">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-122">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe10-123">Il metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> controlla se il parametro `token` è `null`, quindi chiama il metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> per determinare se questo autenticatore del token di sicurezza è in grado di autenticare questo token di sicurezza e infine, se possibile, chiama il metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="9fe10-123">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method checks whether the `token` parameter is `null`, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9fe10-124">
            <paramref name="token" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-124">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException">
          <span data-ttu-id="9fe10-125">
            <paramref name="token" /> cannot be authenticated by this security token authenticator  -or-  <paramref name="token" /> is not authenticated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-125">
              <paramref name="token" /> cannot be authenticated by this security token authenticator  -or-  <paramref name="token" /> is not authenticated.</span>
          </span>
        </exception>
        <altmember cref="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <altmember cref="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateTokenCore">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ValidateTokenCore (token As SecurityToken) As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member ValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="securityTokenAuthenticator.ValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="9fe10-126">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-126">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fe10-127">When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-127">When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fe10-128">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe10-128">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe10-129">Per autenticare un tipo token di sicurezza specifico, eseguire l'override del metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="9fe10-129">Override the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method to authenticate a specific security token type.</span></span>  
  
 <span data-ttu-id="9fe10-130">Quando viene eseguito l'override del metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>, attenersi alle linee guida seguenti:</span><span class="sxs-lookup"><span data-stu-id="9fe10-130">When the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method is overridden, follow these guidelines:</span></span>  
  
-   <span data-ttu-id="9fe10-131">Quando il token di sicurezza passato il `token` parametro non può essere convalidato, generare un <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="9fe10-131">When the security token passed into the `token` parameter cannot be validated, throw a <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.</span></span>  
  
-   <span data-ttu-id="9fe10-132">Quando non è impostato alcun criterio di autorizzazione per l'applicazione corrente, restituire una classe <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> vuota di tipo <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</span><span class="sxs-lookup"><span data-stu-id="9fe10-132">When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</span></span>  
  
 <span data-ttu-id="9fe10-133">Quando questo metodo restituisce `null`, Windows Communication Foundation genera un <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="9fe10-133">When this method returns `null`, Windows Communication Foundation throws a <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.</span></span>  
  
 <span data-ttu-id="9fe10-134">Il metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> viene chiamato dal metodo <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>.</span><span class="sxs-lookup"><span data-stu-id="9fe10-134">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>