<Type Name="X509SecurityTokenProvider" FullName="System.IdentityModel.Selectors.X509SecurityTokenProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1645c438f940e80b210371ebb4d4eedf9cad5328" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30417585" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509SecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenProvider, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509SecurityTokenProvider extends System.IdentityModel.Selectors.SecurityTokenProvider implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class X509SecurityTokenProvider&#xA;Inherits SecurityTokenProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509SecurityTokenProvider : System::IdentityModel::Selectors::SecurityTokenProvider, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Rappresenta un provider di token di sicurezza che fornisce i token di sicurezza <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> per un mittente di messaggi SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella maggior parte dei casi non è necessario chiamare la classe <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider> direttamente poiché viene chiamata quando un client invia un messaggio SOAP che richiede un token di sicurezza <xref:System.IdentityModel.Tokens.X509SecurityToken>. In particolare, un client specifica il tipo di token di sicurezza necessario utilizzando la classe <xref:System.ServiceModel.Description.ClientCredentials> e la classe <xref:System.ServiceModel.Description.ClientCredentials> chiama il metodo <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> per ottenere un token di sicurezza. Quando il token di sicurezza necessario è un token di sicurezza <xref:System.IdentityModel.Tokens.X509SecurityToken>, il metodo <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> chiama il metodo <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenProvider (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenProvider(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">Classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> per la quale ottenere un token di sicurezza.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" /> utilizzando il certificato X.509 specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A> ottiene un token di sicurezza basato sul certificato specificato nel parametro `certificate`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenProvider (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenProvider(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Uno dei valori <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> che specifica il percorso dell'archivio certificati.</param>
        <param name="storeName">Uno dei valori <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> che specifica il nome dell'archivio certificati.</param>
        <param name="findType">Uno dei valori <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> che specifica la modalità di ricerca nell'archivio certificati.</param>
        <param name="findValue">Valore utilizzato per individuare il certificato X.509 nell'archivio certificati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" /> ottenendo un certificato X.509 dai criteri dell'archivio certificati specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A> ottiene un token di sicurezza basato sul certificato che corrisponde ai criteri dell'archivio certificati specificati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="findValue" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Nessuno certificato corrisponde ai criteri specificati.  
  
 oppure  
  
 Ai criteri specificati corrispondono più certificati.</exception>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Certificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il certificato X.509 associato al token di sicurezza <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</summary>
        <value>Ottiene una classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> che rappresenta il certificato X.509 di un token di sicurezza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A> ottiene un token di sicurezza basato sul certificato rappresentato dalla proprietà <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate da <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenCore">
      <MemberSignature Language="C#" Value="protected override System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken GetTokenCore(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTokenCore (timeout As TimeSpan) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ GetTokenCore(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Struttura <see cref="T:System.TimeSpan" /> che specifica il valore di timeout del messaggio che ottiene il token di sicurezza.</param>
        <summary>Ottiene un token di sicurezza utilizzando il certificato X.509 specificato nel costruttore.</summary>
        <returns>La classe <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> che rappresenta il token di sicurezza da ottenere.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> viene chiamato dalla classe <xref:System.ServiceModel.Description.ClientCredentials> quando un client invia un messaggio SOAP ed è necessario un token di sicurezza <xref:System.IdentityModel.Tokens.X509SecurityToken>.  
  
 Il metodo <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> chiama il metodo <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>