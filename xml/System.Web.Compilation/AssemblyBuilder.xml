<Type Name="AssemblyBuilder" FullName="System.Web.Compilation.AssemblyBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b89a6b3beaa31058655b9710bf25aa493262051c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36604278" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rende disponibile un contenitore per compilare un assembly da uno o più percorsi virtuali in un progetto ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istanze di <xref:System.Web.Compilation.AssemblyBuilder> classe vengono utilizzate con <xref:System.Web.Compilation.BuildProvider> classe metodi per creare uno o più file in un assembly compilato.  
  
 Il <xref:System.Web.Compilation.BuildProvider> classe definisce la funzionalità di compilazione per i singoli file e il <xref:System.Web.Compilation.AssemblyBuilder> classe combina il codice sorgente reso disponibile da ogni <xref:System.Web.Compilation.BuildProvider> istanza in un unico assembly. Passa ambiente di compilazione ASP.NET un' <xref:System.Web.Compilation.AssemblyBuilder> dell'oggetto per il <xref:System.Web.Compilation.BuildProvider> metodi quando si compila un assembly da uno o più file, in modo che ogni <xref:System.Web.Compilation.BuildProvider> istanza possa fornire codice sorgente per il rispettivo file di assembly globale.  
  
 L'ambiente di compilazione ASP.NET determina la lingua e il compilatore richiesti dai file all'interno del progetto, in base il <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> proprietà. I file di gruppi dell'ambiente di compilazione in base alle relative impostazioni del compilatore e compila un assembly dai file che richiedono il compilatore stesso.  
  
 Il <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> proprietà indica il <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione nell'ambiente di compilazione ASP.NET viene utilizzato per compilare un assembly dal codice sorgente reso disponibile da ogni <xref:System.Web.Compilation.BuildProvider> implementazione.  
  
 Un <xref:System.Web.Compilation.BuildProvider> oggetto fornisce codice sorgente sotto forma di grafico CodeDOM mediante il <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> metodo. Un <xref:System.Web.Compilation.BuildProvider> oggetto fornisce codice sorgente archiviato in un file fisico mediante la <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metodo.  
  
 Dopo ognuno <xref:System.Web.Compilation.BuildProvider> oggetto fornisce codice sorgente utilizzando il metodo appropriato <xref:System.Web.Compilation.AssemblyBuilder> metodi, utilizza ambiente di compilazione ASP.NET il <xref:System.Web.Compilation.AssemblyBuilder> classe per compilare il codice sorgente raccolti in un assembly.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione del provider di compilazione semplice, che eredita dalla classe astratta <xref:System.Web.Compilation.BuildProvider> classe di base. Il provider di compilazione esegue l'override di <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, e <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> i membri della classe base.  
  
 Nel <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementazione del metodo, il provider di compilazione consente di aggiungere il codice generato per la compilazione dell'assembly mediante il <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metodo. Nell'esempio non include l'implementazione del `SampleClassGenerator` classe. Per ulteriori informazioni, vedere <xref:System.CodeDom.CodeCompileUnit>.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
  </Docs>
  <Members>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public void AddAssemblyReference (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssemblyReference(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAssemblyReference (a As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAssemblyReference(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyReference : System.Reflection.Assembly -&gt; unit" Usage="assemblyBuilder.AddAssemblyReference a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">Assembly a cui fa riferimento un'unità di compilazione del codice o un file di origine incluso nella compilazione dell'assembly.</param>
        <summary>Aggiunge un assembly a cui fa riferimento il codice sorgente generato per un file.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.Compilation.BuildProvider> implementazione Usa il <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> metodo durante la generazione del codice sorgente che fa riferimento a tipi nell'assembly di input.  
  
 ASP.NET ambiente di compilazione Inizializza l'insieme predefinito di assembly disponibili per il riferimento nel provider di compilazione il <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=nameWithType> proprietà. Se il provider di compilazione genera codice sorgente che fa riferimento ad assembly aggiuntivi, il provider di compilazione consente di aggiungere ulteriori assembly usando il <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> metodo. L'ambiente di compilazione ASP.NET risolve i tipi esterni durante la compilazione di assembly utilizzando entrambi gli assembly di riferimento aggiunti da compilare i provider e l'insieme predefinito di assembly disponibili per riferimento.  
  
 In genere, un <xref:System.Web.Compilation.BuildProvider> oggetto aggiunge codice per il <xref:System.Web.Compilation.AssemblyBuilder> oggetto nel <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> metodo. Se un provider di compilazione genera codice sorgente che utilizza un tipo esterno, il provider di compilazione consente di aggiungere l'assembly del tipo utilizzando il <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=nameWithType> metodo.  
  
 Usare la <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> metodo per aggiungere un assembly di riferimento obbligatorio nel codice sorgente generato da un <xref:System.Web.Compilation.BuildProvider> istanza per un tipo di file specifico. Usare la [assembly elemento per la compilazione (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/3811c448-af1c-498d-be2b-6ed2634c51e9) elemento di configurazione per configurare un assembly come riferimento in più tipi di file in un progetto.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="AddCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCodeCompileUnit(class System.Web.Compilation.BuildProvider buildProvider, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCodeCompileUnit(System::Web::Compilation::BuildProvider ^ buildProvider, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberSignature Language="F#" Value="member this.AddCodeCompileUnit : System.Web.Compilation.BuildProvider * System.CodeDom.CodeCompileUnit -&gt; unit" Usage="assemblyBuilder.AddCodeCompileUnit (buildProvider, compileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Provider di compilazione che genera <c>compileUnit</c>.</param>
        <param name="compileUnit">Unità di compilazione del codice da includere nella compilazione dell'assembly.</param>
        <summary>Aggiunge codice sorgente per l'assembly sotto forma di grafico CodeDOM.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.Compilation.BuildProvider> implementazione chiama il <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> metodo durante la generazione di un grafo CodeDOM per un percorso virtuale. Il codice sorgente aggiunto con <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> è incluso nella compilazione dell'assembly.  
  
 In genere, un provider di compilazione <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> metodo implementazione legge la <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> analizza il contenuto, proprietà e quindi aggiunge il codice sorgente generato all'oggetto specificato <xref:System.Web.Compilation.AssemblyBuilder> oggetto. Il provider di compilazione Usa il <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> metodo per aggiungere codice sorgente come un grafo CodeDOM per l'assembly. In alternativa, è possibile utilizzare il provider di compilazione il <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metodo per aggiungere codice sorgente come un file fisico per l'assembly.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProvider : System.CodeDom.Compiler.CodeDomProvider" Usage="System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il compilatore utilizzato per compilare codice sorgente in un assembly.</summary>
        <value>Implementazione in sola lettura della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> utilizzata per compilare codice sorgente fornito da ogni provider di compilazione in un assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> proprietà indica il <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=nameWithType> implementazione nell'ambiente di compilazione ASP.NET viene utilizzato per compilare un assembly dal codice sorgente reso disponibile da ogni <xref:System.Web.Compilation.BuildProvider> implementazione.  
  
 L'ambiente di compilazione ASP.NET determina la lingua e il compilatore richiesti dai file all'interno del progetto, in base il <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> proprietà. I file di gruppi dell'ambiente di compilazione in base alle relative impostazioni del compilatore e compila un assembly dai file che richiedono il compilatore stesso.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
        <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateCodeFile">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextWriter CreateCodeFile(class System.Web.Compilation.BuildProvider buildProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextWriter ^ CreateCodeFile(System::Web::Compilation::BuildProvider ^ buildProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateCodeFile : System.Web.Compilation.BuildProvider -&gt; System.IO.TextWriter" Usage="assemblyBuilder.CreateCodeFile buildProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Provider di compilazione che genera il file di origine del codice.</param>
        <summary>Consente a un provider di compilazione di creare un file di origine temporaneo e di includere il file di origine nella compilazione dell'assembly.</summary>
        <returns>Classe <see cref="T:System.IO.TextWriter" /> aperta che può essere utilizzata per scrivere codice sorgente in un file temporaneo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.Compilation.BuildProvider> implementazione chiama il <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metodo durante la generazione di un file di origine per un percorso virtuale. Il codice sorgente aggiunto con <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> è incluso nella compilazione dell'assembly.  
  
 In genere, un provider di compilazione <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> metodo implementazione legge la <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> analizza il contenuto, proprietà e quindi aggiunge il codice sorgente generato all'oggetto specificato <xref:System.Web.Compilation.AssemblyBuilder> oggetto. Il provider di compilazione Usa il <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metodo per aggiungere codice sorgente come un file fisico per l'assembly. In alternativa, è possibile utilizzare il provider di compilazione il <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> metodo per aggiungere codice sorgente come un grafo CodeDOM per l'assembly.  
  
 Dopo la chiamata <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>, il provider di compilazione scrive l'origine contenuto del file tramite l'oggetto restituito <xref:System.IO.TextWriter> oggetto. Dopo aver scritto il file di origine, il <xref:System.Web.Compilation.BuildProvider> oggetto deve utilizzare il <xref:System.IO.TextWriter.Close%2A> metodo per chiudere il <xref:System.IO.TextWriter> dell'oggetto e liberare risorse di sistema associate.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione del provider di compilazione semplice, che eredita dalla classe astratta <xref:System.Web.Compilation.BuildProvider> classe di base. Il provider di compilazione esegue l'override di <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, e <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> i membri della classe base.  
  
 Nel <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementazione del metodo, il provider di compilazione consente di aggiungere il codice generato per la compilazione dell'assembly mediante il <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metodo. Nell'esempio non include l'implementazione del `SampleClassGenerator` classe. Per ulteriori informazioni, vedere <xref:System.CodeDom.CodeCompileUnit>.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEmbeddedResource">
      <MemberSignature Language="C#" Value="public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream CreateEmbeddedResource(class System.Web.Compilation.BuildProvider buildProvider, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ CreateEmbeddedResource(System::Web::Compilation::BuildProvider ^ buildProvider, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateEmbeddedResource : System.Web.Compilation.BuildProvider * string -&gt; System.IO.Stream" Usage="assemblyBuilder.CreateEmbeddedResource (buildProvider, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Provider di compilazione che genera la risorsa.</param>
        <param name="name">Nome del file di risorse da creare.</param>
        <summary>Consente a un provider di compilazione di creare un file di risorse da includere nella compilazione dell'assembly.</summary>
        <returns>Classe <see cref="T:System.IO.Stream" /> aperta che può essere utilizzata per scrivere risorse, incluse nella compilazione dell'assembly.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo la chiamata di <xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A> metodo, una <xref:System.Web.Compilation.BuildProvider> oggetto scrive la risorsa di contenuto del file tramite l'oggetto restituito <xref:System.IO.Stream> oggetto. Ad esempio, il provider di compilazione può scrivere le risorse usando un <xref:System.Resources.ResourceWriter> oggetto. Dopo aver scritto il file di risorse, è necessario utilizzare il provider di compilazione il <xref:System.IO.Stream.Close%2A> metodo per chiudere il <xref:System.IO.Stream> dell'oggetto e liberare risorse di sistema associate.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> non è un nome di file valido.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeFactory">
      <MemberSignature Language="C#" Value="public void GenerateTypeFactory (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateTypeFactory(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateTypeFactory (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateTypeFactory(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GenerateTypeFactory : string -&gt; unit" Usage="assemblyBuilder.GenerateTypeFactory typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nome del tipo da generare.</param>
        <summary>Inserisce un modello di factory di oggetto veloce per un tipo nell'assembly compilato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.Compilation.BuildProvider> implementazione chiama il <xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A> metodo per ottimizzare le prestazioni relative frequenti alle creazioni di istanze del tipo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetTempFilePhysicalPath">
      <MemberSignature Language="C#" Value="public string GetTempFilePhysicalPath (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTempFilePhysicalPath(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTempFilePhysicalPath (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTempFilePhysicalPath(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="member this.GetTempFilePhysicalPath : string -&gt; string" Usage="assemblyBuilder.GetTempFilePhysicalPath extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">Estensione di file da utilizzare per il file temporaneo.</param>
        <summary>Genera un percorso di file temporaneo.</summary>
        <returns>Percorso di un file temporaneo, con l'estensione di file specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.Compilation.BuildProvider> implementazione chiama il <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> metodo per ottenere un percorso file temporaneo viene eliminato automaticamente dopo la compilazione dell'assembly.  
  
 Il <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> metodo genera un percorso del file temporaneo univoco, ma non crea il file.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.TempFiles" />
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
      </Docs>
    </Member>
  </Members>
</Type>