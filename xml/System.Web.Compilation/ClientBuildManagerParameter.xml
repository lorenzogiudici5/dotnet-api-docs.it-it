<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f2c1d9d48c5bed1209bd89fe711a3362408adaab" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51917659" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <TypeSignature Language="F#" Value="type ClientBuildManagerParameter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contiene valori passati al compilatore ASP.NET durante la precompilazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile precompilare le pagine Web ASP.NET e i file di codice per facilitare una risposta più veloce per gli utenti e consentire la distribuzione del sito senza distribuire il codice sorgente. Per altre informazioni sulla precompilazione di un sito Web ASP.NET, vedere [Cenni preliminari sulla precompilazione progetto sito Web ASP.NET](https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).  
  
 Il <xref:System.Web.Compilation.ClientBuildManagerParameter> classe archivia i valori utilizzati durante la precompilazione. Il <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> proprietà determina come verrà compilato l'assembly. Ad esempio, è possibile impostare <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> al <xref:System.Web.Compilation.PrecompilationFlags.Clean> ricompilare qualsiasi componente compilato in precedenza, o impostarla su <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> per consentire l'assembly risultante per sovrascrivere tutti i componenti nella directory di destinazione. Il <xref:System.Web.Compilation.PrecompilationFlags> enumeratore ha un <xref:System.FlagsAttribute> attributo che consente una combinazione bit per bit dei valori dei membri. Il <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> proprietà può contenere più di un valore dal <xref:System.Web.Compilation.PrecompilationFlags> enumerazione per specificare una combinazione di comportamenti di precompilazione.  
  
 Entrambi i <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> proprietà o il <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> proprietà viene assegnata un valore per creare un assembly con nome sicuro. Entrambi i valori non sono necessario impostare per creare un assembly con nome sicuro.  
  
 A <xref:System.Web.Compilation.ClientBuildManagerParameter> oggetto viene passato per il <xref:System.Web.Compilation.ClientBuildManager> dell'oggetto tramite il <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> costruttore.  
  
   
  
## Examples  
 Esempio di codice seguente fa parte di un esempio di codice trovato nel <xref:System.Web.Compilation.ClientBuildManager> Cenni preliminari sulla classe. Nell'esempio, un <xref:System.Web.Compilation.ClientBuildManagerParameter> oggetto viene creato e impostato i relativi valori. L'assembly risultante avrà un nome sicuro in base al file di chiave specificato e verrà precompilazione <xref:System.Web.Compilation.PrecompilationFlags> valori.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
    <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Precompilazione del sito Web ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore non inizializza alcun valore della proprietà. Tali valori devono essere impostati tramite il <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, e <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> proprietà dopo aver creato l'oggetto.  
  
   
  
## Examples  
 Esempio di codice seguente fa parte di un esempio di codice trovato nel <xref:System.Web.Compilation.ClientBuildManager> Cenni preliminari sulla classe. Nell'esempio, un <xref:System.Web.Compilation.ClientBuildManagerParameter> oggetto viene creato e impostato i relativi valori. L'assembly risultante avrà un nome sicuro in base al file di chiave specificato e verrà precompilazione <xref:System.Web.Compilation.PrecompilationFlags> valori.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExcludedVirtualPaths : System.Collections.Generic.List&lt;string&gt;" Usage="System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i percorsi virtuali esclusi.</summary>
        <value>I percorsi virtuali esclusi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.PrecompilationFlags : System.Web.Compilation.PrecompilationFlags with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i flag che determinano il comportamento della precompilazione.</summary>
        <value>Enumerazione <see cref="T:System.Web.Compilation.PrecompilationFlags" /> per una compilazione client.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> proprietà determina come verrà compilato l'assembly. Ad esempio, è possibile impostare <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> al <xref:System.Web.Compilation.PrecompilationFlags.Clean> ricompilare qualsiasi componente compilato in precedenza, o impostarla su <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> per consentire l'assembly risultante per sovrascrivere tutti i componenti nella directory di destinazione. Il <xref:System.Web.Compilation.PrecompilationFlags> enumeratore ha un <xref:System.FlagsAttribute> attributo che consente una combinazione bit per bit dei valori dei membri. Il <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> proprietà può contenere più di un valore dal <xref:System.Web.Compilation.PrecompilationFlags> enumerazione per specificare una combinazione di comportamenti di precompilazione.  
  
   
  
## Examples  
 Esempio di codice seguente fa parte di un esempio di codice trovato nel <xref:System.Web.Compilation.ClientBuildManager> Cenni preliminari sulla classe. Nell'esempio, un <xref:System.Web.Compilation.ClientBuildManagerParameter> oggetto viene creato e impostato i relativi valori. L'assembly risultante avrà un nome sicuro in base al file di chiave specificato e verrà precompilazione <xref:System.Web.Compilation.PrecompilationFlags> valori.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Precompilazione del sito Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyContainer : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il contenitore di chiavi utilizzato durante la compilazione.</summary>
        <value>Classe <see cref="T:System.String" /> del valore per il contenitore di chiavi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entrambi i <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> proprietà o il <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> proprietà viene assegnata un valore per creare un assembly con nome sicuro. Entrambi i valori non sono necessario impostare per creare un assembly con nome sicuro.  
  
   
  
## Examples  
 Esempio di codice seguente è simile all'esempio di codice trovato nel <xref:System.Web.Compilation.ClientBuildManager> Panoramica di classi, ad eccezione del fatto che l'assembly risultante avrà un nome sicuro in base al contenitore di chiavi specificato. La precompilazione verrà fornito <xref:System.Web.Compilation.PrecompilationFlags> valori.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Precompilazione del sito Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f3022b39-f17f-48c1-b067-025eab0ce8bc">Importazione ed esportazione protetti contenitori di chiavi RSA di configurazione</related>
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyFile : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il file di chiave utilizzato durante la compilazione.</summary>
        <value>Classe <see cref="T:System.String" /> del valore per il file di chiave.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entrambi i <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> proprietà o il <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> proprietà viene assegnata un valore per creare un assembly con nome sicuro. Entrambi i valori non sono necessario impostare per creare un assembly con nome sicuro.  
  
   
  
## Examples  
 Esempio di codice seguente fa parte di un esempio di codice trovato nel <xref:System.Web.Compilation.ClientBuildManager> Cenni preliminari sulla classe. Nell'esempio, un <xref:System.Web.Compilation.ClientBuildManagerParameter> oggetto viene creato e impostato i relativi valori. L'assembly risultante avrà un nome sicuro in base al file di chiave specificato e verrà precompilazione <xref:System.Web.Compilation.PrecompilationFlags> valori.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Precompilazione del sito Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/ffbf6d9e-4a88-4a8a-9645-4ce0ee1ee5f9">Creazione e utilizzo degli assembly con nome sicuro</related>
      </Docs>
    </Member>
  </Members>
</Type>