<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="668c5e9b7f23c5df7df6c74748352d9749118947" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51901825" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definisce un set di proprietà e metodi per la generazione di codice sorgente all'interno dell'ambiente di compilazione ASP.NET. Questa classe è astratta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzi di ambiente di compilazione ASP.NET <xref:System.Web.Compilation.BuildProvider> oggetti per generare codice sorgente per diversi tipi di file all'interno di un'applicazione. Le classi derivate da <xref:System.Web.Compilation.BuildProvider> prevalentemente forniscono il codice sorgente per i file, le pagine Web, risorse e altri elementi personalizzati.  
  
 In genere, non si crea un'istanza di <xref:System.Web.Compilation.BuildProvider> direttamente alla classe. È invece necessario implementare una classe che deriva da <xref:System.Web.Compilation.BuildProvider>e configurare il <xref:System.Web.Compilation.BuildProvider> ambiente di compilazione di implementazione per l'utilizzo all'interno di ASP.NET.  
  
 Le istanze del <xref:System.Web.Compilation.BuildProvider> classe vengono utilizzate con <xref:System.Web.Compilation.AssemblyBuilder> oggetti per compilare uno o più file in un assembly compilato. Oggetto <xref:System.Web.Compilation.BuildProvider> istanza genera codice sorgente nella lingua appropriata per i singoli file e le <xref:System.Web.Compilation.AssemblyBuilder> oggetto combina il codice sorgente reso disponibile da ogni <xref:System.Web.Compilation.BuildProvider> istanza in un unico assembly.  
  
 L'ambiente di compilazione ASP.NET Usa istanze del <xref:System.Web.Compilation.BuildProvider> classe per la creazione di file all'interno di un'applicazione. Il <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> proprietà del <xref:System.Web.Compilation.BuildProvider> classe indica il percorso del file da compilare. L'estensione del file di ogni file all'interno di un'applicazione viene eseguito il mapping a un provider di compilazione corrispondente. ASP.NET ambiente di compilazione Inizializza un <xref:System.Web.Compilation.BuildProvider> dell'istanza per ogni file in base all'estensione di file e Usa il <xref:System.Web.Compilation.BuildProvider> metodi per generare codice sorgente per il file. Viene passato di compilazione ASP.NET un' <xref:System.Web.Compilation.AssemblyBuilder> oggetto in base al linguaggio preferito del compilatore e il contesto del file dal <xref:System.Web.Compilation.BuildProvider> metodi quando si compila un assembly da uno o più file, in modo che il <xref:System.Web.Compilation.BuildProvider> istanza possa fornire codice sorgente per il rispettivo file di assembly globale.  
  
 Per definire le azioni di compilazione personalizzato per un tipo di file all'interno di un'applicazione ASP.NET, è necessario derivare una classe dalla classe <xref:System.Web.Compilation.BuildProvider>, implementare i membri all'interno della classe derivata per la creazione del tipo di file e configurare il provider di compilazione per l'estensione di file corrispondente all'interno del file di configurazione dell'applicazione.  
  
 La specifica l'estensione di file di file supportati, e se il provider di compilazione supporta i file di codice, file Web, i file di risorse o tutti i file. Usare il `type` attributo per specificare il nome completo del tipo di implementazione del provider di compilazione. Usare il <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> classe per specificare se il provider di compilazione si applica ai file nella directory App_Code, ai file in una directory del contenuto Web, le risorse locali o globali a o a tutti i file. Usare la `extension` attributo per specificare l'estensione del file usato per identificare i file che il <xref:System.Web.Compilation.BuildProvider> supportate dalla classe. Usare il <xref:System.Web.Configuration.BuildProviderCollection> classe per esaminare i provider di compilazione in un file di configurazione. Per altre informazioni sulla configurazione di un provider di compilazione, vedere [elemento buildProviders per compilation (Schema delle impostazioni ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 Per implementare un provider di compilazione che genera codice sorgente per un tipo di file personalizzati, derivare una classe dalla classe <xref:System.Web.Compilation.BuildProvider>ed eseguire l'override di <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> metodo per generare codice sorgente per il tipo di file supportati. Il codice sorgente generato viene aggiunto per il <xref:System.Web.Compilation.AssemblyBuilder> oggetto sotto forma di un grafo CodeDOM, o come contenuto che rappresenta un file di codice di origine fisico. Se il provider di compilazione richiede un linguaggio di programmazione specifico, eseguire l'override di <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> proprietà per restituire un <xref:System.Web.Compilation.CompilerType> oggetto per il linguaggio di programmazione supportato. Se il provider di compilazione non richiede un linguaggio di programmazione specifico, non esegue l'override di <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> proprietà; Usa l'implementazione della classe base, che indica che il provider di compilazione può utilizzare qualsiasi linguaggio .NET Framework, ad esempio Visual Basic o c#.  
  
 Per implementare un provider di compilazione che genera il codice sorgente per il contenuto Web, derivare una classe dalla classe <xref:System.Web.Compilation.BuildProvider> ed eseguire l'override di <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> per restituire il <xref:System.Type> per la classe generata da <xref:System.Web.Compilation.BuildProvider>. Eseguire l'override di <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> metodo per generare codice sorgente per il tipo fornito dal file supportato.  
  
> [!NOTE]
>  Aggiunta di un oggetto personalizzato <xref:System.Web.Compilation.BuildProvider> classe nel file Web. config funziona in un sito Web ASP.NET, ma non in un progetto di applicazione Web ASP.NET. In un progetto di applicazione Web, il codice generato dal <xref:System.Web.Compilation.BuildProvider> classe non può essere incluso nell'applicazione. Per altre informazioni, vedere [Cenni preliminari sulla precompilazione ASP.NET Web Application progetto](https://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).  
  
   
  
## Examples  
 L'esempio di codice seguente illustra un'implementazione del provider di compilazione semplice, che eredita dalla classe astratta <xref:System.Web.Compilation.BuildProvider> classe di base. Il provider di compilazione esegue l'override di <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, e <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> membri della classe di base. L'esempio non include l'implementazione del `SampleClassGenerator` classe. Per altre informazioni, vedere il <xref:System.CodeDom.CodeCompileUnit> Cenni preliminari sulla classe.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Compilation.BuildProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché il <xref:System.Web.Compilation.BuildProvider> classe è astratta, non è possibile creare un'istanza di <xref:System.Web.Compilation.BuildProvider> direttamente usando il costruttore.  
  
 Quando si deriva dal <xref:System.Web.Compilation.BuildProvider> classe, eseguire l'override del costruttore per implementare le azioni di inizializzazione personalizzato per l'implementazione di provider di compilazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta il tipo di compilatore utilizzato da un provider di compilazione per la generazione di codice sorgente per un tipo di file personalizzato.</summary>
        <value>
          <see cref="T:System.Web.Compilation.CompilerType" /> in sola lettura, che rappresenta il generatore di codice, il compilatore di codice e le impostazioni del compilatore utilizzate per compilare codice sorgente per il percorso virtuale. La classe base restituisce <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> proprietà per specificare le impostazioni per la compilazione di codice sorgente per un'implementazione di <xref:System.Web.Compilation.BuildProvider>. Il <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> è di proprietà `null` se il provider di compilazione non richiede un linguaggio di codice specifico per la generazione e compilazione di codice sorgente.  
  
 Per impostare il valore per un <xref:System.Web.Compilation.CompilerType> oggetto all'interno di un'implementazione del provider di compilazione, usare il <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> o <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> (metodo).  
  
 Il <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> proprietà specifica il <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione che consente di generare e compilare il codice sorgente per un provider di compilazione. Il <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> proprietà definisce le impostazioni che consentono di compilare il codice sorgente in un assembly.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra un'implementazione del provider di compilazione semplice, che eredita dalla classe astratta <xref:System.Web.Compilation.BuildProvider> classe di base. Il provider di compilazione esegue l'override di <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, e <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> membri della classe di base.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">Compilatore di assembly che fa riferimento al codice sorgente generato dal provider di compilazione.</param>
        <summary>Genera codice sorgente per il percorso virtuale del provider di compilazione e aggiunge tale codice al generatore di assembly specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per implementare un provider di compilazione che genera codice sorgente per un tipo di file personalizzati, derivare una classe dal <xref:System.Web.Compilation.BuildProvider> classe ed eseguire l'override di <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> metodo per generare codice sorgente per il tipo di file supportati.  
  
 In genere, un provider di compilazione <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> letture di implementazione di <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> analizza il contenuto, proprietà e aggiunge il codice sorgente generato specificato <xref:System.Web.Compilation.AssemblyBuilder> oggetto. È possibile contribuire a codice sorgente per l'assembly sotto forma di un <xref:System.IO.TextWriter> oggetto o un grafico CodeDOM. Per aggiungere il codice sorgente per l'assembly tramite un <xref:System.IO.TextWriter> dell'oggetto, usare il <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> (metodo). Per aggiungere il codice sorgente in un grafo CodeDOM per l'assembly, usare il <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> (metodo).  
  
 Se il provider di compilazione genera codice sorgente in un linguaggio di programmazione specifico, è necessario eseguire l'override di <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> proprietà per restituire un <xref:System.Web.Compilation.CompilerType> oggetto per il linguaggio di programmazione supportato.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra un'implementazione del provider di compilazione semplice, che eredita dalla classe astratta <xref:System.Web.Compilation.BuildProvider> classe di base. Il provider di compilazione esegue l'override di <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, e <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> membri della classe di base.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generazione e compilazione dinamica di codice sorgente</related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">Quando termina, questo metodo contiene un dizionario che contiene tutti i numeri di riga associati e pragma di linea del codice sorgente. Questo parametro viene passato non inizializzato.</param>
        <summary>Rappresenta il contenitore per il grafico CodeDOM generato.</summary>
        <returns>Il contenitore per il grafico CodeDOM generato dall'istanza <see cref="T:System.Web.Compilation.BuildProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere utilizzato tramite il <xref:System.Web.Compilation.ClientBuildManager> classe per l'evidenziazione della sintassi e progettazione di supporto in Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Risultati della compilazione per il percorso virtuale del provider di compilazione.</param>
        <summary>Genera una stringa che deve essere resa persistente nell'assembly compilato.</summary>
        <returns>Stringa che deve essere mantenuta nell'ambiente di compilazione, altrimenti, <see langword="null" /> se l'istanza <see cref="T:System.Web.Compilation.BuildProvider" /> non implementa <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> metodo di un <xref:System.Web.Compilation.BuildManager> oggetto crea un'istanza di un provider di compilazione per un percorso di input virtuale, quindi chiama il <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> metodo sul <xref:System.Web.Compilation.BuildProvider> oggetto.  
  
 La base <xref:System.Web.Compilation.BuildProvider> classe restituisce `null` per il <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> metodo, che indica che <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> non implementato.  
  
 Alcune implementazioni del provider di compilazione possono implementare <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> anziché il <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> (metodo). Oggetto <xref:System.Web.Compilation.BuildProvider> oggetto utilizza in genere <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> per restituire un <xref:System.Type> oggetto per un percorso virtuale. Tuttavia, il <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> metodo può essere utilizzato per indicare che un <xref:System.Web.Compilation.BuildProvider> oggetto può generare più tipi da un percorso virtuale.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce le impostazioni del compilatore per il linguaggio predefinito nell'applicazione.</summary>
        <returns>
          <see cref="T:System.Web.Compilation.CompilerType" /> che rappresenta le impostazioni del compilatore per il linguaggio predefinito nell'applicazione. La classe base restituisce il compilatore predefinito in base al file di configurazione dell'applicazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> metodo da esaminare il tipo del compilatore predefinito per un provider di compilazione. Usare il <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> metodo per esaminare il tipo del compilatore configurato in un provider di compilazione per un nome di linguaggio specifici.  
  
 La base <xref:System.Web.Compilation.BuildProvider> classe determina il tipo del compilatore predefinito utilizzando il `defaultLanguage` valore nella sezione del file di configurazione dell'applicazione dell'attributo. Se è presente alcuna impostazione della lingua predefinita nella sezione della compilazione, il tipo del compilatore predefinito viene impostato utilizzando il <xref:Microsoft.VisualBasic.VBCodeProvider> provider del linguaggio.  
  
 Quando si deriva dal <xref:System.Web.Compilation.BuildProvider> (classe), è possibile usare <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> per impostare il <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> proprietà all'interno dell'implementazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">Nome di linguaggio di codice.</param>
        <summary>Restituisce le impostazioni del compilatore per il provider di compilazione in base al linguaggio specificato.</summary>
        <returns>
          <see cref="T:System.Web.Compilation.CompilerType" /> che rappresenta le impostazioni del compilatore per il provider di compilazione in base al linguaggio specificato. La classe base restituisce le impostazioni del compilatore predefinito per il linguaggio in base al file di configurazione dell'applicazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> metodo per esaminare il tipo del compilatore configurato nel provider di compilazione di un nome di linguaggio specifici. Usare il <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> metodo da esaminare il tipo del compilatore predefinito per un provider di compilazione.  
  
 La base <xref:System.Web.Compilation.BuildProvider> classe determina il tipo del compilatore predefinito utilizzando il <xref:System.Web.Configuration.Compiler> elementi nel <xref:System.Web.Configuration.CompilationSection.Compilers%2A> proprietà del <xref:System.Web.Configuration.CompilationSection> oggetto per il file di configurazione. Ciò equivale a esaminare gli elementi negli elementi e le sezioni del file di configurazione. Ad esempio, per il `language` valore VB, il metodo della classe base restituisce un <xref:System.Web.Compilation.CompilerType> oggetto che corrisponde alle impostazioni configurate per un'istanza di <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.  
  
 Quando si deriva dal <xref:System.Web.Compilation.BuildProvider> (classe), è possibile usare <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> per impostare il <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> valore della proprietà per il linguaggio supportato dall'implementazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="language" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Web.HttpException">
          <paramref name="language" /> non corrisponde a un compilatore configurato per il provider di compilazione.</exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Risultati della compilazione per il percorso virtuale del provider di compilazione.</param>
        <summary>Restituisce un tipo generato dal provider di compilazione dal percorso virtuale.</summary>
        <returns>Il tipo che viene generato dal provider di compilazione per il percorso virtuale. La classe base restituisce <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per implementare un provider di compilazione che genera il codice sorgente per il contenuto Web, ad esempio file con estensione aspx, derivare una classe dal <xref:System.Web.Compilation.BuildProvider> classe ed eseguire l'override di <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> metodo per restituire il tipo generato dal provider di compilazione.  
  
 Il sistema di compilazione ASP.NET compila i file per ogni provider di compilazione e genera una <xref:System.CodeDom.Compiler.CompilerResults> oggetto, che viene passato per il <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> (metodo). In genere, un provider di compilazione <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> implementazione Usa il <xref:System.Reflection.Assembly.GetType%2A> metodo sulle <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> proprietà dell'input `results` per restituire il tipo specificato.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Risultati della compilazione per il percorso virtuale del provider di compilazione.</param>
        <summary>Restituisce un valore che indica le azioni necessarie quando viene generato un percorso virtuale.</summary>
        <returns>Valore di <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> che indica le azioni necessarie dopo la compilazione del percorso virtuale nell'ambiente di compilazione ASP.NET.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> metodo viene utilizzato dall'ambiente di compilazione ASP.NET quando si usano istanze del <xref:System.Web.Compilation.BuildProvider> classe per compilare i file e caricare gli assembly compilati.  
  
 La base <xref:System.Web.Compilation.BuildProvider> classe metodo restituisce il <xref:System.Web.Compilation.BuildProviderResultFlags.Default> valore del campo, che indica che non è richiesta alcuna azione speciale quando viene compilato il percorso virtuale.  
  
 Quando si deriva dal <xref:System.Web.Compilation.BuildProvider> (classe), è possibile implementare il <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> per restituire un diverso <xref:System.Web.Compilation.BuildProviderResultFlags> valore per il tipo di file personalizzato o un percorso virtuale. Ad esempio, se una ricompilazione del percorso virtuale richiede che la contiene <xref:System.AppDomain> oggetto ricaricare, è possibile restituire le <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> valore dell'enumerazione dal <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Apre un visualizzatore di testo per la lettura da un percorso virtuale.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Apre un visualizzatore di testo per la lettura dal percorso virtuale dell'oggetto corrente del provider di compilazione.</summary>
        <returns>
          <see cref="T:System.IO.TextReader" /> aperto che può essere utilizzato per leggere il contenuto della proprietà <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.IO.TextReader.Read%2A> metodo sull'oggetto restituito <xref:System.IO.TextReader> per leggere il contenuto dell'oggetto il <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> proprietà per un <xref:System.Web.Compilation.BuildProvider> oggetto.  
  
 Dopo la chiamata di <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> metodo, è necessario usare il <xref:System.IO.TextReader.Close%2A> metodo per chiudere il <xref:System.IO.TextReader> dell'oggetto e liberare le risorse di sistema associate.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Percorso virtuale da leggere.</param>
        <summary>Apre un visualizzatore di testo per la lettura dal percorso virtuale specificato.</summary>
        <returns>
          <see cref="T:System.IO.TextReader" /> aperto che può essere utilizzato per leggere il contenuto del percorso virtuale specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.IO.TextReader.Read%2A> metodo sull'oggetto restituito <xref:System.IO.TextReader> oggetto per leggere il contenuto del percorso virtuale.  
  
 Dopo la chiamata di <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> metodo, è necessario usare il <xref:System.IO.TextReader.Close%2A> metodo per chiudere il <xref:System.IO.TextReader> dell'oggetto e liberare le risorse di sistema associate.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Apre un flusso per la lettura da un percorso virtuale.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Apre un flusso per la lettura del percorso virtuale dell'oggetto corrente del provider di compilazione.</summary>
        <returns>
          <see cref="T:System.IO.Stream" /> aperto che può essere utilizzato per leggere il contenuto della proprietà <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.IO.Stream.Read%2A> metodo sull'oggetto restituito <xref:System.IO.Stream> oggetto per leggere il contenuto del percorso virtuale per il <xref:System.Web.Compilation.BuildProvider> oggetto.  
  
 Dopo la chiamata di <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> metodo, è necessario usare il <xref:System.IO.Stream.Close%2A> metodo per chiudere il <xref:System.IO.Stream> dell'oggetto e liberare le risorse di sistema associate.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Percorso virtuale da leggere.</param>
        <summary>Apre un flusso per la lettura da un percorso virtuale specificato.</summary>
        <returns>
          <see cref="T:System.IO.Stream" /> aperto che può essere utilizzato per leggere il contenuto del percorso virtuale specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.IO.Stream.Read%2A> metodo sull'oggetto restituito <xref:System.IO.Stream> oggetto per leggere il contenuto del percorso virtuale.  
  
 Dopo la chiamata di <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> metodo, è necessario usare il <xref:System.IO.Stream.Close%2A> metodo per chiudere il <xref:System.IO.Stream> dell'oggetto e liberare le risorse di sistema associate.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Risultati del compilatore.</param>
        <summary>Quando è sottoposto a override in una classe derivata, consente di rivedere i messaggi di errore del compilatore in modo da poterli modificarli per fornire ulteriori informazioni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere l'override di questo metodo in modo che sia possibile modificare gli errori del compilatore prima che vengano visualizzati per rendere più utili all'utente il testo dell'errore. Ciò è utile negli scenari in cui si conosce il contesto di determinati errori e può fornire informazioni per l'utente su come risolverli. Il messaggio di errore del compilatore originale viene in genere specifico di un costrutto di linguaggio particolare e potrebbe non indicare la causa effettiva o la soluzione in modo chiaro all'utente.  
  
 È possibile accedere gli errori usando il <xref:System.CodeDom.Compiler.CompilerResults> oggetto passato al metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta gli assembly da compilare con il codice sorgente generato dal provider di compilazione.</summary>
        <value>Insieme di assembly in sola lettura a cui il codice sorgente generato dal provider di compilazione può fare riferimento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ambiente di compilazione inizializza la raccolta di assembly disponibili per riferimenti dal provider di compilazione. Il codice sorgente generato da un provider di compilazione è possibile usare i tipi pubblici negli assembly di riferimento. La raccolta di assembly di riferimento è costituito da altri assembly compilati nell'applicazione ASP.NET e assembly elencati nell'elemento nel file di configurazione.  
  
 Se il provider di compilazione genera codice sorgente che fa riferimento ad assembly aggiuntivi, il provider di compilazione aggiunge ulteriori assembly usando il <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> (metodo). L'ambiente di compilazione ASP.NET risolve i tipi esterni durante la compilazione di assembly utilizzando entrambi gli assembly di riferimento aggiunti da compilare i provider e l'insieme predefinito di assembly disponibili per riferimenti.  
  
 Il <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> raccolta non contiene gli assembly che vengono aggiunti come riferimento da altri provider di compilazione tramite la <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
        <Parameter Name="providerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extension">L'estensione del nome file per il provider di compilazione.</param>
        <param name="providerType">Classe del provider di compilazione.</param>
        <summary>Registra un provider di compilazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questo metodo per registrare il provider di compilazione invece di definirli nel file Web. config. Per altre informazioni sui provider di compilazione, vedere la <xref:System.Web.Compilation.BuildProvider> classe e [elemento buildProviders per compilation (Schema delle impostazioni ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta il file che deve essere compilato da questa implementazione del provider di compilazione.</summary>
        <value>Stringa in sola lettura che specifica il percorso virtuale di un file che deve essere compilato da questo provider di compilazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il percorso virtuale di un <xref:System.Web.Compilation.BuildProvider> oggetto è il percorso del file in fase di compilazione dal provider di compilazione. Ad esempio, se è stata configurata una classe personalizzata <xref:System.Web.Compilation.BuildProvider> classe per compilare tutti i file nel sito Web con l'estensione personalizzata abc, se il sito Web è denominato WebSite1 e il sito Web contiene un file denominato example. abc, il <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> proprietà contiene il valore `/WebSite1/Example.abc`.  
  
 L'estensione del file di ogni file all'interno dell'applicazione determina il tipo di file e il provider di compilazione corrispondente per il tipo di file. ASP.NET ambiente di compilazione Inizializza un <xref:System.Web.Compilation.BuildProvider> dell'oggetto per ogni file in base al tipo di file e Usa il <xref:System.Web.Compilation.BuildProvider> metodi per generare codice sorgente per ogni file.  
  
 Per altre informazioni sulla configurazione di un provider di compilazione, vedere [elemento buildProviders per compilation (Schema delle impostazioni ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta una raccolta di percorsi virtuali da compilare prima della generazione del codice da parte del provider di compilazione.</summary>
        <value>Insieme di stringhe in sola lettura che rappresenta i percorsi virtuali da cui dipende questa istanza del provider di compilazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> proprietà è una raccolta di percorsi virtuali che devono essere compilate prima di <xref:System.Web.Compilation.BuildProvider> istanza genera codice sorgente. Gli assembly da percorsi virtuali disponibili nella <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> vengono aggiunti come riferimenti alla compilazione per il <xref:System.Web.Compilation.BuildProvider> istanza.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>