<Type Name="TaskFactory" FullName="System.Threading.Tasks.TaskFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="402ad4b1368c41a518e7e38c17b5d7c52d4ffc48" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51868285" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskFactory" />
  <TypeSignature Language="F#" Value="type TaskFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3b4ef-101">Fornisce supporto per la creazione e la pianificazione di oggetti <see cref="T:System.Threading.Tasks.Task" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b4ef-101">Provides support for creating and scheduling <see cref="T:System.Threading.Tasks.Task" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-102">.NET Framework fornisce due factory per la creazione e pianificazione delle attività:</span><span class="sxs-lookup"><span data-stu-id="3b4ef-102">The .NET Framework provides two factories for creating and scheduling tasks:</span></span>  
  
-   <span data-ttu-id="3b4ef-103">Il <xref:System.Threading.Tasks.TaskFactory> classe, che consente di creare <xref:System.Threading.Tasks.Task> e <xref:System.Threading.Tasks.Task%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-103">The <xref:System.Threading.Tasks.TaskFactory> class, which creates <xref:System.Threading.Tasks.Task> and <xref:System.Threading.Tasks.Task%601> objects.</span></span> <span data-ttu-id="3b4ef-104">È possibile chiamare overload di questo metodo per creare ed eseguire un'attività che richiede argomenti non predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-104">You can call the overloads of this method to create and execute a task that requires non-default arguments.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="3b4ef-105">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], il <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> metodo fornisce il modo più semplice per creare un'attività con impostazione predefinita i valori di configurazione e avvia immediatamente.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-105">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method provides the easiest way to create a task with default configuration values and start it immediately.</span></span>  
  
-   <span data-ttu-id="3b4ef-106">Il <xref:System.Threading.Tasks.TaskFactory%601> classe, che consente di creare <xref:System.Threading.Tasks.Task%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-106">The <xref:System.Threading.Tasks.TaskFactory%601> class, which creates <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
 <span data-ttu-id="3b4ef-107">Il <xref:System.Threading.Tasks.TaskFactory> classe consente di eseguire le operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="3b4ef-107">The <xref:System.Threading.Tasks.TaskFactory> class allows you to do the following:</span></span>  
  
-   <span data-ttu-id="3b4ef-108">Creare un'attività e avviare immediatamente chiamando il <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="3b4ef-108">Create a task and start it immediately by calling the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> method.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="3b4ef-109">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], il <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> metodo fornisce il modo più semplice per creare un'attività con impostazione predefinita i valori di configurazione e avvia immediatamente.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-109">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method provides the easiest way to create a task with default configuration values and start it immediately.</span></span>  
  
-   <span data-ttu-id="3b4ef-110">Creare un'attività che viene avviato quando una qualsiasi delle attività in una matrice è stata completata chiamando il <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="3b4ef-110">Create a task that starts when any one of the tasks in an array has completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> method.</span></span>  
  
-   <span data-ttu-id="3b4ef-111">Creare un'attività che viene avviata al completamento di tutte le attività in una matrice mediante la chiamata di <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="3b4ef-111">Create a task that starts when all the tasks in an array have completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method.</span></span>  
  
 <span data-ttu-id="3b4ef-112">Il metodo statico <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> proprietà restituisce un valore predefinito <xref:System.Threading.Tasks.TaskFactory%601> oggetto.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-112">The static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property returns a default <xref:System.Threading.Tasks.TaskFactory%601> object.</span></span> <span data-ttu-id="3b4ef-113">È inoltre possibile chiamare uno del <xref:System.Threading.Tasks.TaskFactory> classe costruttori per configurare il <xref:System.Threading.Tasks.Task> oggetti che il <xref:System.Threading.Tasks.TaskFactory> classe crea.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-113">You can also call one of the <xref:System.Threading.Tasks.TaskFactory> class constructors to configure the <xref:System.Threading.Tasks.Task> objects that  the <xref:System.Threading.Tasks.TaskFactory> class creates.</span></span> <span data-ttu-id="3b4ef-114">L'esempio seguente configura un nuovo <xref:System.Threading.Tasks.TaskFactory> oggetto da creare attività che hanno un token di annullamento specificato, le opzioni di creazione di attività, le opzioni di continuazione e un'utilità di pianificazione di attività personalizzata.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-114">The following example configures a new <xref:System.Threading.Tasks.TaskFactory> object to create tasks that have a specified cancellation token, task creation options, continuation options, and a customized task scheduler.</span></span>  
  
 [!code-csharp[TPL_Factories#1](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_factories/cs/program.cs#1)]
 [!code-vb[TPL_Factories#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_factories/vb/factories_vb.vb#1)]  
  
 <span data-ttu-id="3b4ef-115">Nella maggior parte dei casi, non è necessario creare un'istanza di un nuovo <xref:System.Threading.Tasks.TaskFactory> istanza.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-115">In most cases, you do not have to instantiate a new <xref:System.Threading.Tasks.TaskFactory> instance.</span></span> <span data-ttu-id="3b4ef-116">In alternativa, è possibile usare il <xref:System.Threading.Tasks.Task.Factory%2A?displayProperty=nameWithType> proprietà, che restituisce un oggetto factory che Usa valori predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-116">Instead, you can use the <xref:System.Threading.Tasks.Task.Factory%2A?displayProperty=nameWithType> property, which returns a factory object that uses default values.</span></span> <span data-ttu-id="3b4ef-117">È quindi possibile chiamarne i metodi per avviare nuove attività o definire le continuazioni di attività.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-117">You can then call its methods to start new tasks or define task continuations.</span></span> <span data-ttu-id="3b4ef-118">Per informazioni generali, vedere l'esempio.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-118">For an illustration, see the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b4ef-119">L'esempio seguente usa il metodo statico <xref:System.Threading.Tasks.Task.Factory%2A> proprietà effettuare due chiamate al <xref:System.Threading.Tasks.TaskFactory.StartNew%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="3b4ef-119">The following example uses the static <xref:System.Threading.Tasks.Task.Factory%2A> property to make two calls to the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3b4ef-120">Il primo popola una matrice con i nomi dei file nella directory di documenti dell'utente, mentre il secondo popola una matrice con i nomi delle sottodirectory della directory documenti dell'utente.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-120">The first populates an array with the names of files in the user's MyDocuments directory, while the second populates an array with the names of subdirectories of the user's MyDocuments directory.</span></span> <span data-ttu-id="3b4ef-121">Chiama quindi il <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> (metodo), che visualizza informazioni sul numero di file e directory in due matrici dopo le prime due attività ha completato l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-121">It then calls the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> method, which displays information about the number of files and directories in the two arrays after the first two tasks have completed execution.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.Factory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.factory/cs/factory1.cs#1)]
 [!code-vb[System.Threading.Tasks.Task.Factory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.factory/vb/factory1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="3b4ef-122">Tutti i membri pubblici e protetti di <see cref="T:System.Threading.Tasks.TaskFactory" /> sono thread-safe e possono essere utilizzati contemporaneamente da più thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b4ef-122">All public and protected members of <see cref="T:System.Threading.Tasks.TaskFactory" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
      <span data-ttu-id="3b4ef-123">Task Parallel Library (TPL)</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b4ef-123">Task Parallel Library (TPL)</span>
      </span>
    </related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Samples-for-Parallel-b4b76364">
      <span data-ttu-id="3b4ef-124">Esempi di programmazione parallela con .NET Framework</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b4ef-124">Samples for Parallel Programming with the .NET Framework</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b4ef-125">Inizializza una nuova istanza della classe <see cref="T:System.Threading.Tasks.TaskFactory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-125">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskFactory" /> class.</span>
          </span>
        </summary>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-126">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-126">Task Parallel Library (TPL)</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b4ef-127">Inizializza un'istanza di <see cref="T:System.Threading.Tasks.TaskFactory" /> con la configurazione predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-127">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory" /> instance with the default configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-128">Questo costruttore crea un <xref:System.Threading.Tasks.TaskFactory> istanza con una configurazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-128">This constructor creates a <xref:System.Threading.Tasks.TaskFactory> instance with a default configuration.</span></span> <span data-ttu-id="3b4ef-129">Il <xref:System.Threading.Tasks.TaskCreationOptions> proprietà viene inizializzata <xref:System.Threading.Tasks.TaskCreationOptions.None>, il <xref:System.Threading.Tasks.TaskContinuationOptions> proprietà viene inizializzata su <xref:System.Threading.Tasks.TaskContinuationOptions.None>e il <xref:System.Threading.Tasks.TaskScheduler> proprietà viene inizializzata all'utilità di pianificazione corrente (vedere <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="3b4ef-129">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-130">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-130">Task Parallel Library (TPL)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory : System.Threading.CancellationToken -&gt; System.Threading.Tasks.TaskFactory" Usage="new System.Threading.Tasks.TaskFactory cancellationToken" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-131">Oggetto <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> che verrà assegnato alle attività create da questo oggetto <see cref="T:System.Threading.Tasks.TaskFactory" /> a meno che durante la chiamata dei metodi factory non venga specificato in modo esplicito un altro oggetto CancellationToken.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-131">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another CancellationToken is explicitly specified while calling the factory methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-132">Inizializza un'istanza di <see cref="T:System.Threading.Tasks.TaskFactory" /> con la configurazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-132">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-133">Questo costruttore crea un <xref:System.Threading.Tasks.TaskFactory> istanza con una configurazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-133">This constructor creates a <xref:System.Threading.Tasks.TaskFactory> instance with a default configuration.</span></span> <span data-ttu-id="3b4ef-134">Il <xref:System.Threading.Tasks.TaskCreationOptions> proprietà viene inizializzata <xref:System.Threading.Tasks.TaskCreationOptions.None>, il <xref:System.Threading.Tasks.TaskContinuationOptions> proprietà viene inizializzata su <xref:System.Threading.Tasks.TaskContinuationOptions.None>e il <xref:System.Threading.Tasks.TaskScheduler> proprietà viene inizializzata all'utilità di pianificazione corrente (vedere <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="3b4ef-134">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-135">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-135">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="3b4ef-136">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-136">Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scheduler As TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory : System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.TaskFactory" Usage="new System.Threading.Tasks.TaskFactory scheduler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-137">Oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> da usare per pianificare le attività create con questo oggetto TaskFactory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-137">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to use to schedule any tasks created with this TaskFactory.</span>
          </span>
          <span data-ttu-id="3b4ef-138">Un valore Null indica che occorre usare l'oggetto TaskScheduler corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-138">A null value indicates that the current TaskScheduler should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-139">Inizializza un'istanza di <see cref="T:System.Threading.Tasks.TaskFactory" /> con la configurazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-139">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-140">Con questo costruttore, il <xref:System.Threading.Tasks.TaskCreationOptions> proprietà viene inizializzata <xref:System.Threading.Tasks.TaskCreationOptions.None>, il <xref:System.Threading.Tasks.TaskContinuationOptions> proprietà viene inizializzata su <xref:System.Threading.Tasks.TaskContinuationOptions.None>e il <xref:System.Threading.Tasks.TaskScheduler> proprietà viene inizializzata su `scheduler`, a meno che non è null, nel qual caso il proprietà viene inizializzata all'utilità di pianificazione corrente (vedere <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="3b4ef-140">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's null, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-141">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-141">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-142">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-142">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creationOptions As TaskCreationOptions, continuationOptions As TaskContinuationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory : System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.TaskFactory" Usage="new System.Threading.Tasks.TaskFactory (creationOptions, continuationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-143">Oggetto <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> predefinito da usare quando si creano attività con questo oggetto TaskFactory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-143">The default <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> to use when creating tasks with this TaskFactory.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-144">Oggetto <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> predefinito da usare quando si creano attività di continuazione con questo oggetto TaskFactory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-144">The default <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> to use when creating continuation tasks with this TaskFactory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-145">Inizializza un'istanza di <see cref="T:System.Threading.Tasks.TaskFactory" /> con la configurazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-145">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-146">Con questo costruttore, il <xref:System.Threading.Tasks.TaskCreationOptions> proprietà viene inizializzata `creationOptions`, il <xref:System.Threading.Tasks.TaskContinuationOptions> proprietà viene inizializzata su `continuationOptions`e il <xref:System.Threading.Tasks.TaskScheduler> proprietà viene inizializzata all'utilità di pianificazione corrente (vedere <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="3b4ef-146">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-147">L'argomento <paramref name="creationOptions" /> specifica un valore <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-147">The <paramref name="creationOptions" /> argument specifies an invalid <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> value.</span>
          </span>
          <span data-ttu-id="3b4ef-148">Per altre informazioni, vedere le note su <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-148">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          </span>
          <span data-ttu-id="3b4ef-149">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-149">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-150">L'argomento <paramref name="continuationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-150">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-151">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-151">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-152">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-152">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory : System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.TaskFactory" Usage="new System.Threading.Tasks.TaskFactory (cancellationToken, creationOptions, continuationOptions, scheduler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-153">Oggetto <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> predefinito che verrà assegnato alle attività create da questo oggetto <see cref="T:System.Threading.Tasks.TaskFactory" /> a meno che durante la chiamata dei metodi factory non venga specificato in modo esplicito un altro oggetto CancellationToken.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-153">The default <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another CancellationToken is explicitly specified while calling the factory methods.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-154">Oggetto <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> predefinito da usare quando si creano attività con questo oggetto TaskFactory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-154">The default <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> to use when creating tasks with this TaskFactory.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-155">Oggetto <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> predefinito da usare quando si creano attività di continuazione con questo oggetto TaskFactory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-155">The default <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> to use when creating continuation tasks with this TaskFactory.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-156">Oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> predefinito da usare per pianificare le attività create con questo oggetto TaskFactory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-156">The default <see cref="T:System.Threading.Tasks.TaskScheduler" /> to use to schedule any Tasks created with this TaskFactory.</span>
          </span>
          <span data-ttu-id="3b4ef-157">Un valore Null indica che occorre usare TaskScheduler.Current.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-157">A null value indicates that TaskScheduler.Current should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-158">Inizializza un'istanza di <see cref="T:System.Threading.Tasks.TaskFactory" /> con la configurazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-158">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-159">Con questo costruttore, il <xref:System.Threading.Tasks.TaskCreationOptions> proprietà viene inizializzata `creationOptions`, il <xref:System.Threading.Tasks.TaskContinuationOptions> proprietà viene inizializzata su `continuationOptions`e il <xref:System.Threading.Tasks.TaskScheduler> proprietà viene inizializzata su `scheduler`, a meno che non è null, nel qual caso il proprietà viene inizializzata all'utilità di pianificazione corrente (vedere <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="3b4ef-159">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's null, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-160">L'argomento <paramref name="creationOptions" /> specifica un valore <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-160">The <paramref name="creationOptions" /> argument specifies an invalid <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> value.</span>
          </span>
          <span data-ttu-id="3b4ef-161">Per altre informazioni, vedere le note su <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-161">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          </span>
          <span data-ttu-id="3b4ef-162">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-162">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-163">L'argomento <paramref name="continuationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-163">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-164">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-164">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-165">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-165">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken" Usage="System.Threading.Tasks.TaskFactory.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b4ef-166">Ottiene il token di annullamento predefinito per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-166">Gets the default cancellation token for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b4ef-167">Token di annullamento attività predefinito per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-167">The default task cancellation token for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-168">Questa proprietà restituisce il valore predefinito <xref:System.Threading.CancellationToken> che verrà assegnato a tutte le attività create da questa factory, a meno che un altro <xref:System.Threading.CancellationToken> valore è specificato in modo esplicito durante la chiamata ai metodi factory.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-168">This property returns the default <xref:System.Threading.CancellationToken> that will be assigned to all tasks created by this factory, unless another <xref:System.Threading.CancellationToken> value is explicitly specified during the call to the factory methods.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-169">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-169">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-170">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-170">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-171">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-171">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinuationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskContinuationOptions ContinuationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskContinuationOptions ContinuationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory.ContinuationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContinuationOptions As TaskContinuationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskContinuationOptions ContinuationOptions { System::Threading::Tasks::TaskContinuationOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.ContinuationOptions : System.Threading.Tasks.TaskContinuationOptions" Usage="System.Threading.Tasks.TaskFactory.ContinuationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b4ef-172">Ottiene le opzioni di continuazione attività predefinite per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-172">Gets the default task continuation options for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b4ef-173">Opzioni di continuazione attività predefinite per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-173">The default task continuation options for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-174">Il valore della proprietà consente di creare tutte le attività di continuazione, a meno che non le altre opzioni vengono specificate esplicitamente durante le chiamate ai metodi di questa factory.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-174">The property value is used to create all continuation tasks, unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-175">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-175">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-176">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-176">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAll">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b4ef-177">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-177">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Samples-for-Parallel-b4b76364">
          <span data-ttu-id="3b4ef-178">Esempi di programmazione parallela con .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-178">Samples for Parallel Programming with the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task[]&gt; continuationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task[]&gt; continuationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationAction As Action(Of Task())) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^&gt; ^ continuationAction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Action&lt;System.Threading.Tasks.Task[]&gt; -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAll (tasks, continuationAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task[]&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="3b4ef-179">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-179">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-180">Delegato dell'azione da eseguire quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-180">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-181">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-181">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-182">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-182">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-183">Il <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> metodo viene eseguito il `continuationAction` delegato quando tutte le attività nella `tasks` matrice completati, indipendentemente dal relativo stato di completamento.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-183">The <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method executes the `continuationAction` delegate when all tasks in the `tasks` array have completed, regardless of their completion status.</span></span>  
  
 <span data-ttu-id="3b4ef-184">Le eccezioni generate dalle attività nel `tasks` array non sono disponibili per l'attività di continuazione attraverso Gestione strutturata delle eccezioni.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-184">Exceptions thrown by tasks in the `tasks` array are not available to the continuation task through structured exception handling.</span></span> <span data-ttu-id="3b4ef-185">È possibile determinare le eccezioni che sono state generate esaminando il <xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=nameWithType> proprietà di ogni attività nel `tasks` matrice.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-185">You can determine which exceptions were thrown by examining the <xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=nameWithType> property of each task in the `tasks` array.</span></span> <span data-ttu-id="3b4ef-186">Da usare per gestire le eccezioni generate dalle attività di gestione strutturata delle eccezioni di `tasks` matrice, chiamare il <xref:System.Threading.Tasks.Task.WaitAll%28System.Threading.Tasks.Task%5B%5D%29?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="3b4ef-186">To use structured exception handling to handle exceptions thrown by tasks in the `tasks` array, call the <xref:System.Threading.Tasks.Task.WaitAll%28System.Threading.Tasks.Task%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b4ef-187">Nell'esempio seguente avvia attività separate che utilizzano un'espressione regolare per contare il numero di parole in un set di file di testo.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-187">The following example launches separate tasks that use a regular expression to count the number of words in a set of text files.</span></span> <span data-ttu-id="3b4ef-188">Il <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> metodo viene usato per avviare un'attività che viene visualizzato il conteggio totale delle parole quando tutte le attività precedenti sono stati completati.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-188">The <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method is used to launch a task that displays the total word count when all the antecedent tasks have completed.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.ContinueWhenAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.continuewhenall/cs/continuewhenall1.cs#1)]
 [!code-vb[System.Threading.Tasks.Task.ContinueWhenAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.continuewhenall/vb/continuewhenall1.vb#1)]  
  
 <span data-ttu-id="3b4ef-189">La chiamata per l'attività di continuazione <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType> metodo consente di gestire le eccezioni generate dalle attività precedenti, in modo che l'esempio esamina la <xref:System.Threading.Tasks.Task.Status%2A?displayProperty=nameWithType> proprietà di ogni attività precedente per determinare se l'attività ha avuto esito positivo.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-189">The call to the continuation task's <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType> method does not allow it to handle exceptions thrown by the antecedent tasks, so the example examines the <xref:System.Threading.Tasks.Task.Status%2A?displayProperty=nameWithType> property of each antecedent task to determine whether the task succeeded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-190">Un elemento nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-190">An element in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-191">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-191">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-192">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-192">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-193">Il valore dell'argomento <paramref name="continuationAction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-193">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-194">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-194">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-195">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-195">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-196">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-196">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task[]&gt; continuationAction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task[]&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Action&lt;System.Threading.Tasks.Task[]&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAll (tasks, continuationAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task[]&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="3b4ef-197">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-197">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-198">Delegato dell'azione da eseguire quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-198">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-199">Token di annullamento da assegnare alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-199">The cancellation token to assign to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-200">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-200">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-201">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-201">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-202">Il [\], azione (attività\<xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D% 2CSystem.Threading.CancellationToken%29 > metodo viene eseguito il `continuationAction` delegato quando tutte le attività nella `tasks` matrice completati, indipendentemente dal relativo stato di completamento.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-202">The [\], Action(Task\<xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%2CSystem.Threading.CancellationToken%29> method executes the `continuationAction` delegate when all tasks in the `tasks` array have completed, regardless of their completion status.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b4ef-203">L'esempio seguente crea un token di annullamento, che viene passato per separare le attività che usano un'espressione regolare per contare il numero di parole in un set di file di testo.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-203">The following example creates a cancellation token, which it passes to separate tasks that use a regular expression to count the number of words in a set of text files.</span></span> <span data-ttu-id="3b4ef-204">Il token di annullamento viene impostato se non viene trovato un file.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-204">The cancellation token is set if a file cannot be found.</span></span> <span data-ttu-id="3b4ef-205">Il [\], azione (attività\<XRef:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A > metodo viene usato per avviare un'attività che viene visualizzato il conteggio totale delle parole quando tutte le attività precedenti sono stati completati.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-205">The [\], Action(Task\<xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method is used to launch a task that displays the total word count when all the antecedent tasks have completed.</span></span> <span data-ttu-id="3b4ef-206">Se il token di annullamento è impostato, che indica che una o più attività sono state annullate, gestisce il <xref:System.AggregateException> eccezione e viene visualizzato un messaggio di errore.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-206">If the cancellation token is set, which indicates that one or more tasks have been cancelled, it handles the <xref:System.AggregateException> exception and displays an error message.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.ContinueWhenAll#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.continuewhenall/cs/continuewhenall2.cs#2)]
 [!code-vb[System.Threading.Tasks.Task.ContinueWhenAll#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.continuewhenall/vb/continuewhenall2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-207">Un elemento nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-207">An element in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="3b4ef-208">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-208">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-209">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-209">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-210">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-210">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-211">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-211">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-212">Il valore dell'argomento <paramref name="continuationAction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-212">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-213">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-213">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-214">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-214">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-215">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-215">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task[]&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task[]&gt; continuationAction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationAction As Action(Of Task()), continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^&gt; ^ continuationAction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Action&lt;System.Threading.Tasks.Task[]&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAll (tasks, continuationAction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task[]&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="3b4ef-216">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-216">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-217">Delegato dell'azione da eseguire quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-217">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-218">Combinazione bit per bit dei valori di enumerazione che controllano il comportamento della nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-218">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span>
          </span>
          <span data-ttu-id="3b4ef-219">I membri NotOn\* e OnlyOn\* non sono supportati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-219">The NotOn\* and OnlyOn\* members are not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-220">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-220">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-221">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-221">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-222">Un elemento nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-222">An element in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-223">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-223">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-224">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-224">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-225">Il valore dell'argomento <paramref name="continuationAction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-225">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-226">L'argomento <paramref name="continuationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-226">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-227">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-227">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-228">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-228">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-229">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-229">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task[]&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task[]&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Action&lt;System.Threading.Tasks.Task[]&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAll (tasks, continuationAction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task[]&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="3b4ef-230">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-230">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-231">Delegato dell'azione da eseguire quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-231">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-232">Token di annullamento da assegnare alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-232">The cancellation token to assign to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-233">Combinazione bit per bit dei valori di enumerazione che controllano il comportamento della nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-233">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-234">Oggetto usato per pianificare la nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-234">The object that is used to schedule the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-235">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-235">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-236">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-236">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-237">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-237">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-238">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-238">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-239">Il valore dell'argomento <paramref name="continuationAction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-239">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-240">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-240">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-241">Il valore dell'argomento <paramref name="scheduler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-241">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-242">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-242">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-243">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-243">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-244">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-244">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt; continuationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[]&gt; continuationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationAction As Action(Of Task(Of TAntecedentResult)())) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^&gt; ^ continuationAction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Action&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[]&gt; -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAll (tasks, continuationAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-245">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-245">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-246">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-246">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-247">Delegato dell'azione da eseguire quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-247">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-248">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-248">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-249">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-249">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-250">Un elemento nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-250">An element in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-251">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-251">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-252">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-252">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-253">Il valore dell'argomento <paramref name="continuationAction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-253">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-254">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-254">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-255">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-255">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-256">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-256">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-257">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-257">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt; continuationAction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[]&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Action&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[]&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAll (tasks, continuationAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-258">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-258">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-259">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-259">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-260">Delegato dell'azione da eseguire quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-260">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-261">Token di annullamento da assegnare alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-261">The cancellation token to assign to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-262">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-262">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-263">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-263">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-264">Un elemento nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-264">An element in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="3b4ef-265">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-265">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-266">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-266">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-267">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-267">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-268">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-268">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-269">Il valore dell'argomento <paramref name="continuationAction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-269">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-270">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-270">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-271">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-271">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-272">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-272">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-273">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-273">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[]&gt; continuationAction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationAction As Action(Of Task(Of TAntecedentResult)()), continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^&gt; ^ continuationAction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Action&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[]&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAll (tasks, continuationAction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-274">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-274">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-275">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-275">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-276">Delegato dell'azione da eseguire quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-276">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-277">Combinazione bit per bit dei valori di enumerazione che controllano il comportamento della nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-277">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span>
          </span>
          <span data-ttu-id="3b4ef-278">I membri NotOn\* e OnlyOn\* non sono supportati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-278">The NotOn\* and OnlyOn\* members are not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-279">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-279">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-280">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-280">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-281">Un elemento nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-281">An element in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-282">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-282">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-283">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-283">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-284">Il valore dell'argomento <paramref name="continuationAction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-284">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-285">L'argomento <paramref name="continuationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-285">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-286">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-286">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-287">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-287">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-288">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-288">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-289">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-289">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[]&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Action&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[]&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAll (tasks, continuationAction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-290">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-290">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-291">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-291">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-292">Delegato dell'azione da eseguire quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-292">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-293">Token di annullamento da assegnare alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-293">The cancellation token to assign to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-294">Combinazione bit per bit dei valori di enumerazione che controllano il comportamento della nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-294">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span>
          </span>
          <span data-ttu-id="3b4ef-295">I membri NotOn\* e OnlyOn\* non sono supportati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-295">The NotOn\* and OnlyOn\* members are not supported.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-296">Oggetto usato per pianificare la nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-296">The object that is used to schedule the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-297">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-297">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-298">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-298">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-299">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-299">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-300">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-300">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-301">Il valore dell'argomento <paramref name="continuationAction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-301">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-302">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-302">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-303">Il valore dell'argomento <paramref name="scheduler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-303">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-304">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-304">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-305">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-305">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-306">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-306">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-307">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-307">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !!TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TResult) (tasks As Task(), continuationFunction As Func(Of Task(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-308">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associato all'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-308">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-309">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-309">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-310">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-310">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-311">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-311">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-312">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-312">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-313">Un elemento nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-313">An element in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-314">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-314">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-315">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-315">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-316">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-316">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-317">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-317">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-318">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-318">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-319">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-319">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-320">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associato all'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-320">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-321">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-321">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-322">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-322">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-323">Token di annullamento da assegnare alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-323">The cancellation token to assign to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-324">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-324">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-325">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-325">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-326">Un elemento nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-326">An element in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="3b4ef-327">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-327">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-328">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-328">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-329">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-329">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-330">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-330">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-331">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-331">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-332">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-332">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-333">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-333">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-334">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-334">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-335">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-335">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !!TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TResult) (tasks As Task(), continuationFunction As Func(Of Task(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-336">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associato all'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-336">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-337">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-337">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-338">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-338">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-339">Combinazione bit per bit dei valori di enumerazione che controllano il comportamento della nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-339">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span>
          </span>
          <span data-ttu-id="3b4ef-340">I membri NotOn\* e OnlyOn\* non sono supportati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-340">The NotOn\* and OnlyOn\* members are not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-341">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-341">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-342">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-342">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-343">Un elemento nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-343">An element in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-344">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-344">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-345">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-345">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-346">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-346">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-347">L'argomento <paramref name="continuationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-347">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-348">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-348">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-349">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-349">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-350">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-350">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-351">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-351">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-352">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associato all'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-352">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-353">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-353">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-354">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-354">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-355">Token di annullamento da assegnare alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-355">The cancellation token to assign to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-356">Combinazione bit per bit dei valori di enumerazione che controllano il comportamento della nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-356">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span>
          </span>
          <span data-ttu-id="3b4ef-357">I membri NotOn\* e OnlyOn\* non sono supportati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-357">The NotOn\* and OnlyOn\* members are not supported.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-358">Oggetto usato per pianificare la nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-358">The object that is used to schedule the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-359">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-359">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-360">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-360">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-361">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-361">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-362">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-362">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-363">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-363">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-364">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-364">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-365">Il valore dell'argomento <paramref name="scheduler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-365">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-366">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-366">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-367">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-367">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-368">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-368">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-369">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-369">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !!TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult, TResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-370">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-370">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-371">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associato all'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-371">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-372">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-372">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-373">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-373">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-374">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-374">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-375">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-375">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-376">Un elemento nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-376">An element in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-377">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-377">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-378">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-378">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-379">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-379">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-380">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-380">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-381">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-381">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-382">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-382">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-383">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-383">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-384">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-384">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-385">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associato all'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-385">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-386">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-386">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-387">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-387">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-388">Token di annullamento da assegnare alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-388">The cancellation token to assign to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-389">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-389">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-390">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-390">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-391">Un elemento nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-391">An element in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="3b4ef-392">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-392">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-393">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-393">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-394">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-394">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-395">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-395">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-396">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-396">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-397">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-397">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-398">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-398">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-399">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-399">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-400">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-400">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !!TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult, TResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-401">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-401">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-402">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associato all'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-402">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-403">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-403">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-404">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-404">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-405">Combinazione bit per bit dei valori di enumerazione che controllano il comportamento della nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-405">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span>
          </span>
          <span data-ttu-id="3b4ef-406">I membri NotOn\* e OnlyOn\* non sono supportati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-406">The NotOn\* and OnlyOn\* members are not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-407">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-407">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-408">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-408">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-409">Un elemento nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-409">An element in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-410">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-410">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-411">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-411">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-412">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-412">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-413">L'argomento <paramref name="continuationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-413">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-414">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-414">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-415">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-415">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-416">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-416">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-417">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-417">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-418">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-418">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-419">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associato all'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-419">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-420">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-420">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-421">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-421">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-422">Token di annullamento da assegnare alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-422">The cancellation token to assign to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-423">Combinazione bit per bit dei valori di enumerazione che controllano il comportamento della nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-423">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span>
          </span>
          <span data-ttu-id="3b4ef-424">I membri NotOn\* e OnlyOn\* non sono supportati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-424">The NotOn\* and OnlyOn\* members are not supported.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-425">Oggetto usato per pianificare la nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-425">The object that is used to schedule the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-426">Crea un'attività di continuazione che viene avviata quando un set di attività specificate è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-426">Creates a continuation task that starts when a set of specified tasks has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-427">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-427">The new continuation task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-428">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-428">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-429">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-429">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-430">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-430">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-431">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-431">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-432">Il valore dell'argomento <paramref name="scheduler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-432">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-433">La matrice <paramref name="tasks" /> è vuota o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-433">The <paramref name="tasks" /> array is empty or contains a null value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-434">L'argomento <paramref name="continuationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-434">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-435">Un elemento nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-435">An element in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="3b4ef-436">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-436">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-437">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-437">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-438">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-438">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-439">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-439">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-440">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-440">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAny">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b4ef-441">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-441">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-442">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-442">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-443">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-443">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-444">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-444">Task Cancellation</span>
          </span>
        </related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Samples-for-Parallel-b4b76364">
          <span data-ttu-id="3b4ef-445">Esempi di programmazione parallela con .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-445">Samples for Parallel Programming with the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task&gt; continuationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task&gt; continuationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationAction As Action(Of Task)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task ^&gt; ^ continuationAction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Action&lt;System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAny (tasks, continuationAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="3b4ef-446">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-446">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-447">Delegato dell'azione da eseguire al completamento di una delle attività nella matrice <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-447">The action delegate to execute when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-448">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-448">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-449">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-449">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3b4ef-450">Nell'esempio seguente viene illustrato come utilizzare `ContinueWhenAny` e `ContinueWhenAll`:</span><span class="sxs-lookup"><span data-stu-id="3b4ef-450">The following example shows how to use `ContinueWhenAny` and `ContinueWhenAll`:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task#05](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task/cs/continuewhenmulti.cs#05)]
 [!code-vb[System.Threading.Tasks.Task#05](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task/vb/continuewhenmulti.vb#05)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-451">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-451">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-452">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-452">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-453">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-453">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-454">Il valore dell'argomento <paramref name="continuationAction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-454">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-455">La matrice <paramref name="tasks" /> contiene un valore di <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-455">The <paramref name="tasks" /> array contains a <see langword="null" /> value.</span>
          </span>
          <span data-ttu-id="3b4ef-456">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-456">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-457">La matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-457">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-458">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-458">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-459">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-459">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-460">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-460">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task&gt; continuationAction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Action&lt;System.Threading.Tasks.Task&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAny (tasks, continuationAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="3b4ef-461">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-461">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-462">Delegato dell'azione da eseguire al completamento di una delle attività nella matrice <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-462">The action delegate to execute when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-463">Oggetto <see cref="T:System.Threading.CancellationToken" /> che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-463">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-464">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-464">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-465">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-465">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-466">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-466">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="3b4ef-467">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-467">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-468">
            <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-468">
              <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-469">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-469">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b4ef-470">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-470">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-471">Il valore dell'argomento <paramref name="continuationAction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-471">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-472">La matrice <paramref name="tasks" /> contiene un valore di <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-472">The <paramref name="tasks" /> array contains a <see langword="null" /> value.</span>
          </span>
          <span data-ttu-id="3b4ef-473">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-473">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-474">La matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-474">The <paramref name="tasks" /> array is empty .</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-475">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-475">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-476">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-476">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-477">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-477">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task&gt; continuationAction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationAction As Action(Of Task), continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task ^&gt; ^ continuationAction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Action&lt;System.Threading.Tasks.Task&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAny (tasks, continuationAction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="3b4ef-478">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-478">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-479">Delegato dell'azione da eseguire al completamento di una delle attività nella matrice <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-479">The action delegate to execute when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-480">Valore di <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-480">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-481">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-481">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-482">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-482">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-483">NotOn \* e OnlyOn \* <xref:System.Threading.Tasks.TaskContinuationOptions>, che vincolano per il quale <xref:System.Threading.Tasks.TaskStatus> stati viene eseguita una continuazione, non sono validi con ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-483">The NotOn\* and OnlyOn\* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-484">Eccezione generata quando uno degli elementi della matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-484">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-485">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-485">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-486">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-486">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-487">Eccezione generata quando l’argomento <paramref name="continuationAction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-487">The exception that is thrown when the <paramref name="continuationAction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-488">Eccezione generata quando l'argomento <paramref name="continuationOptions" /> specifica un valore TaskContinuationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-488">The exception that is thrown when the <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-489">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-489">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-490">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-490">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-491">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-491">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-492">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-492">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-493">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-493">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-494">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-494">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Action&lt;System.Threading.Tasks.Task&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAny (tasks, continuationAction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="3b4ef-495">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-495">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-496">Delegato dell'azione da eseguire al completamento di una delle attività nella matrice <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-496">The action delegate to execute when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-497">Oggetto <see cref="T:System.Threading.CancellationToken" /> che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-497">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-498">Valore di <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-498">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-499">Oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> usato per pianificare l'oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-499">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-500">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-500">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-501">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-501">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-502">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-502">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-503">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-503">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-504">Eccezione generata quando l’argomento <paramref name="continuationAction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-504">The exception that is thrown when the <paramref name="continuationAction" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-505">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-505">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-506">Eccezione generata quando l’argomento <paramref name="scheduler" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-506">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-507">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-507">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-508">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-508">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-509">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-509">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-510">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-510">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-511">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-511">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-512">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-512">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt; continuationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;&gt; continuationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationAction As Action(Of Task(Of TAntecedentResult))) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ continuationAction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Action&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;&gt; -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAny (tasks, continuationAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-513">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-513">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-514">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-514">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-515">Delegato dell'azione da eseguire al completamento di una delle attività nella matrice <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-515">The action delegate to execute when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-516">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-516">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-517">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-517">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-518">Eccezione generata quando uno degli elementi della matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-518">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-519">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-519">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-520">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-520">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-521">Eccezione generata quando l’argomento <paramref name="continuationAction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-521">The exception that is thrown when the <paramref name="continuationAction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-522">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-522">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-523">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-523">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-524">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-524">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-525">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-525">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-526">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-526">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-527">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-527">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt; continuationAction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Action&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAny (tasks, continuationAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-528">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-528">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-529">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-529">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-530">Delegato dell'azione da eseguire al completamento di una delle attività nella matrice <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-530">The action delegate to execute when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-531">Oggetto <see cref="T:System.Threading.CancellationToken" /> che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-531">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-532">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-532">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-533">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-533">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-534">Eccezione generata quando uno degli elementi della matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-534">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="3b4ef-535">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-535">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-536">Provider <see cref="T:System.Threading.CancellationToken" /> già eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-536">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-537">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-537">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-538">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-538">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-539">Eccezione generata quando l’argomento <paramref name="continuationAction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-539">The exception that is thrown when the <paramref name="continuationAction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-540">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-540">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-541">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-541">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-542">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-542">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-543">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-543">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-544">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-544">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-545">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-545">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;&gt; continuationAction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationAction As Action(Of Task(Of TAntecedentResult)), continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ continuationAction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Action&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAny (tasks, continuationAction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-546">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-546">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-547">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-547">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-548">Delegato dell'azione da eseguire al completamento di una delle attività nella matrice <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-548">The action delegate to execute when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-549">Valore di <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-549">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-550">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-550">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-551">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-551">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-552">NotOn \* e OnlyOn \* <xref:System.Threading.Tasks.TaskContinuationOptions>, che vincolano per il quale <xref:System.Threading.Tasks.TaskStatus> stati viene eseguita una continuazione, non sono validi con ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-552">The NotOn\* and OnlyOn\* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-553">Eccezione generata quando uno degli elementi della matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-553">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-554">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-554">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-555">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-555">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-556">Eccezione generata quando l’argomento <paramref name="continuationAction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-556">The exception that is thrown when the <paramref name="continuationAction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-557">Eccezione generata quando l'argomento <paramref name="continuationOptions" /> specifica un valore TaskContinuationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-557">The exception that is thrown when the <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-558">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-558">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-559">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-559">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-560">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-560">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-561">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-561">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-562">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-562">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-563">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-563">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Action&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="taskFactory.ContinueWhenAny (tasks, continuationAction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-564">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-564">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-565">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-565">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationAction">
          <span data-ttu-id="3b4ef-566">Delegato dell'azione da eseguire al completamento di una delle attività nella matrice <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-566">The action delegate to execute when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-567">Oggetto <see cref="T:System.Threading.CancellationToken" /> che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-567">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-568">Valore di <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-568">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-569">Oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> usato per pianificare l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-569">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-570">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-570">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-571">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-571">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-572">NotOn \* e OnlyOn \* <xref:System.Threading.Tasks.TaskContinuationOptions>, che vincolano per il quale <xref:System.Threading.Tasks.TaskStatus> stati viene eseguita una continuazione, non sono validi con ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-572">The NotOn\* and OnlyOn\* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-573">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-573">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-574">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-574">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-575">Eccezione generata quando l’argomento <paramref name="continuationAction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-575">The exception that is thrown when the <paramref name="continuationAction" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-576">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-576">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-577">Eccezione generata quando l’argomento <paramref name="scheduler" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-577">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-578">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-578">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-579">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-579">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-580">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-580">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-581">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-581">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-582">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-582">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-583">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-583">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !!TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TResult) (tasks As Task(), continuationFunction As Func(Of Task, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-584">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associati all'oggetto creato <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-584">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-585">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-585">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-586">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-586">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-587">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-587">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-588">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-588">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-589">Eccezione generata quando uno degli elementi della matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-589">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-590">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-590">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-591">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-591">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-592">Eccezione generata quando l’argomento <paramref name="continuationFunction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-592">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-593">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-593">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-594">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-594">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-595">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-595">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-596">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-596">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-597">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-597">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-598">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-598">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-599">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associati all'oggetto creato <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-599">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-600">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-600">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-601">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-601">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-602">Oggetto <see cref="T:System.Threading.CancellationToken" /> che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-602">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-603">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-603">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-604">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-604">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-605">Eccezione generata quando uno degli elementi della matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-605">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="3b4ef-606">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-606">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-607">Provider <see cref="T:System.Threading.CancellationToken" /> già eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-607">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-608">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-608">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-609">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-609">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-610">Eccezione generata quando l’argomento <paramref name="continuationFunction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-610">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-611">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-611">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-612">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-612">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-613">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-613">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-614">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-614">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-615">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-615">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-616">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-616">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !!TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TResult) (tasks As Task(), continuationFunction As Func(Of Task, TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-617">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associati all'oggetto creato <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-617">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-618">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-618">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-619">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-619">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-620">Valore di <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-620">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-621">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-621">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-622">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-622">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-623">NotOn \* e OnlyOn \* <xref:System.Threading.Tasks.TaskContinuationOptions>, che vincolano per il quale <xref:System.Threading.Tasks.TaskStatus> stati viene eseguita una continuazione, non sono validi con ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-623">The NotOn\* and OnlyOn\* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-624">Eccezione generata quando uno degli elementi della matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-624">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-625">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-625">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-626">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-626">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-627">Eccezione generata quando l’argomento <paramref name="continuationFunction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-627">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-628">Eccezione generata quando l'argomento <paramref name="continuationOptions" /> specifica un valore TaskContinuationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-628">The exception that is thrown when the <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-629">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-629">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-630">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-630">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-631">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-631">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-632">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-632">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-633">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-633">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-634">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-634">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-635">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associati all'oggetto creato <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-635">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-636">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-636">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-637">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-637">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-638">Oggetto <see cref="T:System.Threading.CancellationToken" /> che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-638">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-639">Valore di <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-639">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-640">Oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> usato per pianificare l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-640">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-641">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-641">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-642">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-642">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-643">NotOn \* e OnlyOn \* <xref:System.Threading.Tasks.TaskContinuationOptions>, che vincolano per il quale <xref:System.Threading.Tasks.TaskStatus> stati viene eseguita una continuazione, non sono validi con ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-643">The NotOn\* and OnlyOn\* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-644">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-644">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-645">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-645">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-646">Eccezione generata quando l’argomento <paramref name="continuationFunction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-646">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-647">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-647">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-648">Eccezione generata quando l’argomento <paramref name="scheduler" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-648">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-649">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-649">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-650">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-650">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-651">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-651">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-652">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-652">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-653">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-653">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-654">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-654">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !!TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult, TResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-655">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-655">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-656">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associati all'oggetto creato <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-656">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-657">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-657">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-658">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-658">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-659">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-659">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-660">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-660">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-661">Eccezione generata quando uno degli elementi della matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-661">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-662">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-662">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-663">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-663">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-664">Eccezione generata quando l’argomento <paramref name="continuationFunction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-664">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-665">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-665">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-666">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-666">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-667">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-667">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-668">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-668">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-669">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-669">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-670">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-670">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-671">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-671">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-672">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associati all'oggetto creato <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-672">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-673">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-673">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-674">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-674">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-675">Oggetto <see cref="T:System.Threading.CancellationToken" /> che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-675">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-676">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-676">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-677">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-677">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-678">Eccezione generata quando uno degli elementi della matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-678">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="3b4ef-679">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-679">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-680">Provider <see cref="T:System.Threading.CancellationToken" /> già eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-680">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-681">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-681">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-682">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-682">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-683">Eccezione generata quando l’argomento <paramref name="continuationFunction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-683">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-684">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-684">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-685">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-685">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-686">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-686">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-687">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-687">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-688">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-688">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-689">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-689">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !!TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult, TResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-690">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-690">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-691">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associati all'oggetto creato <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-691">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-692">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-692">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-693">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-693">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-694">Valore di <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-694">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-695">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-695">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-696">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-696">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-697">NotOn \* e OnlyOn \* <xref:System.Threading.Tasks.TaskContinuationOptions>, che vincolano per il quale <xref:System.Threading.Tasks.TaskStatus> stati viene eseguita una continuazione, non sono validi con ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-697">The NotOn\* and OnlyOn\* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-698">Eccezione generata quando uno degli elementi della matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-698">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-699">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-699">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-700">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-700">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-701">Eccezione generata quando l’argomento <paramref name="continuationFunction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-701">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-702">Eccezione generata quando l'argomento <paramref name="continuationOptions" /> specifica un valore TaskContinuationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-702">The exception that is thrown when the <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-703">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-703">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-704">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-704">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-705">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-705">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-706">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-706">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-707">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-707">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-708">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-708">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="3b4ef-709">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-709">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-710">Il tipo del risultato restituito dal <c>continuationFunction</c> delegare e associati all'oggetto creato <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-710">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="3b4ef-711">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-711">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="3b4ef-712">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-712">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-713">Oggetto <see cref="T:System.Threading.CancellationToken" /> che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-713">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="3b4ef-714">Valore di <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-714">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-715">Oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> usato per pianificare l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-715">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-716">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione che verrà avviato al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-716">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-717">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-717">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-718">NotOn \* e OnlyOn \* <xref:System.Threading.Tasks.TaskContinuationOptions>, che vincolano per il quale <xref:System.Threading.Tasks.TaskStatus> stati viene eseguita una continuazione, non sono validi con ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-718">The NotOn\* and OnlyOn\* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-719">Eccezione generata quando la matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-719">The exception that is thrown when the <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="3b4ef-720">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-720">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-721">Eccezione generata quando l’argomento <paramref name="continuationFunction" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-721">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-722">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-722">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-723">Eccezione generata quando l’argomento <paramref name="scheduler" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-723">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b4ef-724">Eccezione generata quando la matrice <paramref name="tasks" /> contiene un valore Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-724">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="3b4ef-725">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-725">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-726">Eccezione generata quando la matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-726">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-727">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-727">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-728">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-728">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-729">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-729">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CreationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskCreationOptions CreationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskCreationOptions CreationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory.CreationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreationOptions As TaskCreationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskCreationOptions CreationOptions { System::Threading::Tasks::TaskCreationOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.CreationOptions : System.Threading.Tasks.TaskCreationOptions" Usage="System.Threading.Tasks.TaskFactory.CreationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskCreationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b4ef-730">Ottiene le opzioni di creazione attività predefinite per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-730">Gets the default task creation options for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b4ef-731">Opzioni di creazione attività predefinite per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-731">The default task creation options for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-732">Il valore della proprietà consente di creare tutte le attività, a meno che non le altre opzioni vengono specificate esplicitamente durante le chiamate ai metodi di questa factory.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-732">The property value is used to create all tasks, unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-733">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-733">Task Parallel Library (TPL)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromAsync">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b4ef-734">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-734">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-735">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-735">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-736">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-736">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync (IAsyncResult asyncResult, Action&lt;IAsyncResult&gt; endMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync(class System.IAsyncResult asyncResult, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult})" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Action(Of IAsyncResult)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FromAsync(IAsyncResult ^ asyncResult, Action&lt;IAsyncResult ^&gt; ^ endMethod);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Action&lt;IAsyncResult&gt; -&gt; System.Threading.Tasks.Task" Usage="taskFactory.FromAsync (asyncResult, endMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3b4ef-737">IAsyncResult il cui completamento deve attivare l'elaborazione di <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-737">The IAsyncResult whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-738">Delegato dell'azione che elabora l'oggetto <c>asyncResult</c> completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-738">The action delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-739">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> che esegue un'azione del metodo End al completamento di un oggetto <see cref="T:System.IAsyncResult" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-739">Creates a <see cref="T:System.Threading.Tasks.Task" /> that executes an end method action when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-740">Oggetto <see cref="T:System.Threading.Tasks.Task" /> che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-740">A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="3b4ef-741">Il <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> esegue l'overload che accettano un' `asyncResult` parametri non sono più efficienti gli overload che accettano un `beginMethod` parametro.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-741">The <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> overloads that take an `asyncResult` parameter are not as efficient as the overloads that take a `beginMethod` parameter.</span></span> <span data-ttu-id="3b4ef-742">Se le prestazioni costituiscono un problema, usare gli overload che forniscono i `beginMethod` / `endMethod` pattern.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-742">If performance is an issue, use the overloads that provide the `beginMethod`/`endMethod` pattern.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-743">Eccezione generata quando l’argomento <paramref name="asyncResult" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-743">The exception that is thrown when the <paramref name="asyncResult" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-744">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-744">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-745">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-745">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-746">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-746">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-747">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-747">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), state As Object) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Action&lt;IAsyncResult&gt; * obj -&gt; System.Threading.Tasks.Task" Usage="taskFactory.FromAsync (beginMethod, endMethod, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-748">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-748">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-749">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-749">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-750">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-750">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-751">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-751">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-752">Oggetto <see cref="T:System.Threading.Tasks.Task" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-752">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-753">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-753">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span>  <span data-ttu-id="3b4ef-754">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-754">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-755">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-755">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-756">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-756">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-757">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-757">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-758">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-758">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-759">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-759">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync (IAsyncResult asyncResult, Action&lt;IAsyncResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync(class System.IAsyncResult asyncResult, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Action(Of IAsyncResult), creationOptions As TaskCreationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FromAsync(IAsyncResult ^ asyncResult, Action&lt;IAsyncResult ^&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Action&lt;IAsyncResult&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3b4ef-760">IAsyncResult il cui completamento deve attivare l'elaborazione di <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-760">The IAsyncResult whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-761">Delegato dell'azione che elabora l'oggetto <c>asyncResult</c> completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-761">The action delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-762">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-762">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-763">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> che esegue un'azione del metodo End al completamento di un oggetto <see cref="T:System.IAsyncResult" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-763">Creates a <see cref="T:System.Threading.Tasks.Task" /> that executes an end method action when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-764">Oggetto <see cref="T:System.Threading.Tasks.Task" /> che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-764">A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="3b4ef-765">Il <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> esegue l'overload che accettano un' `asyncResult` parametri non sono più efficienti gli overload che accettano un `beginMethod` parametro.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-765">The <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> overloads that take an `asyncResult` parameter are not as efficient as the overloads that take a `beginMethod` parameter.</span></span> <span data-ttu-id="3b4ef-766">Se le prestazioni costituiscono un problema, usare gli overload che forniscono i `beginMethod` / `endMethod` pattern.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-766">If performance is an issue, use the overloads that provide the `beginMethod`/`endMethod` pattern.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-767">Eccezione generata quando l’argomento <paramref name="asyncResult" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-767">The exception that is thrown when the <paramref name="asyncResult" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-768">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-768">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-769">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-769">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-770">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-770">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-771">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-771">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-772">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-772">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-773">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-773">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), state As Object, creationOptions As TaskCreationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Action&lt;IAsyncResult&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task" Usage="taskFactory.FromAsync (beginMethod, endMethod, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-774">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-774">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-775">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-775">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-776">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-776">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-777">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-777">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-778">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-778">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-779">Oggetto <see cref="T:System.Threading.Tasks.Task" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-779">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-780">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-780">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="3b4ef-781">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-781">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="3b4ef-782">Il <xref:System.Threading.Tasks.TaskCreationOptions> i valori <xref:System.Threading.Tasks.TaskCreationOptions.PreferFairness>, <xref:System.Threading.Tasks.TaskCreationOptions.LongRunning> e <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent> sono tutti si escludono a vicenda.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-782">The <xref:System.Threading.Tasks.TaskCreationOptions> values <xref:System.Threading.Tasks.TaskCreationOptions.PreferFairness>, <xref:System.Threading.Tasks.TaskCreationOptions.LongRunning> and <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent> are all mutually exclusive.</span></span> <span data-ttu-id="3b4ef-783">I metodi di FromAsync, sia `LongRunning` oppure `AttachedToParent` autonomamente causerà un <xref:System.ArgumentOutOfRangeException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-783">In the FromAsync methods, either `LongRunning` or `AttachedToParent` by themselves will cause an <xref:System.ArgumentOutOfRangeException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-784">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-784">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-785">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-785">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-786">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-786">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-787">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-787">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-788">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-788">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-789">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-789">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync (IAsyncResult asyncResult, Action&lt;IAsyncResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync(class System.IAsyncResult asyncResult, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Action(Of IAsyncResult), creationOptions As TaskCreationOptions, scheduler As TaskScheduler) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FromAsync(IAsyncResult ^ asyncResult, Action&lt;IAsyncResult ^&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Action&lt;IAsyncResult&gt; * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3b4ef-790">IAsyncResult il cui completamento deve attivare l'elaborazione di <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-790">The IAsyncResult whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-791">Delegato dell'azione che elabora l'oggetto <c>asyncResult</c> completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-791">The action delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-792">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-792">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-793">Oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> usato per pianificare l'attività che esegue il metodo End.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-793">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the task that executes the end method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-794">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> che esegue un'azione del metodo End al completamento di un oggetto <see cref="T:System.IAsyncResult" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-794">Creates a <see cref="T:System.Threading.Tasks.Task" /> that executes an end method action when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-795">Oggetto <see cref="T:System.Threading.Tasks.Task" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-795">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="3b4ef-796">Il <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> esegue l'overload che accettano un' `asyncResult` parametri non sono più efficienti gli overload che accettano un `beginMethod` parametro.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-796">The <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> overloads that take an `asyncResult` parameter are not as efficient as the overloads that take a `beginMethod` parameter.</span></span> <span data-ttu-id="3b4ef-797">Se le prestazioni costituiscono un problema, usare gli overload che forniscono i `beginMethod` / `endMethod` pattern.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-797">If performance is an issue, use the overloads that provide the `beginMethod`/`endMethod` pattern.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-798">Eccezione generata quando l’argomento <paramref name="asyncResult" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-798">The exception that is thrown when the <paramref name="asyncResult" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-799">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-799">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-800">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-800">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-801">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-801">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-802">Eccezione generata quando l’argomento <paramref name="scheduler" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-802">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-803">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-803">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-804">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-804">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-805">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-805">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-806">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-806">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-807">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-807">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, !!TArg1 arg1, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), arg1 As TArg1, state As Object) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, TArg1 arg1, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Action&lt;IAsyncResult&gt; * 'TArg1 * obj -&gt; System.Threading.Tasks.Task" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="3b4ef-808">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-808">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-809">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-809">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-810">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-810">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="3b4ef-811">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-811">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-812">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-812">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-813">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-813">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-814">Oggetto <see cref="T:System.Threading.Tasks.Task" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-814">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-815">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-815">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="3b4ef-816">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-816">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-817">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-817">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-818">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-818">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-819">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-819">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-820">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-820">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-821">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-821">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, !!TArg1 arg1, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), arg1 As TArg1, state As Object, creationOptions As TaskCreationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, TArg1 arg1, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Action&lt;IAsyncResult&gt; * 'TArg1 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="3b4ef-822">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-822">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-823">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-823">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-824">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-824">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="3b4ef-825">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-825">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-826">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-826">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-827">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-827">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-828">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-828">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-829">Oggetto <see cref="T:System.Threading.Tasks.Task" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-829">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-830">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-830">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="3b4ef-831">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-831">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-832">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-832">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-833">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-833">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-834">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-834">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-835">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-835">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-836">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-836">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-837">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-837">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-838">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-838">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-839">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-839">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TResult&gt;(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TResult) (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-840">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-840">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="asyncResult">
          <span data-ttu-id="3b4ef-841">IAsyncResult il cui completamento deve attivare l'elaborazione di <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-841">The IAsyncResult whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-842">Delegato della funzione che elabora l'oggetto <c>asyncResult</c> completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-842">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-843">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che esegue una funzione del metodo End al completamento di un oggetto <see cref="T:System.IAsyncResult" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-843">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-844">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-844">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="3b4ef-845">Il <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> esegue l'overload che accettano un' `asyncResult` parametri non sono più efficienti gli overload che accettano un `beginMethod` parametro.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-845">The <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> overloads that take an `asyncResult` parameter are not as efficient as the overloads that take a `beginMethod` parameter.</span></span> <span data-ttu-id="3b4ef-846">Se le prestazioni costituiscono un problema, usare gli overload che forniscono i `beginMethod` / `endMethod` pattern.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-846">If performance is an issue, use the overloads that provide the `beginMethod`/`endMethod` pattern.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-847">Eccezione generata quando l’argomento <paramref name="asyncResult" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-847">The exception that is thrown when the <paramref name="asyncResult" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-848">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-848">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-849">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-849">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-850">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-850">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-851">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-851">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-852">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-852">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TResult&gt;(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TResult) (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-853">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-853">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-854">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-854">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-855">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-855">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-856">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-856">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-857">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-857">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-858">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-858">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-859">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-859">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-860">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-860">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-861">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-861">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-862">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-862">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-863">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-863">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-864">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-864">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TResult&gt;(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TResult) (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-865">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-865">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="asyncResult">
          <span data-ttu-id="3b4ef-866">IAsyncResult il cui completamento deve attivare l'elaborazione di <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-866">The IAsyncResult whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-867">Delegato della funzione che elabora l'oggetto <c>asyncResult</c> completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-867">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-868">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-868">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-869">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che esegue una funzione del metodo End al completamento di un oggetto <see cref="T:System.IAsyncResult" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-869">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-870">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-870">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="3b4ef-871">Il <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> esegue l'overload che accettano un' `asyncResult` parametri non sono più efficienti gli overload che accettano un `beginMethod` parametro.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-871">The <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> overloads that take an `asyncResult` parameter are not as efficient as the overloads that take a `beginMethod` parameter.</span></span> <span data-ttu-id="3b4ef-872">Se le prestazioni costituiscono un problema, usare gli overload che forniscono i `beginMethod` / `endMethod` pattern.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-872">If performance is an issue, use the overloads that provide the `beginMethod`/`endMethod` pattern.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-873">Eccezione generata quando l’argomento <paramref name="asyncResult" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-873">The exception that is thrown when the <paramref name="asyncResult" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-874">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-874">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-875">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-875">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-876">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-876">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-877">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-877">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-878">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-878">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-879">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-879">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-880">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-880">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TResult&gt;(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TResult) (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-881">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-881">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-882">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-882">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-883">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-883">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-884">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-884">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-885">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-885">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-886">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-886">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-887">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-887">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-888">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-888">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-889">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-889">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-890">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-890">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-891">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-891">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-892">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-892">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-893">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-893">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-894">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-894">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-895">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-895">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-896">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-896">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TResult&gt;(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TResult) (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions, scheduler As TaskScheduler) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-897">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-897">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="asyncResult">
          <span data-ttu-id="3b4ef-898">IAsyncResult il cui completamento deve attivare l'elaborazione di <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-898">The IAsyncResult whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-899">Delegato della funzione che elabora l'oggetto <c>asyncResult</c> completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-899">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-900">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-900">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-901">Oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> usato per pianificare l'attività che esegue il metodo End.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-901">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the task that executes the end method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-902">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che esegue una funzione del metodo End al completamento di un oggetto <see cref="T:System.IAsyncResult" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-902">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-903">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-903">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="3b4ef-904">Il <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> esegue l'overload che accettano un' `asyncResult` parametri non sono più efficienti gli overload che accettano un `beginMethod` parametro.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-904">The <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> overloads that take an `asyncResult` parameter are not as efficient as the overloads that take a `beginMethod` parameter.</span></span> <span data-ttu-id="3b4ef-905">Se le prestazioni costituiscono un problema, usare gli overload che forniscono i `beginMethod` / `endMethod` pattern.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-905">If performance is an issue, use the overloads that provide the `beginMethod`/`endMethod` pattern.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-906">Eccezione generata quando l’argomento <paramref name="asyncResult" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-906">The exception that is thrown when the <paramref name="asyncResult" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-907">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-907">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-908">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-908">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-909">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-909">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-910">Eccezione generata quando l’argomento <paramref name="scheduler" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-910">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-911">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-911">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-912">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-912">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-913">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-913">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-914">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-914">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-915">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-915">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), arg1 As TArg1, arg2 As TArg2, state As Object) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Action&lt;IAsyncResult&gt; * 'TArg1 * 'TArg2 * obj -&gt; System.Threading.Tasks.Task" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="3b4ef-916">Il tipo del secondo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-916">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="3b4ef-917">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-917">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-918">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-918">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-919">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-919">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="3b4ef-920">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-920">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="3b4ef-921">Secondo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-921">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-922">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-922">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-923">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-923">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-924">Oggetto <see cref="T:System.Threading.Tasks.Task" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-924">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-925">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-925">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="3b4ef-926">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-926">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-927">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-927">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-928">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-928">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-929">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-929">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-930">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-930">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-931">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-931">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), arg1 As TArg1, arg2 As TArg2, state As Object, creationOptions As TaskCreationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Action&lt;IAsyncResult&gt; * 'TArg1 * 'TArg2 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="3b4ef-932">Il tipo del secondo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-932">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="3b4ef-933">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-933">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-934">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-934">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-935">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-935">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="3b4ef-936">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-936">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="3b4ef-937">Secondo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-937">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-938">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-938">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-939">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-939">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-940">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-940">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-941">Oggetto <see cref="T:System.Threading.Tasks.Task" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-941">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-942">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-942">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="3b4ef-943">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-943">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-944">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-944">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-945">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-945">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-946">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-946">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-947">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-947">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-948">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-948">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-949">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-949">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-950">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-950">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-951">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-951">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TResult&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TArg1, TResult&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, !!TArg1 arg1, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TResult) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="3b4ef-952">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-952">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-953">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-953">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-954">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-954">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-955">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-955">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="3b4ef-956">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-956">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-957">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-957">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-958">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-958">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-959">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-959">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-960">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-960">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="3b4ef-961">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-961">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-962">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-962">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-963">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-963">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-964">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-964">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-965">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-965">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-966">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-966">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TResult&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TArg1, TResult&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, !!TArg1 arg1, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TResult) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="3b4ef-967">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-967">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-968">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-968">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-969">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-969">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-970">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-970">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="3b4ef-971">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-971">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-972">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-972">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-973">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-973">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-974">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-974">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-975">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-975">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-976">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-976">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="3b4ef-977">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-977">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-978">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-978">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-979">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-979">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-980">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-980">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-981">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-981">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-982">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-982">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-983">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-983">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-984">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-984">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-985">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-985">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Action&lt;IAsyncResult&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj -&gt; System.Threading.Tasks.Task" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="3b4ef-986">Il tipo del secondo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-986">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="3b4ef-987">Il tipo del terzo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-987">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="3b4ef-988">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-988">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-989">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-989">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-990">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-990">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="3b4ef-991">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-991">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="3b4ef-992">Secondo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-992">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="3b4ef-993">Terzo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-993">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-994">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-994">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-995">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-995">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-996">Oggetto <see cref="T:System.Threading.Tasks.Task" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-996">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-997">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-997">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="3b4ef-998">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-998">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-999">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-999">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-1000">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1000">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-1001">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1001">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1002">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1002">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-1003">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1003">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object, creationOptions As TaskCreationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Action&lt;IAsyncResult&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="3b4ef-1004">Il tipo del secondo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1004">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="3b4ef-1005">Il tipo del terzo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1005">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="3b4ef-1006">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1006">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-1007">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1007">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-1008">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1008">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="3b4ef-1009">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1009">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="3b4ef-1010">Secondo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1010">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="3b4ef-1011">Terzo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1011">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-1012">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1012">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-1013">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1013">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1014">Crea un oggetto <see cref="T:System.Threading.Tasks.Task" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1014">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1015">Oggetto <see cref="T:System.Threading.Tasks.Task" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1015">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1016">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1016">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="3b4ef-1017">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1017">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1018">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1018">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-1019">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1019">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-1020">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1020">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-1021">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1021">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1022">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1022">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1023">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1023">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1024">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1024">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-1025">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1025">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TResult&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TArg1, TArg2, TResult&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TResult) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="3b4ef-1026">Il tipo del secondo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1026">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="3b4ef-1027">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1027">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-1028">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1028">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-1029">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1029">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-1030">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1030">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="3b4ef-1031">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1031">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="3b4ef-1032">Secondo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1032">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-1033">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1033">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1034">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1034">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1035">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1035">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1036">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1036">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="3b4ef-1037">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1037">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1038">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1038">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-1039">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1039">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-1040">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1040">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1041">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1041">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-1042">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1042">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TResult&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TArg1, TArg2, TResult&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TResult) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="3b4ef-1043">Il tipo del secondo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1043">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="3b4ef-1044">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1044">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-1045">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1045">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-1046">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1046">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-1047">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1047">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="3b4ef-1048">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1048">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="3b4ef-1049">Secondo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1049">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-1050">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1050">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-1051">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1051">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1052">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1052">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1053">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1053">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1054">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1054">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="3b4ef-1055">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1055">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1056">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1056">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-1057">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1057">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-1058">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1058">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-1059">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1059">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1060">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1060">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1061">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1061">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1062">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1062">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-1063">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1063">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3, TResult&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3, TResult) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="3b4ef-1064">Il tipo del secondo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1064">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="3b4ef-1065">Il tipo del terzo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1065">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="3b4ef-1066">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1066">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-1067">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1067">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-1068">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1068">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-1069">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1069">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="3b4ef-1070">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1070">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="3b4ef-1071">Secondo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1071">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="3b4ef-1072">Terzo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1072">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-1073">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1073">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1074">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1074">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1075">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1075">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1076">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1076">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="3b4ef-1077">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1077">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1078">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1078">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-1079">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1079">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-1080">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1080">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1081">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1081">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-1082">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1082">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3, TResult&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3, TResult) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="3b4ef-1083">Il tipo del secondo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1083">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="3b4ef-1084">Il tipo del terzo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1084">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="3b4ef-1085">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1085">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-1086">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1086">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="3b4ef-1087">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1087">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="3b4ef-1088">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1088">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="3b4ef-1089">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1089">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="3b4ef-1090">Secondo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1090">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="3b4ef-1091">Terzo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1091">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-1092">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1092">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-1093">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1093">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1094">Crea un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1094">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1095">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1095">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1096">Il `beginMethod` delegato viene avviato sul thread che <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1096">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="3b4ef-1097">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1097">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1098">Eccezione generata quando l’argomento <paramref name="beginMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1098">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-1099">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1099">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-1100">Eccezione generata quando l’argomento <paramref name="endMethod" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1100">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-1101">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1101">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1102">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1102">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1103">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1103">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1104">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1104">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="3b4ef-1105">Uso di TPL con altri modelli asincroni</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1105">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Scheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler Scheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler Scheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory.Scheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ Scheduler { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheduler : System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.TaskFactory.Scheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b4ef-1106">Ottiene l'utilità di pianificazione predefinita per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1106">Gets the default task scheduler for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b4ef-1107">Utilità di pianificazione predefinita per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1107">The default task scheduler for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1108">Il valore della proprietà usato per pianificare tutte le attività, a meno che non è specificato in modo esplicito un'altra utilità di pianificazione durante le chiamate ai metodi di questa factory.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1108">The property value is used to schedule all tasks, unless another scheduler is explicitly specified during calls to this factory's methods.</span></span>  
  
 <span data-ttu-id="3b4ef-1109">Se questo valore della proprietà `null`, il valore della <xref:System.Threading.Tasks.TaskScheduler.Current%2A> proprietà viene utilizzata.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1109">If this property value is `null`, the value of the <xref:System.Threading.Tasks.TaskScheduler.Current%2A> property is used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1110">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1110">Task Parallel Library (TPL)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartNew">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b4ef-1111">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1111">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1112">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], il <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> metodo è il modo consigliato per avviare un'attività di calcolo.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1112">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method is the recommended way to launch a compute-bound task.</span></span> <span data-ttu-id="3b4ef-1113">Usare il <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> metodo solo quando è necessario un controllo con granularità fine per un'attività di calcolo con esecuzione prolungata.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1113">Use the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> method only when you require fine-grained control for a long-running, compute-bound task.</span></span> <span data-ttu-id="3b4ef-1114">Questo include scenari in cui si desidera controllare quanto segue:</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1114">This includes scenarios in which you want to control the following:</span></span>  
  
-   <span data-ttu-id="3b4ef-1115">Opzioni di creazione delle attività.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1115">Task creation options.</span></span> <span data-ttu-id="3b4ef-1116">Le operazioni create tramite il <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> metodo per impostazione predefinita vengono creati con il <xref:System.Threading.Tasks.TaskCreationOptions.DenyChildAttach?displayProperty=nameWithType> opzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1116">Tasks created by the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method by default are created with the <xref:System.Threading.Tasks.TaskCreationOptions.DenyChildAttach?displayProperty=nameWithType> option.</span></span> <span data-ttu-id="3b4ef-1117">Eseguire l'override di questo comportamento, o per fornire loro <xref:System.Threading.Tasks.TaskCreationOptions> le opzioni, chiamare un <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1117">To override this behavior, or to provide other <xref:System.Threading.Tasks.TaskCreationOptions> options, call a <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> overload.</span></span>  
  
-   <span data-ttu-id="3b4ef-1118">Passaggio dei parametri.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1118">Parameter passing.</span></span> <span data-ttu-id="3b4ef-1119">Gli overload del <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> (metodo) non consentono di passare un parametro al delegato dell'attività.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1119">The overloads of the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method do not allow you to pass a parameter to the task delegate.</span></span> <span data-ttu-id="3b4ef-1120">Esegue l'overload del <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> tale metodo.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1120">Overloads of the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> method do.</span></span>  
  
-   <span data-ttu-id="3b4ef-1121">Utilità di pianificazione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1121">The task scheduler.</span></span> <span data-ttu-id="3b4ef-1122">Gli overload del <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> metodo usare utilità di pianificazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1122">The overloads of the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method use the default task scheduler.</span></span> <span data-ttu-id="3b4ef-1123">Per controllare l'utilità di pianificazione, chiamare un <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> rapporto di overload con un `scheduler` parametro.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1123">To control the task scheduler, call a <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> overload with a `scheduler` parameter.</span></span> <span data-ttu-id="3b4ef-1124">Per ulteriori informazioni, vedere <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1124">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Samples-for-Parallel-b4b76364">
          <span data-ttu-id="3b4ef-1125">Esempi di programmazione parallela con .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1125">Samples for Parallel Programming with the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action ^ action);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Action -&gt; System.Threading.Tasks.Task" Usage="taskFactory.StartNew action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="3b4ef-1126">Delegato dell'azione da eseguire in modo asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1126">The action delegate to execute asynchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1127">Crea e avvia un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1127">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1128">Attività avviata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1128">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1129">La chiamata <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> è funzionalmente equivalente alla creazione di un'attività usando uno dei relativi costruttori e chiamando quindi il <xref:System.Threading.Tasks.Task.Start%2A?displayProperty=nameWithType> metodo per pianificare l'attività per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1129">Calling <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> is functionally equivalent to creating a task by using one of its constructors, and then calling the <xref:System.Threading.Tasks.Task.Start%2A?displayProperty=nameWithType> method to schedule the task for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1130">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%28System.Action%29?displayProperty=nameWithType> in modo rapido per chiamare il metodo <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%29> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1130">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%28System.Action%29?displayProperty=nameWithType> method as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%29> with default parameters.</span></span> <span data-ttu-id="3b4ef-1131">Si noti, tuttavia, che esiste una differenza nel comportamento tra i due metodi relative a: <xref:System.Threading.Tasks.Task.Run%28System.Action%29?displayProperty=nameWithType> per impostazione predefinita non consente figlio attività avviate con il <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> opzione per il collegamento all'oggetto corrente <xref:System.Threading.Tasks.Task> dell'istanza, mentre <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%29> viene.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1131">Note, however, that there is a difference in behavior between the two methods regarding : <xref:System.Threading.Tasks.Task.Run%28System.Action%29?displayProperty=nameWithType> by default does not allow child tasks started with the <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> option to attach to the current <xref:System.Threading.Tasks.Task> instance, whereas <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%29> does.</span></span> <span data-ttu-id="3b4ef-1132">Per altre informazioni ed esempi di codice, vedere [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1132">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b4ef-1133">L'esempio seguente usa il <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%29> metodo da richiamare più volte un <xref:System.Action> delegato che genera un numero casuale, interpreta come un punto di codice Unicode, lo converte in un'unità di codice con codifica UTF16 e visualizza le informazioni risultanti carattere o caratteri.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1133">The following example uses the <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%29> method to repeatedly invoke an <xref:System.Action> delegate that generates a random number, interprets it as a Unicode code point, converts it to a UTF16-encoded code unit, and displays information about the resulting character or characters.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.TaskFactory.StartNew#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/cs/startnew1.cs#1)]
 [!code-vb[System.Threading.Tasks.TaskFactory.StartNew#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/vb/startnew1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1134">L'argomento <paramref name="action" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1134">The <paramref name="action" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1135">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1135">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1136">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1136">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1137">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1137">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action action, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action action, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action ^ action, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Action * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskFactory.StartNew (action, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="3b4ef-1138">Delegato dell'azione da eseguire in modo asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1138">The action delegate to execute asynchronously.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-1139">Oggetto <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> che verrà assegnato alla nuova attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1139">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1140">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1140">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1141">Oggetto <see cref="T:System.Threading.Tasks.Task" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1141">The started <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1142">La chiamata `StartNew` è funzionalmente equivalente alla creazione di un'attività usando uno dei relativi costruttori e quindi chiamando <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1142">Calling `StartNew` is functionally equivalent to creating a Task using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1143">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%28System.Action%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> in modo rapido per chiamare il metodo <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%2CSystem.Threading.CancellationToken%29> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1143">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%28System.Action%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> method as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%2CSystem.Threading.CancellationToken%29> with default parameters.</span></span> <span data-ttu-id="3b4ef-1144">Si noti, tuttavia, che esiste una differenza nel comportamento tra i due metodi relative a: <xref:System.Threading.Tasks.Task.Run%28System.Action%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> per impostazione predefinita non consente figlio attività avviate con il <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> opzione per il collegamento all'oggetto corrente <xref:System.Threading.Tasks.Task> dell'istanza, mentre <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%2CSystem.Threading.CancellationToken%29> viene.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1144">Note, however, that there is a difference in behavior between the two methods regarding : <xref:System.Threading.Tasks.Task.Run%28System.Action%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> by default does not allow child tasks started with the <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> option to attach to the current <xref:System.Threading.Tasks.Task> instance, whereas <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%2CSystem.Threading.CancellationToken%29> does.</span></span> <span data-ttu-id="3b4ef-1145">Per altre informazioni ed esempi di codice, vedere [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1145">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b4ef-1146">L'esempio seguente chiama il <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%2CSystem.Threading.CancellationToken%29> metodo per creare un'attività che esegue l'iterazione di file nella directory C:\Windows\System32.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1146">The following example calls the <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%2CSystem.Threading.CancellationToken%29> method to create a task that iterates the files in the C:\Windows\System32 directory.</span></span> <span data-ttu-id="3b4ef-1147">L'espressione lambda chiama il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo per aggiungere informazioni su ogni file a un <xref:System.Collections.Generic.List%601> oggetto.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1147">The lambda expression calls the <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method to add information about each  file to a <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="3b4ef-1148">Ogni scollegato attività annidata richiamato dal <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> ciclo controlla lo stato del token di annullamento e, se viene richiesto l'annullamento, chiama il <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1148">Each detached nested task invoked by the <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> loop checks the state of the cancellation token and, if cancellation is requested, calls the <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3b4ef-1149">Il <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> metodo genera un' <xref:System.OperationCanceledException> eccezione gestita in un `catch` bloccare quando il thread chiama chiama il <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1149">The <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method throws an <xref:System.OperationCanceledException> exception that is handled in a `catch` block when the calling thread calls the <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.TaskFactory.StartNew#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/cs/startnew2.cs#2)]
 [!code-vb[System.Threading.Tasks.TaskFactory.StartNew#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/vb/startnew2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-1150">Provider <see cref="T:System.Threading.CancellationToken" /> già eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1150">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1151">Eccezione generata quando l’argomento <paramref name="action" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1151">The exception that is thrown when the <paramref name="action" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1152">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1152">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1153">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1153">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1154">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1154">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action action, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action action, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action ^ action, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Action * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task" Usage="taskFactory.StartNew (action, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="3b4ef-1155">Delegato dell'azione da eseguire in modo asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1155">The action delegate to execute asynchronously.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-1156">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1156">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1157">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1157">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1158">Oggetto <see cref="T:System.Threading.Tasks.Task" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1158">The started <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1159">La chiamata di StartNew è funzionalmente equivalente alla creazione di un'attività usando uno dei relativi costruttori e quindi chiamando <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1159">Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1160">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%2A> metodo con un <xref:System.Action> oggetto come un modo rapido per chiamare <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1160">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="3b4ef-1161">Per altre informazioni ed esempi di codice, vedere [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1161">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1162">Eccezione generata quando l’argomento <paramref name="action" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1162">The exception that is thrown when the <paramref name="action" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-1163">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1163">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1164">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1164">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1165">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1165">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1166">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1166">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action&lt;object&gt; action, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action`1&lt;object&gt; action, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (action As Action(Of Object), state As Object) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action&lt;System::Object ^&gt; ^ action, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Action&lt;obj&gt; * obj -&gt; System.Threading.Tasks.Task" Usage="taskFactory.StartNew (action, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="3b4ef-1167">Delegato dell'azione da eseguire in modo asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1167">The action delegate to execute asynchronously.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-1168">Oggetto contenente i dati che devono essere usati dal delegato <c>action</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1168">An object containing data to be used by the <c>action</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1169">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1169">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1170">Oggetto <see cref="T:System.Threading.Tasks.Task" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1170">The started <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1171">La chiamata <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> è funzionalmente equivalente alla creazione di un <xref:System.Threading.Tasks.Task> usando uno dei relativi costruttori e chiamando quindi il <xref:System.Threading.Tasks.Task.Start%2A> metodo pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1171">Calling <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> is functionally equivalent to creating a <xref:System.Threading.Tasks.Task> using one of its constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1172">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%2A> metodo con un <xref:System.Action> oggetto come un modo rapido per chiamare <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1172">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="3b4ef-1173">Per altre informazioni ed esempi di codice, vedere [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1173">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b4ef-1174">L'esempio seguente definisce una matrice di parole 6-letter.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1174">The following example defines an array of 6-letter words.</span></span> <span data-ttu-id="3b4ef-1175">Ogni parola viene quindi passato a un <xref:System.Action%601> delegato, che codificata della parola e visualizza il termine originale e la relativa versione codificata.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1175">Each word is then passed to an <xref:System.Action%601> delegate, which scrambles the word and displays the original word and its scrambled version.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.TaskFactory.StartNew#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/cs/startnew3.cs#3)]
 [!code-vb[System.Threading.Tasks.TaskFactory.StartNew#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/vb/startnew3.vb#3)]  
  
 <span data-ttu-id="3b4ef-1176">Si noti che nell'esempio viene inizializzato un singolo generatore di numeri casuali, che è protetta da un blocco.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1176">Note that the example initializes a single random number generator, which is protected by a lock.</span></span> <span data-ttu-id="3b4ef-1177">Per la necessità di un blocco, vedere "La sicurezza System. Random classe e il thread" nella <xref:System.Random> argomento relativo alla classe.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1177">For the need of a lock, see "The System.Random class and thread safety" in the <xref:System.Random> class topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1178">Il valore dell'argomento <paramref name="action" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1178">The <paramref name="action" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1179">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1179">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1180">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1180">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1181">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1181">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action&lt;object&gt; action, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action`1&lt;object&gt; action, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action&lt;System::Object ^&gt; ^ action, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Action&lt;obj&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskFactory.StartNew (action, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="3b4ef-1182">Delegato dell'azione da eseguire in modo asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1182">The action delegate to execute asynchronously.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-1183">Oggetto contenente i dati che devono essere usati dal delegato <c>action</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1183">An object containing data to be used by the <c>action</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-1184">Oggetto <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> che verrà assegnato al nuovo oggetto <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1184">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1185">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1185">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1186">Oggetto <see cref="T:System.Threading.Tasks.Task" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1186">The started <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1187">La chiamata di StartNew è funzionalmente equivalente alla creazione di un'attività usando uno dei relativi costruttori e quindi chiamando <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1187">Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1188">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%2A> metodo con un <xref:System.Action> oggetto come un modo rapido per chiamare <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1188">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="3b4ef-1189">Per altre informazioni ed esempi di codice, vedere [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1189">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b4ef-1190">L'esempio seguente definisce una matrice di parole 6-letter.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1190">The following example defines an array of 6-letter words.</span></span> <span data-ttu-id="3b4ef-1191">Ogni parola viene quindi passato a un <xref:System.Action%601> delegato, che codificata della parola e visualizza il termine originale e la relativa versione codificata.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1191">Each word is then passed to an <xref:System.Action%601> delegate, which scrambles the word and displays the original word and its scrambled version.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.TaskFactory.StartNew#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/cs/startnew4.cs#4)]
 [!code-vb[System.Threading.Tasks.TaskFactory.StartNew#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/vb/startnew4.vb#4)]  
  
 <span data-ttu-id="3b4ef-1192">Si noti che nell'esempio viene inizializzato un singolo generatore di numeri casuali, che è protetta da un blocco.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1192">Note that the example initializes a single random number generator, which is protected by a lock.</span></span> <span data-ttu-id="3b4ef-1193">Per la necessità di un blocco, vedere "La sicurezza System. Random classe e il thread" nella <xref:System.Random> argomento relativo alla classe.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1193">For the need of a lock, see "The System.Random class and thread safety" in the <xref:System.Random> class topic.</span></span> <span data-ttu-id="3b4ef-1194">Per gestire la possibilità di danneggiamento del generatore di numeri casuali, un token di annullamento viene passato all'attività.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1194">To handle the possibility of corruption of the random number generator, a cancellation token is passed to task.</span></span> <span data-ttu-id="3b4ef-1195">Se due numeri casuali è uguale a zero, il metodo presuppone che il generatore di numeri casuali è danneggiato e imposta il token di annullamento.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1195">If two random numbers equal zero, the method assumes that the random number generator is corrupted and sets the cancellation token.</span></span> <span data-ttu-id="3b4ef-1196">Prima dell'ordinamento la `chars` matrice contenente i sei caratteri di una parola, le chiamate al metodo il <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> metodo consente di generare un <xref:System.OperationCanceledException> se il token è stato annullato.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1196">Before sorting the `chars` array that contains the six characters in a word, the method calls the <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method to throw an <xref:System.OperationCanceledException> if the token has been canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-1197">Provider <see cref="T:System.Threading.CancellationToken" /> già eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1197">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1198">Eccezione generata quando l’argomento <paramref name="action" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1198">The exception that is thrown when the <paramref name="action" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1199">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1199">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1200">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1200">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1201">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1201">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action&lt;object&gt; action, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action`1&lt;object&gt; action, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (action As Action(Of Object), state As Object, creationOptions As TaskCreationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action&lt;System::Object ^&gt; ^ action, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Action&lt;obj&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task" Usage="taskFactory.StartNew (action, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="3b4ef-1202">Delegato dell'azione da eseguire in modo asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1202">The action delegate to execute asynchronously.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-1203">Oggetto contenente i dati che devono essere usati dal delegato <c>action</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1203">An object containing data to be used by the <c>action</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-1204">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1204">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1205">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1205">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1206">Oggetto <see cref="T:System.Threading.Tasks.Task" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1206">The started <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1207">La chiamata di StartNew è funzionalmente equivalente alla creazione di un'attività usando uno dei relativi costruttori e quindi chiamando <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1207">Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1208">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%2A> metodo con un <xref:System.Action> oggetto come un modo rapido per chiamare <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1208">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="3b4ef-1209">Per altre informazioni ed esempi di codice, vedere [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1209">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1210">Eccezione generata quando l’argomento <paramref name="action" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1210">The exception that is thrown when the <paramref name="action" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-1211">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1211">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1212">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1212">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1213">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1213">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1214">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1214">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action action, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action action, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action ^ action, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Action * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="taskFactory.StartNew (action, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="3b4ef-1215">Delegato dell'azione da eseguire in modo asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1215">The action delegate to execute asynchronously.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-1216">Oggetto <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> che verrà assegnato al nuovo oggetto <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1216">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-1217">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1217">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-1218">Oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> usato per pianificare l'oggetto <see cref="T:System.Threading.Tasks.Task" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1218">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1219">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1219">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1220">Oggetto <see cref="T:System.Threading.Tasks.Task" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1220">The started <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1221">La chiamata di StartNew è funzionalmente equivalente alla creazione di un'attività usando uno dei relativi costruttori e quindi chiamando <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1221">Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1222">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%2A> metodo con un <xref:System.Action> oggetto come un modo rapido per chiamare <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1222">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="3b4ef-1223">Per altre informazioni ed esempi di codice, vedere [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1223">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-1224">Provider <see cref="T:System.Threading.CancellationToken" /> già eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1224">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1225">Eccezione generata quando l’argomento <paramref name="action" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1225">The exception that is thrown when the <paramref name="action" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-1226">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1226">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-1227">Eccezione generata quando l’argomento <paramref name="scheduler" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1227">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-1228">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1228">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1229">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1229">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1230">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1230">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1231">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1231">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1232">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1232">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1233">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1233">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action&lt;object&gt; action, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action`1&lt;object&gt; action, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action&lt;System::Object ^&gt; ^ action, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Action&lt;obj&gt; * obj * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="taskFactory.StartNew (action, state, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="3b4ef-1234">Delegato dell'azione da eseguire in modo asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1234">The action delegate to execute asynchronously.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-1235">Oggetto contenente i dati che devono essere usati dal delegato <c>action</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1235">An object containing data to be used by the <c>action</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-1236">Oggetto <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> che verrà assegnato alla nuova attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1236">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-1237">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1237">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-1238">Oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> usato per pianificare l'oggetto <see cref="T:System.Threading.Tasks.Task" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1238">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1239">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1239">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1240">Oggetto <see cref="T:System.Threading.Tasks.Task" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1240">The started <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1241">La chiamata di StartNew è funzionalmente equivalente alla creazione di un'attività usando uno dei relativi costruttori e quindi chiamando <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1241">Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1242">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%2A> metodo con un <xref:System.Action> oggetto come un modo rapido per chiamare <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1242">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="3b4ef-1243">Per altre informazioni ed esempi di codice, vedere [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1243">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-1244">Provider <see cref="T:System.Threading.CancellationToken" /> già eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1244">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1245">Eccezione generata quando l’argomento <paramref name="action" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1245">The exception that is thrown when the <paramref name="action" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-1246">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1246">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-1247">Eccezione generata quando l’argomento <paramref name="scheduler" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1247">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-1248">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1248">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1249">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1249">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1250">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1250">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1251">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1251">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1252">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1252">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1253">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1253">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;TResult&gt; function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; function) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew(Of TResult) (function As Func(Of TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew function" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-1254">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1254">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="function">
          <span data-ttu-id="3b4ef-1255">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1255">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1256">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1256">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1257">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1257">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1258">La chiamata <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> è funzionalmente equivalente alla creazione di un <xref:System.Threading.Tasks.Task%601> usando uno dei relativi costruttori e chiamando quindi <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1258">Calling <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1259">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile chiamare il <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> in modo rapido per chiamare il metodo <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1259">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can call the <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> method as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="3b4ef-1260">Si noti, tuttavia, che esiste una differenza nel comportamento tra i due metodi relative a: <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> per impostazione predefinita non consente figlio attività avviate con il <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> opzione per il collegamento all'oggetto corrente <xref:System.Threading.Tasks.Task%601> dell'istanza, mentre <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%29> viene.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1260">Note, however, that there is a difference in behavior between the two methods regarding : <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> by default does not allow child tasks started with the <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> option to attach to the current <xref:System.Threading.Tasks.Task%601> instance, whereas <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%29> does.</span></span> <span data-ttu-id="3b4ef-1261">Per altre informazioni ed esempi di codice, vedere il post [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1261">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b4ef-1262">Nell'esempio seguente è un'app di addizione semplice che genera due numeri casuali e chiede all'utente di immettere la somma.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1262">The following example is a simple addition app that generates two random numbers and prompts the user to enter their sum.</span></span> <span data-ttu-id="3b4ef-1263">Quindi, indica se la risposta è corretta o, se la risposta dell'utente non è un numero valido, viene richiesto all'utente di immettere nuovamente un numero valido.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1263">It then indicates whether the answer is correct or, if the user's response is not a valid number, prompts the user to re-enter a valid number.</span></span> <span data-ttu-id="3b4ef-1264">Il <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> viene usato per creare il <xref:System.Threading.Tasks.Task%601> gli oggetti che restituiscono i numeri casuali da aggiungere.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1264">The <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> is used to create the <xref:System.Threading.Tasks.Task%601> objects that return the random numbers to add.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.Run#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.run/cs/run5.cs#5)]
 [!code-vb[System.Threading.Tasks.Task.Run#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.run/vb/run5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1265">Il valore dell'argomento <paramref name="function" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1265">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1266">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1266">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1267">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1267">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1268">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1268">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;object,TResult&gt; function, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`2&lt;object, !!TResult&gt; function, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew(Of TResult) (function As Func(Of Object, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-1269">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1269">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="function">
          <span data-ttu-id="3b4ef-1270">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1270">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-1271">Oggetto contenente i dati che devono essere usati dal delegato <c>function</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1271">An object containing data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1272">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1272">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1273">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1273">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1274">La chiamata di StartNew è funzionalmente equivalente alla creazione di un <xref:System.Threading.Tasks.Task%601> usando uno dei relativi costruttori e chiamando quindi <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1274">Calling StartNew is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1275">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%2A> metodo con un <xref:System.Action> oggetto come un modo rapido per chiamare <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1275">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="3b4ef-1276">Per altre informazioni ed esempi di codice, vedere il post [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1276">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1277">Eccezione generata quando l’argomento <paramref name="function" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1277">The exception that is thrown when the <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1278">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1278">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1279">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1279">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1280">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1280">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-1281">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1281">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="function">
          <span data-ttu-id="3b4ef-1282">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1282">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-1283">Oggetto <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> che verrà assegnato al nuovo oggetto <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1283">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1284">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1284">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1285">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1285">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1286">La chiamata <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> è funzionalmente equivalente alla creazione di un <xref:System.Threading.Tasks.Task%601> usando uno dei relativi costruttori e chiamando quindi <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1286">Calling <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1287">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> in modo rapido per chiamare il metodo <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1287">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> method as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29> with default parameters.</span></span> <span data-ttu-id="3b4ef-1288">Si noti, tuttavia, che esiste una differenza nel comportamento tra i due metodi relative a: <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> per impostazione predefinita non consente figlio attività avviate con il <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> opzione per il collegamento all'oggetto corrente <xref:System.Threading.Tasks.Task%601> dell'istanza, mentre <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29> viene.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1288">Note, however, that there is a difference in behavior between the two methods regarding : <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> by default does not allow child tasks started with the <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> option to attach to the current <xref:System.Threading.Tasks.Task%601> instance, whereas <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29> does.</span></span> <span data-ttu-id="3b4ef-1289">Per altre informazioni ed esempi di codice, vedere il post [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1289">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b4ef-1290">L'esempio seguente usa due attività per calcolare la sequenza di Fibonacci che terminano con F100 = F100-1 + 2 F100 con valori di inizializzazione F1 = 1, F2 = 1 e F1 = 0, F2 = 1.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1290">The following example uses two tasks to compute the Fibonacci sequence ending in F100 = F100-1 + F100-2 with seed values F1= 1, F2 = 1 and F1 = 0, F2= 1.</span></span> <span data-ttu-id="3b4ef-1291">Circa la metà dei casi, un token di annullamento è impostato come eseguire le operazioni.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1291">Approximately half of the time, a cancellation token is set as the operations execute.</span></span> <span data-ttu-id="3b4ef-1292">L'output dell'esempio mostra il risultato se le due attività è stata completata correttamente e se il token viene annullato.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1292">The output from the example shows the result if the two tasks complete successfully and if the token is cancelled.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.Run#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.run/cs/Run9.cs#9)]
 [!code-vb[System.Threading.Tasks.Task.Run#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.run/vb/Run9.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-1293">Provider <see cref="T:System.Threading.CancellationToken" /> già eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1293">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1294">Eccezione generata quando l’argomento <paramref name="function" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1294">The exception that is thrown when the <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1295">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1295">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1296">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1296">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1297">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1297">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;TResult&gt; function, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; function, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew(Of TResult) (function As Func(Of TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-1298">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1298">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="function">
          <span data-ttu-id="3b4ef-1299">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1299">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-1300">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1300">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1301">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1301">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1302">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1302">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1303">La chiamata di StartNew è funzionalmente equivalente alla creazione di un <xref:System.Threading.Tasks.Task%601> usando uno dei relativi costruttori e chiamando quindi <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1303">Calling StartNew is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1304">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%2A> metodo con un <xref:System.Action> oggetto come un modo rapido per chiamare <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1304">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="3b4ef-1305">Per altre informazioni ed esempi di codice, vedere il post [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1305">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1306">Eccezione generata quando l’argomento <paramref name="function" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1306">The exception that is thrown when the <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-1307">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1307">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1308">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1308">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1309">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1309">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1310">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1310">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1311">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1311">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1312">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1312">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`2&lt;object, !!TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-1313">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1313">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="function">
          <span data-ttu-id="3b4ef-1314">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1314">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-1315">Oggetto contenente i dati che devono essere usati dal delegato <c>function</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1315">An object containing data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-1316">Oggetto <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> che verrà assegnato al nuovo oggetto <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1316">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1317">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1317">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1318">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1318">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1319">La chiamata di StartNew è funzionalmente equivalente alla creazione di un <xref:System.Threading.Tasks.Task%601> usando uno dei relativi costruttori e chiamando quindi <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1319">Calling StartNew is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1320">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%2A> metodo con un <xref:System.Action> oggetto come un modo rapido per chiamare <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1320">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="3b4ef-1321">Per altre informazioni ed esempi di codice, vedere il post [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1321">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-1322">Provider <see cref="T:System.Threading.CancellationToken" /> già eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1322">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1323">Eccezione generata quando l’argomento <paramref name="function" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1323">The exception that is thrown when the <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1324">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1324">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1325">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1325">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1326">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1326">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;object,TResult&gt; function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`2&lt;object, !!TResult&gt; function, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew(Of TResult) (function As Func(Of Object, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-1327">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1327">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="function">
          <span data-ttu-id="3b4ef-1328">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1328">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-1329">Oggetto contenente i dati che devono essere usati dal delegato <c>function</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1329">An object containing data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-1330">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1330">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1331">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1331">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1332">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1332">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1333">La chiamata di StartNew è funzionalmente equivalente alla creazione di un <xref:System.Threading.Tasks.Task%601> usando uno dei relativi costruttori e chiamando quindi <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1333">Calling StartNew is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1334">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%2A> metodo con un <xref:System.Action> oggetto come un modo rapido per chiamare <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1334">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="3b4ef-1335">Per altre informazioni ed esempi di codice, vedere il post [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1335">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1336">Eccezione generata quando l’argomento <paramref name="function" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1336">The exception that is thrown when the <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-1337">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1337">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1338">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1338">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1339">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1339">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1340">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1340">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1341">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1341">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1342">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1342">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-1343">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1343">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="function">
          <span data-ttu-id="3b4ef-1344">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1344">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-1345">Oggetto <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> che verrà assegnato alla nuova attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1345">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-1346">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1346">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-1347">Oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> usato per pianificare l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1347">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1348">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1348">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1349">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1349">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1350">La chiamata di StartNew è funzionalmente equivalente alla creazione di un <xref:System.Threading.Tasks.Task%601> usando uno dei relativi costruttori e chiamando quindi <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1350">Calling StartNew is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1351">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%2A> metodo con un <xref:System.Action> oggetto come un modo rapido per chiamare <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1351">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="3b4ef-1352">Per altre informazioni ed esempi di codice, vedere il post [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1352">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-1353">Provider <see cref="T:System.Threading.CancellationToken" /> già eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1353">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1354">Eccezione generata quando l’argomento <paramref name="function" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1354">The exception that is thrown when the <paramref name="function" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-1355">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1355">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-1356">Eccezione generata quando l’argomento <paramref name="scheduler" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1356">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-1357">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1357">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1358">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1358">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1359">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1359">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1360">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1360">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1361">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1361">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1362">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1362">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`2&lt;object, !!TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="3b4ef-1363">Tipo del risultato disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1363">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </typeparam>
        <param name="function">
          <span data-ttu-id="3b4ef-1364">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1364">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3b4ef-1365">Oggetto contenente i dati che devono essere usati dal delegato <c>function</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1365">An object containing data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3b4ef-1366">Oggetto <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> che verrà assegnato alla nuova attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1366">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="3b4ef-1367">Valore di TaskCreationOptions che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1367">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="3b4ef-1368">Oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> usato per pianificare l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1368">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b4ef-1369">Crea e avvia un oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1369">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b4ef-1370">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1370">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b4ef-1371">La chiamata di StartNew è funzionalmente equivalente alla creazione di un <xref:System.Threading.Tasks.Task%601> usando uno dei relativi costruttori e chiamando quindi <xref:System.Threading.Tasks.Task.Start%2A> pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1371">Calling StartNew is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="3b4ef-1372">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile usare il <xref:System.Threading.Tasks.Task.Run%2A> metodo con un <xref:System.Action> oggetto come un modo rapido per chiamare <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> con parametri predefiniti.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1372">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="3b4ef-1373">Per altre informazioni ed esempi di codice, vedere il post [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) nella programmazione parallela con .NET blog.</span><span class="sxs-lookup"><span data-stu-id="3b4ef-1373">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](https://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3b4ef-1374">Provider <see cref="T:System.Threading.CancellationToken" /> già eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1374">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b4ef-1375">Eccezione generata quando l’argomento <paramref name="function" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1375">The exception that is thrown when the <paramref name="function" /> argument is null.</span>
          </span>
          <span data-ttu-id="3b4ef-1376">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1376">-or-</span>
          </span>
          <span data-ttu-id="3b4ef-1377">Eccezione generata quando l’argomento <paramref name="scheduler" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1377">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b4ef-1378">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1378">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1379">Eccezione generata quando l'argomento <paramref name="creationOptions" /> specifica un valore TaskCreationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1379">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span>
          </span>
          <span data-ttu-id="3b4ef-1380">Per ulteriori informazioni, vedere la sezione Osservazioni di <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1380">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span>
          </span>
        </exception>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="3b4ef-1381">Task Parallel Library (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1381">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md">
          <span data-ttu-id="3b4ef-1382">Concatenamento di attività tramite attività di continuazione</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1382">Chaining Tasks by Using Continuation Tasks</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="3b4ef-1383">Annullamento delle attività</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b4ef-1383">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>