<Type Name="TaskFactory&lt;TResult&gt;" FullName="System.Threading.Tasks.TaskFactory&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="747373803d9599335d466c7382a5dde926cb04ca" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36606748" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TaskFactory&lt;TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskFactory`1&lt;TResult&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskFactory(Of TResult)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class TaskFactory" />
  <TypeSignature Language="F#" Value="type TaskFactory&lt;'Result&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResult">
      <span data-ttu-id="8338c-101">Valore restituito degli oggetti <see cref="T:System.Threading.Tasks.Task`1" /> creati dai metodi di questa classe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8338c-101">The return value of the <see cref="T:System.Threading.Tasks.Task`1" /> objects that the methods of this class create.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="8338c-102">Fornisce supporto per la creazione e la pianificazione di oggetti <see cref="T:System.Threading.Tasks.Task`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8338c-102">Provides support for creating and scheduling <see cref="T:System.Threading.Tasks.Task`1" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-103">.NET Framework fornisce due factory per la creazione e pianificazione delle attività:</span><span class="sxs-lookup"><span data-stu-id="8338c-103">The .NET Framework provides two factories for creating and scheduling tasks:</span></span>  
  
-   <span data-ttu-id="8338c-104">Il <xref:System.Threading.Tasks.TaskFactory> classe, che consente di creare <xref:System.Threading.Tasks.Task> e <xref:System.Threading.Tasks.Task%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="8338c-104">The <xref:System.Threading.Tasks.TaskFactory> class, which creates <xref:System.Threading.Tasks.Task> and <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
-   <span data-ttu-id="8338c-105">Il <xref:System.Threading.Tasks.TaskFactory%601> classe, che consente di creare <xref:System.Threading.Tasks.Task%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="8338c-105">The <xref:System.Threading.Tasks.TaskFactory%601> class, which creates <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
 <span data-ttu-id="8338c-106">Il <xref:System.Threading.Tasks.TaskFactory%601> classe consente di eseguire le operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="8338c-106">The <xref:System.Threading.Tasks.TaskFactory%601> class allows you to do the following:</span></span>  
  
-   <span data-ttu-id="8338c-107">Creare un'attività e avviare immediatamente chiamando il <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8338c-107">Create a task and start it immediately by calling the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> method.</span></span> <span data-ttu-id="8338c-108">È possibile chiamare overload di questo metodo per creare ed eseguire un'attività che richiede argomenti non predefiniti.</span><span class="sxs-lookup"><span data-stu-id="8338c-108">You can call the overloads of this method to create and execute a task that requires non-default arguments.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="8338c-109">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], il <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> metodo fornisce il modo più semplice per creare un'attività con impostazione predefinita i valori di configurazione e avvia immediatamente.</span><span class="sxs-lookup"><span data-stu-id="8338c-109">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method provides the easiest way to create a task with default configuration values and start it immediately.</span></span>  
  
-   <span data-ttu-id="8338c-110">Creare un'attività che viene avviato quando una qualsiasi delle attività in una matrice è stata completata chiamando il <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> o <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8338c-110">Create a task that starts when any one of the tasks in an array has completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> or   <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> method.</span></span>  
  
-   <span data-ttu-id="8338c-111">Creare un'attività che viene avviata al completamento di tutte le attività in una matrice mediante la chiamata di <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> o <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8338c-111">Create a task that starts when all the tasks in an array have completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> or <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method.</span></span>  
  
 <span data-ttu-id="8338c-112">Il metodo statico <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> proprietà restituisce un valore predefinito <xref:System.Threading.Tasks.TaskFactory%601> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8338c-112">The static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property returns a default <xref:System.Threading.Tasks.TaskFactory%601> object.</span></span> <span data-ttu-id="8338c-113">È inoltre possibile chiamare uno del <xref:System.Threading.Tasks.TaskFactory%601> classe costruttori per configurare il <xref:System.Threading.Tasks.Task%601> oggetti che il <xref:System.Threading.Tasks.TaskFactory%601> classe crea.</span><span class="sxs-lookup"><span data-stu-id="8338c-113">You can also call one of the <xref:System.Threading.Tasks.TaskFactory%601> class constructors to configure the <xref:System.Threading.Tasks.Task%601> objects that  the <xref:System.Threading.Tasks.TaskFactory%601> class creates.</span></span> <span data-ttu-id="8338c-114">L'esempio seguente configura un nuovo <xref:System.Threading.Tasks.TaskFactory%601> oggetto da creare attività che hanno un token di annullamento specificato, le opzioni di creazione di attività, le opzioni di continuazione e un'utilità di pianificazione di attività personalizzata.</span><span class="sxs-lookup"><span data-stu-id="8338c-114">The following example configures a new <xref:System.Threading.Tasks.TaskFactory%601> object to create tasks that have a specified cancellation token, task creation options, continuation options, and a customized task scheduler.</span></span>  
  
 [!code-csharp[TPL_Factories#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_factories/cs/factoriestresult.cs#2)]
 [!code-vb[TPL_Factories#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_factories/vb/factoriestresult.vb#2)]  
  
 <span data-ttu-id="8338c-115">Nella maggior parte dei casi, non è necessario creare un'istanza di un nuovo <xref:System.Threading.Tasks.TaskFactory%601> istanza.</span><span class="sxs-lookup"><span data-stu-id="8338c-115">In most cases, you do not have to instantiate a new <xref:System.Threading.Tasks.TaskFactory%601> instance.</span></span> <span data-ttu-id="8338c-116">In alternativa, è possibile usare il metodo statico <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> proprietà, che restituisce un oggetto factory che Usa valori predefiniti.</span><span class="sxs-lookup"><span data-stu-id="8338c-116">Instead, you can use the static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property, which returns a factory object that uses default values.</span></span> <span data-ttu-id="8338c-117">È quindi possibile chiamarne i metodi per avviare nuove attività o definire le continuazioni di attività.</span><span class="sxs-lookup"><span data-stu-id="8338c-117">You can then call its methods to start new tasks or define task continuations.</span></span> <span data-ttu-id="8338c-118">Per informazioni generali, vedere l'esempio.</span><span class="sxs-lookup"><span data-stu-id="8338c-118">For an illustration, see the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8338c-119">L'esempio seguente usa il metodo statico <xref:System.Threading.Tasks.Task%601.Factory%2A> proprietà effettuare due chiamate al <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8338c-119">The following example uses the static <xref:System.Threading.Tasks.Task%601.Factory%2A> property to make two calls to the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8338c-120">La prima attività restituisce una matrice di stringhe che viene popolata con i nomi dei file nella directory di documenti dell'utente, mentre il secondo restituisce una matrice di stringhe che viene popolata con i nomi delle sottodirectory della directory documenti dell'utente.</span><span class="sxs-lookup"><span data-stu-id="8338c-120">The first task returns a string array that is populated with the names of files in the user's MyDocuments directory, while the second returns a string array that is populated with the names of subdirectories of the user's MyDocuments directory.</span></span> <span data-ttu-id="8338c-121">Chiama quindi il <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> metodo, che consente di visualizzare informazioni sul numero di file e directory in matrici restituite dalle due attività dopo che è stata completata l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="8338c-121">It then calls the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> method, which displays information about the number of files and directories in the arrays returned by the two tasks after they have completed execution.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.Factory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.factory/cs/factory2.cs#2)]
 [!code-vb[System.Threading.Tasks.Task.Factory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.factory/vb/factory2.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="8338c-122">Tutti i membri pubblici e protetti di <see cref="T:System.Threading.Tasks.TaskFactory`1" /> sono thread-safe e possono essere utilizzati contemporaneamente da più thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8338c-122">All public and protected members of <see cref="T:System.Threading.Tasks.TaskFactory`1" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8338c-123">Inizializza un'istanza di <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-123">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8338c-124">Inizializza un'istanza di <see cref="T:System.Threading.Tasks.TaskFactory`1" /> con la configurazione predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-124">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-125">Questo costruttore crea un <xref:System.Threading.Tasks.TaskFactory%601> istanza con una configurazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="8338c-125">This constructor creates a <xref:System.Threading.Tasks.TaskFactory%601> instance with a default configuration.</span></span> <span data-ttu-id="8338c-126">Il <xref:System.Threading.Tasks.TaskCreationOptions> proprietà viene inizializzata <xref:System.Threading.Tasks.TaskCreationOptions.None>, il <xref:System.Threading.Tasks.TaskContinuationOptions> proprietà viene inizializzata su <xref:System.Threading.Tasks.TaskContinuationOptions.None>e il <xref:System.Threading.Tasks.TaskScheduler> proprietà viene inizializzata all'utilità di pianificazione corrente (vedere <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="8338c-126">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.CancellationToken -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; cancellationToken" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-127">Token di annullamento predefinito che verrà assegnato alle attività create da questo oggetto <see cref="T:System.Threading.Tasks.TaskFactory" />, a meno che durante la chiamata dei metodi factory non venga specificato in modo esplicito un altro token di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-127">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-128">Inizializza un'istanza di <see cref="T:System.Threading.Tasks.TaskFactory`1" /> con la configurazione predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-128">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-129">Questo costruttore crea un <xref:System.Threading.Tasks.TaskFactory%601> istanza con una configurazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="8338c-129">This constructor creates a <xref:System.Threading.Tasks.TaskFactory%601> instance with a default configuration.</span></span> <span data-ttu-id="8338c-130">Il <xref:System.Threading.Tasks.TaskCreationOptions> proprietà viene inizializzata <xref:System.Threading.Tasks.TaskCreationOptions.None>, il <xref:System.Threading.Tasks.TaskContinuationOptions> proprietà viene inizializzata su <xref:System.Threading.Tasks.TaskContinuationOptions.None>e il <xref:System.Threading.Tasks.TaskScheduler> proprietà viene inizializzata all'utilità di pianificazione corrente (vedere <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="8338c-130">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scheduler As TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; scheduler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="scheduler">
          <span data-ttu-id="8338c-131">Utilità di pianificazione da usare per pianificare le attività create con questo oggetto <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-131">The scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
          <span data-ttu-id="8338c-132">Un valore Null indica che è necessario usare l'oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-132">A null value indicates that the current <see cref="T:System.Threading.Tasks.TaskScheduler" /> should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-133">Inizializza un'istanza di <see cref="T:System.Threading.Tasks.TaskFactory`1" /> con la configurazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-133">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-134">Con questo costruttore, il <xref:System.Threading.Tasks.TaskCreationOptions> proprietà viene inizializzata per <xref:System.Threading.Tasks.TaskCreationOptions.None>, il <xref:System.Threading.Tasks.TaskContinuationOptions> proprietà viene inizializzata su <xref:System.Threading.Tasks.TaskContinuationOptions.None>e il <xref:System.Threading.Tasks.TaskScheduler> proprietà viene inizializzata su `scheduler`, a meno che non ha `null`, in questo caso la proprietà viene inizializzata su Utilità di pianificazione corrente (vedere <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="8338c-134">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's `null`, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creationOptions As TaskCreationOptions, continuationOptions As TaskContinuationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; (creationOptions, continuationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="creationOptions">
          <span data-ttu-id="8338c-135">Opzioni predefinite da usare quando si creano attività con questo oggetto <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-135">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="8338c-136">Opzioni predefinite da usare quando si creano attività di continuazione con questo oggetto <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-136">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-137">Inizializza un'istanza di <see cref="T:System.Threading.Tasks.TaskFactory`1" /> con la configurazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-137">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-138">Con questo costruttore, il <xref:System.Threading.Tasks.TaskCreationOptions> proprietà viene inizializzata `creationOptions`, il <xref:System.Threading.Tasks.TaskContinuationOptions> proprietà viene inizializzata su `continuationOptions`e il <xref:System.Threading.Tasks.TaskScheduler> proprietà viene inizializzata all'utilità di pianificazione corrente (vedere <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="8338c-138">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-139">
            <paramref name="creationOptions" /> o <paramref name="continuationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-139">
              <paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; (cancellationToken, creationOptions, continuationOptions, scheduler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-140">Token di annullamento predefinito che verrà assegnato alle attività create da questo oggetto <see cref="T:System.Threading.Tasks.TaskFactory" />, a meno che durante la chiamata dei metodi factory non venga specificato in modo esplicito un altro token di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-140">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="8338c-141">Opzioni predefinite da usare quando si creano attività con questo oggetto <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-141">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="8338c-142">Opzioni predefinite da usare quando si creano attività di continuazione con questo oggetto <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-142">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="8338c-143">Utilità di pianificazione predefinita da usare per pianificare le attività create con questo oggetto <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-143">The default scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
          <span data-ttu-id="8338c-144">Un valore Null indica che è necessario usare l'oggetto <see cref="P:System.Threading.Tasks.TaskScheduler.Current" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-144">A null value indicates that <see cref="P:System.Threading.Tasks.TaskScheduler.Current" /> should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-145">Inizializza un'istanza di <see cref="T:System.Threading.Tasks.TaskFactory`1" /> con la configurazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-145">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-146">Con questo costruttore, il <xref:System.Threading.Tasks.TaskCreationOptions> proprietà viene inizializzata per `creationOptions`, il <xref:System.Threading.Tasks.TaskContinuationOptions> proprietà viene inizializzata su `continuationOptions`e il <xref:System.Threading.Tasks.TaskScheduler> proprietà viene inizializzata su `scheduler`, a meno che non ha `null`, in questo caso la proprietà viene inizializzata su Utilità di pianificazione corrente (vedere <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="8338c-146">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's `null`, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-147">
            <paramref name="creationOptions" /> o <paramref name="continuationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-147">
              <paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8338c-148">Ottiene il token di annullamento predefinito per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-148">Gets the default cancellation token for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8338c-149">Token di annullamento predefinito per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-149">The default cancellation token for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-150">Questa proprietà restituisce il token di annullamento predefinito che verrà assegnato a tutte le attività create da questa factory, a meno che un altro valore del token di annullamento viene specificato in modo esplicito durante la chiamata ai metodi factory di attività.</span><span class="sxs-lookup"><span data-stu-id="8338c-150">This property returns the default cancellation token that will be assigned to all tasks created by this factory unless another cancellation token value is explicitly specified during the call to the task factory methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinuationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskContinuationOptions ContinuationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskContinuationOptions ContinuationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.ContinuationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContinuationOptions As TaskContinuationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskContinuationOptions ContinuationOptions { System::Threading::Tasks::TaskContinuationOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.ContinuationOptions : System.Threading.Tasks.TaskContinuationOptions" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.ContinuationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8338c-151">Ottiene il valore di enumerazione <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-151">Gets the <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> enumeration value for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8338c-152">Uno dei valori di enumerazione che specifica le opzioni di continuazione predefinite per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-152">One of the enumeration values that specifies the default continuation options for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-153">Questa proprietà restituisce il valore predefinito di opzioni di continuazione per questa factory.</span><span class="sxs-lookup"><span data-stu-id="8338c-153">This property returns the default continuation options for this factory.</span></span> <span data-ttu-id="8338c-154">Verranno utilizzati per creare tutte le attività di continuazione, a meno che le altre opzioni vengono specificate esplicitamente durante le chiamate ai metodi di questa factory.</span><span class="sxs-lookup"><span data-stu-id="8338c-154">They will be used to create all continuation tasks unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAll">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8338c-155">Crea un'attività di continuazione che verrà avviata al completamento di un set di attività fornite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-155">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationFunction As Func(Of Task(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="8338c-156">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-156">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-157">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-157">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-158">Crea un'attività di continuazione che verrà avviata al completamento di un set di attività fornite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-158">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-159">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-159">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-160">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-160">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-161">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-161">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-162">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-162">
              <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-163">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-163">-or-</span>
          </span>
          <span data-ttu-id="8338c-164">L'elemento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-164">The <paramref name="continuationFunction" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-165">La matrice <paramref name="tasks" /> contiene un valore null o è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-165">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="8338c-166">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-166">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-167">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-167">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-168">Token di annullamento che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-168">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-169">Crea un'attività di continuazione che verrà avviata al completamento di un set di attività fornite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-169">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-170">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-170">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-171">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-171">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-172">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-172">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="8338c-173">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-173">-or-</span>
          </span>
          <span data-ttu-id="8338c-174">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-174">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-175">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-175">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-176">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-176">-or-</span>
          </span>
          <span data-ttu-id="8338c-177">
            <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-177">
              <paramref name="continuationFunction" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-178">La matrice <paramref name="tasks" /> contiene un valore null o è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-178">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationFunction As Func(Of Task(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="8338c-179">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-179">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-180">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-180">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="8338c-181">Uno dei valori di enumerazione che controlla il comportamento dell'attività di continuazione creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-181">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="8338c-182">I valori NotOn* o OnlyOn* non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-182">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-183">Crea un'attività di continuazione che verrà avviata al completamento di un set di attività fornite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-183">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-184">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-184">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-185">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-185">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-186">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-186">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-187">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-187">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-188">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-188">-or-</span>
          </span>
          <span data-ttu-id="8338c-189">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-189">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-190">L'argomento <paramref name="continuationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-190">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-191">La matrice <paramref name="tasks" /> contiene un valore null o è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-191">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="8338c-192">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-192">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-193">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-193">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-194">Token di annullamento che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-194">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="8338c-195">Uno dei valori di enumerazione che controlla il comportamento dell'attività di continuazione creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-195">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="8338c-196">I valori NotOn* o OnlyOn* non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-196">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="8338c-197">Utilità di pianificazione usata per pianificare l'attività di continuazione creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-197">The scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-198">Crea un'attività di continuazione che verrà avviata al completamento di un set di attività fornite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-198">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-199">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-199">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-200">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-200">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-201">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-201">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-202">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-202">-or-</span>
          </span>
          <span data-ttu-id="8338c-203">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-203">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-204">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-204">-or-</span>
          </span>
          <span data-ttu-id="8338c-205">Il valore dell'argomento <paramref name="scheduler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-205">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-206">La matrice <paramref name="tasks" /> contiene un valore null o è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-206">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-207">
            <paramref name="continuationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-207">
              <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-208">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-208">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="8338c-209">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-209">-or-</span>
          </span>
          <span data-ttu-id="8338c-210">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-210">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="8338c-211">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-211">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="8338c-212">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-212">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-213">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-213">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-214">Crea un'attività di continuazione che verrà avviata al completamento di un set di attività fornite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-214">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-215">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-215">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-216">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-216">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-217">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-217">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-218">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-218">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-219">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-219">-or-</span>
          </span>
          <span data-ttu-id="8338c-220">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-220">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-221">La matrice <paramref name="tasks" /> contiene un valore null o è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-221">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="8338c-222">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-222">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="8338c-223">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-223">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-224">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-224">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-225">Token di annullamento che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-225">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-226">Crea un'attività di continuazione che verrà avviata al completamento di un set di attività fornite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-226">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-227">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-227">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-228">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-228">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-229">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-229">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="8338c-230">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-230">-or-</span>
          </span>
          <span data-ttu-id="8338c-231">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-231">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-232">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-232">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-233">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-233">-or-</span>
          </span>
          <span data-ttu-id="8338c-234">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-234">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-235">La matrice <paramref name="tasks" /> contiene un valore null o è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-235">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="8338c-236">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-236">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="8338c-237">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-237">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-238">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-238">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="8338c-239">Uno dei valori di enumerazione che controlla il comportamento dell'attività di continuazione creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-239">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="8338c-240">I valori NotOn* o OnlyOn* non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-240">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-241">Crea un'attività di continuazione che verrà avviata al completamento di un set di attività fornite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-241">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-242">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-242">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-243">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-243">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-244">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-244">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-245">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-245">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-246">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-246">-or-</span>
          </span>
          <span data-ttu-id="8338c-247">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-247">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-248">L'argomento <paramref name="continuationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-248">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-249">La matrice <paramref name="tasks" /> contiene un valore null o è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-249">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="8338c-250">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-250">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="8338c-251">Matrice di attività da cui continuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-251">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-252">Delegato della funzione da eseguire in modo asincrono quando tutte le attività nella matrice <c>tasks</c> sono state completate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-252">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-253">Token di annullamento che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-253">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="8338c-254">Uno dei valori di enumerazione che controlla il comportamento dell'attività di continuazione creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-254">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="8338c-255">I valori NotOn* o OnlyOn* non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-255">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="8338c-256">Utilità di pianificazione usata per pianificare l'attività di continuazione creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-256">The scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-257">Crea un'attività di continuazione che verrà avviata al completamento di un set di attività fornite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-257">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-258">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-258">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-259">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-259">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-260">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-260">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-261">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-261">-or-</span>
          </span>
          <span data-ttu-id="8338c-262">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-262">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-263">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-263">-or-</span>
          </span>
          <span data-ttu-id="8338c-264">Il valore dell'argomento <paramref name="scheduler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-264">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-265">La matrice <paramref name="tasks" /> contiene un valore null o è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-265">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-266">L'argomento <paramref name="continuationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-266">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-267">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-267">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="8338c-268">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-268">-or-</span>
          </span>
          <span data-ttu-id="8338c-269">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-269">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAny">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8338c-270">Crea un'attività di continuazione che verrà avviata al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-270">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationFunction As Func(Of Task, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="8338c-271">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-271">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-272">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-272">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-273">Crea un'attività di continuazione che verrà avviata al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-273">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-274">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-274">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-275">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-275">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-276">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-276">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-277">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-277">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-278">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-278">-or-</span>
          </span>
          <span data-ttu-id="8338c-279">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-279">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-280">La matrice <paramref name="tasks" /> contiene un valore null o è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-280">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="8338c-281">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-281">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-282">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-282">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-283">Token di annullamento che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-283">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-284">Crea un'attività di continuazione che verrà avviata al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-284">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-285">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-285">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-286">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-286">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-287">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-287">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="8338c-288">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-288">-or-</span>
          </span>
          <span data-ttu-id="8338c-289">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-289">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-290">La matrice <paramref name="tasks" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-290">The <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="8338c-291">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-291">-or-</span>
          </span>
          <span data-ttu-id="8338c-292">L'argomento <paramref name="continuationFunction" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-292">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-293">La matrice <paramref name="tasks" /> contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-293">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="8338c-294">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-294">-or-</span>
          </span>
          <span data-ttu-id="8338c-295">La matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-295">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationFunction As Func(Of Task, TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="8338c-296">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-296">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-297">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-297">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="8338c-298">Uno dei valori di enumerazione che controlla il comportamento dell'attività di continuazione creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-298">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="8338c-299">I valori <see langword="NotOn*" /> o <see langword="OnlyOn*" /> non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-299">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-300">Crea un'attività di continuazione che verrà avviata al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-300">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-301">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-301">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-302">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-302">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-303">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-303">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-304">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-304">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-305">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-305">-or-</span>
          </span>
          <span data-ttu-id="8338c-306">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-306">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-307">Nell'argomento <paramref name="continuationOptions" /> viene specificato un valore di enumerazione non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-307">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-308">La matrice <paramref name="tasks" /> contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-308">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="8338c-309">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-309">-or-</span>
          </span>
          <span data-ttu-id="8338c-310">La matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-310">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="8338c-311">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-311">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-312">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-312">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-313">Token di annullamento che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-313">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="8338c-314">Uno dei valori di enumerazione che controlla il comportamento dell'attività di continuazione creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-314">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="8338c-315">I valori <see langword="NotOn*" /> o <see langword="OnlyOn*" /> non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-315">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="8338c-316">Utilità di pianificazione usata per pianificare l'attività di continuazione creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-316">The task scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-317">Crea un'attività di continuazione che verrà avviata al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-317">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-318">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-318">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-319">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-319">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-320">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-320">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-321">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-321">-or-</span>
          </span>
          <span data-ttu-id="8338c-322">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-322">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-323">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-323">-or-</span>
          </span>
          <span data-ttu-id="8338c-324">Il valore dell'argomento <paramref name="scheduler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-324">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-325">La matrice <paramref name="tasks" /> contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-325">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="8338c-326">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-326">-or-</span>
          </span>
          <span data-ttu-id="8338c-327">La matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-327">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-328">L'argomento <paramref name="continuationOptions" /> specifica un valore <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-328">The <paramref name="continuationOptions" /> argument specifies an invalid <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-329">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-329">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="8338c-330">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-330">-or-</span>
          </span>
          <span data-ttu-id="8338c-331">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-331">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="8338c-332">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-332">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="8338c-333">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-333">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-334">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-334">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-335">Crea un'attività di continuazione che verrà avviata al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-335">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-336">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-336">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-337">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-337">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-338">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-338">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-339">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-339">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-340">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-340">-or-</span>
          </span>
          <span data-ttu-id="8338c-341">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-341">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-342">La matrice <paramref name="tasks" /> contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-342">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="8338c-343">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-343">-or-</span>
          </span>
          <span data-ttu-id="8338c-344">La matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-344">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="8338c-345">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-345">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="8338c-346">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-346">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-347">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-347">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-348">Token di annullamento che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-348">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-349">Crea un'attività di continuazione che verrà avviata al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-349">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-350">Nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-350">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-351">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-351">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-352">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-352">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="8338c-353">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-353">-or-</span>
          </span>
          <span data-ttu-id="8338c-354">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-354">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-355">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-355">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-356">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-356">-or-</span>
          </span>
          <span data-ttu-id="8338c-357">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-357">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-358">La matrice <paramref name="tasks" /> contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-358">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="8338c-359">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-359">-or-</span>
          </span>
          <span data-ttu-id="8338c-360">La matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-360">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="8338c-361">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-361">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="8338c-362">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-362">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-363">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-363">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="8338c-364">Uno dei valori di enumerazione che controlla il comportamento dell'attività di continuazione creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-364">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="8338c-365">I valori <see langword="NotOn*" /> o <see langword="OnlyOn*" /> non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-365">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-366">Crea un'attività di continuazione che verrà avviata al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-366">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-367">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-367">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-368">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-368">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-369">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-369">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-370">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-370">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-371">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-371">-or-</span>
          </span>
          <span data-ttu-id="8338c-372">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-372">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-373">Nell'argomento <paramref name="continuationOptions" /> viene specificato un valore di enumerazione non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-373">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-374">La matrice <paramref name="tasks" /> contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-374">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="8338c-375">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-375">-or-</span>
          </span>
          <span data-ttu-id="8338c-376">La matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-376">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="8338c-377">Il tipo del risultato dell'attività antecedente <c>attività</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-377">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="8338c-378">Matrice di attività da cui continuare al completamento di un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-378">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="8338c-379">Delegato della funzione da eseguire in modo asincrono quando una delle attività nella matrice <c>tasks</c> viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-379">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-380">Token di annullamento che verrà assegnato alla nuova attività di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-380">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="8338c-381">Uno dei valori di enumerazione che controlla il comportamento dell'attività di continuazione creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-381">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="8338c-382">I valori <see langword="NotOn*" /> o <see langword="OnlyOn*" /> non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-382">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="8338c-383">Oggetto <see cref="T:System.Threading.Tasks.TaskScheduler" /> usato per pianificare l'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-383">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-384">Crea un'attività di continuazione che verrà avviata al completamento di una delle attività nel set fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-384">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-385">Nuovo oggetto <see cref="T:System.Threading.Tasks.Task`1" /> di continuazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-385">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-386">Dopo il completamento, un'attività è in uno dei seguenti stati: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> stati.</span><span class="sxs-lookup"><span data-stu-id="8338c-386">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-387">La matrice <paramref name="tasks" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-387">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-388">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-388">-or-</span>
          </span>
          <span data-ttu-id="8338c-389">Il valore dell'argomento <paramref name="continuationFunction" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-389">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-390">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-390">-or-</span>
          </span>
          <span data-ttu-id="8338c-391">L'argomento <paramref name="scheduler" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-391">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8338c-392">La matrice <paramref name="tasks" /> contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-392">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="8338c-393">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-393">-or-</span>
          </span>
          <span data-ttu-id="8338c-394">La matrice <paramref name="tasks" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-394">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-395">L'argomento <paramref name="continuationOptions" /> specifica un valore TaskContinuationOptions non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-395">The <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-396">Uno degli elementi nella matrice <paramref name="tasks" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-396">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="8338c-397">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-397">-or-</span>
          </span>
          <span data-ttu-id="8338c-398">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> che ha creato <paramref name="cancellationToken" /> è già stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-398">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskCreationOptions CreationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskCreationOptions CreationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.CreationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreationOptions As TaskCreationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskCreationOptions CreationOptions { System::Threading::Tasks::TaskCreationOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.CreationOptions : System.Threading.Tasks.TaskCreationOptions" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.CreationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskCreationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8338c-399">Ottiene il valore di enumerazione <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-399">Gets the <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> enumeration value for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8338c-400">Uno dei valori di enumerazione che specifica le opzioni di creazione predefinite per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-400">One of the enumeration values that specifies the default creation options for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-401">Questa proprietà restituisce il valore predefinito di opzioni di creazione per questa factory.</span><span class="sxs-lookup"><span data-stu-id="8338c-401">This property returns the default creation options for this factory.</span></span> <span data-ttu-id="8338c-402">Verranno utilizzati per creare tutte le attività, a meno che le altre opzioni vengono specificate esplicitamente durante le chiamate ai metodi di questa factory.</span><span class="sxs-lookup"><span data-stu-id="8338c-402">They will be used to create all tasks unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromAsync">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8338c-403">Crea un'istanza della classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-403">Creates a task instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8338c-404">Oggetto <see cref="T:System.IAsyncResult" /> il cui completamento deve attivare l'elaborazione del metodo <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-404">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="8338c-405">Delegato della funzione che elabora l'oggetto <c>asyncResult</c> completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-405">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-406">Crea un'attività che esegue una funzione del metodo End al completamento di un oggetto <see cref="T:System.IAsyncResult" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-406">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-407">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-407">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-408">Il valore dell'argomento <paramref name="asyncResult" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-408">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-409">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-409">-or-</span>
          </span>
          <span data-ttu-id="8338c-410">Il valore dell'argomento <paramref name="endMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-410">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginMethod">
          <span data-ttu-id="8338c-411">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-411">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="8338c-412">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-412">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8338c-413">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-413">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-414">Crea un'attività che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-414">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-415">Attività creata che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-415">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-416">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="8338c-416">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="8338c-417">Le eccezioni per `endmethod` vengono generate quando si attende l'attività restituita.</span><span class="sxs-lookup"><span data-stu-id="8338c-417">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-418">Il valore dell'argomento <paramref name="beginMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-418">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-419">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-419">-or-</span>
          </span>
          <span data-ttu-id="8338c-420">Il valore dell'argomento <paramref name="endMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-420">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8338c-421">Oggetto <see cref="T:System.IAsyncResult" /> il cui completamento deve attivare l'elaborazione del metodo <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-421">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="8338c-422">Delegato della funzione che elabora l'oggetto <c>asyncResult</c> completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-422">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="8338c-423">Uno dei valori di enumerazione che controlla il comportamento dell'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-423">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-424">Crea un'attività che esegue una funzione del metodo End al completamento di un oggetto <see cref="T:System.IAsyncResult" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-424">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-425">Attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-425">A task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-426">Il valore dell'argomento <paramref name="asyncResult" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-426">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-427">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-427">-or-</span>
          </span>
          <span data-ttu-id="8338c-428">Il valore dell'argomento <paramref name="endMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-428">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-429">L'argomento <paramref name="creationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-429">The <paramref name="creationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="beginMethod">
          <span data-ttu-id="8338c-430">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-430">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="8338c-431">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-431">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8338c-432">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-432">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="8338c-433">Uno dei valori di enumerazione che controlla il comportamento dell'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-433">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-434">Crea un'attività che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-434">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-435">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-435">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-436">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="8338c-436">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="8338c-437">Le eccezioni per `endmethod` vengono generate quando si attende l'attività restituita.</span><span class="sxs-lookup"><span data-stu-id="8338c-437">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-438">Il valore dell'argomento <paramref name="beginMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-438">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-439">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-439">-or-</span>
          </span>
          <span data-ttu-id="8338c-440">Il valore dell'argomento <paramref name="endMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-440">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-441">L'argomento <paramref name="creationOptions" /> specifica un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-441">The <paramref name="creationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions, scheduler As TaskScheduler) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8338c-442">Oggetto <see cref="T:System.IAsyncResult" /> il cui completamento deve attivare l'elaborazione del metodo <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-442">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="8338c-443">Delegato della funzione che elabora l'oggetto <c>asyncResult</c> completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-443">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="8338c-444">Uno dei valori di enumerazione che controlla il comportamento dell'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-444">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="8338c-445">Utilità di pianificazione usata per pianificare l'attività che esegue il metodo End.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-445">The task scheduler that is used to schedule the task that executes the end method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-446">Crea un'attività che esegue una funzione del metodo End al completamento di un oggetto <see cref="T:System.IAsyncResult" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-446">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-447">Attività creata che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-447">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-448">Il valore dell'argomento <paramref name="asyncResult" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-448">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-449">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-449">-or-</span>
          </span>
          <span data-ttu-id="8338c-450">Il valore dell'argomento <paramref name="endMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-450">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-451">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-451">-or-</span>
          </span>
          <span data-ttu-id="8338c-452">Il valore dell'argomento <paramref name="scheduler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-452">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-453">Nel parametro <paramref name="creationOptions" /> è stato specificato un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-453">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="8338c-454">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-454">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="8338c-455">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-455">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="8338c-456">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-456">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="8338c-457">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-457">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8338c-458">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-458">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-459">Crea un'attività che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-459">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-460">Attività creata che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-460">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-461">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="8338c-461">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="8338c-462">Le eccezioni per `endmethod` vengono generate quando si attende l'attività restituita.</span><span class="sxs-lookup"><span data-stu-id="8338c-462">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-463">Il valore dell'argomento <paramref name="beginMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-463">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-464">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-464">-or-</span>
          </span>
          <span data-ttu-id="8338c-465">Il valore dell'argomento <paramref name="endMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-465">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="8338c-466">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-466">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="8338c-467">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-467">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="8338c-468">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-468">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="8338c-469">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-469">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8338c-470">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-470">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="8338c-471">Uno dei valori di enumerazione che controlla il comportamento dell'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-471">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-472">Crea un'attività che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-472">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-473">Attività creata che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-473">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-474">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="8338c-474">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="8338c-475">Le eccezioni per `endmethod` vengono generate quando si attende l'attività restituita.</span><span class="sxs-lookup"><span data-stu-id="8338c-475">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-476">Il valore dell'argomento <paramref name="beginMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-476">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-477">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-477">-or-</span>
          </span>
          <span data-ttu-id="8338c-478">Il valore dell'argomento <paramref name="endMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-478">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-479">Nel parametro <paramref name="creationOptions" /> è stato specificato un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-479">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="8338c-480">Il tipo del secondo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-480">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="8338c-481">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-481">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="8338c-482">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-482">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="8338c-483">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-483">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="8338c-484">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-484">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="8338c-485">Secondo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-485">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8338c-486">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-486">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-487">Crea un'attività che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-487">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-488">Attività creata che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-488">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-489">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="8338c-489">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="8338c-490">Le eccezioni per `endmethod` vengono generate quando si attende l'attività restituita.</span><span class="sxs-lookup"><span data-stu-id="8338c-490">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-491">Il valore dell'argomento <paramref name="beginMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-491">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-492">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-492">-or-</span>
          </span>
          <span data-ttu-id="8338c-493">Il valore dell'argomento <paramref name="endMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-493">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="8338c-494">Il tipo del secondo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-494">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="8338c-495">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-495">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="8338c-496">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-496">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="8338c-497">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-497">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="8338c-498">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-498">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="8338c-499">Secondo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-499">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8338c-500">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-500">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="8338c-501">Oggetto che controlla il comportamento dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-501">An object that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-502">Crea un'attività che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-502">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-503">Attività creata che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-503">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-504">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="8338c-504">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="8338c-505">Le eccezioni per `endmethod` vengono generate quando si attende l'attività restituita.</span><span class="sxs-lookup"><span data-stu-id="8338c-505">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-506">Il valore dell'argomento <paramref name="beginMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-506">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-507">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-507">-or-</span>
          </span>
          <span data-ttu-id="8338c-508">Il valore dell'argomento <paramref name="endMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-508">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-509">Nel parametro <paramref name="creationOptions" /> è stato specificato un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-509">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="8338c-510">Il tipo del secondo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-510">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="8338c-511">Il tipo del terzo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-511">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="8338c-512">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-512">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="8338c-513">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-513">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="8338c-514">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-514">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="8338c-515">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-515">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="8338c-516">Secondo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-516">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="8338c-517">Terzo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-517">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8338c-518">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-518">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-519">Crea un'attività che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-519">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-520">Attività creata che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-520">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-521">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="8338c-521">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="8338c-522">Le eccezioni per `endmethod` vengono generate quando si attende l'attività restituita.</span><span class="sxs-lookup"><span data-stu-id="8338c-522">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-523">Il valore dell'argomento <paramref name="beginMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-523">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-524">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-524">-or-</span>
          </span>
          <span data-ttu-id="8338c-525">Il valore dell'argomento <paramref name="endMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-525">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="8338c-526">Il tipo del secondo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-526">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="8338c-527">Il tipo del terzo argomento passato a <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-527">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="8338c-528">Il tipo del primo argomento passato per il <c>beginMethod</c> delegare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-528">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="8338c-529">Delegato che inizia l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-529">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="8338c-530">Delegato che termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-530">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="8338c-531">Primo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-531">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="8338c-532">Secondo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-532">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="8338c-533">Terzo argomento passato al delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-533">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8338c-534">Oggetto contenente i dati che devono essere usati dal delegato <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-534">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="8338c-535">Oggetto che controlla il comportamento dell'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-535">An object that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-536">Crea un'attività che rappresenta una coppia di metodi Begin ed End conformi al modello di programmazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-536">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-537">Attività creata che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-537">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-538">Questo metodo genera le eccezioni generate dal `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="8338c-538">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="8338c-539">Le eccezioni per `endmethod` vengono generate quando si attende l'attività restituita.</span><span class="sxs-lookup"><span data-stu-id="8338c-539">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-540">Il valore dell'argomento <paramref name="beginMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-540">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-541">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-541">-or-</span>
          </span>
          <span data-ttu-id="8338c-542">Il valore dell'argomento <paramref name="endMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-542">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-543">Nel parametro <paramref name="creationOptions" /> è stato specificato un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-543">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Scheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler Scheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler Scheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.Scheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ Scheduler { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheduler : System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.Scheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8338c-544">Ottiene l'utilità di pianificazione per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-544">Gets the task scheduler for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8338c-545">Utilità di pianificazione per questa factory delle attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-545">The task scheduler for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-546">Questa proprietà restituisce l'utilità di pianificazione predefinita per questa factory.</span><span class="sxs-lookup"><span data-stu-id="8338c-546">This property returns the default scheduler for this factory.</span></span> <span data-ttu-id="8338c-547">Da utilizzare per pianificare tutte le attività a meno che non è specificato in modo esplicito un'altra utilità di pianificazione durante le chiamate ai metodi di questa factory.</span><span class="sxs-lookup"><span data-stu-id="8338c-547">It will be used to schedule all tasks unless another scheduler is explicitly specified during calls to this factory's methods.</span></span>  
  
 <span data-ttu-id="8338c-548">Se questa proprietà restituisce `null`, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> verrà utilizzato.</span><span class="sxs-lookup"><span data-stu-id="8338c-548">If this property returns `null`, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> will be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartNew">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8338c-549">Crea e avvia un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-549">Creates and starts a task.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew function" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="8338c-550">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite l'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-550">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-551">Crea e avvia un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-551">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-552">Attività avviata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-552">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-553">La chiamata `StartNew` è funzionalmente equivalente alla creazione di un'attività usando uno dei <xref:System.Threading.Tasks.Task%601> costruttori e quindi chiamando il <xref:System.Threading.Tasks.Task.Start%2A> metodo pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="8338c-553">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors, and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="8338c-554">Tuttavia, a meno che la creazione e la pianificazione devono essere separati, `StartNew` è l'approccio consigliato per motivi di semplicità e delle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="8338c-554">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-555">Il valore dell'argomento <paramref name="function" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-555">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of Object, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="8338c-556">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite l'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-556">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8338c-557">Oggetto contenente i dati che devono essere usati dal delegato <c>function</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-557">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-558">Crea e avvia un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-558">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-559">Attività avviata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-559">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-560">La chiamata `StartNew` è funzionalmente equivalente alla creazione di un'attività usando uno dei <xref:System.Threading.Tasks.Task%601> costruttori e quindi chiamando il <xref:System.Threading.Tasks.Task.Start%2A> metodo pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="8338c-560">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="8338c-561">Tuttavia, a meno che la creazione e la pianificazione devono essere separati, `StartNew` è l'approccio consigliato per motivi di semplicità e delle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="8338c-561">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-562">Il valore dell'argomento <paramref name="function" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-562">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="8338c-563">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite l'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-563">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-564">Token di annullamento che verrà assegnato alla nuova attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-564">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-565">Crea e avvia un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-565">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-566">Attività avviata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-566">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-567">La chiamata `StartNew` è funzionalmente equivalente alla creazione di un'attività usando uno dei <xref:System.Threading.Tasks.Task%601> costruttori e quindi chiamando il <xref:System.Threading.Tasks.Task.Start%2A> metodo pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="8338c-567">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="8338c-568">Tuttavia, a meno che la creazione e la pianificazione devono essere separati, `StartNew` è l'approccio consigliato per motivi di semplicità e delle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="8338c-568">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-569">L'origine del token di annullamento che ha creato <paramref name="cancellationToken" /> è già stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-569">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-570">Il valore dell'argomento <paramref name="function" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-570">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="8338c-571">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite l'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-571">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="8338c-572">Uno dei valori di enumerazione che controlla il comportamento dell'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-572">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-573">Crea e avvia un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-573">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-574">Oggetto <see cref="T:System.Threading.Tasks.Task`1" /> avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-574">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-575">La chiamata `StartNew` è funzionalmente equivalente alla creazione di un'attività usando uno dei <xref:System.Threading.Tasks.Task%601> costruttori e quindi chiamando il <xref:System.Threading.Tasks.Task.Start%2A> metodo pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="8338c-575">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="8338c-576">Tuttavia, a meno che la creazione e la pianificazione devono essere separati, `StartNew` è l'approccio consigliato per motivi di semplicità e delle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="8338c-576">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-577">Il valore dell'argomento <paramref name="function" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-577">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-578">Nel parametro <paramref name="creationOptions" /> è stato specificato un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-578">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="8338c-579">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite l'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-579">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8338c-580">Oggetto contenente i dati che devono essere usati dal delegato <c>function</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-580">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-581">Token di annullamento che verrà assegnato alla nuova attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-581">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-582">Crea e avvia un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-582">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-583">Attività avviata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-583">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-584">La chiamata `StartNew` è funzionalmente equivalente alla creazione di un'attività usando uno dei <xref:System.Threading.Tasks.Task%601> costruttori e quindi chiamando il <xref:System.Threading.Tasks.Task.Start%2A> metodo pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="8338c-584">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="8338c-585">Tuttavia, a meno che la creazione e la pianificazione devono essere separati, `StartNew` è l'approccio consigliato per motivi di semplicità e delle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="8338c-585">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-586">L'origine del token di annullamento che ha creato <paramref name="cancellationToken" /> è già stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-586">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-587">Il valore dell'argomento <paramref name="function" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-587">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of Object, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="8338c-588">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite l'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-588">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8338c-589">Oggetto contenente i dati che devono essere usati dal delegato <c>function</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-589">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="8338c-590">Uno dei valori di enumerazione che controlla il comportamento dell'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-590">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-591">Crea e avvia un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-591">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-592">Attività avviata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-592">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-593">La chiamata `StartNew` è funzionalmente equivalente alla creazione di un'attività usando uno dei <xref:System.Threading.Tasks.Task%601> costruttori e quindi chiamando il <xref:System.Threading.Tasks.Task.Start%2A> metodo pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="8338c-593">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="8338c-594">Tuttavia, a meno che la creazione e la pianificazione devono essere separati, `StartNew` è l'approccio consigliato per motivi di semplicità e delle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="8338c-594">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-595">Il valore dell'argomento <paramref name="function" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-595">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-596">Nel parametro <paramref name="creationOptions" /> è stato specificato un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-596">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="8338c-597">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite l'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-597">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-598">Token di annullamento che verrà assegnato alla nuova attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-598">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="8338c-599">Uno dei valori di enumerazione che controlla il comportamento dell'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-599">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="8338c-600">Utilità di pianificazione usata per pianificare l'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-600">The task scheduler that is used to schedule the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-601">Crea e avvia un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-601">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-602">Attività avviata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-602">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-603">La chiamata `StartNew` è funzionalmente equivalente alla creazione di un'attività usando uno dei <xref:System.Threading.Tasks.Task%601> costruttori e quindi chiamando il <xref:System.Threading.Tasks.Task.Start%2A> metodo pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="8338c-603">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="8338c-604">Tuttavia, a meno che la creazione e la pianificazione devono essere separati, `StartNew` è l'approccio consigliato per motivi di semplicità e delle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="8338c-604">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-605">L'origine del token di annullamento che ha creato <paramref name="cancellationToken" /> è già stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-605">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-606">Il valore dell'argomento <paramref name="function" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-606">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-607">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-607">-or-</span>
          </span>
          <span data-ttu-id="8338c-608">Il valore dell'argomento <paramref name="scheduler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-608">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-609">Nel parametro <paramref name="creationOptions" /> è stato specificato un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-609">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="8338c-610">Delegato della funzione che restituisce il risultato futuro da rendere disponibile tramite l'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-610">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8338c-611">Oggetto contenente i dati che devono essere usati dal delegato <c>function</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-611">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8338c-612">Token di annullamento che verrà assegnato alla nuova attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-612">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="8338c-613">Uno dei valori di enumerazione che controlla il comportamento dell'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-613">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="8338c-614">Utilità di pianificazione usata per pianificare l'attività creata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-614">The task scheduler that is used to schedule the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8338c-615">Crea e avvia un'attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-615">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8338c-616">Attività avviata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-616">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8338c-617">La chiamata `StartNew` è funzionalmente equivalente alla creazione di un'attività usando uno dei <xref:System.Threading.Tasks.Task%601> costruttori e quindi chiamando il <xref:System.Threading.Tasks.Task.Start%2A> metodo pianificarlo per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="8338c-617">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="8338c-618">Tuttavia, a meno che la creazione e la pianificazione devono essere separati, `StartNew` è l'approccio consigliato per motivi di semplicità e delle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="8338c-618">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8338c-619">L'origine del token di annullamento che ha creato <paramref name="cancellationToken" /> è già stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-619">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8338c-620">Il valore dell'argomento <paramref name="function" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-620">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8338c-621">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-621">-or-</span>
          </span>
          <span data-ttu-id="8338c-622">Il valore dell'argomento <paramref name="scheduler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-622">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8338c-623">Nel parametro <paramref name="creationOptions" /> è stato specificato un valore non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8338c-623">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>