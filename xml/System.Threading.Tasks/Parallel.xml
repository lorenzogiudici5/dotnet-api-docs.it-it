<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Parallel.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c7a1e65ce8ea63b5af31713b9765bbef1a97a84a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7a1e65ce8ea63b5af31713b9765bbef1a97a84a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Parallel">
          <source>Provides support for parallel loops and regions.</source>
          <target state="translated">Fornisce supporto per aree e cicli in parallelo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Parallel">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel&gt;</ph> class provides library-based data parallel replacements for common operations such as for loops, for each loops, and execution of a set of statements.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel&gt;</ph> classe fornisce sostituzioni parallele di basata su raccolta dati per operazioni comuni quali cicli, per ogni cicli e l'esecuzione di un set di istruzioni.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Parallel">
          <source>This example demonstrates several approaches to implementing a parallel loop using multiple language constructs.</source>
          <target state="translated">Questo esempio illustra i diversi approcci per l'implementazione di un ciclo parallelo tramite più costrutti del linguaggio.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Parallel">
          <source>All public and protected members of <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Parallel" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">Tutti i membri pubblici e protetti di <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Parallel" /&gt;</ph> sono thread-safe e possono essere utilizzate contemporaneamente da più thread.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Parallel">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop in which iterations may run in parallel.</source>
          <target state="translated">Esegue un ciclo <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) in cui le iterazioni possono essere eseguite in parallelo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The start index, inclusive.</source>
          <target state="translated">Indice iniziale, incluso.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The end index, exclusive.</source>
          <target state="translated">Indice finale, escluso.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un ciclo <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>A  structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>It is provided with two arguments:</source>
          <target state="translated">Viene fornito con due argomenti:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>An <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value that represents the iteration count.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Int32&gt;</ph> valore che rappresenta il conteggio delle iterazioni.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>A <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that can be used to break out of the loop prematurely.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere usato per uscire dal ciclo in modo anomalo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> object is created by the compiler; it cannot be instantiated in user code.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> oggetto viene creato dal compilatore; non è possibile creare un'istanza nel codice utente.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Calling the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> method informs the <ph id="ph2">`for`</ph> operation that iterations after the current one don't have to execute.</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> metodo informa il <ph id="ph2">`for`</ph> operazione che le iterazioni successive a quella corrente non sono necessario eseguire.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>However, all iterations before the current one will still have to be executed if they haven't already.</source>
          <target state="translated">Tuttavia, tutte le iterazioni prima di quella corrente uno sarà comunque necessario deve essere eseguito se è già stato fatto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Therefore, calling <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> is similar to using a break operation within a conventional <ph id="ph2">`for`</ph> loop in a language like C#, but it is not a perfect substitute: For example, there is no guarantee that iterations after the current one will definitely not execute.</source>
          <target state="translated">Pertanto, la chiamata <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> è simile all'utilizzo di un'operazione di interruzione all'interno di una tradizionale <ph id="ph2">`for`</ph> ciclo in un linguaggio come c#, ma non è un sostituto perfetto: ad esempio, non c'è garanzia che le iterazioni successive a quella corrente verranno sicuramente non eseguire.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>If executing all iterations before the current one is not necessary, use the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> method instead of using <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>.</source>
          <target state="translated">Se l'esecuzione di tutte le iterazioni prima di quella corrente non è necessario, utilizzare il <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> metodo anziché <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Calling <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> informs the <ph id="ph2">`for`</ph> loop that it may abandon all remaining iterations, regardless of whether they're before or after the current iteration, because all required work will have already been completed.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> informa il <ph id="ph2">`for`</ph> ciclo che può abbandonare tutti i rimanenti iterazioni, indipendentemente dal fatto che essi si prima o dopo l'iterazione corrente, in quanto tutte le necessarie lavoro sarà già stato completato.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>However, as with <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>, there are no guarantees regarding which other iterations will not execute.</source>
          <target state="translated">Tuttavia, come con <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>, non vi sono garanzie riguardo a quali altre iterazioni non verranno eseguito.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>If a loop is ended prematurely, the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult&gt;</ph> structure that is returned will contain relevant information about the loop's completion.</source>
          <target state="translated">Se è stato interrotta, a un ciclo di <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult&gt;</ph> struttura restituita conterrà le informazioni relative al completamento del ciclo.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, the method returns immediately without performing any iterations.</source>
          <target state="translated">Se <ph id="ph1">`fromInclusive`</ph> è maggiore o uguale a <ph id="ph2">`toExclusive`</ph>, viene restituito immediatamente senza eseguire nessuna iterazione.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The following example executes up to 100 iterations of a loop in parallel.</source>
          <target state="translated">Nell'esempio seguente viene eseguita fino a 100 iterazioni di un ciclo in parallelo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Each iteration pauses for a random interval from 1 to 1,000 milliseconds.</source>
          <target state="translated">Consente di sospendere ogni iterazione per un intervallo casuale compreso tra 1 e 1.000 millisecondi.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>A randomly generated value determines on which iteration of the loop the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> method is called.</source>
          <target state="translated">Un valore generato casualmente determina a quali iterazione del ciclo di <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>As the output from the example shows, no iterations whose index is greater than the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType&gt;</ph> property value start after the call to the <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Come illustrato nell'esempio, nessuna iterazione il cui indice è maggiore di output di <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType&gt;</ph> inizio del valore proprietà dopo la chiamata al <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Because iterations of the loop are still likely to be executing when the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> method is called, each iteration calls the <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration%2A?displayProperty=nameWithType&gt;</ph> property to check whether another iteration has called the <ph id="ph3">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Perché sono ancora soggetti a essere in esecuzione al termine delle iterazioni del ciclo di <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> metodo viene chiamato, le chiamate di ogni iterazione il <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration%2A?displayProperty=nameWithType&gt;</ph> proprietà per verificare se un'altra iterazione è chiamato il <ph id="ph3">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>If  the property value is <ph id="ph1">`true`</ph>, the iteration checks the value of the <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType&gt;</ph> property and, if it is greater than the current iteration's index value, returns immediately.</source>
          <target state="translated">Se il valore della proprietà <ph id="ph1">`true`</ph>, l'iterazione controlla il valore del <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType&gt;</ph> proprietà e, se è maggiore del valore di indice dell'iterazione corrente, termina immediatamente.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The start index, inclusive.</source>
          <target state="translated">Indice iniziale, incluso.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The end index, exclusive.</source>
          <target state="translated">Indice finale, escluso.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop in which iterations may run in parallel.</source>
          <target state="translated">Esegue un ciclo <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) in cui le iterazioni possono essere eseguite in parallelo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>It is provided with the iteration count (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>) as a parameter.</source>
          <target state="translated">Viene fornito con il conteggio delle iterazioni (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>) come parametro.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, the method returns immediately without performing any iterations.</source>
          <target state="translated">Se <ph id="ph1">`fromInclusive`</ph> è maggiore o uguale a <ph id="ph2">`toExclusive`</ph>, viene restituito immediatamente senza eseguire nessuna iterazione.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A&gt;</ph> method for 100 invocations of a delegate that generates random byte values and computes their sum.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A&gt;</ph> metodo per le chiamate di un delegato che genera l'errore byte casuali a 100 valori e calcola la somma.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The start index, inclusive.</source>
          <target state="translated">Indice iniziale, incluso.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The end index, exclusive.</source>
          <target state="translated">Indice finale, escluso.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop with 64-bit indexes in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un loop <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) con gli indici a 64 bit in cui le iterazioni possono eseguire in parallelo e lo stato del loop può essere monitorato e manipolato.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ParallelLoopResult" /&gt;</ph> structure that contains information on what portion of the loop completed.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ParallelLoopResult" /&gt;</ph> che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), and a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely.</source>
          <target state="translated">Viene fornito con i seguenti parametri: il conteggio delle iterazioni (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>) e un <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzato per interrompere il ciclo in modo anomalo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>Calling the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> method informs the <ph id="ph2">`for`</ph> operation that iterations after the current one don’t have to be executed, but all iterations before the current one do.</source>
          <target state="translated">Chiamata di <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> metodo informa il <ph id="ph2">`for`</ph> operazione le iterazioni successive a quella corrente non devono essere eseguiti, ma eseguire tutte le iterazioni prima di quello corrente.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>Therefore, calling Break is similar to using a break operation within a conventional <ph id="ph1">`for`</ph> loop in a language like C#, but it is not a perfect substitute: For example, there is no guarantee that iterations after the current one will definitely not execute.</source>
          <target state="translated">Pertanto, la chiamata di interruzione è simile all'utilizzo di un'operazione di interruzione all'interno di una tradizionale <ph id="ph1">`for`</ph> ciclo in un linguaggio come c#, ma non è un sostituto perfetto: ad esempio, non c'è garanzia che le iterazioni dopo quello corrente sicuramente non verrà eseguiti.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>If executing all iterations before the current one is not necessary, use the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> method instead of using <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>.</source>
          <target state="translated">Se l'esecuzione di tutte le iterazioni prima di quella corrente non è necessario, utilizzare il <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> metodo anziché <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>Calling <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> informs the <ph id="ph2">`for`</ph> loop that it may abandon all remaining iterations, regardless of whether they're before or after the current iteration, because all required work will have already been completed.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> informa il <ph id="ph2">`for`</ph> ciclo che può abbandonare tutti i rimanenti iterazioni, indipendentemente dal fatto che essi si prima o dopo l'iterazione corrente, in quanto tutte le necessarie lavoro sarà già stato completato.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>However, as with <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>, there are no guarantees regarding which other iterations will not execute.</source>
          <target state="translated">Tuttavia, come con <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>, non vi sono garanzie riguardo a quali altre iterazioni non verranno eseguito.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>If a loop is ended prematurely, the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult&gt;</ph> structure that is returned will contain relevant information about the loop's completion.</source>
          <target state="translated">Se è stato interrotta, a un ciclo di <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult&gt;</ph> struttura restituita conterrà le informazioni relative al completamento del ciclo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Se <ph id="ph1">`fromInclusive`</ph> è maggiore o uguale a <ph id="ph2">`toExclusive`</ph>, tramite il metodo viene restituito immediatamente senza eseguire nessuna iterazione.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>The start index, inclusive.</source>
          <target state="translated">Indice iniziale, incluso.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>The end index, exclusive.</source>
          <target state="translated">Indice finale, escluso.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop with 64-bit indexes in which iterations may run in parallel.</source>
          <target state="translated">Esegue un ciclo <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) con indici a 64 bit in cui le iterazioni possono essere eseguite in parallelo.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>It is provided with the iteration count (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>) as a parameter.</source>
          <target state="translated">Viene fornito con il conteggio delle iterazioni (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>) come parametro.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, the method returns immediately without performing any iterations.</source>
          <target state="translated">Se <ph id="ph1">`fromInclusive`</ph> è maggiore o uguale a <ph id="ph2">`toExclusive`</ph>, viene restituito immediatamente senza eseguire nessuna iterazione.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The start index, inclusive.</source>
          <target state="translated">Indice iniziale, incluso.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The end index, exclusive.</source>
          <target state="translated">Indice finale, escluso.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un ciclo <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>), and a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely.</source>
          <target state="translated">Viene fornito con i seguenti parametri: il conteggio delle iterazioni (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>) e un <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzato per interrompere il ciclo in modo anomalo.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, the method returns immediately without performing any iterations.</source>
          <target state="translated">Se <ph id="ph1">`fromInclusive`</ph> è maggiore o uguale a <ph id="ph2">`toExclusive`</ph>, viene restituito immediatamente senza eseguire nessuna iterazione.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The start index, inclusive.</source>
          <target state="translated">Indice iniziale, incluso.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The end index, exclusive.</source>
          <target state="translated">Indice finale, escluso.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop in which iterations may run in parallel and loop options can be configured.</source>
          <target state="translated">Esegue un ciclo <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) nel quale le iterazioni possono essere eseguite in parallelo ed è possibile configurare le opzioni di ciclo.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>A  structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>It is provided with the iteration count (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>) as a parameter.</source>
          <target state="translated">Viene fornito con il conteggio delle iterazioni (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>) come parametro.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Se <ph id="ph1">`fromInclusive`</ph> è maggiore o uguale a <ph id="ph2">`toExclusive`</ph>, tramite il metodo viene restituito immediatamente senza eseguire nessuna iterazione.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The following example shows how to cancel a parallel loop:</source>
          <target state="translated">Nell'esempio seguente viene illustrato come annullare un ciclo parallelo:</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The start index, inclusive.</source>
          <target state="translated">Indice iniziale, incluso.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The end index, exclusive.</source>
          <target state="translated">Indice finale, escluso.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic)  loop with 64-bit indexes in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un ciclo <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) con indici a 64 bit nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), and a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely.</source>
          <target state="translated">Viene fornito con i seguenti parametri: il conteggio delle iterazioni (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>) e un <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzato per interrompere il ciclo in modo anomalo.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, the method returns immediately without performing any iterations.</source>
          <target state="translated">Se <ph id="ph1">`fromInclusive`</ph> è maggiore o uguale a <ph id="ph2">`toExclusive`</ph>, viene restituito immediatamente senza eseguire nessuna iterazione.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> method with a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelOptions&gt;</ph> object:</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> metodo con un <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelOptions&gt;</ph> oggetto:</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The start index, inclusive.</source>
          <target state="translated">Indice iniziale, incluso.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The end index, exclusive.</source>
          <target state="translated">Indice finale, escluso.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop with 64-bit indexes in which iterations may run in parallel and loop options can be configured.</source>
          <target state="translated">Esegue un ciclo <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) con indici a 64 bit in cui è possibile eseguire le iterazioni in parallelo e configurare le opzioni del ciclo.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>Supports 64-bit indexes.</source>
          <target state="translated">Supporta gli indici a 64 bit.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>It is provided with the iteration count (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>) as a parameter.</source>
          <target state="translated">Viene fornito con il conteggio delle iterazioni (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>) come parametro.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Se <ph id="ph1">`fromInclusive`</ph> è maggiore o uguale a <ph id="ph2">`toExclusive`</ph>, tramite il metodo viene restituito immediatamente senza eseguire nessuna iterazione.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelOptions&gt;</ph> to specify a custom task scheduler:</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelOptions&gt;</ph> per specificare un'utilità di pianificazione di attività personalizzato:</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Tipo dei dati locali del thread.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The start index, inclusive.</source>
          <target state="translated">Indice iniziale, incluso.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The end index, exclusive.</source>
          <target state="translated">Indice finale, escluso.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop with thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un ciclo <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) con dati locali del thread nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>A  structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>), a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</source>
          <target state="translated">Viene fornito con i seguenti parametri: il conteggio delle iterazioni (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>), un <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzato per interrompere il ciclo in modo anomalo e uno stato locale che può essere condiviso fra le iterazioni che vengono eseguite sullo stesso thread.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Il <ph id="ph1">`localInit`</ph> delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Questi stati iniziali vengono passati al primo <ph id="ph1">`body`</ph> chiamate in ogni attività.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Quindi, ogni chiamata del corpo successiva restituisce un valore di stato probabilmente modificato che viene passato alla chiamata successiva corpo.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato per il <ph id="ph1">`localFinally`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task's local state.</source>
          <target state="translated">Il <ph id="ph1">`localFinally`</ph> delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Questo delegato può essere chiamato simultaneamente su più attività; Pertanto, è necessario sincronizzare l'accesso a qualsiasi variabile condivisa.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> metodo può utilizzare più attività di thread in base alla durata della propria esecuzione come completato le attività esistenti e vengono sostituiti da nuove attività.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">In questo modo sottostante <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che il ciclo del servizio.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Se <ph id="ph1">`fromInclusive`</ph> è maggiore o uguale a <ph id="ph2">`toExclusive`</ph>, tramite il metodo viene restituito immediatamente senza eseguire nessuna iterazione.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>For an example that uses this method, see <bpt id="p1">[</bpt>How to: Write a Parallel.For Loop with Thread-Local Variables<ept id="p1">](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md)</ept>.</source>
          <target state="translated">Per un esempio che utilizza questo metodo, vedere <bpt id="p1">[</bpt>procedura: scrivere un ciclo Parallel. for con variabili di Thread locali<ept id="p1">](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md)</ept>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Tipo dei dati locali del thread.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The start index, inclusive.</source>
          <target state="translated">Indice iniziale, incluso.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The end index, exclusive.</source>
          <target state="translated">Indice finale, escluso.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic)  loop with 64-bit indexes and thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un ciclo <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) con indici a 64 bit e dati locali del thread nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same task.</source>
          <target state="translated">Viene fornito con i seguenti parametri: il conteggio delle iterazioni (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), un <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzato per interrompere il ciclo in modo anomalo e uno stato locale che può essere condiviso fra le iterazioni eseguite per la stessa attività.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Il <ph id="ph1">`localInit`</ph> delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Questi stati iniziali vengono passati al primo <ph id="ph1">`body`</ph> chiamate in ogni attività.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Quindi, ogni chiamata del corpo successiva restituisce un valore di stato probabilmente modificato che viene passato alla chiamata successiva corpo.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato per il <ph id="ph1">`localFinally`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task's local state.</source>
          <target state="translated">Il <ph id="ph1">`localFinally`</ph> delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Questo delegato può essere chiamato simultaneamente su più attività; Pertanto, è necessario sincronizzare l'accesso a qualsiasi variabile condivisa.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> metodo può utilizzare più attività di thread in base alla durata della propria esecuzione come completato le attività esistenti e vengono sostituiti da nuove attività.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">In questo modo sottostante <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che il ciclo del servizio.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Se <ph id="ph1">`fromInclusive`</ph> è maggiore o uguale a <ph id="ph2">`toExclusive`</ph>, tramite il metodo viene restituito immediatamente senza eseguire nessuna iterazione.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>For an example that uses this method, see <bpt id="p1">[</bpt>How to: Write a Parallel.For Loop with Thread-Local Variables<ept id="p1">](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md)</ept>.</source>
          <target state="translated">Per un esempio che utilizza questo metodo, vedere <bpt id="p1">[</bpt>procedura: scrivere un ciclo Parallel. for con variabili di Thread locali<ept id="p1">](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md)</ept>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Tipo dei dati locali del thread.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The start index, inclusive.</source>
          <target state="translated">Indice iniziale, incluso.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The end index, exclusive.</source>
          <target state="translated">Indice finale, escluso.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic)  loop with thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un ciclo <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) con dati locali del thread nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>), a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same task.</source>
          <target state="translated">Viene fornito con i seguenti parametri: il conteggio delle iterazioni (<ph id="ph1">&lt;xref:System.Int32&gt;</ph>), un <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzato per interrompere il ciclo in modo anomalo e uno stato locale che può essere condiviso fra le iterazioni eseguite per la stessa attività.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Il <ph id="ph1">`localInit`</ph> delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Questi stati iniziali vengono passati al primo <ph id="ph1">`body`</ph> chiamate in ogni attività.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Quindi, ogni chiamata del corpo successiva restituisce un valore di stato probabilmente modificato che viene passato alla chiamata successiva corpo.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato per il <ph id="ph1">`localFinally`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task's local state.</source>
          <target state="translated">Il <ph id="ph1">`localFinally`</ph> delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This delegate might be invoked concurrently on multiple threads; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Questo delegato può essere chiamato simultaneamente su più thread. Pertanto, è necessario sincronizzare l'accesso a qualsiasi variabile condivisa.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> metodo può utilizzare più attività di thread in base alla durata della propria esecuzione come completato le attività esistenti e vengono sostituiti da nuove attività.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">In questo modo sottostante <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che il ciclo del servizio.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Se <ph id="ph1">`fromInclusive`</ph> è maggiore o uguale a <ph id="ph2">`toExclusive`</ph>, tramite il metodo viene restituito immediatamente senza eseguire nessuna iterazione.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The following example uses thread-local variables to compute the sum of the results of many lengthy operations.</source>
          <target state="translated">L'esempio seguente usa le variabili locali del thread per calcolare la somma dei risultati di molte operazioni di lunga durate.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This example limits the degree of parallelism to four.</source>
          <target state="translated">In questo esempio consente di limitare il grado di parallelismo a quattro.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Tipo dei dati locali del thread.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The start index, inclusive.</source>
          <target state="translated">Indice iniziale, incluso.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The end index, exclusive.</source>
          <target state="translated">Indice finale, escluso.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The function delegate that returns the initial state of the local data for each thread.</source>
          <target state="translated">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni thread.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The delegate that performs a final action on the local state of each thread.</source>
          <target state="translated">Delegato che esegue un'azione finale sullo stato locale di ogni thread.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) loop with 64-bit indexes and thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un ciclo <ph id="ph1">&lt;see langword="for" /&gt;</ph> (<ph id="ph2">&lt;see langword="For" /&gt;</ph> in Visual Basic) con indici a 64 bit e dati locali del thread nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each value in the iteration range (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (<ph id="ph2">`fromInclusive`</ph>, <ph id="ph3">`toExclusive`</ph>).</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>It is provided with the following parameters: the iteration count (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), a <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</source>
          <target state="translated">Viene fornito con i seguenti parametri: il conteggio delle iterazioni (<ph id="ph1">&lt;xref:System.Int64&gt;</ph>), un <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzato per interrompere il ciclo in modo anomalo e uno stato locale che può essere condiviso fra le iterazioni che vengono eseguite sullo stesso thread.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each thread that participates in the loop's execution and returns the initial local state for each of those threads.</source>
          <target state="translated">Il <ph id="ph1">`localInit`</ph> delegato viene richiamato una volta per ogni thread che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuno di tali thread.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each thread.</source>
          <target state="translated">Questi stati iniziali vengono passati al primo <ph id="ph1">`body`</ph> chiamate in ogni thread.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Quindi, ogni chiamata del corpo successiva restituisce un valore di stato probabilmente modificato che viene passato alla chiamata successiva corpo.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>Finally, the last body invocation on each thread returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Infine, l'ultima chiamata corpo su ogni thread restituisce un valore di stato che viene passato per il <ph id="ph1">`localFinally`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per thread to perform a final action on each thread's local state.</source>
          <target state="translated">Il <ph id="ph1">`localFinally`</ph> delegato viene richiamato una volta per ogni thread per eseguire un'azione finale sullo stato locale di ogni thread.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This delegate might be invoked concurrently on multiple threads; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Questo delegato può essere chiamato simultaneamente su più thread. Pertanto, è necessario sincronizzare l'accesso a qualsiasi variabile condivisa.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> metodo può utilizzare più attività di thread in base alla durata della propria esecuzione come completato le attività esistenti e vengono sostituiti da nuove attività.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">In questo modo sottostante <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che il ciclo del servizio.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>If <ph id="ph1">`fromInclusive`</ph> is greater than or equal to <ph id="ph2">`toExclusive`</ph>, then the method returns immediately without performing any iterations.</source>
          <target state="translated">Se <ph id="ph1">`fromInclusive`</ph> è maggiore o uguale a <ph id="ph2">`toExclusive`</ph>, tramite il metodo viene restituito immediatamente senza eseguire nessuna iterazione.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Parallel">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each " /&gt;</ph> in Visual Basic) operation in which iterations may run in parallel.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each " /&gt;</ph> in Visual Basic) in cui le iterazioni possono essere eseguite in parallelo.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi in <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The orderable partitioner that contains the original data source.</source>
          <target state="translated">Oggetto Partitioner ordinabile contenente l'origine dati originale.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Questo overload viene fornito per scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero risultare utile il partizionamento dell'intervallo.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo prevede un partitioner personalizzati per supportare il partizionamento dinamico.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>partitioner personalizzati per PLINQ e TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> e <bpt id="p2">[</bpt>come: partizioni dinamiche implementano<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> orderable partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> nel partitioner ordinabile <ph id="ph2">&lt;paramref name="source" /&gt;</ph> restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /&gt;</ph> property in the source orderable partitioner returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /&gt;</ph> nel partitioner ordinabile di origine restituisce <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>Any methods in the source orderable partitioner return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Qualsiasi metodo nel partitioner ordinabile di origine restituisce <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi in <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The partitioner that contains the original data source.</source>
          <target state="translated">Oggetto Partitioner contenente l'origine dati originale.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Questo overload viene fornito per scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero risultare utile il partizionamento dell'intervallo.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo prevede un partitioner personalizzati per supportare il partizionamento dinamico.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>partitioner personalizzati per PLINQ e TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> e <bpt id="p2">[</bpt>come: partizioni dinamiche implementano<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> nel partitioner <ph id="ph2">&lt;paramref name="source" /&gt;</ph> restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>A method in the <ph id="ph1">&lt;paramref name="source" /&gt;</ph> partitioner returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Un metodo nel partitioner <ph id="ph1">&lt;paramref name="source" /&gt;</ph> restituisce <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /&gt;</ph> method in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> partitioner does not return the correct number of partitions.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /&gt;</ph> nel partitioner <ph id="ph2">&lt;paramref name="source" /&gt;</ph> non restituisce il numero corretto di partizioni.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi in <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The partitioner that contains the original data source.</source>
          <target state="translated">Oggetto Partitioner contenente l'origine dati originale.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> in which iterations may run in parallel.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> in cui le iterazioni possono essere eseguite in parallelo.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Questo overload viene fornito per scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero risultare utile il partizionamento dell'intervallo.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo prevede un partitioner personalizzati per supportare il partizionamento dinamico.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>partitioner personalizzati per PLINQ e TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> e <bpt id="p2">[</bpt>come: partizioni dinamiche implementano<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The following example shows how to implement a range partitioner for use with <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph>:</source>
          <target state="translated">Nell'esempio seguente viene illustrato come implementare un partitioner intervallo per l'utilizzo con <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> nel partitioner <ph id="ph2">&lt;paramref name="source" /&gt;</ph> restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The exception that is thrown when any methods in the <ph id="ph1">&lt;paramref name="source" /&gt;</ph> partitioner return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Eccezione generata quando qualsiasi metodo del partitioner <ph id="ph1">&lt;paramref name="source" /&gt;</ph> restituisce <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /&gt;</ph> method in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> partitioner does not return the correct number of partitions.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /&gt;</ph> nel partitioner <ph id="ph2">&lt;paramref name="source" /&gt;</ph> non restituisce il numero corretto di partizioni.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The type of the data in the source.</source>
          <target state="translated">Tipo di dati nell'origine.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>An enumerable data source.</source>
          <target state="translated">Origine dati enumerabile.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with 64-bit indexes on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) con indici a 64 bit su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni elemento di <ph id="ph2">`source`</ph> enumerabile.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>It is provided with the following parameters: the current element, a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and the current element's index (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>).</source>
          <target state="translated">Viene fornito con i seguenti parametri: l'elemento corrente, un <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzato per interrompere il ciclo in modo anomalo e l'indice dell'elemento corrente (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The type of the data in the source.</source>
          <target state="translated">Tipo di dati nell'origine.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>An enumerable data source.</source>
          <target state="translated">Origine dati enumerabile.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni elemento di <ph id="ph2">`source`</ph> enumerabile.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>It is provided with the following parameters: the current element, and a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely.</source>
          <target state="translated">Viene fornito con i seguenti parametri: l'elemento corrente e un <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzato per interrompere il ciclo in modo anomalo.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The type of the data in the source.</source>
          <target state="translated">Tipo di dati nell'origine.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>An enumerable data source.</source>
          <target state="translated">Origine dati enumerabile.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in cui le iterazioni possono essere eseguite in parallelo.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni elemento di <ph id="ph2">`source`</ph> enumerabile.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>It is provided with the current element as a parameter.</source>
          <target state="translated">Viene fornito con l'elemento corrente come parametro.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Action%7B%60%600%7D%29&gt;</ph> method to count the number of vowels and non-whitespace characters in a text file.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Action%7B%60%600%7D%29&gt;</ph> metodo per contare il numero di caratteri diversi da spazi in un file di testo e di vocali.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult&gt;</ph> value returned by the method is ignored.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult&gt;</ph> valore restituito dal metodo viene ignorato.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>Note that, because operations can run in parallel, you must ensure that incrementing the counter variables is an atomic operation, and that multiple threads do not attempt to access the counter variables simultaneously.</source>
          <target state="translated">Si noti che, poiché le operazioni possono essere eseguiti in parallelo, è necessario assicurarsi che le variabili di contatore a incremento è un'operazione atomica, e che più thread non tentare di accedere alle variabili di contatore contemporaneamente.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>For this purpose, the example uses the <ph id="ph1">`lock`</ph> statement (in C#) and the <ph id="ph2">`SyncLock`</ph> statement (in Visual Basic).</source>
          <target state="translated">A tale scopo, nell'esempio viene utilizzato il <ph id="ph1">`lock`</ph> istruzione (in c#) e <ph id="ph2">`SyncLock`</ph> istruzione (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi in <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The orderable partitioner that contains the original data source.</source>
          <target state="translated">Oggetto Partitioner ordinabile contenente l'origine dati originale.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Questo overload viene fornito per scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero risultare utile il partizionamento dell'intervallo.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo prevede un partitioner personalizzati per supportare il partizionamento dinamico.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>partitioner personalizzati per PLINQ e TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> e <bpt id="p2">[</bpt>come: partizioni dinamiche implementano<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> orderable partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> nel partitioner ordinabile <ph id="ph2">&lt;paramref name="source" /&gt;</ph> restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> orderable partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /&gt;</ph> nel partitioner ordinabile <ph id="ph2">&lt;paramref name="source" /&gt;</ph> restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The exception that is thrown when any methods in the <ph id="ph1">&lt;paramref name="source" /&gt;</ph> orderable partitioner return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Eccezione generata quando qualsiasi metodo nell'oggetto partitioner ordinabile <ph id="ph1">&lt;paramref name="source" /&gt;</ph> restituisce <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi in <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The partitioner that contains the original data source.</source>
          <target state="translated">Oggetto Partitioner contenente l'origine dati originale.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>A  structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Questo overload viene fornito per scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero risultare utile il partizionamento dell'intervallo.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo prevede un partitioner personalizzati per supportare il partizionamento dinamico.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>partitioner personalizzati per PLINQ e TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> e <bpt id="p2">[</bpt>come: partizioni dinamiche implementano<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> nel partitioner <ph id="ph2">&lt;paramref name="source" /&gt;</ph> restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that is thrown when any methods in the <ph id="ph1">&lt;paramref name="source" /&gt;</ph> partitioner return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Eccezione generata quando qualsiasi metodo del partitioner <ph id="ph1">&lt;paramref name="source" /&gt;</ph> restituisce <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi in <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The partitioner that contains the original data source.</source>
          <target state="translated">Oggetto Partitioner contenente l'origine dati originale.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> in which iterations may run in parallel and loop options can be configured.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo ed è possibile configurare le opzioni di ciclo.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Questo overload viene fornito per scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero risultare utile il partizionamento dell'intervallo.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo prevede un partitioner personalizzati per supportare il partizionamento dinamico.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>partitioner personalizzati per PLINQ e TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> e <bpt id="p2">[</bpt>come: partizioni dinamiche implementano<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph> partitioner returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> nel partitioner <ph id="ph2">&lt;paramref name="source" /&gt;</ph> restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The exception that is thrown when any methods in the <ph id="ph1">&lt;paramref name="source" /&gt;</ph> partitioner return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Eccezione generata quando qualsiasi metodo del partitioner <ph id="ph1">&lt;paramref name="source" /&gt;</ph> restituisce <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The type of the data in the source.</source>
          <target state="translated">Tipo di dati nell'origine.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>An enumerable data source.</source>
          <target state="translated">Origine dati enumerabile.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with 64-bit indexes on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) con indici a 64 bit su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni elemento di <ph id="ph2">`source`</ph> enumerabile.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>It is provided with the following parameters: the current element, a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and the current element's index (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>).</source>
          <target state="translated">Viene fornito con i seguenti parametri: l'elemento corrente, un <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzato per interrompere il ciclo in modo anomalo e l'indice dell'elemento corrente (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The type of the data in the source.</source>
          <target state="translated">Tipo di dati nell'origine.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>An enumerable data source.</source>
          <target state="translated">Origine dati enumerabile.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni elemento di <ph id="ph2">`source`</ph> enumerabile.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>It is provided with the following parameters: the current element, and a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely.</source>
          <target state="translated">Viene fornito con i seguenti parametri: l'elemento corrente e un <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzato per interrompere il ciclo in modo anomalo.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The type of the data in the source.</source>
          <target state="translated">Tipo di dati nell'origine.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>An enumerable data source.</source>
          <target state="translated">Origine dati enumerabile.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel and loop options can be configured.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo ed è possibile configurare le opzioni di ciclo.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni elemento di <ph id="ph2">`source`</ph> enumerabile.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>It is provided with the current element as a parameter.</source>
          <target state="translated">Viene fornito con l'elemento corrente come parametro.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi in <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Tipo dei dati locali del thread.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The orderable partitioner that contains the original data source.</source>
          <target state="translated">Oggetto Partitioner ordinabile contenente l'origine dati originale.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with thread-local data on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) con dati locali del thread su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Questo overload viene fornito per scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero risultare utile il partizionamento dell'intervallo.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> metodo prevede un partitioner personalizzati per supportare il partizionamento dinamico.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>partitioner personalizzati per PLINQ e TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> e <bpt id="p2">[</bpt>come: partizioni dinamiche implementano<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Il <ph id="ph1">`localInit`</ph> delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Questi stati iniziali vengono passati al primo <ph id="ph1">`body`</ph> chiamate in ogni attività.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Quindi, ogni chiamata del corpo successiva restituisce un valore di stato probabilmente modificato che viene passato alla chiamata successiva corpo.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato per il <ph id="ph1">`localFinally`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task's local state.</source>
          <target state="translated">Il <ph id="ph1">`localFinally`</ph> delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Questo delegato può essere chiamato simultaneamente su più attività; Pertanto, è necessario sincronizzare l'accesso a qualsiasi variabile condivisa.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo può utilizzare più attività di thread in base alla durata della propria esecuzione come completato le attività esistenti e vengono sostituiti da nuove attività.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">In questo modo sottostante <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che il ciclo del servizio.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> returns <ph id="ph4">&lt;see langword="false" /&gt;</ph> or the partitioner returns <ph id="ph5">&lt;see langword="null" /&gt;</ph> partitions.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> in <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> restituisce <ph id="ph4">&lt;see langword="false" /&gt;</ph> oppure il partitioner restituisce partizioni <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi in <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Tipo dei dati locali del thread.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The partitioner that contains the original data source.</source>
          <target state="translated">Oggetto Partitioner contenente l'origine dati originale.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with thread-local data on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) con dati locali del thread su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Questo overload viene fornito per scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero risultare utile il partizionamento dell'intervallo.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> metodo prevede un partitioner personalizzati per supportare il partizionamento dinamico.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>partitioner personalizzati per PLINQ e TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> e <bpt id="p2">[</bpt>come: partizioni dinamiche implementano<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each thread that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Il <ph id="ph1">`localInit`</ph> delegato viene richiamato una volta per ogni thread che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Questi stati iniziali vengono passati al primo <ph id="ph1">`body`</ph> chiamate in ogni attività.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Quindi, ogni chiamata del corpo successiva restituisce un valore di stato probabilmente modificato che viene passato alla chiamata successiva corpo.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato per il <ph id="ph1">`localFinally`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task's local state.</source>
          <target state="translated">Il <ph id="ph1">`localFinally`</ph> delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Questo delegato può essere chiamato simultaneamente su più attività; Pertanto, è necessario sincronizzare l'accesso a qualsiasi variabile condivisa.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo può utilizzare più attività di thread in base alla durata della propria esecuzione come completato le attività esistenti e vengono sostituiti da nuove attività.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">In questo modo sottostante <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che il ciclo del servizio.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> returns <ph id="ph4">&lt;see langword="false" /&gt;</ph> or the partitioner returns <ph id="ph5">&lt;see langword="null" /&gt;</ph> partitions.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> in <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> restituisce <ph id="ph4">&lt;see langword="false" /&gt;</ph> oppure il partitioner restituisce partizioni <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the data in the source.</source>
          <target state="translated">Tipo di dati nell'origine.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Tipo dei dati locali del thread.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>An enumerable data source.</source>
          <target state="translated">Origine dati enumerabile.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with thread-local data on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) con dati locali del thread su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni elemento di <ph id="ph2">`source`</ph> enumerabile.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>It is provided with the following parameters: the current element, a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, the current element's index (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>), and some local state that may be shared amongst iterations that execute on the same thread.</source>
          <target state="translated">Viene fornito con i seguenti parametri: l'elemento corrente, un <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzata per prematuramente all'esterno del ciclo, l'indice dell'elemento corrente (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>) e uno stato locale che può essere condiviso fra le iterazioni eseguite sullo stesso thread.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Il <ph id="ph1">`localInit`</ph> delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Questi stati iniziali vengono passati al primo <ph id="ph1">`body`</ph> chiamate in ogni attività.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Quindi, ogni chiamata del corpo successiva restituisce un valore di stato probabilmente modificato che viene passato alla chiamata successiva corpo.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato per il <ph id="ph1">`localFinally`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task’s local state.</source>
          <target state="translated">Il <ph id="ph1">`localFinally`</ph> delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Questo delegato può essere chiamato simultaneamente su più attività; Pertanto, è necessario sincronizzare l'accesso a qualsiasi variabile condivisa.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo può utilizzare più attività di thread in base alla durata della propria esecuzione come completato le attività esistenti e vengono sostituiti da nuove attività.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">In questo modo sottostante <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che il ciclo del servizio.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the data in the source.</source>
          <target state="translated">Tipo di dati nell'origine.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Tipo dei dati locali del thread.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>An enumerable data source.</source>
          <target state="translated">Origine dati enumerabile.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with thread-local data on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) con dati locali del thread su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni elemento di <ph id="ph2">`source`</ph> enumerabile.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>It is provided with the following parameters: the current element, a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</source>
          <target state="translated">Viene fornito con i seguenti parametri: l'elemento corrente, un <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzato per interrompere il ciclo in modo anomalo e uno stato locale che può essere condiviso fra le iterazioni che vengono eseguite sullo stesso thread.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Il <ph id="ph1">`localInit`</ph> delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Questi stati iniziali vengono passati al primo <ph id="ph1">`body`</ph> chiamate in ogni attività.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Quindi, ogni chiamata del corpo successiva restituisce un valore di stato probabilmente modificato che viene passato alla chiamata successiva corpo.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato per il <ph id="ph1">`localFinally`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per thread to perform a final action on each task’s local state.</source>
          <target state="translated">Il <ph id="ph1">`localFinally`</ph> delegato viene richiamato una volta per ogni thread per eseguire un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Questo delegato può essere chiamato simultaneamente su più attività; Pertanto, è necessario sincronizzare l'accesso a qualsiasi variabile condivisa.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo può utilizzare più attività di thread in base alla durata della propria esecuzione come completato le attività esistenti e vengono sostituiti da nuove attività.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">In questo modo sottostante <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che il ciclo del servizio.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> method with local state:</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare un <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> metodo con lo stato locale:</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi in <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Tipo dei dati locali del thread.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The orderable partitioner that contains the original data source.</source>
          <target state="translated">Oggetto Partitioner ordinabile contenente l'origine dati originale.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with 64-bit indexes and  with thread-local data on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> in which iterations may run in parallel , loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) con indici a 64 bit e dati locali del thread su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Questo overload viene fornito per scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero risultare utile il partizionamento dell'intervallo.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> metodo prevede un partitioner personalizzati per supportare il partizionamento dinamico.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>partitioner personalizzati per PLINQ e TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> e <bpt id="p2">[</bpt>come: partizioni dinamiche implementano<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Il <ph id="ph1">`localInit`</ph> delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Questi stati iniziali vengono passati al primo <ph id="ph1">`body`</ph> chiamate in ogni attività.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Quindi, ogni chiamata del corpo successiva restituisce un valore di stato probabilmente modificato che viene passato alla chiamata successiva corpo.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each thread returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Infine, l'ultima chiamata corpo su ogni thread restituisce un valore di stato che viene passato per il <ph id="ph1">`localFinally`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task’s local state.</source>
          <target state="translated">Il <ph id="ph1">`localFinally`</ph> delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Questo delegato può essere chiamato simultaneamente su più attività; Pertanto, è necessario sincronizzare l'accesso a qualsiasi variabile condivisa.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo può utilizzare più attività di thread in base alla durata della propria esecuzione come completato le attività esistenti e vengono sostituiti da nuove attività.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">In questo modo sottostante <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che il ciclo del servizio.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> or <ph id="ph2">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'argomento <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> o <ph id="ph2">&lt;paramref name="localFinally" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> returns <ph id="ph4">&lt;see langword="false" /&gt;</ph> or the partitioner returns <ph id="ph5">&lt;see langword="null" /&gt;</ph> partitions.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> in <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> restituisce <ph id="ph4">&lt;see langword="false" /&gt;</ph> oppure il partitioner restituisce partizioni <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi in <bpt id="p1">&lt;c&gt;</bpt>origine<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Tipo dei dati locali del thread.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The partitioner that contains the original data source.</source>
          <target state="translated">Oggetto Partitioner contenente l'origine dati originale.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation  with thread-local data on a <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) con dati locali del thread su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This overload is provided for scenarios where you want to override the default partitioning scheme.</source>
          <target state="translated">Questo overload viene fornito per scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>For example, small loop bodies might benefit from partitioning the range.</source>
          <target state="translated">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero risultare utile il partizionamento dell'intervallo.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> method expects custom partitioners to support dynamic partitioning.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> metodo prevede un partitioner personalizzati per supportare il partizionamento dinamico.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This overload is provided for scenarios with small loop bodies that might benefit from static range partitioning.</source>
          <target state="translated">Questo overload viene fornito per scenari con corpi di ciclo di dimensioni ridotte che potrebbero trarre vantaggio dal partizionamento per intervalli statico.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Partitioners must support dynamic partitions.</source>
          <target state="translated">I partitioner devono supportare partizioni dinamiche.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> and <bpt id="p2">[</bpt>How to: Implement Dynamic Partitions<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>partitioner personalizzati per PLINQ e TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept> e <bpt id="p2">[</bpt>come: partizioni dinamiche implementano<ept id="p2">](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Il <ph id="ph1">`localInit`</ph> delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Questi stati iniziali vengono passati al primo <ph id="ph1">`body`</ph> chiamate in ogni attività.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Quindi, ogni chiamata del corpo successiva restituisce un valore di stato probabilmente modificato che viene passato alla chiamata successiva corpo.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato per il <ph id="ph1">`localFinally`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per task to perform a final action on each task's local state.</source>
          <target state="translated">Il <ph id="ph1">`localFinally`</ph> delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Questo delegato può essere chiamato simultaneamente su più attività; Pertanto, è necessario sincronizzare l'accesso a qualsiasi variabile condivisa.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo può utilizzare più attività di thread in base alla durata della propria esecuzione come completato le attività esistenti e vengono sostituiti da nuove attività.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">In questo modo sottostante <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che il ciclo del servizio.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> property in the <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> returns <ph id="ph4">&lt;see langword="false" /&gt;</ph> or the partitioner returns <ph id="ph5">&lt;see langword="null" /&gt;</ph> partitions.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /&gt;</ph> in <ph id="ph2">&lt;paramref name="source" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.Partitioner" /&gt;</ph> restituisce <ph id="ph4">&lt;see langword="false" /&gt;</ph> oppure il partitioner restituisce partizioni <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the data in the source.</source>
          <target state="translated">Tipo di dati nell'origine.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Tipo dei dati locali del thread.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>An enumerable data source.</source>
          <target state="translated">Origine dati enumerabile.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with thread-local data and 64-bit indexes on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) con dati locali del thread e indici a 64 bit su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni elemento di <ph id="ph2">`source`</ph> enumerabile.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>It is provided with the following parameters: the current element, a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, the current element's index (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>), and some local state that may be shared amongst iterations that execute on the same thread.</source>
          <target state="translated">Viene fornito con i seguenti parametri: l'elemento corrente, un <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzata per prematuramente all'esterno del ciclo, l'indice dell'elemento corrente (<ph id="ph2">&lt;xref:System.Int64&gt;</ph>) e uno stato locale che può essere condiviso fra le iterazioni eseguite sullo stesso thread.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Il <ph id="ph1">`localInit`</ph> delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Questi stati iniziali vengono passati al primo <ph id="ph1">`body`</ph> chiamate in ogni attività.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Quindi, ogni chiamata del corpo successiva restituisce un valore di stato probabilmente modificato che viene passato alla chiamata successiva corpo.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato per il <ph id="ph1">`localFinally`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per thread to perform a final action on each task’s local state.</source>
          <target state="translated">Il <ph id="ph1">`localFinally`</ph> delegato viene richiamato una volta per ogni thread per eseguire un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Questo delegato può essere chiamato simultaneamente su più attività; Pertanto, è necessario sincronizzare l'accesso a qualsiasi variabile condivisa.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo può utilizzare più attività di thread in base alla durata della propria esecuzione come completato le attività esistenti e vengono sostituiti da nuove attività.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">In questo modo sottostante <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che il ciclo del servizio.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the data in the source.</source>
          <target state="translated">Tipo di dati nell'origine.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The type of the thread-local data.</source>
          <target state="translated">Tipo dei dati locali del thread.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>An enumerable data source.</source>
          <target state="translated">Origine dati enumerabile.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The function delegate that returns the initial state of the local data for each task.</source>
          <target state="translated">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that is invoked once per iteration.</source>
          <target state="translated">Delegato richiamato una volta per iterazione.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The delegate that performs a final action on the local state of each task.</source>
          <target state="translated">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Executes a <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) operation with thread-local data on an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated..</source>
          <target state="translated">Esegue un'operazione <ph id="ph1">&lt;see langword="foreach" /&gt;</ph> (<ph id="ph2">&lt;see langword="For Each" /&gt;</ph> in Visual Basic) con dati locali del thread su un oggetto <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>A structure that contains information about which portion of the loop completed.</source>
          <target state="translated">Struttura che contiene informazioni sulla parte di ciclo completata.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`body`</ph> delegate is invoked once for each element in the <ph id="ph2">`source`</ph> enumerable.</source>
          <target state="translated">Il <ph id="ph1">`body`</ph> delegato viene richiamato una volta per ogni elemento di <ph id="ph2">`source`</ph> enumerabile.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>It is provided with the following parameters: the current element, a <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</source>
          <target state="translated">Viene fornito con i seguenti parametri: l'elemento corrente, un <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState&gt;</ph> istanza che può essere utilizzato per interrompere il ciclo in modo anomalo e uno stato locale che può essere condiviso fra le iterazioni che vengono eseguite sullo stesso thread.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localInit`</ph> delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</source>
          <target state="translated">Il <ph id="ph1">`localInit`</ph> delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>These initial states are passed to the first <ph id="ph1">`body`</ph> invocations on each task.</source>
          <target state="translated">Questi stati iniziali vengono passati al primo <ph id="ph1">`body`</ph> chiamate in ogni attività.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</source>
          <target state="translated">Quindi, ogni chiamata del corpo successiva restituisce un valore di stato probabilmente modificato che viene passato alla chiamata successiva corpo.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>Finally, the last body invocation on each task returns a state value that is passed to the <ph id="ph1">`localFinally`</ph> delegate.</source>
          <target state="translated">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato per il <ph id="ph1">`localFinally`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">`localFinally`</ph> delegate is invoked once per thread to perform a final action on each task’s local state.</source>
          <target state="translated">Il <ph id="ph1">`localFinally`</ph> delegato viene richiamato una volta per ogni thread per eseguire un'azione finale sullo stato locale di ogni attività.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</source>
          <target state="translated">Questo delegato può essere chiamato simultaneamente su più attività; Pertanto, è necessario sincronizzare l'accesso a qualsiasi variabile condivisa.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> metodo può utilizzare più attività di thread in base alla durata della propria esecuzione come completato le attività esistenti e vengono sostituiti da nuove attività.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>This gives the underlying <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> object the chance to add, change, or remove threads that service the loop.</source>
          <target state="translated">In questo modo sottostante <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskScheduler&gt;</ph> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che il ciclo del servizio.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="source" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="body" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="body" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localInit" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="localFinally" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> argument is canceled.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'argomento <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è annullato.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
          <source>The exception that contains all the individual exceptions thrown on all threads.</source>
          <target state="translated">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Parallel">
          <source>Executes each of the provided actions, possibly in parallel.</source>
          <target state="translated">Esegue ognuna delle azioni fornite, eventualmente in parallelo.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Action" /&gt;</ph> to execute.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see cref="T:System.Action" /&gt;</ph> da eseguire.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>Executes each of the provided actions, possibly in parallel.</source>
          <target state="translated">Esegue ognuna delle azioni fornite, eventualmente in parallelo.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>This method can be used to execute a set of operations, potentially in parallel.</source>
          <target state="translated">Questo metodo può essere utilizzato per eseguire un set di operazioni, potenzialmente in parallelo.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>No guarantees are made about the order in which the operations execute or whether they execute in parallel.</source>
          <target state="translated">Viene resa alcuna garanzia relativamente all'ordine in cui eseguire le operazioni o se vengono eseguite in parallelo.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>This method does not return until each of the provided operations has completed, regardless of whether completion occurs due to normal or exceptional termination.</source>
          <target state="translated">Questo metodo non restituisce fino a quando ognuna delle operazioni fornite è completata, indipendentemente dal fatto se completamento si verifica a causa di terminazione normale o eccezionale.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Use Parallel.Invoke to Execute Parallel Operations<ept id="p1">](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Procedura: utilizzare Parallel.Invoke per eseguire operazioni in parallelo<ept id="p1">](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>This example demonstrates how to use the <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.Invoke%2A&gt;</ph> method with other methods, anonymous delegates, and lambda expressions.</source>
          <target state="translated">In questo esempio viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.Invoke%2A&gt;</ph> metodo con altri metodi, delegati anonimi ed espressioni lambda.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>The <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>The exception that is thrown when any action in the <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> array throws an exception.</source>
          <target state="translated">Eccezione generata quando qualsiasi azione nella matrice <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
          <source>The <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> array contains a <ph id="ph2">&lt;see langword="null" /&gt;</ph> element.</source>
          <target state="translated">La matrice di <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> contiene un elemento <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>An object that configures the behavior of this operation.</source>
          <target state="translated">Oggetto che configura il comportamento di questa operazione.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>An array of actions to execute.</source>
          <target state="translated">Matrice di azioni da eseguire.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>Executes each of the provided actions, possibly in parallel, unless the operation is cancelled by the user.</source>
          <target state="translated">Esegue ciascuna delle azioni fornite, possibilmente in parallelo, a meno che l'operazione non venga annullata dall'utente.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>This method can be used to execute a set of operations, potentially in parallel.</source>
          <target state="translated">Questo metodo può essere utilizzato per eseguire un set di operazioni, potenzialmente in parallelo.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The cancellation token passed in with the <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelOptions&gt;</ph> structure enables the caller to cancel the entire operation.</source>
          <target state="translated">Il token di annullamento passato con la <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelOptions&gt;</ph> struttura consente al chiamante di annullare l'intera operazione.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>For more information, see <bpt id="p1">[</bpt>Cancellation in Managed Threads<ept id="p1">](~/docs/standard/threading/cancellation-in-managed-threads.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Annullamento in thread gestiti<ept id="p1">](~/docs/standard/threading/cancellation-in-managed-threads.md)</ept>.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>No guarantees are made about the order in which the operations execute or whether they execute in parallel.</source>
          <target state="translated">Viene resa alcuna garanzia relativamente all'ordine in cui eseguire le operazioni o se vengono eseguite in parallelo.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>This method does not return until each of the provided operations has completed, regardless of whether completion occurs due to normal or exceptional termination.</source>
          <target state="translated">Questo metodo non restituisce fino a quando ognuna delle operazioni fornite è completata, indipendentemente dal fatto se completamento si verifica a causa di terminazione normale o eccezionale.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Use Parallel.Invoke to Execute Parallel Operations<ept id="p1">](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Procedura: utilizzare Parallel.Invoke per eseguire operazioni in parallelo<ept id="p1">](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> is set.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nell'oggetto <ph id="ph2">&lt;paramref name="parallelOptions" /&gt;</ph> è impostato.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'argomento <ph id="ph1">&lt;paramref name="parallelOptions" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The exception that is thrown when any action in the <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> array throws an exception.</source>
          <target state="translated">Eccezione generata quando qualsiasi azione nella matrice <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> array contains a <ph id="ph2">&lt;see langword="null" /&gt;</ph> element.</source>
          <target state="translated">La matrice di <ph id="ph1">&lt;paramref name="actions" /&gt;</ph> contiene un elemento <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> in the <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> has been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> nel <ph id="ph3">&lt;paramref name="parallelOptions" /&gt;</ph> è stato eliminato.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>